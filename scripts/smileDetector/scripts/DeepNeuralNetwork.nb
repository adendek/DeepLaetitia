(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3376044,      61107]
NotebookOptionsPosition[   3373013,      61028]
NotebookOutlinePosition[   3373368,      61044]
CellTagsIndexPosition[   3373325,      61041]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pretrained Deep Convolution Neural Network approach", "Title",
 CellChangeTimes->{{3.707314003495525*^9, 3.7073140259671288`*^9}, {
  3.707584132978711*^9, 
  3.7075841404100037`*^9}},ExpressionUUID->"a0b1baf7-8601-414e-9ed0-\
d026f23099d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LaunchKernels", "[", "2", "]"}], "\[IndentingNewLine]"}]], "Input",\

 CellChangeTimes->{{3.707690406445203*^9, 3.707690413801454*^9}, {
  3.7076930265100594`*^9, 
  3.7076930268975887`*^9}},ExpressionUUID->"f9dbb206-af34-44ca-b4bc-\
ccff5f5480b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"1", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"2", ",", "\<\"local\"\>"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.707690416490244*^9, 3.707690763509617*^9, 3.7076927780537577`*^9, 
   3.707693028666185*^9, {3.707694761590143*^9, 3.707694785376576*^9}, 
   3.707699794212955*^9},ExpressionUUID->"d41be35a-496b-41c6-9bcc-\
cf1f8b06022e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainData", " ", "=", "  ", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/adendek/Documents/Wolfram \
Mathematica/Intern/project/DeepLaetitia/scripts/smileDetector/datasets/train.\
mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707609162847336*^9, 3.7076092062638617`*^9}, {
   3.707609537398944*^9, 3.7076095448114643`*^9}, {3.707670703878825*^9, 
   3.707670710738109*^9}, 3.707671739406769*^9, {3.707677300813365*^9, 
   3.707677301555808*^9}, 3.707677722183662*^9, {3.707678762016322*^9, 
   3.7076787649072866`*^9}, {3.707679786445862*^9, 3.707679787284395*^9}, {
   3.707680316578055*^9, 
   3.707680325611817*^9}},ExpressionUUID->"f1547c29-e318-4cdc-8115-\
d6789ff43fe7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"emotionTypes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<happy\>\"", ",", " ", "\"\<neutral\>\"", ",", "\"\<sad\>\"", ",", 
     "\"\<angry\>\"", ",", "\"\<surprise\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707437472803968*^9, 3.7074374892505693`*^9}, {
   3.707441434606262*^9, 3.707441462393368*^9}, 
   3.707576732632545*^9},ExpressionUUID->"32ab7c15-78fd-4273-930c-\
81b05d14b1dc"],

Cell[CellGroupData[{

Cell["Import test dataset", "Subtitle",
 CellChangeTimes->{{3.7074370165653677`*^9, 
  3.7074370258862762`*^9}},ExpressionUUID->"23f55ea8-c055-4265-9dec-\
c2898be4ad1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testData", " ", "=", " ", 
  RowBox[{
  "Import", "[", 
   "\"\</Users/adendek/Documents/Wolfram \
Mathematica/Intern/project/DeepLaetitia/scripts/smileDetector/datasets/test.\
mx\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.707670783085844*^9, 
  3.7076707978346024`*^9}},ExpressionUUID->"841da03a-58f8-478d-83bc-\
127b531a859f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJx92Avs1+MeB/BUS3QZ3deFWpTLqJSVohaJVoqOxKlJqfjTbRWV0YW5prln
EYe5FOaaocIkyiqREdKQapWinZzOsbmd13nep9862znn2f7fPf/v5fm8n/fn
/bk8vzajJg4eW71atWpTarsMHjmt9+TJI2f86Qj/DJkwpeqKCWNG95swdcwV
YyZ3G1XDzY7//vvX/MILL+zfv//ZZ599+umnu1566aXnnnvugDLOP//8QYMG
XXTRRaNHj7744ov9a3L11VdfddVVJu57ec6cOQsXLnz99dfXrVv35Zdfbtmy
ZefOnd9///2ePXtczbdu3erm559/vn79+mXLls2fP98KnTt39u0rr7wyYsSI
k046qU+fPpdccsmwYcMmTpx42WWX+bdnz57dunUD7LzzzoOqb9++/cs455xz
IPHOBRdc4JOxY8dWVVW5umkjU6dOffjhh1999dWPPvqI0V27doHxww8//Pjj
j/v27du7d69/3dyxY8dXX30Fz9tvv/3UU0/deeedTFth06ZN11133WmnnQbV
tddee+utt957771Dhgzp1auXm127dgWgTxm9e/c+66yzevToceaZZ+IBS/D4
auTIkZgZOnQo9kzuueeeF154Yc2aNd9+++3u3bth+Ot/DtiwBM/XX3+9YcMG
eJ5//vm777572rRpgwcP/nMZMXHNNddcf/31M2bMsE2e6tKlS/yFKPC6d+9+
6qmnYrVfv34Yw5LPQyn8/jW3naeffvq999775ptvGMXGT2X8rQwTeBBVwfPp
p5++8847L7300l133cVlNmj9li1bdujQAQM2aGVOZJH1U045BRKQzDmuY8eO
XjPHGHgUhSLv2whX+hbPjz766FtvvbV582bMxEFB8vcy9u/fv68MLqMiBH72
2WcrVqyAh78IwDpWPvHEE5s2bcoQj4RzeFARfkw6deoEyfHHHw9SzzLwGUXR
s42YTJo06aGHHiJOu46bsBHr/wfPxo0bkclf8+bNw3NUweixxx7bvn172oBk
1KhRdNKlDGBCy3HHHXfCCSeQE9jej9r7luFfYiabJUuWkGhoqbjJFYx/lAFS
XBYJUTv1rl27Fj8PPPDA8OHDeeGMM86wU0h47ZhjjuEFkYs0YLgytADTtm3b
k08+OQhBInUwwDYhtttuu42Gv/jiC2D2HzT+K54oHKRt27YhU4i9/PLLjzzy
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
               "], {{0, 
               48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxt2QnQV/MeBnBzs9SolGtpuZNSEVmakKJSGCRbq8kylBZpvGkhWTK0jOzM
K7uETPb2MihCKE2WkIpq2jdddScqy/3c89z3P8y9v5nOnP95z/n9nt/zfb7P
93tODXoN7Nz3b/vss8+Qyg6dew5rP3hwz+FdavjRrWxI/35lfXp3KBvap1+f
wS17VXKx2X///ef8l19+2bVr15YtW4YMGdKoUaOjjz7asUGDBvXq1WvSpMnp
p5/eoUOHG2644cEHH5wwYcJrr732xBNPPPDAA36OGTPmueeee+mllxwff/zx
hx9++I477jj77LPz1HHHHVeap2HDho0bNz7mmGOOPfZYF4844ogjjzzSz1NO
OcWxTp06NWvWrF27tjutvnPnTng2btx48cUXH3744SeccIJJ3HbUUUc5P//8
8+GcMmXKhx9++Nlnny1fvnzZsmXffffdN99843zVqlXff//9kiVLFi1aNH/+
/FdffRWkM844o3379i1btvS4dQ877LCDi2HFfxTj0EMPdfGQQw5xDjaQkPgr
2PXr1//pp5927949ceLEunXrQuKio6lOOumk1q1b9+vX75lnnoFkw4YN/yzG
1q1bgd+8efO2bdu2b9/+448/btq0yZU1a9YA+c4779x0002tWrU699xzHZs2
bWohADBw0EEHwQBJ9erVwbP3vxfD3i2HwODBjyVuueUWN4RAsPF2/PHHX3LJ
Jffee+/7779vLUjcCfyOHTscne+oGH5CZRK3rV69et68eSiFp23btlnITqGC
weomd6xcuXJ+ghcehEOgrWuh6dOnn3POObD5K1R2YZITTzyxb9++b7755g8/
/BAwWdrx559//lcxdhXDFXgoEEtQYXLx4sUEdumll7Zr1w7PprJNyoHK0hYF
pkqVKtWLgbpatWohR+D8yfaHDx+eOz2SEIu7yN52221UYRWh2VkxwCjhyQie
bRVDKLFEVzNmzBg5cmTnzp1pCaRmzZo1b95cBJ0kjgkZPAJKQhYFgAivv/76
RBZFSQQ4xe6hhx769NNPRcHeSSXkZISZRNDYXjHCkkeWLl0qBWbOnPnYY4/h
uU2bNmCcfPLJgmKnJcZgAKZq1aoJpZ8S1s0RGPYcBVT0R40aNWnSpE8++cRm
161bR7RBlREY4pifYUaw3LZ+/XrkyEHcwmMSVjBw4EBWIEFatGgRV4laCCwm
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
               "], {{0, 48}, {48,
                0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxd2Q3Ml+MeB/B2jlkT8zjCvM5RUk0Ki+a0iB0TYullGaLW06uVXix5OxNh
5G2kaEVYimqdIiuFJoo5Cu1Eh3mrMy+FUZ1aJ87nXN/zXHt2flv37ue+//d1
fa/v7/t7ua7+OGTsFcN+16JFiwktXa4YPKnn+PGDJ/dt8Ef/MRNGDh/TOLTX
mImNwxvHdxvyew+7/O/ff+9XrVq1fPnyJUuWPP/8888888yzzz7r+tRTTz39
9NNu5s+f79XixYtffPHF5557bs6cOU8++eQTTzzhOmvWLH/62YIFCxYuXOhn
fy32yiuvvPrqq4Z9/fXX33rrrbfffnvdunXvvPPO34pt3Ljxww8/3LRp0yef
fPKPYp9++um2bdu+//77HTt2/PzzzwFjTCOb6LHHHps2bdpfmuzuu++ePn36
vHnzXnjhBYDnzp0LxsyZMx9//HHX2bNn+wpmeGAGxlDwrF69Gpi1a9euKwYV
PO++++577733/vvvb9iw4e/FQALms88++/rrr7/55huQ4DEIMFb68MMP33bb
bePGjRs6dOjAgQP79+8/ZMiQxsbG4cOHe3jffffhBIAZM2bA/Oijj4IEG4Rw
QgvSokWLoLJA5Lz55puQIMfNmjVr3njjDVdPoEJRxRN+Pv/881AEjxGs8f77
7584ceKgQYOuuuqqiy+++E/Fzj333EsuucSTyZMnjxo1asyYMeiaVgx4vKGI
Z4OHQ0GyuhUrVsBjdrQA437lypXxIFTBiaLNmzdv2bIFmC+++OKrr77aunXr
t99++9NPP1n1nXfeiQdTd+vWrX379p06dWrTps3xxx9/yimndOzY8eyzz778
8ssnTZp0/fXXjxgx4pZbbpkyZcrUqVMfeeSR4OEvi1pS7KWXXjLva6+9FjwA
+BPCl4txZbDxJg9+9NFH+OGsfxb77rvvfvjhByo18u233275HHTppZfiB4zO
nTujqG3btoMHD77uuuvOOussPxhR7KabbvJ7LPEdf4WWZcuWmS6ygWRtsTXF
yMmrZcWiMbCB9ApR0fP27duBwU8k51uL8hXmCYODhg0bdt555zU0NHTp0oW6
evToEUjk5ErqXIwfy0FO1g5MRMvcrF+/nn7CEk5gSKiSWYLRV1598MEH9IOc
H3/88ZdffvEJMIZaVQyfkNOkD8G44447KMcVRX369OnZsyev4YfLHnroIfKG
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
               "], {{
               0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
M03KoqmIVP4HFy3xEw==
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
LAMSREH4H3ax9Qg=
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
1av/BeGc6Ws=
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
/zSW9g8QWYws
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
               "], {{
               0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
               "], {{0, 48}, {48,
                0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJx92XfQVdUVBXAmjAIqkWIBAiJNRJEOoiIKSlOxgAgBEUE+ereiqKOAhaJg
xxF7x14QFBUsgFhQlN4MkJiAOsM/0T+cMb/cFd4w0eTMcOd89913zjprr732
vo96Q8b3GvaHcuXKXV7RpdfgqztNmjR4cu8q/ugz7vKRw8eVDe0x7oqy4WWT
2g8p72aL//z793xSMS7fN6688krXcePGDRo06LLLLhs9evTVxfCM+SWXXNKt
W7fTTjutU6dO7du3b9eu3UknndSqVavWrVufcMIJTZo0adiw4dFHH12/fn3X
OnXq1KxZ87DDDjvqqKMaN25ct27dGjVq1KpVy/0/FaNOMY488khz9008Nmm/
cUUxJk6cOGHChCFDhrjmTwjHjh0LYd++fc8444yOHTt26NABgGOPPRaG448/
3joAZIusDEOjRo3crF27tpv5NNigrV69ujsNGjSA8PDDD6+xb8AcJGgJmPCT
iQHMiBEjgEFO7969+/Xr17lz5y5dupx44olgNG/evGnTphaxkcXNmxfjuOOO
czMsGf4Eyb5/LMahhx5auXJlsOvVqwde3WJgMndsHWYCwASeW2655YYbbhg6
dOjgwYOx5HrBBRd07969R48erihq0aKF7Wx0zDHH2As2S0Hl4I7po2bNmoGH
PRwmKFWqVIHE1WOlePlWo30jHF511VWBkSs2xowZg5ZRo0YJUM+ePWlmwIAB
ODnzzDOJ59xzzxUvyrEptTgUVIkRJAkHDC1btmxXDFATC4HDoU9R4WFXeNwR
a2AgdwQTeMh18uTJ1157rSslYwMzIImRAEXAaDn77LMvuuii008/3V7iBcwR
RxxhZWIG2Fl8t1evXmedddZ5550Hdp8+fXwLWmRG9o2LEd6CDSfWaVIMT1rq
jjvuuPXWW28uxo033mjZkSNHDh8+HB5E9e/fv3sx8CNkNkLO+eefD5vjkISN
5s6d+/rrry9atOill14ynzZt2gMPPPDqq6++8cYbOLfIwIEDcXvqqad6GGMt
itG2bVtXqIQMSGBCODxWAOOmm27ydWoBhqKGDRt24YUXUq9Ucj3llFPOOecc
OY4rDGDJMeF84oknli9fvnr16i+++OKDDz5477333n777Y8//vjzzz9fsWIF
hI888ghIYDg7ikREBFsV4+STTwYJGEgSUOOaa64RFxkEAzBgXHrppZzHBA98
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
W3Ad
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxN2Qvoz+ceB3COSEIumVziHOTSyCU0MjKxHRNyaTSE/M0lhIUzcmmEDmuE
hZBLyCa0aQgxoUMuISM0comyCaFGc17n+z77t6d8+/6/v+f7fN7P+/3+fJ7n
+frH6CkDxv6tTJky0yu6DBg1s/u0aaP+NbCaPwZPnj7+s8klY/45+fOSz0qm
vTe6nIdt/v/vf/fnzp0bN25c8+bN3yta+/btW7du3blz508//XTo0KGjizZl
ypRZs2Z9XrSSkpI+ffp88sknnrvfunXr5cuXb9y48eDBg2fPnr18+fLKlSsr
Vqz4+OOPmzVr1qRJk549e3755Zd79+49fPjw8ePHfyrasWPH7t69+8svv/z4
449btmzx55EjRw4cOPCfok2YMKFjx47AQNKqVSvYOnXqNHz4cOFGFW369Olz
585dtGiRQKtXr16+fPm/i/b1118b5MKFCyZ1/vx548O2cePGqVOn9uvXzyDt
2rUbPHjwvHnzvv3226NHj4IkLjwXL150/eKLL5YuXbpy5coNGzbo8P333+/f
vx9CM+3QoUPbtm3btGnz7rvv1q9f/6OPPpo8efKYMWNGjhwJzPz5881x2bJl
33zzzc6dO3/44QfXPXv2eNd0Tp8+LcqJEydOnjxpfAAQ64qiDz74oH///oYy
EeEOHjwoohuzQLXBV61aBY85Gvm7774zsii9e/cGBi0tWrT4e9FGjBhBRBS5
zp49GzOLFy/+6quvTATzYBjWfPF/9uxZeA4dOoRzgWbMmNGjR49u3bqRe3DR
DO4eFeEhzYBGXr9+vYf43L59O93N0QheIRZawGjUqFHt2rWxBI9BvGL8JUuW
eCtK7dixwxzhwTxmotSZM2eQ4/m+ffuYYeLEid27d0fR9KINGzYMJJbDdp6w
AfuJO3PmTKKH89CuoYVnGI9M9erVq1OnDpKHDBkyYMAAIy9cuBCl69at89aa
NWtQihahsYEZbuEENyCRAEu4ghbn4uq/adMmEcePH480Ubp27Qqq6csasRo2
bGiy6AJGT5xTvEGDBk2bNgWjbt26IKHIdPr27Tto0CASGxkexGLV3HkGHmAo
BcOlS5euXr0KFZY89MSf169fP3XqFD5NgbjeEnTs2LEsmowTApJq1aoJygZ6
wmMW3pJ0jRs3BqlmzZrAuDGLXr16wYMcAiEEbNfo615enCgaWi4WTWZB4k/w
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
               "], {{0, 48}, {48,
                0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
zG6lRc99Sqs5keO43OX/C3uBHn0=
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJx92HeslVUWBXAzE+P8QxyN0X+wvBgrVUF4KEUElepDFBGsIGUeCiiggGJB
BewdFREBKQrq0KuUYaRYMSrYSJAESIAIBIIg4DzmN98abkic8STv5rvnnrP3
2muvvc/5Xln3/h17/em4444b+BcfHbsNbj5gQLeh1/3Vl079Blb27tezR+t+
g3r27jmgvPufTdb9799/no8cObJ169aVK1du2LBh+fLlo0eP7tGjx5AhQ3w+
8MADd99997XXXtuiRYu6devWqFGjXr169evXr1Wr1mWXXXbhhReeccYZ55xz
jvnzzjvvkksuqVmz5rnnnuvZ5FlnnXXBBRf4yfo6deqYtN78+eeff9FFF7Vp
08ZiZrsV44477qisrGzYsOGVV14JDyTwrF27dsqUKQ8//PDNN988cODA22+/
/Z577rntttvat29vGZsst2vXrnnz5o0bN2bw4osvZp9xfqG9/PLLPXuAGWAA
gr9Zs2YNGjTw1U/QMnL11VfXrl3bdvN/K0anTp34YvaKK66oqqr69NNPMTN/
/vxnnnmmf//+3bt3v/POO6Hq1asXcjp27HjVVVfZzvJNN93kuVWrVvDYDsCl
l17KeNOmTTt06OC5vLwcMA/o4trDNddcg8xgMyoqKvDgq5/EiBkpsJdHKyE8
ePDg6tWrly1bNn78+GHDhvXs2dMakG655ZZbb731umIwAk/Lli2BvP766yFs
WQwI+eIFb/iEpEmTJp5h9hM8MsKXlTBbyaMoYM5PHhgcOnQogyJlAYf79u17
9913ly5d+uqrr957770mJRSSLl26WOwTgBtuuIEjLmyElguW27ZtyyYMXNx4
4439+vWDRGZtgb9169YNi2GLlQj00KhRo2yRdDIAu3PnzoMGDeratau9JCTq
HTt2/L0YTz31FNngR5qIWU4t9sm1vewwIlNmMCYc84zwBYNdYqkohgVc24I3
6kWOcMQItiRKNBg+bWcHkr59+1Ip5Ugc2Lt3716wYMHbb7/tq4LCHoGByjUe
kMMFZojQDFQUhQFIzLcvhnj79OkDDyTmzfBlL1WXlZXRiV/9hCsJgh+YrGEc
Tr584p+E/Lpr16558+ZNmjQJDBsfe+yxu+66q3fv3rzbIjR74RELF5F3jJvB
GHeSrj8MGDDAT2DHEadEq+rttZ4dsKUjiWbTp8WCwi3XDJIKCzt37pw5c+ab
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
bzMlI8eWkvFvU+L2jw==
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxt2QnUjmUeBnD1MZayhxCylYqJ7NmL7ClF1sq+DeKTraaiRIXs+9pGhSLb
WJKmMpqKGZQWy1T27OrUKZpfz7/eY5y5z/Gc532+533u676u63/97+dVvHP/
lt0vz5AhQ3oWh5adhtQbOLDTsHty+dCqX3qvHv26dW3cb1C3Ht0GVuuc5mL5
3//9dn769Onjx4+fO3fuk08+qVat2nXXXVe1atWyZcvmy5fv2muvveWWW+6+
++4HH3xw6NChI0aMeO6554YNG9ahQ4caNWo0b968W7duvXv37t69u+NfkjFw
4EDn7dq1a9asma9fffXV2bJly5Ejh5Ps2bNnypTpT8lIS0u7LBkZM2Z0g49O
smTJkjVr1rNnz545c8Zxx44dt956a/HixStVqnT99df7U548eapXr96mTZuH
H3547Nix06dPnzt37rRp08aMGXP//fc3bNjw3nvv9acnn3zSlWeeecYRYEfA
OnXqZHWFChW66qqrzJgzZ05Hk8Jw+R/jN0YSJHF+xRVXFC5cOPD88MMP69ev
L126dNGiRW+88UYn0FpU48aNe/bsaa4ZM2a88sorr7322quvvjp16tTRo0d3
7Nixffv2Xbt2ffTRR4GcM2fOrFmznEyZMuWpp55CXZMmTcqUKWOBHgVM5syZ
zW7ey/53BB73AGNGYE6dOvXLL78sWLCgZMmSN910k4dAheT69eujZfLkyeaa
P3/+8uXL/5aMl19++dlnnx05cqSj2X0RVBdffPHFefPmuXnixIlAglSzZs1y
5cqZxaTwBD9BURzBczFv3rxopIh74GGh8+fPjx8//s/J8ATASpUqNWDAgDfe
eGPp0qVvvvkmGG+//fbfk7Fly5ZVq1ZhA4CVK1fCuTQZr7/++uLFi11E5phk
9O3bt0KFCkxYokQJC8SSSbEUeIDxMX/+/KzlovMrr7ySXviBBxXly5f3XUhu
vvnmzp0748Qsq1ev3rRp03vvvbd169Z/JsPJBx984OLqZKxZswY8wIBfsmQJ
SAsXLvRd2rETt1ujB6oRK+VMAIABIHfu3JjBD2BMDnCuXLkCz4ULFx555JEb
brjBd6+55ppatWo9/vjjixYtWrFixcaNG99///2PP/74X8nYtm0bSODB8847
77z77rubN292z7p16xC1JBlhMzpOmjRJVaq422+/vX4yGjRoUK9ePf4kIgMH
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
lmTAo61wPiTsgYf/Ar0XX9w=
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJw92Wmol9UWBnC594P3g5ADZpIDpuKAE2qiKZlSiqVYRxyi8uKQE3aUo3Ud
IhPLyAEntMIBS3EiLXLAASeccMLhYoqmOIRZWF3I797f3c/1bDgv+33/+93r
2c961tprv6fZ6CkV4/5Wo0aNaf9wqRj1rz5VVaNmDqntZmjltInjK98dO6By
+rvj363qPvrvHnb6/9//+sOHD+/bt+8bb7wxZMiQioqKiRMnzp49e/r06VOm
TPnkk0++/PLLVatWffDBB2PGjDFy0KBBAwcOHDZs2DvvvDNq1KiRI0e+9dZb
b775ps7UqVNnzJixePHidevWfffddzt37ty/f7+r/tdffz1//vy1a9d+//33
Om43bdq0YsWKNWvWGLBnz57Nmzcz9NVXXxnz/vvvM8QEQ6+99hpg77333scf
f/z5559/9tlnc+fOraysZG706NFMDx48+PXXXwcAeB3whpU2adIkS/joo4+A
Z/TgwYOHDx8+c+bM0aNHfyht27Ztq1ev3r59uyskAED1xRdfgAEDYF5cvny5
67Rp0yzt7bffNj8rwEyYMIHpoUOH9uvXD4CXX35Zp0ePHh06dHjppZcCA3Kd
ESNGWAuo3jJJ1o6WEydOnD59+sqVK5cvXz516tSxY8eOHz+OE6ZhAGnr1q3r
168HwO3SpUutfcGCBUuWLEERPNzhigTLNMxgtKOFRUjggap///7Qsg4JJlE0
+kmbPHmyJcyaNWvZsmXePXTo0MmTJy9evAjM9evXf/zxR5DAQw4ezLxw4UJW
tmzZojNv3jxXD/kCOQbQyZw5c8w2btw4kD799FMCWLRoEcxLS+M7aA2DkLrG
jh07fvx4coJE33PkVFVVmZAjdu/ejYqzZ8+eP38ejEuXLoF0vrQDBw5YPk5o
AAzMQMI0ViMMFDHHinXpc9DA0linTM9JCxiwGTJ+5syZTAMTWnQMMyH9oxp+
5hilnOOlcdPF0hAVSDj55ptvWJ9dms640kxlpa7mFybIYZSEiKRTp06vvPIK
MPTACxOftJjWPvzwQzjRAjaEVupdYKwXGOI5cuQIDFevXuUpErpw4QIkGMPV
3r17CYyzKB+lFiuEzcbWP0tDuJ+EBqjgPf/88127dm3bti1UxMN9QU7e+sBH
/PEdhJyLW+QQqrCNcs6dO8dH165du1LajRs3AAMGKtjwQ0gbNmzwOiRcZobI
g3oZQo7JkUaWnPXCCy906dIFsF69ehEzvyAB4IgkSBLamOFuM8shiSC0QPLv
0mCAxO2dO3fu3r0LmPD3kDfF1759+0S62czvakLMQxUZayJI+Lz66qu9e/d+
8cUXZcgEUWDwNTfNKA0SJFuXaeU68yPkcmkA/PTTT5hhF5Ibpd26devevXvc
lyjDksDH0rfffmsSeOhW3rB2Odbkwplg+vTpgxDpBTOdO3cGhisRWFUaNxkp
KleuXEktZhPXwKCFC9jijnSulRblaFDdvHkTP64AHy0NMORARf/Wm7juXRoN
S8ikok85nUrTF85ohEEwzisNmI0bNwpnmty1a5cO6Vovci6UJge6chlnJaBc
YcMYl/3yyy+ufsWnK+WTHG1zE1vW3rNnT9HENABt2rRp2rRp48aNGzVqRD94
A5tryAOlIEkaVqRDS57roIiALZaA4wX6AQk8XIEkoASanQIJKJXTbBkWYjfR
h8eWgSIzA4MirgEGqmbNmkHy7LPPAtO8efMBAwYEjISDH9Eke+MKk1j1Ij1T
nVCFEEVcBsaZ0jgimRADaCR1EqU9M0gd3s2egm1X+QFFYt9sniNB5kcRDE1L
a9KkSbt27agaDGAS3fBbl7e8bl06mHHVT2QhIcxAklSDLk7xljHeWvWkZUMn
YxS5hcrkHgKcDRQ5tsjnnnuuRYsWWNIhZglHKsCP5aD0dGlscURs4cTa6QeY
HTt2cEEgJQe6ykIyTGAbkI0e1MhJxBlmHr/SA5dJYjSMCmAiHniwpCPWxDXp
hplkFQqJLyARUxbIHDz048qi6sL8zJGugAJeesEPdYEXV1oLUd0pTQc8E+Z1
NEovrVq1EtdSH2CtW7cGCTbpUbKFnA6rHWFm3CpyhGEKJOwRhnmSRtAFAzx3
S9PxutiRE+Rey6cfSYMARAcMSQvyEq4s1gwKGDDsCyCFIvCkQQncPPyLc2zQ
m3zlVyPbt28PvBCAKgUb5OY3Hh4MyDY///wzPDwbGNImrRKAZIsBqzaDDitQ
ZUfDlVgTKQDghBW2jOQ7b1k1j3AESLRHSJWlyecmSW5kgtqZgxYDfEdIXGNm
ediS4WHOT2ZLFSHPC1t5WLAk79kucZgdBDCTo4WGW7ZsmbVLhrZXiwUmnuLf
FJw6WNVBGtPCChKVgwkx4yFJkxB+4MnWyRfeithsKzxrvFucmzlkQn779m2O
M17a5x0BRcbwoNF+QcMycKrN7MWQex1XVLevtEOlWb6HGVmNBy20Ss80DA9t
Ezlf5EVRlkylAQD577///uuvv9pH2GIXh4QBUlRBqEgLHmwkrSXne90TEzKa
OY+VFtI8xBK7wZO9zNrv379v+fohOVkCeGhhgOThw4fGg+1FIaMMk22oWqK2
t9rZRbrIspZTpeHHbOZPIHAEhaRENwPeTA4kJOhyBR4G47OxAsMoHiJyTede
aQ8ePPjzzz9/++23+Mt4eAQOH6GI4LN3EC39mBkD8GSjTCVjfpC8m9RhyfBY
dfyVSszCWQweXmMXPAzcKi3AAuY/pfnVc5NbIB6oneZJGp5u3bqBpB4jPGIO
Ht5nHUU4yR7tde8yBypnGYkffFoCbEZGD6mZAUslhoSbpenD8Ndffz1+/PjR
o0fghR/z2zWAkUnombDFmoqIfgQOK8mo2Y+SIoLHVR/UpF8tp0sSsgTT3i8N
ZngQSOcGp+RAb+AZ8Mcff7hCaIEpliQWggHJHspTJE1OcoLaAB5ITJjdKttW
dh99PIBhGM+Kd0gIlbPgZ5Q72IqemfNcgOAwHrxdWpJzSlkdt9Zoh5Ka7Fa2
dWWhit3uKXHhh8VzpYUit0dKS3zZYb1ra5Pu4lkDEmvAsxuNsWXtgMFjZGIk
zzMgsrTG6M0CZU6awY9rzs4MyXUpsbTkw8QpJNgARsr17o7SgoS/JL3kRoPF
msEJanhMaAeXDA0DProCJoeyXK092RUSlZjMgxbJ0wZhOVbNUPKzDoVkK/eT
3QqYaIbXUsPk/GVCdoWJAfY1hQSQKQIhd8USwPBnr48GIAGJoXicnuvXr28v
E1ZMmNCL+TSRM6YZwCZLYHLYT/2Mfx34SY4U/aSv9LKNIll9ZcM1FUKk8dQn
bnW8FS9XuwAwIC2cu5UBDRo0cIjAKisWYpkHSvOWK9K2loaBLDkfdiBMWOUL
D1vcHWDw5BSfzGxA/GUSizKD8dl3Ulkl8xupox7gr+HDh4cfVlJyx1aKJVP5
ldQt32yeWLIB5txfmtlMHkg5xVgIVSR3MeonM4hHGyuHujVnSpowE1+YSmUi
vmzuMg8kUSYGcpzJuQbVNGzhOOS7PaVlw8pGWV22hX+qEDjEnND23CRgrH7S
UoQzZxLvWripkt4V801KA95aOMXq4uWIBGY853MNflQFvJZPGQ4I+YKEE44A
NXurlghNtewaFQUSQ5Tmmqo7aSTqwpXNNMcuk9OqW9rm3/AQIcGmKPWQdSlU
CSdfIZavgwp780uTQFwhNNJPnlO76HNkU9E5MXGTeSw59VvKA3gcZzBj24JE
ZejYVa9ePYFWo0YN8DI+FQs8fFFNF5c5RikjFYd+TYnORzghSOxBbgxIZEbY
UCmMn376aVVN//79/RoXR8YpXdw6gcIAAE+pD10Bc1u7du1atWpZEQCGJTML
Q9dsCl73U75lWSw3eZINyHEYPFuYTYqE3EJIKpjMRxV0UUKkC4wXUyhaRT7v
NCsN/ymkBX7dunVr1qxpRSQdPPjJKlIKJjb9Sktco6KTcNxij/zAlt/QhWHj
UUR7ydWmAj750CSQGJy+wzswNPDMM8+gkb/Ac1jGD6899dRTQDKXPSKFhLcC
L/s+oggsrllbGolaJgb0KZM+mcsWDGdO9zmwhJNUTfowUw5XEg88OEFOw4YN
G5QGD1/XqVOH/LLqSCibZoBlNjPny4BrTOSknKopn1U9xEA+afKjYabyqycR
gL7TCjacI5yUcQISIeVKQsBARUVOfMKTVLKnR0UpxVPKep78mVOzTvW1+tCR
Ooqz4MlnFk9SxWWAwR07dsQMl6mcybhRac1L4yZg3MKjDhEd2ctyzAmSZLzE
aVJBttqc17gJ/6zEy8mN+dYRVrVsQxGS4wxOOKuiooLXiIdmIJF24IREsEPF
X927dxeq0iNzSRFaPizEI0l92VVzitffVRpzfkoQVX8L4i99eMwTGQg9J1Dq
dZRQEDom68PmTMG6+ILKxgGkKFMuJtGJlKRQFAVMJM2WJ4GU1JSWLJqNKTK2
Zagbc8jysHq8AgAVIKmWc/pT9qhX3TqZgkczOklHBjiewyOcOSKJKOJMUzcm
oSXn578VAXy2tBQ2OQgoFMm7+kMNnwoWWQUhIj3f6KgIBtrmKczApvaQeEOU
YZIYCYFk0+EFS06gJQuxGIWHMR7JZ8x8wLST5numPjw5IeYfPUlK9i/WuUNY
AcNBLDrjULVc/V/9LTZJ
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJw92VmsVlUSBWBlCiAzEZRLC6RRBMWAKAIGFVCBqM1sELSFCzKoDHJBJsEo
o0MYGgeMMgsEmlkiKqKRCOqDJkrCCwkPYjASeBH1wRf6c6/23wkn+z93n12r
Vq2q2ufQoXrG8Em1rrrqqpr6LsPHz+03a9b4+SOa+TFqes3UydOfmjh4+uyn
Jj81q1d1bTe7/f/fX/Nt27Zt3759586du3btct29e/cnn3zy3XffnTlz5ty5
cz///POlS5d+/fXXK1eu/Pnnn19//fXSpUuffPLJIUOG/KuMPn363H777d27
d7/11ls7d+7csWPHtm3bXnfddVVVVa1bt3azf//+AwYMGD58+GOPPTZ27Ngn
nnjCdfLkyc8///yKFSvWrVv33nvvvf/++4cOHTp27Njx48e3bt3qJzD/LePA
gQMnTpw4ffr0jz/+eP78+V9++eXy5cuQ/PDDD8uWLbPb6NGjR4wYMXDgwPvu
u69Xr17dunXr2rXrTTfd1L59+3+WAdVtt912yy23tGnT5tprr23VqlXrMtq1
a+cm/IMHDx41ahRIL7zwwltvvbVp0yaEHD58+PPPPz958uTGjRtBcgck5Hz0
0Ufffvvt2bNnA+a33367ePEiwP8uo7q6mrMsti/jH2UgpE0ZOOndu/ewYcN6
9uzpZqNGjerVq1enTp0GDRrUK+Oaa65p0aIFYFywhjt4e/311/fs2fPBBx98
8cUX+H/nnXcCKSx99tlnyPnpp5+A+f3330+dOvXyyy+H6gceeEAg6tevb+dc
WWzatGmrMjp06HDvvfdOmDBBEG+++WY4mbagYcOGFrtCBU+TJk2aN29un06d
OoEkoFxA1L59+z7++GOhWb9+vQiChDfx+uqrr5Bz4cKFP/74A+Bnn322uowu
XbrUrVvX/pjHA4vIFyYTdPEULbNnzx43bly/fv169OgB3vXXXw9ny5YtYWjc
uHGjMkz8hAdgwb3nnnvuvPNO8uP1p59+io23334bRSBt2LDh4MGD33//PQ3T
DCFNmTJFlJlgkY92Y4JTDz30EAG4j20wHn30UbTMnz+/pqYGcjcRBSHAUDGN
qOZlNC0jc38SYh49+OCDKPIIQuiHolCUqEEYcsRu/Pjx8EyaNEms6/09PAjh
c889N2fOnIULF8oRE2wvLQOkGTNmeHDkyJGDBg26//77pR6Z0RKigqpZs2Ym
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
               "], {{
               0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxd2Xmol1UaB3CZ+Wf8QxgQoghLb2RmUKaYlrRYZJpMi+IyhdnVuS4jXvXe
yRXHhRYVHRfc0VwoNZm0wi2xycJcwqyknUoLy0ayjXQcCZ3PnO/cl6EDvpz7
/s55zvf5Pt/znOe8thkyps+w3zRr1qzxdx59aid0b2iondT39/7oV984cnh9
3Z961f+lbnhdQ9chv/Wyw//+/be/Y8eOl19++ZVXXnn11Vf37t37+uuv79u3
b+XKlcuWLVuxYsXSpUuffvrpdevWbdy48e+lvfDCC9u3bzfeYCMPHDhw+PDh
t0p7991333nnnffee++jjz764IMPdDzff//9I0eO+PXo0aOHDh3av3+/uRZl
5KWXXtqwYQPjq1evtsqCBQtmzpz5KzAHDx70xk+QgOQJmykmgrR58+YtW7aw
s2vXrj179pgFkilQvfnmm0H19ttvWxoYSILQG5AMeOONN/5RmhV37ty5devW
559/nuVnn33WEkuWLJkzZ07Mvvbaa/tKM2vTpk1w+nX58uXweK5atcr4Z555
5rnnnoMHRdu2bWMQcl6YyxGOWw62w6UF1ZGmBifLBu/evdt4K+4s7cUXX2SQ
WcaFY+HChWG+wsMUJFOnTkUOZiAJUevXrzcF1M2lca1iCap4vbc0wCqiQksF
UrzgCT/m6gscSCgCyRLWip3IJmKYNWvWjBkzQH3qqaemTJniKb4b/69BFS2B
RAbw7CptT2lcy+ogBYOGuhBoABjweJoSFTEIj6iJBeqAMTL8GD+1tPr6+tra
2rq6ukmTJj355JPz589P1NKCClG84yPLyGdch4Nx7VBTgyQB4rhfwwwvrBVI
BMAgfjhujMERmJ+8hGT06NETJkzAEiE98cQTOtOnTw8qlAro2rVrI28siV3M
Bk/WipuAhRakZdfoZAfFC40UOcXamjVrrM4Ig8zyl9oXL17c2Nj4+OOP22Jk
48+5c+eCBM+0adO8nzdvHlSIreRkFgt8ZFaHQa5BldU1kMJMcEYhkBgfMCyw
hvaoVBM7omLcWngAA5hVpVE1SH8tDVGzZ88mLXi4YxYLG0qLhWoDWjqbDp7w
E+V4ZgcZYNiW0kxkTQryzEaOKe1vpVmUhBoaGohHPyzhJ3gWLVqUpBRHsOQZ
5KCajkNjRJZ97kefmIEHdQlc4hIwos8vFuhHJzaFzE/4kZTGjRvXvXv3mpqa
Nm3aXHPNNffee+/EiRMjJLtPokiszUqkRJ81sKG1H41BsuByCqveGxOVZlsl
GQqHicCwBsmy0oDxEjOC6D0eHnvssZtvvvnKK69s27btZZddBpV+p06dvCdv
K+IBM2ZtK82GZZkdOEkdM55J7EKAq8mTJzMLvGBFOQGTtJxILSmtwpMsxyAS
hg4descdd9x9990dOnRo165dt27devTo0blz5/vvvx8/wgFM8rPtQ5zwoB29
jMMQzv2ZHe3J2cDjsvFeWkss2EFOxUyOg4qcaDK7jBEKtIoBQ4YMeeihh4Ts
qquuEspsSVnXWfnxxx87p5K1uLy+NJY5JV7WEp2kNR3WrGUVsYMWGIMxAyce
hBsec6McGAwGI0fe7tJAkvA//PBDS5MlRyQNKdcpeeLEiW+//fabb745fvw4
SEZyGT/YQ++tt9569dVXX3/99RyRN5jKYWq66FgdpUiALS6sLc108HIYwQO/
jWCi1Gqi8eaCzRGEAHbs2LGTJ0/+s7Qff/zx559//v7776GCza9IYE0+F9/2
7ds/8MADOpdeeqm40w9OWLb9ISEwvufksjRCUsxYkctJsMlsbCoSPv/8808/
/VQs0JLKQcebzz777Msvv4QBkn+Vdu7cufPnz//0009ffPGFmofZ8ePHQ3LL
LbfYmPRGgZdffvngwYMJz+rsc9kwoanOYs76CU7vozHgcQUP/Mxa9NSpUxzH
A9/B4FrU688zZ87A8Msvv/y7NJ1Awp5zPCe7VehHnr/rrrvsiDvvvNMBhGpK
iB6QgB/Yco6k8MCJqFXpGlrCwAM84vL111/z2p8ORKEERmUFJFouXrx44cIF
5PjTsLNnzwIGp8FG2npGsnD69GnEEo+jsHfv3vaCpdlJeaMdLM2bHGfClByS
PeW9igU/4sVZxsEzi+pAwgyWvESapYUMmK+++uqTTz4xRRATQb4wyDucU75Z
33333Q8//MCO1A0tUzlnq9M/qRulEbnpVoQNSPGiTIKBhDVvUrbhMOemWQQG
Ld9JOsDgNEU/ivITI8nGDBpvDxrGkbeaGlpSh2iwVQUGZqxlX6RDY6kTkkWT
HDhFDP3797dN7E1eQMUmzQCAGZZJAjPeQAWSJ/aIUELA4YnS9EHCJ/C2CQs5
9yOhVCz44bgNaKOhQj/XB4sm/6dWkUOcXw415wWElOCoxT+dYNJ4E2UJSwsN
PEROVGdKAzKZCiSCxJUNAlWuG/CkKhMm/CdDOpKcHVYn71QdsHmDtFQIKEpx
m8IMKmAcmnAamSrUlqFe64Yim84TGOGjbWCOl0ackVzwJPfyKNmbs9aV3p13
ltBHlI2ZU95aZJ/ySXBzxkmSMKdMRSMlwMC4wZjnu9VJ62xpsNGzAaLpp6S1
3M6CJ2BY4w7LHHT+pigFQB8JiMKYOsESqYejfw2rlO9PpgTLEiSRFM2mWAsf
BrLZIaEuESSk5LHqnmgY/VQ73UTKyX2HVmeWpm5JeSx5+lMlZoBoYiyh5AuR
pCTOulY5WRrleI83e8Fy1U/QnirNn17C4zTEjMTCVNzko2BlI6uUVE0kQRgo
Ak+wvFcKjh07FqRhw4YpNhQ/N910k8MRTuKPelmmh6iUJARLkke+CFpRXADI
gIwRLHg4AowxuRuKeE4r/lKLAEWigYSfEAKbMqNv377KnhYtWrjmN2/evGXL
lk4lZ2WXLl1GjhxpO+SAEDgdZhkkA9qmcCnIe8kHsCgnwYJHrFNOV8pBjkV5
SsZgYCOQyCnnPpyYUTaoGVq1anXFFVc4hq699lpVROvWrS+55BIHN6g0BgbO
k8pYQy8xVLewyCzANKHUl2n9ZEqqOIklkkiVDk8uDvQDYQpRwJS+InXjjTeq
WgULNkWsgxs5Xbt29VRXQzho0CBFVCpDrHKEMqsLfg6s3Jd/9WEhWSvFPMXi
1qL2US5WKYyJOReNfGpQJygYlIVqmAcffPAPpfXs2fO+++7z5vbbb0cRxtQ5
UqV9wQVPHlU3siRzqHL3yTGhHyVXl4t82IEHJw5f/ICkD0ZuDcYYoJixrtBg
CZ4+ffr069dPefPH0qhLERu1I0q142LLL+TnsEuNl4SfOzvZkLFOrvzEk88I
4SdJhk7sI67lTgpJqmhuMv7oo4+6+HTs2FGkAHCKWRcq75WCNP/www/fc889
ZEZXvXr14pTYmR5tgJRPWJbOpRUMCSe3EmOMlAb5bmsL92233cZTbIMEm+jz
Dp58k/Gnc6q2thYJN9xwA9lY2qKiNmDAABMBU3FBC4zYPfLII3zMOZi7XqrQ
1DO5HWdPpaTPZx/Co2RUwCOlxNnxpaEo3wpync/dWUABHjFiBAzwAOBJ3kR+
3XXX0Y87GnnLVwpCqgs/+ZLmGaoZ3NLUqs9ilZgtZGdRka0xfPhwzI8ZMyYs
5fq5qbRZpYmaaNqA0OqrOiC0rbBESzRvLhgcBB6lUWAkHTvWDcJcyYNQk+vy
vSvq1Z9TmuX+XBpIU6ZMcWcR0/CjzMjnIFNyq4LQAI7kI+Sa0rhgUS+5yeXq
u0duxLlB5H6nA0luLiGEpwMHDvT0JzC8JhKhp1VZF+2ERF2pfzDmmmwATkAC
DEUgyVQM5hYfALlbwQNnPn6iooKRrwSeuWSZCwkj9EafNGOJ+aWxr09CEarY
ZdsKq4k6kBAG6gADD2OespaljYE5ZYntY0VRy6eYXD+r72lA5mpMvbkXA4MN
7lvaFZImbRAqhdASYMgwVCrdGWCY0MDDC7SEJagaSkvKyrcpS+TIyD09d958
CA0PCWvKqnxwQD4ekMwsAASMB1nXySj9EoMV3Y/AQ5GdEkhWxwDLcQRRhhEz
I56pT+xTG6faxQlxvscub2orSmMnnHDBRL6wYyPAYy0Zw/lot0op2Rc2uzjK
wBIySBKvXIc3aFlL/sz5i0/PgMmHzehE3zAvDVtY2qLSqjdMZbfyC8PAEAY8
SJA0HAFYQj7Y1Razi0lLKOUWkDBpuzGC3nyrD9XwcLPaYolFDiA/sQZtYHua
7s98ywq9fBcOkhg1apQEiBxHgE4yD6fyHwcUYn9hz0bDklNJ4LzhC7RBtbi0
bIQgxFuyK5JzDqZ0YVBQUjxwCgx2ILEKMHy3tKNHjChHHiPpJGeuVWcZzcDs
p6RiHDrEBc7mYsqACpUQwKBvIq/HlWbMpNImNjVvGksDQ98Yx6Ujz95xqScM
BV5NTQ1U0j5UrtWJu0CwzB3WMGmWHAVS59KM5A6/mOXstNKQFkrxbEpWrLah
N/mOHTbohBgQDoZyhVC53L+pWcufBujIV4l+9hGSrcgglow018kOvyd67UEB
xdjQ0oDEp8FgAECiVre09341clBpIcSh7Ok9/LzQ4TWo4piAhsz/AGxonOg=

               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
AQ==
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxN2QnwV+MeBnCKq6w1SdaUrSgtkvlbU5bKPiViokWLbhQV+VsnlLUUsiSE
sUaWkiwt9tGiJERIUQlDl4rLLfdz3+fOf3pnOnP+53fO+z7v8zzf5Zwa9hrU
qW+1LbbYYkgNh049h7UdPLhnZeda/ugycEj/fgP79O44cGiffn0GV/Sq7mKL
///73/k/ythuu+3q1q2766677rvvvocccsgJJ5xwzjnnDBo06JZbbnnooYee
euqpSZMmTZ482cnTTz89derUd9999+OPP16yZMlXX331zTffrFmzZu3atb/+
+uvPP/+8atWqZcuWLVq0aN68eXPmzHn77bdnz579xhtvvPLKKybp1atXrVq1
dtppp5133nmXXXZp0KBBw4YN99577912280Vi2699dY1atTYYYcdateu7eIB
Bxxw+OGHn3zyyeeee+4ll1xy++23P/zww0888QQYzz333KQyXn75ZXgWLFjw
2WefWXr16tW//PLLb7/99vvvv/+7DOc//PDDd999t3z58i+//PKLL75w59y5
c995551HHnmkefPmloPKcpDst99+e+211x577OFKRUUFcrbddtsdd9wRvD33
3LNJkyZHHnkkPD169KisrBwzZowZAgY/ji+++OL06dPfeust83/66afffvvt
Tz/9tG7dOmA2btz4nzL+/PNPXAHpJ2ih+vrrrz///HOkefD888+3tOV23313
SA488ECiOK9Xrx66KAUPArEH6qGHHnrcccd16tSpf//+N95443333ffYY49B
MmXKFMdnn332+eeff/311+00/BDLohs2bEALPH///Tc8sEH4rzICCVfudD9i
r7vuOkvzRt0yLEoU/ACwzz771KxZc/vtt/fr/vvv37p16/bt23fu3PmCCy64
4oorbrvttgkTJvAMWl566SUyTS/j1VdfnTVr1ocffmjLVvnxxx/hwQkkmzZt
CqQ//vhj/fr1rtPu+++/RyNl+e29996766678ICE2mVAApKji4hyHXVMVWXj
AQMGXHnllTfddNOdd97JzMyDGW4EY+bMmSacV8ZHH320dOlSC9EleDaWAQyu
AsaRz7kdP/Dgh70ZskWLFtWrV6caPCiiGmbq169PNRfZplWrVl26dIHksssu
w+eIESNuvfXWcePGPfroo8iZNm0ajV577TW0sA2lOIdRGYNvYx4jFDmuLyPk
YA+elStXQg7Pm2++acJjjz1WaANjddZFSyzN3uBhpmvXrkOHDr3++ushYRtg
Ro8efffddz/++OME4ha0OL7//vs8aVohQylC2D48MPz1118JrmDbUAZX848M
AIz7P/nkE7HPivwJD134lpcQ4ghM48aNqdahQwfMXHvttSNHjrz55pvhkXbu
uOOO+++/X2TRi4uc33vvvU8++SRDsg1yZB54iIUKtLANsaCCjXlAQo50hMDg
sYWFCxdiGNsXXnhh8OAES3Xq1GFgFMFDyjPPPFPqA4aBJRy2Qc7YsWNhGzZs
GAWvueYaInK4JMDq4LFB9FqxYgVU4igwYHOMn5Me8QMSPMwMjwdnzJhx+eWX
w8Mw1JH94iJ/MnabNm369OljRUg4HwkTJ06Uc1BBLNzaEU5MJdkK9osuukgA
EveBBx5wxSrWsiKf4GptGfHzujKg8iux8COlUxwku5MSBbjorsp+wXPGGWek
Ltxzzz3jx4+fUAaN5GExJcZVBzCYGar58+czM8BXX331SSedBNsLL7zAFWKH
Y1eXEUdhzElQIZC4VHanqGRFzoQnYByrsrGcw8lEkYfBEIkCfFwZDz74IJY8
SDu8uYIQq0uwixcvBo+gMi0n4JDJxb6gRkWQoMs5sRJcZAXJjmQzG7QKGNts
s03NMriaXoK9UaNGLGGzlrNrqRgzTmCDYWQZXBRf8fnw4cOFHimFCVu6H2B5
aWEZigIqVpaxqgww0EJWeWPw4MG0kPZtv1+/furCVlttFTz4ScYWYj179rSK
umAV5UB5kv0sNGrUqAQaJGING0IMyBtuuGHIkCFwEpSOGKMpeDKkPMDhrEI+
2BiGQPKVyBUFHoSKWG5W5atVqxZ++DnVCkWO7gweoW3Ls8qQsmCQonPkXh67
9NJLcQU2AGxvFY+AxPY2IjtFtVgFNlYBkrJsADYnA+NPSX7gwIHiC5Lww0v1
yoAHVMHFzCbHvKeYVha1F9II9qOOOqp+Gcikb9u2bdmG83lAZmAeNsMbYoUP
MGEGNnENPCckezji3J0s0bFjx+CJn+FhHmCkoO7du6tWnvIsPB988IEIshEL
IUFoQ6K4yOH8L3n27dv31FNP1ZPgP+2Q+Z1TEyE8LMTohQdLAywKEMiTYlxD
pQTA1rJlS3jotTkeIdasWTPxJTuJL54R4EKA/QSRMmEqOZD3zj77bKUWBt1I
7969uRTss846SwxCrvTTzvZZRbZRJlQ3EcF4rl911VVgSHH/LIP6tNDzBA9X
p8GQqOGRnM877zz3k8YW+AcSS5hZO0E7a5GGiwSFO7t160ZBF2FmObQIK+HP
+e5hPMEu4fjVbDrMgw46SKlK50ALnSc8aNfwRC9IUBQ8/HPwwQcrFoyqjHKd
zMBs6UWXlAEYK9rs+DJ4hi6p+27mNJjtQtRbRZOc3tXjRBQF+NRq2i8F5U8R
dPrpp4tNBT14KAUPlgQ7yZo2bXrKKadQBGzLCRYWks9NqDzRRfAKFrEj4hgs
zaojMKD6SfBKcfaCEHsR75IhMzt/5plnRC6txQvAegwM2xr/qwub48EPM6NI
vMDD0lTmFjOIZVOJUzEitUqwUpxVcEVB0iwoY2kZIIFnF7wHMGy2wEKijGSC
1E9czZ8kSBSbhEuDh3+q9Ep+5it8cgVuPShYeANFLCSVSbM2q0avKcOJKuDi
8jLgYTZhSFBgrOJPfPKPkKdjqON5O0WgEzOj2pbVqeCp4kfLwT98RVY9Kokl
B9tMvjUzEkwLBj+kM1ccdTVVLahfOQ0/7geGmQEAUtvDLRjGHkcRF1rTugFp
Llbx49Wmip90Qa7jR8hffPHFbMZCdmR+zyb/6yVSr/MGkY4UKkQRFAnu1Mra
uKUZj6zuV1g9vriMtASuM6SjHMX/2nV4vPol3h3TuEp0/AOPzEBf6YvZshdr
ybcpkZaAZFMZmkDnfIUKAEyOAarBgy5bkBJpCkYe53npiKNYC28Qmt+b4OZ4
8AMM7eCUbIOHpVVPFHE1SgmdNxrziGIqVDXJtOMfHptYRl5AQBIIXIcceIQY
KtyWKs9XzoPHI2BsueWW8BArWciV4MEP/2gDVA35DUXup7jqg3PTpi81LT/n
fSGdDP/LgcCjKJammvvhQamN4Cd78WxaIBIDqXsBxvtO8CRL57UUHn7Gj7ZK
aVBiJPn0HvYrYFFkBpPbGlTslDDn/IQAs7lNtXLCSO7Mm447yQQDJBBGLOyZ
UAWMWPl0UFU1ws+JJ54oZcEj5OHRUaBIbOa1i0PCkoXsDtsqF2vZo0AgsUQn
lukl1XgEeJryPBrdDPyKMmIkxubMww47LHjyaSVV3nBFlB1//PHeBIOHpeGx
a4lLRbCKjYPEnIvKSF0z2Ew9VWscdSDKEwcqOhohlsYJMJIGyfJmlA4kVS/m
0RxW4XEFGPOoRO3atTMtDmVReEQ9PFoCKzIq1UCiCPemn7eEbYomM9uCdpf9
7IgPFVAOdF3SYL+0UlRLb5YM6Z6QA08oopRznYZUJjaVFU0OPPpbZXpUGYzK
rihi12RI84u4OWWk08ObZC73ar/RqzZp7dQFQSrPs4rS75H5ZbjfDMqxIhVy
gOGcfO1xrv90D6cdc8wx2mxdDWY4R/nGjHaIhUybDyyMZDa7QxQYaUiCzZ/Q
4lNFthHMcAgkCOE0GYBq7hF69qVXDznVy3AOWygSTfgXBdrR0047TRdtTvxA
xZ9QKcTEkussB4+d4jPvhgFjRfk2ucWJpUlJHWCiKRhkzYcIW+N8raY2HgBH
Cdla2qqo5lUOcnh0fbpZyG1Q1GAGq/TCjz6TpcGQHgGjnYuyE4fgkJqQC3yA
YVhWRqzL8GADk+oGjLQvq6THIJMTJLA623MOlijufnj0bKJDmChh2kvqoz1v
8ZaGBxKqoQuHTCsezWwLLFdZWTlgwADXOQfhzOxBsO2UQNzlWXIDI/R0FIkm
eIjFacAAwHjweEewaylONhBiLKTFlaITX9pXfrb9KWW4E07NgH5Sy6Tr09jb
AjKpRiOiuEev7qIEK/Y9Cwk8SEYmFWBIXUjCgZ/u0hSo7A2AJAxhq1at2rRp
Y+NppHV0hGMkO6VOPtNZjoheCo444gjNsK6pcRlNmjTJl1jq2wgrapi9FumZ
09CiF8m0wIz0Cw/bOIFKBBEIITB7xEakF7m3efPmVmnfvr0rJGCw4WWYX1YM
HqEBklTjZvHofqxiqXXr1gBIqhbK97d8EGAqDzKPLSNWjFcVcS8RjvBgABJp
QSDYo5455cCEKJKFMEZELuIKiTEvrZPLAMlR0HXo0IHZcOKIVd7DlQ5B0fF2
5rXXdUrFxvTyyNFHH40cP8GQ7wb5bGhHdCQ3lioqKjjQrkWiVoTDzWwtW0OR
13O5Oh9781KfTy5sabPUoWx8Yi2m4gSVy5/eEUTEtDLgJ5lMyy0IiXPyQVUf
iDEPWkhCk9kILcNzml1wu18xZr8oIgo3wpPeIynacu4UYvmap0x4ARdZCrFa
A6QMrGqAxOF5AZEYbTkfedJLOHqJyGdwhvHqZxUCCUYBhVj28GBiENv5+Gzj
eiHGdrMMycYg5fOUF3xXVIcYjKzIdLOwAtIjwtOcOMe8cI5v88UgLOnY8ZP3
bibRTiTJ2xTDmIQWaULgz/sjhnuVwUiingFEGX9C5YhSbOA5nRiQKrJzZI4o
I68nYsG6oSVFKniQ47qXQbZnEiQjh4VsCj+6F8slXadDc5vrVGMSWY4Z7Ddf
FCHJSx9gNgISz48uwySSg9n4jTlZTlsl3EwITPquvNpwDj9r2i0kXZCY04QY
Mr235tUemNyf/29SYvQhIPG2mmvvGKBaKMr/9eRrFRszEvmcUEp5IhPzKD35
cJEinj7HFfwEj5caYGBmG5OrztIXObQK9vJfNxBQKw==
               "], {{0, 48}, {48,
                0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
               "], {{0, 
               48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxN2GesV1UWBXAyk5BJiGQ+8AGkh16k9zo0EZVepUiv0nz0pghSFKRI71V6
kWKhilTpDKDSe68hEmMg4vzm7snLnOTd3HfvuXuvvfba+5zzz9mhT6Muf0uT
Jk2/f7g0aj+oWkpK+yGN/+mfpr37de/au3OnOr37d+7aOaVch797WOx/f/+9
r1KlyhtvvFGiRInixYsXLFiwaNGiRYoUKVy4cLFixQoVKlSyZEnPy5cvX7t2
7Vq1atWsWbNGjRpvvvnm22+/XadOnerVq7tp06bN+++/P2DAgMGDB/fs2bNt
27YNGjQYOnToxIkTv/nmm61bt3733Xdff/31iBEj2rVrN2rUqC+TcezYsYsX
Lx4/fnzJkiV9+/b1duXKlZs3bwaAF+7c5M2bt1SpUuCVKVOmdOnSbqACpnLl
yg0bNmzcuDFH9evXf+edd9y3aNHCw3fffbd9+/a9evWCBICxY8eOHDmye/fu
XE+YMGHdunWHDh3au3ev66ZNm/gdNGjQvHnzzATj/Pnzv/zyy+7du8eNG/fB
Bx8IZ/78+ey/9dZbPOKkbNmyYufLFZIKFSoA5hW0XPPbsmXL9957DxvNmzeH
p2vXrtho3bo1coYMGTJ8+PClS5fOmDHjs88+65UM/+7cufPfyUDFV1991a9f
v0mTJn3xxRcff/zxjh07UHT69OkVK1bgp3Pnzj169PhXMiDBDL9NmjThEZ5y
5cpJkKRIEBKaNWvGdbdu3dxAxRcwLAwcOFDU/h09evQnn3wyderULVu2LFiw
YPz48Sa7yhck/J45c+bAgQNz587lGmZ40OLVhQsX9uzZIwSmWrVqVbFiRRLC
Bu/VqlUDQDoaNWqENERxLXwgzeSdC7no1KlTx44dByWDEXkBhuvJkydPmzZt
7dq1AueXR5PlRb4uJuPEiRPbt283DUUkhI2FCxdKGfbcYFjShR96JhgChg05
UOFBgpAgs71790YODG4+/PBD2UG7b2V8fDIQQhVz5swBQ1I4/fbbb/2LN/Pp
+dSpU9evXz979uyPP/44a9asMWPGzJ492+ds0o/nP/zwg9CYJZKcOXMGGNUE
D80gJ8CYQxU+BL5///7w9EyGD5Hj348++ggngl2/fv3333+/YcOG5cuXk+7B
gwexpJrERb30LC/Xrl376aef1BGQWPVcbUbWjJkzZ7IsU7lz5yYedU26yKEi
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
NIxJk9A8/w9t0Kk5
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxN2QvMz2UbB3A9zKFew5PY41BeRYdFqimlVToYIYt0GCnmWIYemhzSOjed
GB1kVLKU1Iq8lkKm86JSk95qKLUUaZQ3Y3k/7/19e9a9+e1+7t/9u+/v9b2+
13Vf998/h47rN6KiVq1aE+p79BsyqVt19ZDJ/Rv7Y8DYCaNHjh0+rOfYicNH
Dq/uMrS2wU7///e/fkVFxT9Ka9CgQcOGDdu1azdo0KDJkyfffPPN48aNmzp1
6gMPPPDYY4/Nnz9/4cKFL7zwwrJly/5V2ptvvrl69eq1a9euW7du/fr1+m+9
9dYrr7xizmuvvWbCypUrV61aZeTVV19dvHjx448/bqnbb799+PDh1157bbdu
3Zo2bWrfNm3anHDCCccff/xJJ51k9zp16hivrKwExvOMM84YNmwYPLfeeuv4
8eOnTZv20EMPWWrBggXPPvvsiy++aC8bZfe33377vffe++CDDz788MN3331X
//3333/nnXe8WlcatCD5ZMmSJSyaPXv2vffee9NNN91www1XXHFF69atGzVq
5Bk8p5xyyoknnli3bt2jjz66cePG8FRVVZ155pnXX389KyBBEX4efvjhJ554
Ap5Fixa99NJLr7/++po1a+xoXzA++uijjRs3fvLJJxs2bABsY2lBhTR40Igr
eKzw6KOP3nfffWhn8pAhQ9q3b4+fY445Bi2QnHrqqSgKHuPwtGzZsmvXrqNG
jYJn+vTpEyZMgOeRRx6ZO3fuM888E2dhxl62huHTTz/13LRp02effeb5xRdf
6AAGD64wFkhMgOepp56yzowZM+AZVdrpp5+OBxTFWR07dkTRUUcdhZYmTZpA
1bZt2wsvvBByMECaNGnSlClT8DNv3jzOQg5PWd9eSPj888+//vrr7du3//TT
Tz/++OO33377888/63z11VcbSsMeh5r/xhtvkJAVuIx1aL/xxhtHjx7duXNn
m+LBvieffPJpp52GotACT/PmzUnrnHPO4Vz6ue2224LHCsh5/vnnrUkMVIEc
zHz55Zd2//XXX3/77beDBw/+p7T9+/fv2bMHpM2bN8NT47W47Omnnyah6upq
5IBEG9EJPJDA06FDhyOPPPK4447jRJAAO//886+77rqJEyfecccdUCFq5syZ
TLOaSGEpL9AM7yBn165d+/bt+/333w8cOADJH3/8cejQIf2dO3dCWyMkYuMy
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
               "], {{0, 
               48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJx92Huwl9MaB/A9J5ccY/QPE/7gGMPUoBAydhLdLzLVlvuodjW7nY6p6IKM
2+iyEZVRkdwlhuigdBODKN3IpVHSRSKd0zini+J8zvs9+53+OWfN7HfWu35r
ref7fJ/v86z17r/0/WuPAX+qqKgY1tCjR58RbYYO7TOqZyMvVUOG1Qwc0r+6
05Dh/Qf2H9qybwODzf/7959+ZWXliBEjRo0aNXr06DvuuGPMmDFTpkyZPXv2
a6+9tmDBglWrVq1du/arr77avHnzDz/88OOPP+7evfvXov2raL/Wtz179vz2
228HDx78/fffPQ8cOKBjZNeuXZ9++umaNWt++eWXnTt3bt++fePGjd999936
9evffPPNZ5999m9FY+71119ftGhR69athw0bNnz4cHhuv/32e+6554knnpgz
Z868efPee++91atXf/755998883WrVuB+emnn5gOJGBg2Lt3756i6ZR4DhTt
YH1bt26drbjzj6Jt2rTpiy++AMnOL774IvdfeOGFp59++qGHHnruuedatWo1
cODAW2+9dUzRJkyYAPMbb7yxZMkSfiHnyy+/3LBhw7Zt23bs2MFBSOz5z6IF
w6Ht4CENpP379+uYv3Tp0lD096JB+MknnwAG0syZM+vq6iZNmvTwww/rwNO/
f//a2lpg7r333vvvv3/ixIkoeuWVV955552FCxd+8MEHcQc52RA/wLAFQJ5l
mA6NV55BxakPP/zQcvHy5N3HH38Mkg5JTJ8+/b777hs7duyDDz542WWXAVNT
U3PXXXfdeeedOkOGDAEM1MmTJyMQpeILFa5EjR6ASbC0ffv2lXjKVuJJ7My3
kFM///wzhvHMNRqIPrds2eI5Y8YM1rHRtWvXoUOHBgP9DB48GFE4fPXVV999
911eoPr9998XPnSRAR3iPzA4/v/xpMFjCWb4gt7o0AgYb7/99vLly2Gjjaee
euruu+++6qqrRo4cecstt2AMnnHjxuFk/vz5y5YtQzI+rRUgW3FkxYoV4PHU
ICT76xsMf/zxRwnm0GbETHzaQUewwo/d9G21ePFikGDj7KxZs66//npiJmmZ
BZ4ISnZGZRYqpHl8iXR5Kk2okQ5tyMr/Ykk/CkeUX0XWWrmAH7tFQoJoN+TY
MJ7K96qqKmDIphTzyy+/7CeAlR0pUMo4kFhHl90kHUgRNotlvoco/cAwnl+D
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
YA6LnGII+TdcL9WS
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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

               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxN2WnIV9UWBnAnzCFFLYeoHAKzzMipvJWaYk4Z5hhp2uBspNaraE6FmkM4
plRqiZVa2GSKQ2qYlUVZpjhSSOJnkUvh57q/u5/bn7uhw36P5+z1rGc9azj/
2oybMWxSjWrVqs2s4zLs2Tm9q6qenTu8kT9GTp85dfL0iRMGTp81cfLEqn+N
q+lmx//999/9jz/+eOTIkXPnzn355Zc7d+58++23P/zww/fee2/t2rX2X3zx
xRtvvDF9+vTZs2cvXrz4tddeW7169VtvvbVjx4533313+/btW7Zsef/9919/
/fVXX311/vz5L7744uOPP96rVy/Pv/POO2+++abrRx99NGPGjOeff/7ll19u
1qxZ48aN69evX69evVtuueXWW2+9/vrrb7jhhgYNGrhz3XXX7dq165dffjl5
8uTRo0c/+eSTPXv2sOWEbdu2ucOco2bNmuUoRh3uPsCQu3osV69s3bp1/fr1
QTVhwoTOnTsPGjSIC0uXLoUf+GeeeWbhwoWPPvrojTfeCBIMzZs3r127Nmx1
6tSpVxZsaLl06dKpU6cOHjwID0JA+vrrr7/77jvnT506FTmsbN68GYbdu3d/
XhYv9pS1uywv+ld0QbVhw4YVK1ZUVVVh6e677x49evQLL7yAWDxPmjQJ1Hbt
2mEDjCZNmrg2bNiwbt26YQyw06dPnz179ptvvuH4sWPHxO7w4cPC5+QpU6Y8
99xzy5cv5x2je/fuPXToEMCQo85+//797u/bt29XWfAItKtAww/D+PHj77rr
rk6dOg0dOnTRokWOElB4mjZtiqJGjRoFEnjiCAy6IEGOM5n7+eeff/jhhwsX
Ljhzzpw5wPCUib1lwQmwq1eOHz+OQ5BQFDwff/xx5AQ8RdlEP3Pnzu3WrVvL
li0HDx5sDxLexAUbYEQ5QQUhoojnxIkTH3zwQcAQEis0gGRXJwsEi27iBAYE
fvXVVyC5435iJ17b/lle4QIwGzduxBKPyO/++++Hqm/fvkuWLBE1yiFdeqal
umWJWnR1/vx5Pjr2WFksvvLKK2RDwGiPwv3rgQMHKA0GVzAOlOV+xBPlwOCK
n61lbSxLPvLrySef7NmzZ/fu3SdPnixBbrrpJiGDKhq2xK5BWQjZtGnTobIw
IM3hh0c2RRWffvrpZ599BhW1HPxnCR8kO8tCCB6Ap1iptLksZ0oHpzmHkLAt
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
q98R
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJyV2Xm0T+UaB/DfNcRVCiWVitvJafijNChFonHdxaqQdZyKFcshTYqDlLkM
qTQcQgN1qFRo0mDqKkVzqJRoRKFyDYUMt/tpP9dev35Hct+1zl5779/e7/t9
vs/3Gd59/tGxW6vO5TKZTI/KDq069G7WvXuHPq2ruWhzfY+uXa4v6vTP64uL
uhR1b9ixvJv1//f3+3lpaemhhx66//7777vvvjVq1HCel5d3yimnnH322a1b
t+7ateugQYMmTJjwzjvvfP/991u3bv1PMnbu3On4W9Zw6dcNGzasWbPmvffe
Gz169FVXXXXRRRedfPLJ9erVO/zwww855BDzH3DAAVWqVNlnn33KlSv3t2Q4
cfn3ZFSqVOnUU0+FxGNxPPLII+vXr3/uuecWFhbedNNNY8eOnT179tKlS9eu
Xbtly5bf/nwEzu3bt//8888//PDDJ598MmPGjPHjxxcXF19wwQVHHXVUrVq1
qlevvt9++1WuXBmAChUqAIOQgBTnxkEHHVStWjX8ODpnS4MGDS699NJhw4Y9
99xzb7/99vLly1evXr1nMDlj27Zt69evx6d333rrLfS2b98+Pz8/rIanYsWK
gSdGJmt4JrgCqXbt2scddxxz+vTp8+yzz6Llu+++M+2mTZu2JSPHR39GFG/y
HaJ+/PHHr7/+GlfTp0/v1q1bnTp1KiUDnvLly5fF47xq1aoAB54jjjjizDPP
5PeHH374008/Ndu/kwGP+flib/DEAOnXX3/1Ijl99dVXH374Ib9To+WAAQme
bDeleBAY/Bx44IGc1bx584EDB86fP5+P4Fm3bh2Jbt68eceOHaGQvQGTap4V
IJnniy++YODLL79MmTyFgdRfmT+OUBdU9EY5HI2cRYsWETAwZLBx40Z4/i9y
slkKSN98883nn3++cOFCsqxZsyZy9oAHe44i/fTTT7/66quffPJJ9OJZmABD
BubcmQwsRaTvJVee/+WXX0yycuVKeAhJjLD691yzSz9l8VAOVR922GEnnXRS
x44dp06dSsnffvstl4WSBRdUTrCUOu4v8Xgg8FDgqlWrwmVz5szp0KEDCZVL
RqbMQA6NiaxjjjmmadOmffv2nTt37pIlS7yOIuKBJPXX3rsslRBb4BGnYv+j
jz5644037rzzTstZerd4KEfakQMvvPDCoqIiGYyYEQsPCQEDSdm1wn1/idAz
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
               "], {{
               0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxN2Xuoz3kaB/DT7sjOJJRLRknLSE2MHSTSKER2ajIsI2eEGecYlxw6RhwN
csmlGWLk0jAxYuQSJpeWySVMLrm0aJlccukck3M0QzvNn/a13/f65VO+fc/3
93yf5/28n8vn+Xz99dPpwyf+qaysbOZfXIZ/Mrt/dfUnNf9o7o+RVTMnf1ZV
WfH3qs8rP6us7v3pnz382////e9+7dq1a9as2bFjx9GjR7/++usvvvhi6tSp
33zzzb59+w4fPnzq1Knz588fLdalS5f+Xayff/75zp07d+/eda2rq3v69Gl9
fX1tbe0ff/zx/PnzX3755cGDBw8fPnzy5MmtW7du3LhB7ObNm168cOEChSdP
nty7d++ePXs2bNgwY8aMysrKioqKuXPnTp8+ffLkyStXrvzyyy9/+OGH3bt3
L126FJhVq1bt2rXr4MGDR44cOXPmzI8//njo0KGzZ89euXLlX8Wi+dq1a/4E
ifX6Yv2nWP6E5PHjx0C6uXfvniv83iJ/7ty506dPg8Q7Li9YsAAMkOBhd9q0
aRMmTIBnxYoVZDZu3FhTU+N+//794HmFIydOnPDn8ePHsQQDtdevX6fZnyEn
6/fff3/27BlaAIDtt99+Awk/rjDfv3+fsHcxfPXqVTrXr1+/ePFiFjdt2gTS
xIkTPynW6NGj58+f/91336FibrEwg0wY4AESM8eOHeMUMFRdvHjx8uXLuKL/
0aNHALDV0NDw66+/egIMWtyXIkjGDcB+xSpIaF+9erUk2Vusbdu2YQA5mBG4
UaNGzZs3j0XPkQMwmZ07d3pLpP5ZLL9CQhUYaAGJy0yLghtgkCA9WGQaEkSJ
GjD+lE5Yck8SOVu3boVEZp4oFme///57T2SOkEmecePGyWE8LFy4UPLIse3b
txNj19WLwNAjQOBBIljsSlF03b59m138JGOR4E/YPMdbgOEKKlmNbabRTg/l
P/30U8jnu0SaOXMmJFOmTAEpqSupPFdlASOHAwwGeFJlMMATipAjURnCG9/B
gMcNGdhwAglyPFdT9OPZW4SFm0KJLTk9h0cKzZ49u7y8XMgEDgNJqs2bNwOQ
Ejhw4ACPLhYLGO4kh90TSHTQAh5+krSpPsz4M7T4lRKuwQC5t5KEwaNGVA08
W7ZsYf2jjz4aOXIkPB4KlrYjOpAwfahY3gJGlE8VK+UPfIgCBkUSA0vMeTF5
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
fM+38r8MmZryGTBNPgwrc6HnxeaXK3j+C7JlS1w=
               "], {{0, 48}, {48, 
               0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxN2FesV1UaBXAz8zJEHnzEF5PRhKCBhKAEMIKiSEAIEJoKIh1E4EoV6UFA
FFRQQSlioQuiaOhdkF4UkSqdmcAwM2BiGfTF+c1Zc0/YyT0593/O3nt961tf
2eevPV5o2+dPt91229C/uLTtPqLxkCHdR7a7wz8dKob261vRu1fzimG9+/Ye
Ur/Hn/1Y+/9//7tv27bto48++vDDD48YMeK999579dVX33///QkTJsyePfut
t97au3fvxo0b58+fv3jx4m3btu3bt2///v0HDhw4duzYiRMnTp8+ffbs2XPn
zp2tHOeKcf78efc//PDDyZMnv//++8OHD5u1ffv2devWffTRR7awjmXXrFmz
atWql19+edSoUZMmTZozZ87IkSPr1av32GOPufn000+9OWvWrGnTpk2fPn3q
1Kkg2dqU5cuXr1+/fteuXYcOHbL40aNHTxfjzJkzgQHAxYsXL126dLFyQOWp
d0AC/ptvvgGJRStXrmQ1VEeOHNm0aZM1582b99JLLw0aNGjy5MkzZsxo3759
RUUFKsaPHz9u3DhI3Lz22mtjxoz54osvDh48uHr1anaxCDbLWvzUqVNsD4wL
Fy7Y/fLly3+rHLmH7VaWmFCy9Mknn7z55ptLly796quvwFuxYgUeXigGYN26
dRs+fPiwYcNefPFFeNy79u7d+9133928eTMMWGUIYNbkoyBhPiT2/Xsxrl69
euXKFTf5JcBKloLn22+/ZdTu3bs3bNiwYMECGLDk5p133sHG6NGjn3vuue7d
u3fu3NkVHjCCsEuXLgMGDFiyZAkYW7du5ak9e/ZAYuWSlngHhqvF+EflCKpA
QpQ3ww9WOYi7v/766y1btnz++ee8RiSuM2fOJB6KHTJkCK+1aNGCkv07dOjQ
fv36AdOhQ4fXX38dn19++SVyQGIdGPBcKMblYtjx2rVrMLj+qxj/LAZ48HgB
5kjIYI5FvvvuO/ww07KYIQmcfPjhh7abMmUKigYPHvzKK69QeP/+/QcOHIgr
eKidfpD5wQcfmMgigmFpfBS1hIRrxYABmOvXr7sGIZaw52XkAOMKz7FikFAi
a9GiRVwWX9jIjnQbYRtjx4517dmzJ8fhCkgBDraJLILE+mAkgjBzpRi2jr8g
+XcxYPNj+Il4ImkWnSgGHZKlZZctW0bVffr0QYKNBDWvQchZ7t3g59lnn0UO
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
a6W/Ko+T/wXYYHNz
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJw92HnUluMWBvCURpqOJOFUR/oMSYMhkQaVSok+ESmVBtHAVxoUrWhUlFIR
pULKcBRFQjKLMiwyLFOWYRGL8wdr+c/5nec6vfda37ue9/7ue+9rX/va+76f
t9nwCf1HVa5UqdLEGj76D5vSpaJi2LTyer4MGD9xzOjxI0f0Gj9p5OiRFe2H
VzHZ+v9//3s+4ogjTjzxxOOPP/7oo49u3br1mWeeecopp7Rr165t27aefZ58
8slnnHHGv4rRpk2bhg0bHn744fXr17fRllNPPfX0009v3rx5nTp1fD3mmGPM
N2rUyOc/imGycePGDRo0sLFly5YWt2rVqkuXLn369Onfv3/nzp07deo0ePDg
vn37Nm3alKOjjjqqWbNmPm30wHtZWRkvwQbnscceCyEjfPHr87DDDoOndu3a
vNhlskWLFvbWq1evUTGAOfLII32a8QDPcccdl3+1b99ejN27d+/QocPll19+
4YUX9uzZ8/zzzx80aBAwnDIImEBstItlUcBjoyjsYg0Gk5YxaL1IOUJIINnL
9T+L4dl8/WIw6L/+JSJ7GfGVnd69e4PRsWNHzFx00UU9evTgZcCAAb169RK4
xexYyTjXggUG1K5duyLz0ksv7datW+NihBwPfDUoRs2aNevWrZvnTPIrqKAC
3nrzHsxHEtz169dPdhBiEhhctS0GX/TAfgKBhx0ikS/6ufjiiwG2ZvTo0XJt
AVNNmjSxGAb8iMKM3GWjYZJ3DLOAliCxxrONvEuH7eeeey6zV1111VlnnSV2
kE477TQwZOScc84RQqwxy4IQyopx2WWXgTFkyJBRo0ZNmTLFLmsYt7FOMfiK
2KKT5AhsHpNxabXFep8Ww0+QJ5xwAqIEyz6bnk2edNJJljHOIHpZs0WkvHgW
BWtoLC8vHzp06IQJE8aNG3frrbfKoMpiVggesKQwRXT22WezBlXUAhUqzjvv
PCkAg2XFYpIjODHvmR6QTw+qILUQGm0UTvDgJ17YITlqCas333zztGnTZs6c
ecstt7BgActcA2+7GYt5l2imuGZW1BRrO6gcRf+2KFLGhQOAf6l9hKTukqZ0
hhRvrVq1wo8QKioq7LX+mmuugWTRokV33XXXbbfddtNNN5lMqwGMdzUycOBA
1UGijJsJS3iT6+uvvx4wDFgfacGDJeAtljvPpBXXFgQ2y5gxCRVTtnDNi/Wy
DNucOXPuuOOO6dOnjx8/notoxrBRcmEeO3bsddddF4kSAwIB4ItOJJ1BjMFA
txdccIE2Igrc4s0nAVSvXr1atWq1ixHm4clXAdp1++23T5061V6JEKBckxOG
ufNVB0B4tAHz1VdfPXnyZGn1OXHixJEjR2q8WgoY1vMOleoeMWKEWJgV1A03
3CALXKeB6BtVq1atWYwUFzzRs9B0qhkzZixYsEClX3LJJWxqoRqXjEDiv3yh
RVwWM6jNzjg4Zs+ejUYIEZtaMLlw4cJVq1Zt2LDhySeffOaZZx5//PFNmzYx
mFaJJa5RBIwHYCQOHl/hkWLRScH9998vKGWV2NmcP3++6IR/xRVXCJlCtFPr
WQZj1qxZ0orYbIEqJWCe/O65554HH3xw69ate/bs+fzzzz/77LN169bJrBKA
R955r1GjRvAY+QqPSucRLcuWLRPdI4888thjj82bN48vkObOnUvSFgwfPhxa
CVVc0Ty0c4tBe2GJ8ADzL9pbsmTJ2rVrt23bBs9XX331888///HHH0DmiCFj
AFCUHpgBD5yyIyi5ZoGL++67D8k+ueALKo6IhIBlc8yYMZxCCMOcYmADP1lz
4403gj2wGAzaokhBevvttz/55JM///zz999/xzzF8osZAABDV6neCUwW8BDy
DczcfffdNIAEkpApLsgjsZPlpEmTkp1wKBbNChLSpWQK4YXkCEZP4NrkmjVr
du7c+fXXX//999+ffvqpDpZ6xw9UMgiPGRLyrBJXrFiBHMi5u/LKKzUiZgGu
XLmyapI+flWccyR+pdViZNKJQEC99tprCcxiAGxUCDgUC34ARiYhoeivv/5C
keYPs6xFMPhBC2DBo4LUggTZqDCZgp8pJaamCCZ17Svk8qXtgGQSGJKDCkiV
lZLEieccNw899NAHH3yAkBdeeOH999//8ssv/1OMpUuX5oCGPLeFHF5pPg6p
5cuX33vvvWLhQtXfeeedq4qxePFifmEQPhLoB0VUAQ9amF25cqUtqKCWocWQ
XCQjBOGrV69Gy0cfffTdd9998803P/zww2+//XbgwIGnnnpK1WMjp0PEnAxq
qtggeylWjxuKES/KJIUfeYAkapnyQELQ2uKT2FwGxhbDv+AB2zK7hEZFb731
1hdffPHjjz/+8ssvv/766/fff//KK6/oG/DkLAYj5e8zePDz6KOP/rsYTzzx
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
oYO42I8YopYco5D8F+ecODw=
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
           ",", 
           TemplateBox[{"5911"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
               "], {{0, 
               48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
               "], {{0, 
               48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJx12AnUl2MaBvAUnWgiopVSxr5UiHCK7xTJmjpZspa+MpamjUSFGposZafs
SyF7lhAiy7RISDVNI1sTJWVp2jDmN++l/2n68pzzvef5v+/z3vf1XPd138/9
fo27/bljj8qVKlXqV82lY9cBZX37dh3YqaYfnXv1+1PPXuXd2/fqX96zvG/L
blXcbPbb3//mq1ev/uqrrxYtWrR48eJvvvnm888/N/9nMb799tvvv//ezR9/
/NFk5cqV/14/Vq1a5eqORyz4abJixQqT5cuXL1u2zMTrP/zwg4lly4vx3Xff
/asYPFrzn2L8+v+DNQs+/fTTr7/+GqQFCxYsLoafK4rB0cpiLF261HXV+sGg
d9etW7dmzZq1a9e6A3O8l5C78+WXXy5ZsoQ1dmwtlu3aTe/+WmH8/PPPCFm4
cCF3i4rBkRf9jB3bDA/ZLAwcmYPq0dL1I2xYuaYYAWblhx9+iGpvebqsGFYy
iwRrKuIxYA4eAD755BM/P/vsM3P0sul1k9XFwLkFH3300QcffMDR+++/P2vW
LHNX8/fee891zpw52GbNFvDmFciBESN2WAtjrtjbJB4vfvHFFyyg0TIU8eWK
pfBgI66zZ8+eOnXqzJkzTebOnTtv3rz58+f/oxiibO4OMLBNnz793Xfffeed
d0BlkH1EsQbPkmKEH5NN4jG485QXK20EMK9nX2hB19tvv/3WW2/BiRx4AuPv
xZhbjHnrhzuwuVo2Y8aMvxVDyFDNGkjMMh5h//LLL5vEg1V4vAWMiZ+hF6Uv
v/zy0KFD+/fvf/7551900UW9e/e+9tprH330UQx8/PHHJTDBgB83J0+e/OCD
D15zzTWDBg0aMGBAnz59rrrqqueff57BJEsyyBDQTUoa4HAocMgRO+9C9dhj
j0Fyzz33TJw48eGHHx41atSQIUMGDhw4bNiwBx54AGmJXYiCynzatGm33XYb
2BdccEF5eflZZ501ePBgqHr06HH//ffzwhcx8EWKyAdgo6yXdwkrfoTbK9YL
+ksvvcQOJKE9knjjjTdeeeUVj15//XUCxsacYkASckj61VdffeKJJx5//PEn
n3wSvRB63c9+/frZBc6RH4p4qYiH2CxIMUS7lZbxdeWVV7744otcP/LII889
99ybb74pEH7CM2XKFKIlV/wERoD5SfAAQDtp0iTg88oLL7xgO34Kuvu0lFiI
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
XOXhSJgwlhaRPNCFN4v/C7fB38Y=
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJx12V/oV/Udx/HabhZ0sZvoMgZ1ERQtusgoiFFBQl2USUWJuXQmuaw0TCqK
Co2KiooKi4oKjYqMFIuKDJUUExUNixolKk5USmakZNQeO8912Fj7wO9wvud8
Pu/36/16//m8P+f3hz/PufwvvznmmGPm/s7l8mnz/3TrrdMWTPq9H5Nvmjtr
5k0zpk+8ad6MmTNunfDn33r4x3///ev+22+/3b9//759+w4dOrRr167Nmze7
vv/++x9++OGXX365devWlStXfvrpp56vXbv2888//9sw/j6Mr776avfu3QcO
HLDc9bth/GMYXn322Wce7tixY8uWLSRs2rSJTHKos/abb76xas+ePTt37twz
jK+//vr77783kxD35pvs5yeffEIjUZZs3Ljxo48+AmP16tXvvfeeG4o8MXP3
MEgb8YBBIGmHhrFvGCasW7du1apVm4axZs0aYMyEivywAdNMq0zYu3cvDMCz
yEL8JNnz5ACJHDPh9NY0T9x88cUX3hK4fxioBsbC8ITNtI8//pg5lluIc3SZ
CQwYe/9jYNLDTP7ggw9eeuklbqLi4MGD8BDlLb3eJsQ9GgmhwtqMshxLbqAa
KfphGCNXYOCWabxPwtZh0BK9kBBoeVRv27aNZOqefPJJkNjrSSrMdA0eiw4M
o5tINkAFuEhAEe2HDx8+cuRIYKzN72DzMqszf8OGDW7SDmGhuH37djdgc9az
zz77xhtviIqXX34ZvQnhncIbvLCZTwWlZYGr58w3h1gGelugxlXhbRU+vV07
DPNJZvjOYXRDhVh1vfnmmxcvXlzwMOGZZ56BkC4GEgJPk42UEg5PMIhll2me
BxhL5c44Cq2YNM2VXv7CjADwCi3uPXdDxYMPPrhs2TJzuOy111575JFHVqxY
UdIxv+zONSbTDp7nnOIKQNFlFAAFWNQVtIE0ipbmbB4Gv2QI1e4FvGk89c47
7/gpBeC59957lyxZIkOZgAf8lwV5sNijrnA1wfNUhCoyx/lmFnXltRHP+avi
xiLPRZSY91bAuOEprx599NGnnnrqrbfegpAHEUhjYdnNmDLluOcJxyfO5Wbk
lL/VnzGdC7+cDgMGUEQLvTuG4YnnwADw7rvvImf+/Pn33Xcff/Hg22+/Lf2Z
MCby4WFUB4ilOmfJFNMqCG5YUSmAwUwmlJ6FE1HwWwIMj7jSIoM8RA5pkDz3
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
++bw//D8EzF1FB8=
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJx92GvQl9MaBnCVlMNQSNoioXFM57yhmqRdsZESBoPS0aFISiiUEOOYQ+xy
CIN0JEmqoVAhRMlsapdqV+zqi28+tH97Xfv9T+PDvmfeZ9b7POtwreu+7nvd
69+0//Deg2rut99+t9f16N1vdJcRI/qN6VPPP32H3T508LCBA3oOGzlw8MAR
Vf1rednyf3//bR9zzDFnnXVWjx49qqqqmjRpcuSRR9avX/+ggw467LDDTjzx
xLZt23bu3Pmqq66aNGnSu+++u3z58q+++urrr7/+/vvv169f/+OPP+b5j2rb
uHHjTz/99MMPP3ivz6effvrSSy8NGzbs7LPPbtq0aZNi7dq1s1yzZs28vPzy
yzt06PCXYuecc86pp556/PHH/7XYGWec0bhx43r16h188MH7778/PGZo0aJF
nz59Hn/88Q8++OCLL7749ttvLfrzzz9b95/VtmnTpm3btm3ZssVL7Y3FNmzY
oBuowH/44YcPPfTQ+eefb+/mPOGEEzoUO+200/5W7PTTTz/qqKOaN2/upRUv
uOCCc88995RTTjn88MPr1q1bs2bN4AHv0ksvnTJlyuLFi1etWrVmzZp169bZ
fvBYMWA2b94MDEj/Kqb9yy+/bKk2fYyylyeffNIqOD/55JOt1bFjx5YtW7Zp
06Z3796dOnU6+uijGzZs2L59e+5AjvfAH3LIIQcccECtWrU8tbt16wbMwoUL
uenLL7/87rvv7BceS1gxMPa1CqR9G3oCDxLfPfLII1TBU1BxhzZO8HbRRRdB
SCfen3feeRx35plnYgw5tYrxGsyPPfbY+++/D8/nn39ONvTAWcGzuVhgWNHS
O3bs2Llzp+f27duDZOvWrWnj0JBvvvnmvffeu/XWW4nEunTSqlUr+kQFOWGm
QYMGICEBHq7kLLTwlJfe3HPPPa+99tr8+fOXLl26YsUKs8Gzdu1aFPEXZ8VT
FbMuPL/++uvOYho7qk1PQ4w1z3PPPWfFptWGJV6zd9o+9thjDzzwwO7du3Ml
2depUwcYb/B57bXXTp48edasWWQcMGuLCRz84D8SAiNS2V7M0sHj+dtvv/nX
J33gMZDLeJwUR4wYwU3kgSJroYuMSYuq+YX7IMRJjRo14BFcuLrlllsoZ/bs
2YsWLYLHPGAkdiIe7egZLQEDxr+rLajgSdxxXGBLAqtXr37++ecR0qAYxwEG
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
fE3ypKhIOqGhD7ULc54CAxgwNLoUk2f+A76cFfg=
               "], {{0, 48}, {48, 
               0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJyN2QnQV/MeBvAWTWXpNsnaXGkdRDKiolHhMpFKVwmZlLdyLZW6SSGjLGVs
RVNoMXaZUHhHZWvKViZLyljDSAtN3Ep3cLmfe57bmXdiym/mPXP+53/+5/f8
nuf5Lr/zNhk4rNfgGtWqVRtZx6HXgNFdRowYMObv9X3oPXTkP4YMHVTRdeg/
Bw0ZNKL9wJoutvn/3//Odz2qV69eo0YNxz322KNWrVo1a9bMee3atX2sW7fu
Xnvttffee+e4zz775FivXj3HvxSjYcOG++67r5MDDjjgrztGo0aN9t9///r1
67vuJx7rgXXq1HHcNR53mheA/BYAPz/wwAPN4uPBBx982GGHtWrVqmXLlm3a
tDnuuOPatm3bsWPHk046qVOnTn8rRu/evc8888wTTzzx3HPPHT169JgxY66+
+uorr7zykksu6d69e+fOnU844YQS7SGHHLJrPDWKAcZ+++2X9fqhX+25555W
3bx58/bt22feHj169OnT58ILLxw2bNiIESPGjh17ww03TJw4cfr06U7MPmnS
pLfffnv16tXvvPPO0qVLX3zxxVmzZoHnZsvxKCtq167dbvVyxGStYuATOdRx
ETYPOfrooyFBQkVFBTDmvfnmm8G4++67p02b9thjj5kXpKuuuur222//5JNP
Nm7cuGbNmpUrV77++uvPPvvsww8/7OZjjz0WyZaGrt1aqESFqPghHyPcEUcc
QYgBAwYMGjTIcdSoUbfccsttt9127733zpgx4/HHH3/rrbceeOABJNx4443O
4QFm0aJFL7zwwvz581955RU3Y+bII4+k6Z/Ek0EjqjFqEBIRPFSffvrp559/
/sUXXwwSY7AHKmbPng3MU089tWLFiieeeOLaa68dP378vHnzvv76a3qhBXXP
PPPMm2++eeedd7Zu3ZrfIvefBEOpBg0aICchlrhzpUmTJiTjn3POOadfv34D
Bw4EacKECWY03YIFC95///3nn3/+1ltv5SiG+eijj7gIY1OmTEHgu+++65yl
/dZCaP1nwIgvnhGhAtnHRJwjbx966KHNmjVDdbdu3RzPPvtsLGHjkUcewc/L
L79sxpdeeomd4LnrrrvQRa+5c+eSFchXX30VexxI6HvuuccqdgsGIZQyNTby
kUyOhEOOIOVqcXHaaaehvWfPnuedd56VejJ1lixZAoAjZu644w68sdCHH37I
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
               "], {{0, 
               48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
2YRDKQNJdKo1SmCzpRr/v3j+A5No4nk=
               "], {{0, 48}, {48, 0}}, {0, 
               255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxN2QnQl9MeB/Dca8aNGYVoyJYlMpYihCwZMg2GNlui7W2RirdIligqlS1K
kSIt9uW+lvasaRelLFkiJbRpU+S+93Of7+0dZ6Znzvs85zm/7/l+v7/fOc+/
mm27N+3wj0qVKvX4l0vTNr0alpa26d2sqj9adOvRuWO3kvaNu/Us6VhSWr/t
P92s8/9//+tv3rz522+/Xbhw4fz58+fMmfPuu+8uWrRo+vTp77333vvvvz9v
3jyP5s6d++GHH86ePduA7777bvHixQZPmzbthRdeePPNNw3zp7eWLFny2Wef
ffXVV19//fWKFStWrlz5ww8/fPPNN56+8cYbo0aNGj58+IIFC0T8448/fv75
ZwNcN23a9Pvvv/+naOXl5Rs2bPj8888/+eQTcWfOnDljxgwYPvjgAx3YdL74
4gux4HnnnXdmzZoFzMcffwzblClTRHn77bc9glMg90Eyfvny5ZAIt2rVKh1/
gvTaa6+NGzfOi1u2bIFn48aNwKxduxY8eHbu3Bk869evN4PxwqHFql0hwc/U
qVPhWbp0qfX6U2hPoRV60qRJwLi6E340j6D98ssvcfLjjz8CI+Ivv/yyevVq
N8350ksvQf7bb7/t2LEDKh14tm7d6s9AggexyDEV5CZ//fXXBYLko48+gkFo
5BBUZ/Lkye6ERjIZhiJgjJxdNJPQK3gCJni0NWvWmMeKDPYIgO3bt8NAHR1I
wEPUX3/9ZflIFo5AZWVlr7zyClZffvllLwrtSk1j0tcAAAwSmMFzZ1bReEzE
kEkpANYXTcSNRWM8FHl92bJlmNletHT+/PNPCOHR//TTT81j5L+L9vzzzz/2
2GOvvvoq0jwCI+prfDK5aIbRFH58Utm7rvAYT3pkEiu04Acea2da0pgzDFNQ
9HBCr1C0bds2HYKiWohnn30WPyNGjHjyySetwkpNLllIgD13RAcGLZSKdm4C
CQ94OvxMLHiE++mnn7AEUsjBA0iUYkgv4sojCBHo0ZaixVTWxZYPPfTQhAkT
+G306NFimZxMmFlYtOS7eQCW466BBIa15BFUdP/++++TWSiKZAETPK7syn7R
FDyQDEARcqIaJ4wfP37YsGFvvfXWM888IytThXgS/5ZMTeF4FT8GwwM2MGVF
i4Ws2iuSSyB8WgiWKvixahFJo79u3TqqsVBkXVO0OAceqjHM6KIJgSKLZQz+
tEzzUw05guJBdHhiGHYyLPkCMzzQLimaR2LhgWS//vorBmDgIkE3Fc1TsGEm
ATDGGJCipASxzRNPPAGJCS3c5ICJhR/mgQczALiDQDJJPahSHwgNScoj7TAD
PHpXFI12wm3Y1YgV96YcwWC9okRWT0mGn6eeego5chwzUNEIHvllcnOyNDCp
fvAws8rjKQ+g3RU2YGiKN3fmFs3CBcJwKNIElWvi4gE2Y4jlKWDgeQoeqCrS
xIkTR44c+fjjj5vc2mGmztixY0mGVfCANObRRx995JFHwFageEzZpJQlgIc6
b2WzA8mLEP5944DE8kVcXTQuMt4YUq4qWmp4aiNyHnjgAX6W8vosQSOmomNK
JZPDOXjw4HvvvVc1GDNmDIRPP/00Y4dJQtMIElevpIAkPUkmnFjApLwIihb3
Ca2MQJJKHskMUP3uu+++fv36WamsHzJkiCg0knQEkuzA8BXAhkH14IMP6j/8
8MNeRNeLL76IWB7GPL9JHDAsf1HR0AsYabJ2cqTIgIE9DJAb2iR+CqNpb7nl
lltvvZUKzgPC9e3b1x0mh0S4kKYj+qBBgzzt37//7bffDp53FU/4kZPDAycQ
CKu0hsqczz33HA55ACp2hQdRsgwMgHmAJ+Oi7PUA3HTTTaWlpYSAB7COHTv2
7t2bOihyB2l33nlnt27dDMPe/fff79GAAQN69Ohx1113DR06lLhSDJJkkLj+
hBB+yYJJfJqBBNYFSWoRBb1iseYnhPQBCW9CiAWPjkfXXHPNjTfeCCSTWz4M
11133bnnnnvJJZeUlJS0adMGM/AA408vgsdp9OIKeMRClD9xwvmy0lM8SzE8
CAFSRS1ylQtuGgCSpJPR+O/SpUuvXr3uuecega699lqdgQMH3nHHHVRr1apV
w4YNO3TogFgArr/+eisFxqMrrriiZ8+e8PB2ThE8mU0q+5qstPz69evfcMMN
QBKLzzlTP8gJx0VyJNnhqXnMbJlCCNS+ffsmTZqIjgfMoAI57hAF24cddpjJ
kQZG8+bNr776auKqAyxkKimTzQgVtkvpI4qnl156qRlUMDZ235js+KwLD1bl
kRRmAGRKH5PD06lTJyEuvvhiAFq0aOEOGuHp06dP9+7d0aVz1llnHXLIIWCQ
FTktW7bEKm+IixAFkPpioQg2VQgkMCSCk7PSxOEckn1hx65msHQwAzZQrci3
bt26S9GEsJYLL7yQKKLAQ8ogCYdIw3z/olkFMgGOXtSx9nVFS+nLEU76owvI
VGkAnADtmxIfPwGGW/yTg08YCRIJ1axZs0aNGp100km1atWyaitCoOwmLucg
RJowA3PKuLvvvhtpchBgwwxGBVeICwnJGFXuQ2jrBCPq7CxaMGwrWlAZI7Wt
WgiSBcwFF1xw/PHHH3XUUaeddprkAsNTKSZhhaOv5JX+7is7rI6ZvkWDGULl
hY2zU4eiHAgJl3NFvnHCDCcnubYWzXj1VggLFJRnzj///JNPPvnII4885phj
mjZtCsDIoumMKZrBRHFHfUaOsoPbfkVzx94nbYVmD5ByZgYJUSABk42+4hyY
42uOZ9lemU2tRhFXSJk6deoceuihhx9++AknnCC5cCJlWEggSGjkSizCsVM2
F3gwwzxsBjY8amyOoAEjnA5skGQXyyYVZnJyztHRTfUKHjNjBi3VqlXba6+9
4AGsc+fOeMgO5QoYJCiCjYtgUKPkAkv3KZphnsoReMyf7TJHvsQCMt9iOVT8
/biYZLQEaShDLbNBgwYHHHDAnnvuCQxgJ554oixjkmysqoc+ePYyeIDh3sCQ
cUrE0KLBo7raTLNwFhUi5RoefUhy2qFm3B6x8ikEpBIkI0gvwffZZ5/9998f
HrXl2GOPtTWoeFYNj3OIcMOK5qY7aOEfZlaspNjNN9+MZHrJC7tnDhK2M3Tp
yLgwVnHywVXOrhVK5eiYYmVdShw8Bx10UI0aNfbbbz+QjjvuODDwwyrYcAWb
cwDTEd1NKak4KBQHH3ywd9UrCWJ7sq3bX6yO6HYifwIQHjADbT5Xk4aBmpbP
ASmj2lSpUqVmzZqmrVq1qql0MCDl+YQu+jiBcHDRSObK88qmzeLMM8+ktT60
DCmKORVYjIluy5bsOWh5BEmslZ8R8ikUqEoiS8uOKkUj0xFHHLHvvvtWr159
77337tq1K36S16TRSR4BE8lsdu3atfNIeqZKc5qjjh2BUUXP+YpA8OS4Lm6M
lE9FnWwubsLjFSNtQDjh59NPP13lAYZeNk38ixsw9gVXzidcUNFL4VISZZlH
rtxugU4Xzp/5DWH9rhZjJ7Nyqs9pMOkfPNFUxZBcAMBz6qmnyvSYQWG86qqr
+CRJ5FxEF9iUYkoRDjZ/GoAoNyFUoCChl12MbQRKVYxp45zQ4pFEc4Cs8HZG
QmXbtTXw84EHHnjKKaegiIuQY9e46KKLbGEWftttt+lQByFUy46GGZAGFG1g
0eSFA6GUz6kDCTl4pASJm0/joMqndNI/H6du+lP+AiNTcHLGGWfAw9sgyffc
h6ECT+BhjMnluE4IRJE7zl32cTUESwmxtmgWnkwHMtGDZGXR8t2BsXyYm4pv
rZpetWvXtrPbTLmIXuhiLTyUFg0eksUz+nI5JRFaFOGKiD7HfGX40vE1ET/E
GBGLiGAIHQyRLBS5qbA7HCYKAwBw9NFHq8wg2b+cVy+//HL7SMys6IUfzXjn
H2UHNkgqPkysy31LG1E0wkGFE1e8OZHCgxzlCBV/d3V+urQflZWV+aZzhFCH
HeCd1c8555wGRbML2PEVIlEQEjyC9iiaUxO9pLntQ46j0WHyvPPOU05VeImp
TprByQRX+enMxqRPIO5yhQeq/PSBRlmgiKHabPZoC9S3Q6mrFg4AGFABaUA+
SIFhWn96auuXTVDZZ/1Ju8suu8xyGjduLBEgOfvss3nP6zYUhz0YJLK8c1bk
Ll8QrvOKRibfRM5OLJGTJwmEc8eO447yYhK5bNU2CNlHTcZACEoBIJ/8Uvfc
xy1mHLalp4qqRCON4rvttpsdeffdd/dVYpkxCZbU6nxHOzSSyeabr9q2bdsC
b105ZxLO17cE0ReFc6BibMMsn0+UBbuD6BDKa3Wb99Qcr8hKSlWuXFkRIzEa
vaiPsT322EMUm4hN1o6fn/LIh5DNReMrd4hVUjTV3pJ5wGIDyXc0zqlGQSlv
Tnh42yNIvJgkUhLh0XdisShQqY8Q+E2rYtSrV888lSpVUmOFYBWQUEGm/BrD
3sDAJscNUHsFQjsyBYLHSHsrHuxEHpEADGqqSPKObXhGUhPLePusvEMFSFjy
7UPcK6+8EgzOgcfxQBGzFXKjNeZ3M5aGhGEkmm92wJgZKt6wFrnMw7wqBKM6
54dPW7M9KD+Dc7VDo5X6dqag8e6wcVI73/sSPBVJKct5wGwEZUjsMYzQYOSr
k58rfgRWmgQVEeEmF6hu3bqSwjcFKsrLy30TGYxbZjMMHoaxXidGp6PU4VQe
piWTK5NT1gKRJuNSD7U41vFPocOAmpPfsXXyg8zy5cvzQ7TzEiOJrrCzIlZB
MrJ8V/Mxko4zg91HpRIFY+ZR+vLxHu+5QqU0BSH27CZ2ENicJK2FDYRLXufX
+/zsTDizqYT5gUiVhlxE5RGr0FaAyX/3gAQ5wAbbfYxHr6fmB6Zl0Ry3QFIf
+C1c0T1F0pW1lDXSSwGqucqX/NYxduxYfUTlSzbnxnzyVMCg1H8BupVi4Q==

               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxV2QesF9USBnACEtCAQZESmiCIUiUgjyJVQOlVioDSLyBNepOiUgSlKIhK
UYoUBVFAUHqT3nuRIkVCICEkGEkA5f3ezns3vk3Y7N0958w333wzc86fAh37
NE1JmyZNmv4Z3Zp2GFy9X78OQ5tl8Ufz3v27d+3dpXOd3gO6dO3Sr3zHdF6W
+u+//zz/lVx/J9df/7s8X7t27aefftq6devatWsPHDjw66+/bt68ed68edOn
Tx8zZszQoUPbtGlTtWrV4sWL16tXr3Xr1q+99lrDhg27devWoEGDihUrDhs2
7MMPP3znnXeM79q1a40aNUqWLPn0008PGDDAJyMN69WrV8eOHd3HjRt35MiR
hw8fPnjw4OE/rlQwt27d2rJly88//+y+bdu2c+fO/fLLL8uXL1+wYMEHH3zw
3nvv9ezZs1mzZk2aNBkyZEjv3r3btWvXuHFjqGCrVKnSoEGDgBk1atTo0aN7
9OjRvXv3tm3bwu9T/fr1p02b5s0rr7zSsmVLI7t06TJy5Mgvv/zyjz/+YDqQ
pPLjfvfu3X379q1evXr37t3wnDp1yp+wrVy5krMTJ07kY0pKCiSff/45bP7s
3LmzxUFq3rw59iZMmNCvXz+GYDBg6tSpvDDeSMyMSi7u1K5dG1co9cmwoOjv
/7/u3bt3+vTpVatWIWT79u3GCNbGjRuxNHv27MGDB6P3jTfeYGvRokVz584F
b8SIEaxjvkWLFpDMmDEDJ8InTGBw/Kuvvvriiy+gArVPnz448d4i6IUwcL7/
/vvIv3//fsAIloTv6tWrZPPjjz/u37//0KFDR48eBQZRlCNGfGELGyuTC/MT
kmvgwIEiMn78eNbffvvtTp06RcggWbJkyTfffOM+c+ZM4A3GCcyk9eabb/Ju
7Nix3Jw0adInn3xy/vz51DC5bty4sXfvXqEJMIcPH965c+eePXvWrFnDBXgs
xetly5bROVuTJ09miF0+hnU6p42+fft+9NFH8+fP/+GHH7gGuQfuG88o2HPm
zPFgTXiQRs9wfvbZZ0yDgRaQbt++LVLIWbduHSQiFfph2ngmiJNTwkROCxcu
5CxDQhamgXz33XcBM9J42GCI1WSokVjCnsBB4k57ZIwZa6LOG3eYI1h//vkn
rkhlxYoVYBxKLkvJcROFgEj49fXXXweB2JBuwFgEtk2bNoHEU+uzYgp4wJhO
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
4A==
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
Y0msZsQatrK0Pm3HHXdUqfN8eCzfdttt1U0/4cyLhpBsmulH5p8zZ456/eOP
P/7www/woEgD4EoLhUYPkMPUIEVRVkvBjmmFFXPQa+R/FvRQD8ZzcMimIa8k
RVEZrOgwtA0aGGBwgtvAoEiPlEYOs53axgeEYYvIqVnNN9or4RXfUrrSoEeq
gjdqacpaJTfylVqWcr4TVtyPA5jDpd17ogemI+2IqliMc1Nyqp7FbDmWddxX
ZTzJP/NbkIrxUiItcuCSbai0r9zvl19+gQQMAMzHUvwIfGqyuEBrScEbJK9K
p3Vco4g0oRo6MpVpJeE+m5S3R24vWPSfhx9+OCTcJv+UNCB3ZTKOBA+EFmpQ
MZnvJaSgS/L4TBTmbBr4VatH55Qw1xGlQrS4gnrqqadS/KeffuI85ggKzpMT
4qeo1zCbLFq5Wa9anrHSd3QLlY92L0VXf/9vlAyjKwWJ0ncdffTRpPETkEyz
KRgCR/lDl3hnMkS5R9Hxxx8vcJJfbqxaVRary21U+1H/U6c0Cnr8RGb9RqKE
3vnnn+/UwBw2ZS/GEtr9FJWyVp8p8NOZ10HAktGPVQQhGWWoTVNWXpXTmHjJ
kiWFg6gPZ3UT1Ii1RK4w2RkBDwj5bjIgIYQvIcRVWu5LhZ+iD0XLly/nbBQZ
58SiKbGuuQQhaOSZyp8jjHMNlwBJUFibLuPEYVUdvpMLcsRIqTg8kkNf3nBS
uoAHGIz1he2oo46SrjNNxnphMl6aDGKXLVvmEM2yBx988N577z1jxoxddtll
5513PvDAAx27uKtUVv0qhcqNdWuyOsAKSh4Lj+TmOXiowIkAKedDWMZGGpWd
lGtsBp4XJ8NpRZLfZJNNHDm32mqrLbfccuutt95+++3/PBmbbbbZeuutt802
25w7GX2cxCQDQUVxzmAvVCDH7vBwKtPsy0yeg8GdzAHDT5AkJUKEgOedAurx
gFELdt999zXXXHOLLbb462T8ZfXYY489dt11VxUNSBShl11oiiVyeCl7OSnz
HztC8uVkQMXfOAA8VSgAKkNgMBarmWyJtSxS4HfkAcmxd9q0aRtvvDG7HHnk
kXPnzmWvfffdd5999tlzzz1ZbaeddsLY1NQUJEuXLu2LKB9jYsRqcjIES7kG
CdR6g9IdPCaD5NWgyD02Tj/9dDx33sE2l1h77bXXWGMN5thvv/0OO+wwkWJr
zqYSAbbXXnttt9123h5zzDHOyJZzsEWLFoXHTXFEZXhsVM4R4zlz5wLAXBcv
XlxR87y+iMtpZYWD+QRChZB11lln3XXXtaO6rE+QFpjV7vPnzz/00EP5Mxdi
OEleuJmgP6eFEHbWc9P3VcqSbzvASghuwIBHKPVBkrndA9MnpkzGQKwGKuah
OuecczbccMP1119/0003xYkYR8KCBQsOnAxgeDVHApvPcF1rVUyhIQkgx5O+
79XhIAcGzgxhXJXT+iZpMpx96aoRpYVoFZsYsC+qoRJWG2ywgavdBfgRRxzB
TAjZbbfdMOPKiPPmzUMFtEKb81w1GbDJHrZGBcmQQCULeQgk3Wu8a2Ds3lGr
f1V0rUmDVoRyD94I8w477KADxBLvdcNbxNQ+k4EZjo0oPqMeMSVI+Fm4cCHj
slffMYAhuRCTlPo3hO36ohiM8VHUKxSND4M5vAkzZ85UDgQ7YNOnT4dHvMvh
Bx10kDTl5oADDkAUSOBJhpBwJ8EFD2ASETn2yjmZJuepHSqyhHBVZvST/Reg
niEC68Ddc07kqyP2ko0F11prrSXPuIEQLehiwY022ghac7gQhFDxHIAZvc9f
tX8AjNhxQ30YZJ7/AGlC+GQ=
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJx92QmMV9UVBvChxoQETYgrapTgFiWgGAsOoxFR1IAbUnHFsMgMdNh0qCKC
EhBFG5VFCSJFDShrVBA1LCIQxJW0FBRSZNMA4hZBGCSC0F/f1/mHVuJJ5uW9
97/Ld77znXPvfdOkx4BOVX8oKysbWN+lU/dBbWtqug/+U0MPnfsP/HOv/pU9
2/f/S2WvypryHkd52eK/f/+5P3DgwKFDhw4ePPjtt9/+tbD+/ft369btrrvu
at++fcuWLS+44IJmzZq5XnTRRW3atOnQocNtt91WWVk5aNCgJ598cty4cS+8
8MIrr7wya9as1157bfr06VOnTp02bdrs2bNnzJjxzjvvvPHGG6NGjeratetl
l11WXl5+xRVXGKGqqur+++/v16+fce67775t27YFg+uuXbv27dvnZuHChY89
9hgwXQu77rrrLrnkEhguvvhi40DSsWPHnj17gvHUU0+NHz9+8uTJYMycOXPB
ggXLli17//3333vvvXfffXfRokWGevPNN9147wZIyM1+4403Gvamm266+eab
TXHvvfc++OCDd99996RJkw4VtnfvXqhqa2u///775557ToPevXuD1KVLl3bt
2v2xsFatWiGqV69eI0eOfP755wHgdSY13UcffbRy5cp/FPb3wj799NMPP/zQ
zWeffbZ69eqlS5fOnz8fqgkTJvCXR4bq0aOHEHTv3n3w4MEDBw7s27fvhg0b
9u/f/9NPP4WlFStWDBs2DBKQtMStGLVo0eLyyy/v3LnzQw89ZDQRefvtt8HA
AyQffPDBJ598Yt5/1tmqVauCDYz169f/q7A1a9bArHFQPfvss4gaMGAADPD0
6dNnyJAhri+++OKvv/4alkASa1AfeOAByK+++uqKigqBvuaaa6ho+PDhGr/+
+uvAoCVg4DcLKsxeAhMDZu3atV988QWX1xfmjffAQ4XbZ555BgC0IErUHnnk
EfMOHTqUcoJnz549o0ePRk51dTU2brjhBlEWrzvvvPPxxx+fMmWKGM2dO5dO
yAMeUjFyKVLArK4zbAjT559/jpkNdbZu3TrvNYN/+fLl8+bNe/rppzkOjymA
oS7C/vjjj4Nn06ZNVAqzBgiBR7yuv/56YChWpsgRVCM8/MCDn8Qr0TEdDGsL
MzswaEGR68aNG91ESyCRlhEkYE1Nza233ipq9AySR4kZPAIBCXI6dep0yy23
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
/1z/B4m8/w1gl/OB
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
wMZk8UDG12RrKn/44S8332RlbvQK7H8AS1TEHQ==
               "], {{0, 48}, {48, 
               0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
               "], {{
               0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
               "], {{0, 
               48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxN2WusV8UVBXDSfqnfaoLfTAxiIvEFxiBoFIGmCMUg8kprVcKFC63gRbgg
YAQEgqgQKKJBUAkiSJB3ABXD28hDGt4NCkoAQYM8NFgoBMX+Oqvnhp0wmXv+
c2bWXnvtPTOHJjWDu/X/TaNGjep/p+nWZ0S7oUP7jOr+e3/0rKv/+4C62n6d
6obVDqgd2rrmtx62+P+///U7derUsWPHDh06/KHYH4v5M5089OfDDz+s7dKl
S/fu3bt27VpTU/Pcc8+9+eaba9eu/eyzzw4dOnTkyJHdu3dv27Zt/fr1a9as
+eCDD2bPnm3A2LFjJ0yYMHny5NGjR/fp0+fPxfr161dXVzdmzJjhw4e/+OKL
ffv2bdu2befOnf30p8o6FdMBLyAbgOl7bjw8Xhk8eLBVxo0b99prr61YsWLH
jh0nTpw4ePDgli1bPvroo9WrVy9cuPDdd999++23p02bBsyQIUOMt7R1OWKG
Xr166Tz//PPjij3zzDOPPvroI4880r9//87F9D3pWkzHup54DkY6nntYW1v7
wgsvmJ+DAwcOxMAnn3yyb9++AwcOYAkStCxevBjI+fPnz5gx4+WXX7YcHl55
5RWt5dCCqGeffba+vt4Ts40tNmrUKOxZ5bHHHuvWrVta1r1Yjx49PNHqp8Ng
MAMYvOOjFTEDTIK1detWkP5ZbPv27aI2b968119//b333lu6dOk777wzZcoU
YEB6+umnrY7kIcXM6U/s9e7d+/777+9VWc+ePS3a0I9ZNy1m+KXFmDmRsLvY
l19+efTo0cOHD4MBm5aENm7cSEKitnz5cgR++OGHIpsQ/60Yp2qK6aNo4sSJ
5uQvSI8//vhfiv212JNPPvnEE094qJ+O9qmnnuKF8YSEZyLBzObNmwlmz549
n3/+eYCRkIcrV65csmTJokWLYDZy1apVwsqX4cVMgh8wLE0GAwYMoCJ4UCQQ
JGE5GHoXi97SNhgww4YNQyxmzLNp0yY5RSEWtRwqhGbnzp2hS6QMWLduHX7I
SbCk2EsvvYQc83sdJFQIATDt2rXjL9KEFWPU4qHV+xXTqS1mvNYTrYcmGTFi
hJDB9umnnwLD8QULFvB6UTEMhCu/ggcMtG+99darr74quUjaclhFhdCQEBKk
zAMPPHDffffBgBkDzC+p4bEcAgcWGzRoUMhsiLIWOfKRtCwBDACESp/+RBEe
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
SOWTIzBW10ER8PB4hX4IgJKRQ9JORFD9FwpQ/Ok=
               "], {{0, 48}, {48, 
               0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxl2Avwj1UeBnCLnUhkcqld474Zl4QppTSVpB0qt80l1YRcWtWfWAmp6aK2
JpRqVAqjEE0WYaILpts/mtoUpkKXSdHaUW3RmCb72fdZ75jdM/N/5/zf3/ue
85zn+3yf7zlv8+Fj+4+qWqVKlQk1XPoPm9Rt/Phhk/9U1z8DKib8eXTFyBE9
K/4ycvTI8V2GV3Oz43///tP/XdF+X7TGjRs3adKkadOmzZo1a968eYsWLVzb
tWt35plnNmrUqGXLljNnzly3bt3LL7+8fv36N99888MPP9y6davOsmXLHn30
0dtuu+2GG2647rrrhgwZ0rt37wsvvLBLly6dO3fu2LFjmzZtzFKrVq3jjjuu
WrVqvymavpvmany0mQWMRkdbwAQPMACceuqpnTp1csdPTz/99Pbt27cW7e9F
g+ftt98Gb9WqVfPmzZs1a9Z99913xx13TJgwYejQoSB169ata9euZ5111jnn
nONqwLp16x5//PHAoKJq1ar6mfRYSFr6+SnMaK1atQKmYcOGJ5100rPPPvvt
t99++eWXrnv37v3iiy8++eSTbdu2vffee6+//vqLL744d+7cGTNmzCzapEmT
rrrqqksuuSQwUOSKrosuuqh169YnnngiiuCBCqQTTjjB8rPk4CmBuQOMVfyh
aGeccUaHDh08b4oDBw58/fXXJZidO3d+/PHH8OBq06ZN8MyePRuMe+6556GH
HrrllluuvPLK888/X5gwLF4gnXvuuX8sGkg1atQoKdLq169v3iZFCy1pISdh
MpQBTzvtNMx/9dVXe4v2z6LpfP7555999hlIlZWVGzZsWLFixZw5c+68886/
Fu3mm28eNGgQQrxu7UamwPPOO6979+4DBgzAG87BwFL4EURs5Mmmx7RSxshp
37691wngjTfe+Oabb0Rq3759/ygaooDZsWPH+++//+qrrz733HPz589/7LHH
0Chk48ePv+KKK4DBbZaWJnYXXHDBwIEDhw8f7qfq1aujyLVmzZog1atXDzMJ
XLOjrQSjWRF+LBYYAYIn8Qqe6Id4BAuehQsX/q1oTzzxxLRp066++moLkZiS
5ZRTToGKDi3QgPgZMWKEqNWuXVvUgMESVQsZisweJC2OacAk6DQpHIIlOlAl
ZFiCB7xdu3YRDzHLL/rhAytXrnz44YdHjRqFh9NPP106xDEsXPRBgkccCaBf
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
parmw4t+3MzCdVIpFHcyE8d8EODtZbz+DfIrb1w=
               "], {{0, 48}, {48, 
               0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
               "], {{0, 
               48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxl2XnQl+MeBvD0NmnVUaEaSjTKfkKLyVJqIrxMm5hQ71va5G206DScJE1k
G0u2sdPIEiMUxhoG2eYQpXGUGLRP5yT853zOfZ15pplzz/Sb531+z+++r/u6
ru9yP3WtnzZsQuNGjRrNaOZjWN3sAdOn180Z/hd/jGyYMXliw2XjhzTMvGzi
ZdP71te4+df//fvvdYsWLZo3b77vvvs2bdrUhT9bt27dvn37Ll269OjR45hj
jjniiCN69uz53nvv7dy5c8uWLTt27Ni+fbvPbdu2bd68+aeffvpnGT/88MP3
33//zTfffPHFFx999NHrr7++fPnyp59+eunSpU8++eSjjz5677333nbbbdde
e+306dMnT55cV1c3YsSIgQMHDh482GefPn369+9/1llnHXjggW3btoWkZcuW
rVq1AqZNmzbt2rXr1KkTSN27d+/Wrdu5555ruZ1lbC/jX2XA4z4wa9eu/e67
72ALpC+//PL9999/+eWXgYHkwQcfDJgFCxbMmTNn6tSp48aNq6+vryvj0ksv
HT16dG1t7aBBg+A55JBDYGjWrBl+QNpvv/32339/eA466KCOHTt27tz54IMP
Hj9+PCQIqT5//fXXXbt2bd26FZ5169YB8I8yPvvss08++cQFil555ZWnnnrq
kUceueeee2699daFCxcCc+WVV06aNAkYkEx7+eWXo2vGjBlXXHHFJZdcYuNW
b14GyZo0aRJ+3DzggAM6dOgADO385Lfffvt3GfBgBh4XmPnggw/I8dBDDz3+
+OPUWbZs2XPPPffiiy8S65lnnnn44Yfvv/9+eJBzww03XHXVVdYl1oQJE6By
0dDQ4Obs2bNnzpyJN3S1KYNSnAMSopDjDjwkg8fnTTfd9McffwQPMPT65Zdf
MPDAAw/ccsstwADgT6p9/fXXH3/8MfM8++yz7oMxb948nllYxjXXXIMfnAQM
ALNmzZpTRmWq4GlRBlRRLRbCDzVJduONN/78889kohE8aPn2229fffVVK3II
q6xfv37Tpk0//vijxzZs2ECvVatWAblkyRKYb775Zqj+XgYqcDJlyhSoYAs5
PoNn7NixFo2fA8xF48aNEUUyFkLOsccee/XVV5uWMWJmEfTpp5/iYeXKlRzC
J9jgE38KQ1/h6p133uFnUpIMbJZevHjxokWLAItqUNHob2XgxzWQEydOtC5a
cOKiZRkokgcAi6WPPvro559/fsWKFTZr+/ixfUu/9NJL7r/xxhtvvfXW/Pnz
LWFm6/IPI3mYo6AVX3fffbf48tV99913++23exhRlALMTyBx7TO84YSNk3YS
8pDU1NS4iTf8gMQ/7777rhh5++239+zZI6LBMz+jIocuMFgdBjhXr15NRO61
1nXXXcfPUc0Fou644w7zmBBR7IT5mHnatGnsREQBDgByWpfRqozEGm8LLpBO
O+00EXHRRRfhHx5uwYyd4p9MwIDnT7TQ6/fff2ckd1gdKgA8HC/BAxW63GSq
66+/ntWJhSjkwIPkBLh14+rgcdG0DIxR7cgjjzz11FNtgUvlHEYCwx7tlD2Q
RrsnnngCY2AkGQr2O++80zPuI42mPt2MgrwEP7TwoNHMU8pgafy0LcNFjJSR
jGS4f+ihhx511FFDhw5lVNnvhRdeEMiCzk6RIweKdCABsy5HvfnmmxB6TBaC
UCS+9tprlOVwN4PHDOiFh3nASLqmQrIxlkIOJLk26AVPytlhhx1GZc6xd+Qs
KiNiQSLGVQoySdcC359yAlk///xzYShnwgkPMBIm4aiGWztibFEPjKohP4v3
ZD9I8JDaGmO7Dkv+ZKHjjjvObFZBO+sygNns1E3L4QeG5B81N3V248aN8H/1
1VcU9AyKPJy4Y+8wzM88o3aMGTPm4osvhodS8PisKAIshSx43BFiZ5555po1
a1Bhm/wJCQPwJznctCg2kAMPMD5hg1CRTXUTdHRMxX/sscfgsSP+Yea98fjE
DzBhKZUrSMCgF4R5QNIwP1fwJBuQCRjhJu8hR7rGBjxg0As2zKgdtiBZAfPh
hx/CI8r4me3vuusueokvkcXGbEMveFjIWuyxN55Ku2Rp3+qCGEAKShDxAGB2
CpW1NpZR2QY2SORw5kGdEPBDDudqxNJLVhTsyJGCkpbxQymQAFMvRHTwWDqB
FgsZ/tQgsZyFUrBkFYGsQCiaVrEuw6j1qVzG+jJAwozaISPFzLYgTzKPXC0W
kqX/v/2Ax4ppMIwqMRrRLuSYHAaiz507V8awNRbiUjgVWe0i2yj6lXkwFud4
hlLAYJW+yerwmEekS4OTylC50n60LwMqpg1Lacl8upYSIbdruYX0SNY7ZRI+
ZGlO1gvt3r17RxmwpVVDGjNjj1hCklLAyA/IYR55EjnpecaXYULCSYzApG4i
J0oZuYiLeEbwSjsmtCkMmyQNjIxBPmLBoDWCSjXRuekBUMRI9EqhT9ohd0pq
Cr3KZVM8w8YghZ/IlCBKpWCbRBY/68ckNPsVKfRSH21Kr4Jqs7lQ1AAOHkjg
0QAQDqUsxO2ITUOSXppY7Bc8qRSUqi/DBYoCpmoR09gn3vFz/PHHixHLYV6q
MaHZZHuczyvDhDYILSQei5EEPnJYjnmCR+bBT3XKSG+vWIj3+Fl8pb1nlSrt
xDMpZPFzr169aA2MBIJzSAiE8Jwa0JW+Dof4yYEIGPHFzH7lvhKcSpFTjxkE
u+TDikJMPoSHRSEZU0aKl6WTqNNypB3yZ9++fT1vF3K7SUCS05jT/KIGNsK5
ZjAuAkZwSUTIkSQFV4WHXtJygistkN+mo6bR2DLkn+RDkqXfyHmwKvFcdNJJ
JzEt/CNHjsSDFGdFDAgrq4AHFUFlYzAS7AprhcdX4itP5hgS/+AcHi6Ch6VT
3IMqekGVfjUlLJXdOOGEE5zRdBojyqAUo2qBLA0SRazIJFoO7pWLEAWtZ5J8
fCswJVKZnO01S8CYJP0YC8EjgdgpMwux6nwRSD5BytnZJ7qclHMMsQtdGa4s
CkyCCKQ09tzl0zUYSYYY4+eq2eDn6tS8uAwGSMjnxBEXmT82joWqKMtx1U0G
s4sLLrhAy8rb6jIYSJBhJAGrQ8IhRJFnrOsTLaka8TN+lJUcD0EyA8niatmM
M0NRVVX35qRqwzCzzz77OLl7xhmWas77AwYMEE2WlniRABifKJcsRJHlZbA6
t4BBPuzREWA4kxKV4NQvg2TiS/+T805Us/3kmSqsAib58Pzzz3fGv/DCC/v1
66cfGzJkCFePGjVKpDA24XyGH6kpGY9JkKBakQk/IHkAaSnu6Z9ziGYkIQ8P
fkCyUxbCT5BUNTRhxUunn346A4uvkNOjRw8PCwR/Upk///zzTwWCdnyiMJGA
Fjn9gaQbxCTtUJSsqIrJDAl8eNLPs1COPMoQP48ePXrvYw4LOSB37dp1+PDh
Qm/w4MHyj2aek2kHHiRcBJi9MCe92JL0vvKwXykfCiU5rEumpIJkIbLCg6L0
hzJ8ug54iJUuGvnJybIiMCeffDLf1tbWIlBMMQx+Dj/8cHgEmm9JrIsD0roq
IxWwbZJhw4ZpaFHncM1vkiQFUQRPEnVaMrkUHhbKGyFZEZ74WfxiwFSKu/5H
x245dPXv3z8vZHzlzIUWkJiHXj5dsxzMspn92iMV8MNp3KXY+Qm/kUMlhcEn
CyUMSQYkV/OYB2zHJFpWZk6848dvHWROPPHEM844gwpnn3227XtAJMoG+EGF
hXIklBgh8Qx1WEKwoEtMeR45ZkAO/9sOZoS5zhAens/pjGTpcsOPqA+equuw
U4klZz0RZO9od+ecc87xgAur8Ikn4aGFZtJNKyYRsYGvTCuTAAk5cszJ2MlI
IIks12ns3UlWZH54nCX9kF5SkJltnwfslBAMbDbb9yfJkI+HU045hXaugdSy
eoCCvXv3pmD37t0xY5smMadM4jFgbITQ7tOFmlVqEmJUQ2laaHhyis9bheCJ
eUREtzKIQjufZhZ3uhp+HlWGnAMwWuydKHnDCbk50SiaUASz7dgLcuBBHV/B
w8CwMQ9L085NeOSEdK2VfzSc3GIthdJa5kcIbDZom2b2lb0jwX41hIjK+weA
zzvvvIYyfGtrvrV6YNvF0jKkvlR21zIz1VaXwVfu5DAoH8JTvXGNebDRsQz+
iTd6lwHVoDI8gEnxG6HxQGV3PKwZSz2SG82GVVkiJ1ahzTPVSzOq8XaOzPCk
WMiHFR4RKrOZHCHpfxjSQgDwiVTTtwwghdjAgQNRRxqBICqhRReEecclHrkU
EglNIHuAjmLK6qCCB4+T2qoyXOtaKcV1zCOXasn8VlxwC+YlVcnZYQcYCqJF
lElEYPiER9UAUoaMsdMVSB0CxPO07ty5c9pFO5VbaIcW5LiQfmMktEg+WEoH
nne/vs37HxsxFecwg72r7EIsJ3p/wmBd3yIBFeD1KwNd7oAHG7lJZl+chl4z
63z4hFEVd3UWAGvZu2zD0nkf5SYmMYaZBWVQHOfISZJBjnipqanBgDwTBX1F
gqQCA2YAIBHyKfEeQyOJMePnDkR+rkKpqjmtcy+vyqhoxBXS6OVmXozAA+rc
MuyIc6xlCVszm4UUL4maG5lEwKav9ow/YVOMPEksd9Bia2ZLxOXAKG936dIF
t5ZjWhlGYlGSmAQYVk/vITfmlApkClZeqFrREhKvTYV/xcL9vH5JB+samPTM
HvYTrObdo1oAVd5mUzAvQNQ+5VheYioxDkNiCi2SISS6DrzRC0I1NO+9kWBF
8zMJu+JcBpZ2bDyOouO4MpKikQMbDGksIcl/PZjHk2kvYQBJo8JF+knbycsf
FmJppsqrKvU076OkSlEplGrLoD4kMIidhLPr/wALnvYL
               "], {{0, 48}, {48,
                0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxN2Q3Mj+UeB3AcYRxGmZdGOt5WXpaXcTQ6TbEO7UgJI0acx8vwWA/NS0ux
ihErjGpe2hEjlpd5m8oUUww1FTvUhFHmbYlJm3U+5/4ez861uXb/7+e6r+v7
+36/v9913be/jJj4zKhKFSpUmFRN98zzU7qXlT0/rV9tP/qXTho7urTkn71K
J5eMLinrMuJPbrb737//Xm/cuPHDDz/86KOPtm7dumHDBj9Xr169ePHi6dOn
T548+fXXX58zZ84bb7zx6quvTps2bcSIEVOnTh05cuTYsWOfffbZPn369O7d
u0ePHk888cSTTz75+OOPd+/evUuXLm3atGnXrp2LvxXNza5du/rZqlWrpk2b
duzYsXXr1vXq1ftz0Ro0aPDaa6+tXbt23Lhxjz766KZNm2BYs2bNunXrXKxf
v3758uXwBMxbb731yiuvvPzyy7Nnz54wYQKQ8EwuGkhPP/10z5499f369ft7
0R555JG/Fs19NwcOHDho0CAX/yga2N26dWvWrFmtWrVq1qxZvXr1atWquR4w
YIDVRd2pUycAXP+raPjRv/fee3Pnzp0xYwYwb775Jlreffdd/ACjh00/c+bM
F154AZKhQ4daNJCyLlTPPfdcSUkJwPrhw4c/X7Rhw4YZAGrdunWDJH3t2rU7
dOiAhHnz5vXt23dD0VauXIkiSr3zzjurVq2aNWvWvKIBA9WSJUvKysrQBaeb
7oBEu9GjR1t04sSJY8aMseLgwYPBg8F9PVlJMH78eAMM9tennnqKps2bN4ek
SpUq+rvuuuuee+6Bx4pLly4VI722bNkSvTCzbNmyRYsWgWH1l156CSe0wwmB
cOURA6DyE4HucBeuSktLs/qUKVMgHzVqFJz0BcY1bMhBGsux2UMPPcQ2VatW
DZ67776bbSBZsWKFqeJhqiHHHXq5yTM8Ji7LcY7wQVq4cCHAb7/9tgEY++CD
D0CFyrqTJk3ySNz14osvAuaR4UULngiHokgGQ40aNYiFJUbiOpPQSFCmlV+b
N2+GhIhWRAsMwjTz/PnzXQh/wYIFVgcJOUbSFFRswIBJIBFuPBioCAwgoUU1
MqNpVHvsscfq168fcqIahPgxCQ5xAg9UVkGRyT2e1I6BgXGBEIxhxngymdyf
zAB5VsQADASCClShMYAJRR1Ky9H26tXr3nvvRQ7JKleu7EJN8Fc8YAkSD1rO
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
bmRgq9cqGjxoyYc7YKTwfwCv4rvi
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
               "], {{
               0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxN2Xnwl9MeB3CKVEjINoyUfb3Zi3sjlUSWVu1p+bUolYq0ydK9QiFLVGSX
fV9yqewla+GnkhlMlmn8Zcygm+m+7nnfnnFmeuZ8z+8857zP+/P+LOep2aAx
XYbW2WabbcbX9+gycGKbceMGTura2I/uo8ePGDa6ZkjH0RNqhtWMazmorsEW
///3v/5BBx207777HnHEEWeeeebAgQOHDh3aoUOH888/f+zYsVdcccWUKVMm
T558+eWXDxo06OKLLx4xYkT37t179OjRq1evzp07d+nS5ZJLLhk9evS55557
7LHHnnjiiSeddNJxxx13/PHH/6O08847r3fv3nfddddHH3305ZdfbtiwYePG
jT///POaNWsWLFgwZsyYPn36WKempmbUqFE2slSLFi1atWp1xhln2GjYsGHW
79+/v+1MuOyyyyZMmDCmNDgHDBhg8NJLLwUMJBgg95a/GnGEdu3atW/f3rm6
du1qxLtXX331E088Acm333773Xffff/99z/99BM8+m+++SZIkFgE7J49ezr1
Nddcc8ABBziRxZGDk4kTJ1oHKp3p06dPmzatoshfQfUi2OPHj4fNan379r3g
gguQMLA049dff/28efMefvjhl1566d133/34449XrVpVW1u7fv16qFD0448/
6nzxxRcgWf/UU0/FpIMgyolOPvlkfbtY3NltfdVVV/2zNGiBAW9saePGjfMc
Pnw4VqeUduWVV1rQhJDpFaa57777HnvssWeffRaeJUuWvPXWW++//z57ff75
51999dU333yDHNjWrl372WefvfDCC87IvqeffjrrMzo8HTt2dMDBgwdjHh5b
YAbVgNkUUWDAMKK0CAYPxs3Bxk033XTzzTfPmjVrzpw5d955Jys88MADjz76
6NNPP7148eLXXntt2bJl77333ocffshwwfP111+vW7cOJFCvu+46Bjr77LOx
QTxEqA8PK8DDLk46adKkaaXZ1LSRI0cGjDl5kgdgZoI0e/bsOaXdcccd8DAW
itjr8ccff/7551955ZV/lwbVBx98ANKarW316tXvvPOOt1q2bNmtWze07Lzz
zieccAJF0SdIQ4YMsTW78Cxg8DN16lSQmIOZwKBqNMYNzYwPgnTDDTdg6ZZb
brn11lvnzp0L0v333//II48Q83PPPffyyy8zHIrg+fTTT5kJEp0VK1bA6Tic
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
               "], {{0, 
               48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
               "], {{
               0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
1cDESysINjApPp9D+i9lOS7Z
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1: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
RUu8HqrS8hTPymz274vnXzbfYdU=
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxd2Im3j+UWB/CzLmUooRIiczITylCxJDJEMs8hxxAOzjFEZpGpMjUZQhSZ
jznSarhduWbJXMI1Vcr9C9zPffftt6z7rHXe9Z53eJ7v893f/d37/ZXuM7Rt
v7+lpaVl5XZo23t0o8zM3mPaFfBPh4ysgf0z0vs2zxiR3j89s26fHC7W+N/f
f8//nozvkvGPv4YrmzZtWrBgwZgxYwYNGjR06NBRo0aNHz/+008/PXPmzC+/
/HL27NnTp087njp16tixY4cOHfKWGb799ts9e/Zs2bLls88+W7ly5ZIlS959
992ZM2eOHTu2T58+jRs3rlChQvHixUuVKlW+fPlatWq1adOmSpUqlSpVeuqp
p1588cWlS5emwKTwmHPdunXmMUnPnj1fffVVqN58882NGzeeP3/+ypUrFy9e
/Pnnn88nA54ffvjh6NGj/0zG999//9VXX23fvn3Dhg2rVq1asWKFJebOnTt5
8uSMjIxu3bo999xzlStXBumRRx4pU6aMf5s2berfqlWrNmrUqG3btt/dMYIZ
u1u+fPnEiRMHDBjQt2/frKysKVOmbN68GS3Xrl37VzICEn7Q9eOPP8Jz+PDh
I0eOHDhw4Ouvv969e/e2bdvgX716NTzz5s2bNm0ahocMGdK1a1frIqRIkSKF
Cxd+/PHHO3bsWK1ataJFiz7xxBOtW7f+v0hh29bef//9cePGjRw5cvDgwcCY
+dKlS8Bcv379119/hQe2M8k4d+6cwKFI1AKPHX355Zc7duzIzs5eu3btRx99
NH/+/FmzZr3++uvDhg3r379/u3bt6tSpU7p06SLJeOmll1544QV4Hn300ebN
m98JRqRQbVOCNWPGDORQDg1Y8fLlyzdu3Lh58yY8UOEn9BNCAgZFVCRe5oEH
yfCI+7Jly/BDQvaFIpx36tTp2WefpR8hK1CgwPPPP9+5c+fq1as/9NBDKErh
cbJ3796tW7cK+gcffDB69OhXXnmFbL755htgfvrpJ/z8/vvv8Fy9ehVdmDlx
4oRgHT9+PJRjhv3793tevPCDHBJavHjxwoULA9KECRNkR4cOHZo0aUJFDz/8
MDxPPvmkIJI6kVNUgNm3b595Pv/8c6EBBgzE2o4JKdbqMOAkjoIVYCARI8qB
BzkHDx6ERLyAWb9+vbjToRmkqj1KN5xjyTbbt29PyYUKFbrvvvsQRectW7Yk
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
VLL+P2Jru3c=
               "], {{0, 48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxN2AfsVUUaBXBWlrp06SArshakLCAqiqhgQVAsFBU7SAkWUEApgoJ97ajY
sFdA196VWAPYKAr2qIkxsSTGEkuMWfa39+yb/Cd5N3Pvmztz5nznK3O7T5wx
espW9erVm9XYZfSEOUNnzpwwb0wrN+Omz5o2dfrkSSOmz548dfLMQRPre9jv
/7//9S+44II77rjjmGOOGTx4cNOmTT35S62Vfr2qbVW1Bg0aNGrUqEmTJn+r
NX1PGlStYcOGTatWnrs2btx46623btasmX+bN2/u6qFOy5YtO3XqtMcee1i6
T58+/fr169Wr1z333HPOOedce+21l156af369QPAuul48teqpZOpsqL5C6Rm
VbMuSK65tWJQaa1bt27fvn12kUnatGnTtm3bdu3a7bzzzpD07dt3wIABu+22
24gRI3bffff9999/3333DYyytJkzW+OqwWCJFi1atKw1q7Rq1UqnLoBGtVZm
8IrnhhlsmCeu+l26dOnatWv37t3x07t37w4dOuyzzz716rS65mhetRZV827r
qrWtmk25MkG7qun4K8tlWABkBktnBv0mteZJ586dd9xxR+R069Zthx12wMyu
u+46evRoGBACRuEke8lyAQB5x44d2bpzrel70qHW2lctncBz7Vg1D9tULVsI
mfC47dmzJxgoQpT+Nttsg6UiiRjXLuzFtMYY0LVqOnax7bbb4rZc/15r/nLd
brvtPDc4CAE2pmfV/JVJevToYYxtAgyh5wBsv/32BiNq+PDhF110UV19AlP2
ki3bIGBZ0VRm6FG1f9Sa2UI7zrOckZC45TIHHnjg0KFDkWCAh8b3qpp5YDCt
5zvttBNL3Xrrre+///6GDRvim1oRqg5sBWR0C5sZIr9AgsRUtv/PqgWPhQIS
GG5y9NFHjx8//tBDD+UsYHCi/v37H3zwwZMmTYLBMLeDBg067rjj3n777c2b
N7/zzjvFTEESBXrIjhFVXXfzL7YxjwSrA2NdM3NY/SABDE6G8ByeGTNmTJw4
8cgjjwTDutOnT2eUSy65ZK+99rK7QVU75JBDBJzVq1d/8MEHcaUWtRaf1ZAD
QMOqFWAJL5CjCypLY2bgwIGuth+6XFlQZ5dddtlvv/2OP/74k08+GbBRo0a5
Xnjhhffdd98tt9yy9957c2T8DBkyhHKWLl36xhtv3H777fG+ug7rGglFmfGL
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
               "], {{0, 
               48}, {48, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxt2WmsV9UVBXAEiwQsQ+BzI0T9QKLUGBBtRHEog4R5ENAoyCCDFAEFHOOE
IgqNAjKIQ5gUB4YoYJkUwixVsYEiasRowD4EeQQiYLS/nlX+IU1P8m7u/95z
91l77bX32fe+pgP/0n1IzRo1aoyt49B9wPi2Y8YMmNijoR+9Ro0dNnTU4EEd
Ro0bPHTwmNYDa7n4x//+/ef8D2Vceumlbdq06dmzZ58+fW677bZevXr17dt3
4MCB999//+TJk6dPn/7GG2988MEHa9eu/fDDD7dt27Z9+/YdO3Z8+umnu3fv
/kcZe/bs+eyzzz7//PMvvvhi7969+fnxxx+bvH79+nXr1nlw5cqVCxYsmDBh
wl133cV4x44db7rpphtuuOHNN9+srq4+ePBgVVVVs2bNLr744quuusrdW265
pUuXLt26dYNq0KBBkyZNevnllxcuXPj222+/9957wHz00UebNm3aunWrVXbu
3AkPAJb+59kBCTz79u1z0a1PPvlk165dZgLztzJWrVoF0pNPPjlixIgBAwZY
7uabb3722Wd/+umnQ4cOwXPJJZdceeWVbdu2df3PZXTt2nXo0KHPP/88JEuX
Ln3//fdXrFjhyBpPN27cuGXLFvzwHZ49ZUACw5dffhkwfoafv5dhJkgbNmwA
hqm33npr0aJFzzzzzPDhw++44w7LjR079ocffqgq44orrvhTGW3L6NSpk2lT
p06dO3cuGlkIntWrV+MHHmZRxD7fEy9LowWGCjMBY+wqAx6Ubt68ec2aNcuX
L3/nnXfgeeWVVx544IE777yzf//+wrd///4jR47AA8k111zTpox27dqZ8MQT
Tzz33HNz5szxICSCDgxyNpQBFYqsAkwgiQv9BJKjcyBdByN4gIeHFx5fWgY8
s2bNQpHl+vXrR7E4FzIsAQPSdddd1759e7IZPXo0vU2ZMsX8+fPnUw6P4OEa
TULCJk/PxYMHAILKMWFyPcw4Ci48nmUB29wUMv5SkVj07t3buu+++24kBM/V
V19NNt27d6f5IUOGjB8//q9lzJ49e/HixR4nZngwAwxJwyO5LAqPoxUDILSE
mSDBDOWbXIkXU/jhI4rky8iRIyW1pWn1X2UkWDIrvA0ePPjBBx/Ez7Rp07jw
2muvUZGoJdkDqYInKyb3w1g044rrgRQ8whF+UL2ijGXLlkneMWPGWFRouH/4
8GEp37p1azKGUMFx6+6771ZzHn/8cWVnxowZ8+bN44hn4eGdI5uMW8VyIO0s
I+cJn/NkXwYwfpoPD27pEEWihiIxksUKiyoEmLsWuvbaa/2UdIJI58OGDbv3
3nspn6pRJGRREVVHQkn5CgNZzjHpD5JztypxrACLpDEMDGtJW2X2vvvuk9Qd
OnSwuqQTLJWnc+fO8EQ/99xzDwk9/PDDKHrhhReiIo9H1SobVCxbLsJwHsYi
4MSuIq1QlyAmxdhRRhzZRAivb731VgmlCimVTvADIZ3DI174ETIUiRohiaxA
U1EkhByQsARJ4mUVF1O0AQstlbJT2VwSR5O5g59VZYgdTgRFQgnZo48+avuA
B132LAXcLSmPQ7fUB5X86aeffvHFF5VHvuAnS4v1uRjAI3KATdt1driLDRfp
RIJ7PJFyJWCcYAn5VsQGKh577LEbb7wRHgonadUbHjkIqluYVIWoWtR44cEI
m5vBgKhNZXA5GxMXnPP69ddfx62fFMuIW0h+6qmnWCAbfhE2pxAOLd/ltU2K
+/JLyqMLMCnvhJaoaFgZzLJpfzfzoYceUsFeffXVl156Sd5x2bqoA/uRRx6x
HNjqbTZu2cqaMsJZymSEj1nRUyYHJ/Aqj3AQLZZIyB6BHGAkGtKuv/56DxIP
SBizkYFBSBQ+twxyUlTVJaaUSprHuVXo35EdG7cOQY2lzMsvv7xFixa2bOdd
ykiCIEq4nbAjf+Fhn2iFBh7i4UXw4KpHjx6jRo0afnY4V5c46ylQPYVAUK3O
lDhK87QQ7KOd4+6yo4eBijvpZJiF1l3IVVoJqAShCD/cx/DEiRPhMRkeKQ+P
0o2fqBrheEYdwTuyf/vtt7ulSiSgFlLwobJNyD4x5ay7fLd0epumTZvySKbY
E1HtKbJBMhloBkScC/DQKpwe5CwYHLGoQoRn7YdyzWAqEmB8xI+7kLsIJ0rV
T7c4pTioacBEw2SgnptPCZC0bNkS86Fl5syZOLS6SIEk1jJFuiVe5tOhXIYH
AEtQcvsycCtwETx/e5bBR3PAds5xj0ALDGmxSUuSTu6o5JJOOFIorEIYUgDa
9GOy0h6nFMh959kjIEGg8Hnc6pCkOcSA5cRFmjjhl+wTQVuMK4w76VwGfojE
TCHTZlgiRQAY8oZHQmGDerFn6fQqYGSPy1GRTHHAFVRyXymABydYBclJwgRY
q1at9LFO4CFmIkS1iKAODFETXPVKFJhN664GqopQAaAOpLyrDLwOMzCnIUn1
VkvTobmbZg9geDqW0aEMq1hdehKVbSVF2wlmgkfxgY1C1BnR1Enyi6S5nH3T
DuInkIpedj2kpfnffXZkstXxs6wMczziiBBgSILjgmIJAFDkKLsloHynBG5K
ItoTC4k5ugylRhsgTSyXXiiQspme2zdW3on0tE5CETwwCxZUrgCDQIRUEsfq
pD6ijHHjxuFBDspTtBCbdVUbGUqrMhQqgGU9qGS5o4x0QZFHzvNSliYfPOLH
Mwzp0BAomnlBgO27774Do1MZOJFTYJA6TmRuGkW1fcmSJXYZRjxLcjSDMcme
zkRNo43s9dn0rQtGpbXOSxlUkNAVktMFLSkjL3dwfvXVV1pEShApeNQcQkWR
hTAwuQy7gyoHTLbjrWUwCyeK0gxYQpVLj+EulmDwMz0bGPvLUJc4wp2sDpX6
wzjL6P3mm2+A8X5BOaTSrYyKbKSqyR6RrVwAwE9EESd5OKpv8OAzL2uWSCuY
9ixHqpAyLoqUWHPNtPROBECHDAJGCVLs22+/PVSGTPdGRskkhCLhU9XVbYWF
Ox4RDiJRGxkRsnRW4FEaPkFSzZAfZtIh5+1Yf4JYueNBGkMvzRAJd9hhGQwz
U6CQEzw2JimvFxK1ZBmKRIGYJ5VBTmJKKuBJMY5LEPbBVjPVAUWP4ypP9JNP
B0jgiBJE/+4miAIKJyPCBCRgJsPjIiUHDwwgoYUYnKu66ErXKoPkl2YpHVq0
LSmo1BagGIovYgUC7cAQLQ2nCKMi8iDdFJ8I3kzxpeF0vJBEz8z++OOP3ndM
U/wVYf5CBRKvEYIleiYhe5+ihyibJoosxFmciBQXTBNc8KJ2LAkQZrjP8bS4
aWsdzZGYhE3qqQOQECeJmnD06FF4Tp8+zQgYKqEwZW+SbuCpNiLLrAwiYPwQ
IR/5QszmI00c1XOqBt584LGKGbEgVHgwABJdWVoBMScfjlIVkZPPCwcOHPBy
Kl7emn/++WfhQxc2AAMGXbgiVDaFGx77ozrg8bhJ4WaiCJN5fYOKC6bJaBoT
jmyUkasT23G6/RQlcQE1n7k4SM/ff/+9fK+urgbp+PHjUBEAPegrNCGWEAgB
ymbtHB4ZIYXZsYuZmQ5NVsoI803LCywwZJNYGFTkWRHM63z2uCgHdYKlYAYP
fqrPDuE7efKkuOht8ENFMNAJcsiYhHCCwLzHIY2zIij7QJJlVJ2PIZXvIRkY
YFPg8i6fFxPXVYO8l+l1U5mJB55jx44FD5ZOnTplgl1e3yXxhRsAWs3bCsIJ
gx0ewUMJUo/kTEOXOXiwutIHWN62/AQbpfkII47ZzU1WE/bt25euHj9VVVX4
AQmSQDpWxokTJ9LEwkO0Vre0JayIBLu5LBNBOZudTowYrJTxBWUsLoML3IEh
X+14KtlBdd0eYaN30VO8cE45B8s4Fw+Kkm7RpwBRvhoLEiOqjbokoWQTrtwV
RALLBpdsysjnJkcBYi1fQekqRRv4tEB+Ih+21C7BCp5zR6JGGPJLCluLfY9Y
ERX9y1CLBE7tlYDCkU0//bBFk5JOCEY4CJtaMMOOqs4OWiQpjaWbwifMRP71
119X9Hzs7Dhy5Mgvv/yCDbkDvCiLfhpg+UK0+Y6nAZAygAHMTYtm24Icnmzr
yHE9jRNT8gIqmoHTRUThlh0pI9Am05gq9H/x8Fd5IRJL5LsECwwyy0cWNAA6
H1GDPAUfCXIHknwioxYxAg8Y63oWNjVQmJCTjd6O7DWKtQQ3n0bPDVYkJOt1
CLJMlwi56CNnZhmiwzKnkln2C0GUaKJgTuVTT8CELo/wwk93AXbCWbLE1WWX
XVa/fn3vEUJvmtrFl//JL1XaOQlp1+2YFGItBnmBLroCxiZLzDYLwtYGiCDy
2QeAEtII5UuLyLqVDhZgVyBh00W1vXbt2o0aNWrQoEHz5s2lCTt8j4YVQ5GC
58yZM47sqNI2DkkNAJ3IfV4IkxPkeON2S7xUAKJCOCbFlMF8ire0Yk5U+QcH
ebhiGjCC5dikSZN69epdeOGFvy/joosu8ronf1Nzfv31199++w0kbHgLg7xZ
s2Ym2AsExbraD+G2V5LNhDLgcQ6kLZt9BYqWyACqfEmjk3yRznsZH5EMoevq
SY0aNYC54IIL6tSpA5jANWzYsHHjxsDoXbFtLWUQVHMalqEvAsnGYauyV6YL
ggEw8PK5BjAhw5IgYo+cCD4lJW86wkc2AkRm0p9+VK2swuvzzz//d2XUrVu3
QRni6K1fHN0F1UywnZ933nn0lu/2INGSltV7R8IEDEjghSW+iKBQEph9U66R
EDBQpSNSZCJyyehNEzmWqFWrVs2aNXMMMAD+DeC3T1Q=
               "], {{0, 48}, {48,
                0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], 
           ",", 
           RowBox[{
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJxV2QmoV1UeB/BwMEWyLLASy5I2sVdJLg2+SrSFbMOlR1rCU3NJjWejU2qR
lVSmpJNUZrhFakaaYlpSqThuuJIrLkVqhlpDVhNlhtp85nynh3PgXc7/3HPP
+Z7v7/tb7n3N+w7tNqDOWWedNby+S7c+IzoOG9ZnVPdGflTVDB80sKZ/v841
f+8/sP+wv/b9i8FW//v7b//48eO///77999//+yzz95///133nnnTTfddOON
N3bq1GnkyJHjxo177rnnnn/++enTp7/33nuffvrp+vXrN2/evHXr1i1btqxZ
s8ZP1wULFvyztI8//njOnDnvvPPOwoULFy1a5Kn333//3XffnTp16j9Ke+ON
NyZNmvTUU089/PDDN998c4sWLZo3b37xxRfXrVu3QYMGDRs2hOfUqVNffvnl
o48+2rlz51tvvbVNmzY9evR45plngJkyZcrMmTNnzZq1dOlSYFasWLFy5cp1
69Zt2rRp586d27dv//zzz+Ex6NZHH300f/58AHQ+++wz+GfPnm1kxowZkydP
BgMYC7755puADR8+vGvXrvfcc48dL730UpCQ4/rbb7/98ccflr3rrrsefPDB
jh07Qg6DRd4qTWfevHnWBwMnkKxevXrVqlUwIGR1acuXL/dz2bJln3zyCWbm
zp2LIrSAhKLXX399Umk6FoTq5ZdfZo6qqqpbbrmlbdu2119//bXXXoucc889
98SJE/h56aWXjN9xxx2YGTt2LEKsNq+0JUuWYGbt2rUw42THjh1o2bZtW7AZ
d/fDDz+0taeQAw9+DLIdYI7DWNOmTQMMGEShyBYjRoxwcLa4/PLLr7zySoa7
6KKL6tSpg5wDBw7AecUVV8DZs2fPiRMnWpz1Fy9eDI8+Y9mXVBz/gw8+sGOu
9oU21mGvM+kCxrOxFBigYgwkYKz/yiuvPP3009XV1R06dKCfCy64gMmaNGly
3nnnwWMXII1D1bt379dee812ocUVMBPshZAIRmfjxo3IIewNGzZAgp/oVsNJ
6KUcmKEy4lA6ICEKHspksoEDB9599914aNq0KeVAxWTwmKbTrFmzysrKAQMG
OJHHkRMl0GRW83NJaW4B4GrcBOPYCEVUtKo0+I2EPZMXlAYkighp/PjxUD3x
xBMPPPDAddddd/755wNDPPXr14fH0c4+++yrrrqqoqICHuY2Ygu0WNO+Tmq1
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
               "], {{0, 48}, {48,
                0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             DefaultBaseStyle->"ImageGraphics",
             ImageSizeRaw->{48, 48},
             PlotRange->{{0, 48}, {0, 48}}], 
            "\[Rule]", "\<\"surprise\"\>"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 17668132105159537112, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 17668132105159537112, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 4, 17668132105159537112, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[17668132105159537112 === $SessionID, 
   Out[4], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.707676945003311*^9, 3.707677228788937*^9, 
  3.707677269026849*^9, 3.70767871725948*^9, 3.707678756559771*^9, 
  3.707679084948408*^9, 3.7076803502756443`*^9, 3.7076904288449297`*^9, 
  3.707690774040092*^9, 3.7076927949711*^9, 3.7076930384290457`*^9, 
  3.707694514803237*^9, 3.7076947884673443`*^9, 3.707695005054143*^9, 
  3.707699798382144*^9},ExpressionUUID->"7e4e8e0b-fcbf-437f-b306-\
8c45e2a14ead"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"imageDim", " ", "=", " ", 
  RowBox[{"ImageDimensions", "[", 
   RowBox[{
    RowBox[{"testData", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.70744131590068*^9, 3.7074413283550043`*^9}, {
  3.70767695174015*^9, 3.70767698424645*^9}, {3.707677318187606*^9, 
  3.707677319142264*^9}, {3.707678721865368*^9, 3.707678722693928*^9}, {
  3.707678888005556*^9, 
  3.707678889391172*^9}},ExpressionUUID->"60c002f2-b0cf-462d-a8f8-\
a4c2761b962b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"48", ",", "48"}], "}"}]], "Output",
 CellChangeTimes->{3.7076772778573427`*^9, 3.7076773195585537`*^9, 
  3.707678723194626*^9, 3.707678889726*^9, 3.707680423471319*^9, 
  3.707690433224661*^9, 3.70769077659085*^9, 3.707692810182548*^9, 
  3.707693041103588*^9, 3.7076945149521*^9, 3.707694788642661*^9, 
  3.707695005232518*^9, 
  3.707699798625228*^9},ExpressionUUID->"13f3991f-ec8e-41f3-9ba2-\
7350bcaac9e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"deenCNN", " ", "=", " ", 
   RowBox[{
   "NetModel", "[", "\"\<Wolfram ImageIdentify Net for WL 11.1\>\"", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.707584180542212*^9, 3.707584187202888*^9}, {
   3.707585399280113*^9, 3.707585402696213*^9}, {3.7075854408785*^9, 
   3.707585440891295*^9}, 3.7076093776731853`*^9, 3.7076805654488993`*^9, {
   3.7076914083119307`*^9, 
   3.707691415047758*^9}},ExpressionUUID->"ac534145-dc5a-44d6-b1ef-\
9e44ddd88761"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "conv_1" -> 
           Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{64, 3, 7, 7}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 64, "KernelSize" -> {7, 7}, 
               "Stride" -> {2, 2}, "PaddingSize" -> {3, 3}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               3, "$GroupNumber" -> 1, "$InputSize" -> {224, 224}, 
               "$OutputSize" -> {112, 112}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 112, 112}, NeuralNetworks`RealT]]],
            "bn_1" -> Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 64, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{64, 112, 112}, NeuralNetworks`RealT]], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64, 112, 112}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 112, 112}, NeuralNetworks`RealT]]],
            "relu_1" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {64, 112, 112}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64, 112, 112}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 112, 112}, NeuralNetworks`RealT]]],
            "pool_1" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 64, "$InputSize" -> {112, 112}, 
               "$OutputSize" -> {55, 55}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64, 112, 112}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 55, 55}, NeuralNetworks`RealT]]], 
           "conv_2_red" -> 
           Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{64, 64, 1, 1}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               64, "$GroupNumber" -> 1, "$InputSize" -> {55, 55}, 
               "$OutputSize" -> {55, 55}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64, 55, 55}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 55, 55}, NeuralNetworks`RealT]]], 
           "bn_2_red" -> 
           Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 64, 
               "$Shape" -> 
               NeuralNetworks`TensorT[{64, 55, 55}, NeuralNetworks`RealT]], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64, 55, 55}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 55, 55}, NeuralNetworks`RealT]]], 
           "relu_2_red" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {64, 55, 55}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64, 55, 55}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64, 55, 55}, NeuralNetworks`RealT]]], 
           "conv_2" -> 
           Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{192, 64, 3, 3}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               64, "$GroupNumber" -> 1, "$InputSize" -> {55, 55}, 
               "$OutputSize" -> {55, 55}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64, 55, 55}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{192, 55, 55}, NeuralNetworks`RealT]]], 
           "bn_2" -> Association[
            "Type" -> "BatchNormalization", "Arrays" -> 
             Association[
              "Gamma" -> NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
               "Beta" -> NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
               "MovingVariance" -> 
               NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
               "MovingMean" -> 
               NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 192,
                "$Shape" -> 
               NeuralNetworks`TensorT[{192, 55, 55}, NeuralNetworks`RealT]], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{192, 55, 55}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{192, 55, 55}, NeuralNetworks`RealT]]], 
           "relu_2" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {192, 55, 55}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{192, 55, 55}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{192, 55, 55}, NeuralNetworks`RealT]]], 
           "pool_2" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 192, "$InputSize" -> {55, 55}, 
               "$OutputSize" -> {27, 27}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{192, 55, 55}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{192, 27, 27}, NeuralNetworks`RealT]]], 
           "3a" -> Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{192, 27, 27}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{256, 27, 27}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "conv1x1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 64, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 64, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   96, "$Shape" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 96, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   96, "$Shape" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                   "Dimensionality" -> 2, "Channels" -> 192, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{32, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   32, "$Shape" -> 
                   NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {32, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "convproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convproj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "reluproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Outputs", "Output"],
                NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reluproj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "conv1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], "3b" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{256, 27, 27}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{320, 27, 27}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "conv1x1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 256, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 256, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 64, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   96, "$Shape" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 256, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 64, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   96, "$Shape" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 96, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   96, "$Shape" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                   "Dimensionality" -> 2, "Channels" -> 256, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 256, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "convproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convproj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "reluproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Outputs", "Output"],
                NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reluproj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "conv1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], "3c" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{320, 27, 27}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{576, 14, 14}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "conv3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 320, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 320, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{160, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                   "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 128, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   160, "$Shape" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 320, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 320, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 64, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   96, "$Shape" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                   "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 96, "$GroupNumber" -> 1, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   96, "$Shape" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 320, 
                   "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 3, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "max_poolpool", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "max_poolpool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], "4a" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{576, 14, 14}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "conv1x1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{224, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 224, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 576, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   224, "$Shape" -> 
                   NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {224, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 576, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 64, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   96, "$Shape" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 576, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   96, "$Shape" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 96, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 128, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                   "Dimensionality" -> 2, "Channels" -> 576, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 576, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "convproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convproj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "reluproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Outputs", "Output"],
                NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reluproj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "conv1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], "4b" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{576, 14, 14}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "conv1x1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 576, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "Beta" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   192, "$Shape" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 576, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   96, "$Shape" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 96, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 576, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   96, "$Shape" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 96, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 128, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                   "Dimensionality" -> 2, "Channels" -> 576, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 576, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "convproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convproj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "reluproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Outputs", "Output"],
                NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reluproj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "conv1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], "4c" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{608, 14, 14}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "conv1x1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{160, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 576, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   160, "$Shape" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 576, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{160, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 128, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   160, "$Shape" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 576, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, NeuralNetworks`RealT]
                    ]], "convdouble_3x3_0" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{160, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 128, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   160, "$Shape" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{160, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 160, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   160, "$Shape" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                   "Dimensionality" -> 2, "Channels" -> 576, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 576, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "convproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convproj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "reluproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Outputs", "Output"],
                NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reluproj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "conv1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], "4d" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{608, 14, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{608, 14, 14}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "conv1x1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{96, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 608, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   96, "$Shape" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 608, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 128, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   192, "$Shape" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{160, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 608, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   160, "$Shape" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 160, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   192, "$Shape" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   192, "$Shape" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                   "Dimensionality" -> 2, "Channels" -> 608, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 608, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "convproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convproj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "reluproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Outputs", "Output"],
                NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reluproj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "conv1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], "4e" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{608, 14, 14}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1056, 7, 7}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "conv3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 608, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                   "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 128, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   192, "$Shape" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 608, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   192, "$Shape" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{256, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   256, "$Shape" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{256, 256, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                   "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 256, "$GroupNumber" -> 1, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   256, "$Shape" -> 
                   NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {256, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 608, 
                   "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 3, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "max_poolpool", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "max_poolpool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], "5a" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1056, 7, 7}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1024, 7, 7}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "conv1x1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{352, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 352, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                   "Beta" -> 
                   NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   352, "$Shape" -> 
                   NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {352, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   192, "$Shape" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{320, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 320, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   320, "$Shape" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {320, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{160, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   160, "$Shape" -> 
                   NeuralNetworks`TensorT[{160, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {160, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{224, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 160, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{160, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   224, "$Shape" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{224, 224, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 224, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   224, "$Shape" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                   "Dimensionality" -> 2, "Channels" -> 1056, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "convproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convproj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "reluproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Outputs", "Output"],
                NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reluproj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath[
                "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "conv1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], "5b" -> 
           Association[
            "Type" -> "Graph", "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1024, 7, 7}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1024, 7, 7}, NeuralNetworks`RealT]], 
             "Nodes" -> Association[
              "conv1x1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{352, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 352, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{352}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   352, "$Shape" -> 
                   NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {352, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   192, "$Shape" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{320, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 320, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   320, "$Shape" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {320, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   192, "$Shape" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{224, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 192, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   224, "$Shape" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{224, 224, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 224, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   224, "$Shape" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {1, 1}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 1024, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{128, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   128, "$Shape" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT]],
                  "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, NeuralNetworks`RealT]],
                  "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
               Association[
                "Type" -> "Catenate", "Arrays" -> Association[], "Parameters" -> 
                 Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                   "$OutputShape" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn1x1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "relu3x3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn3x3", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "convproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "max_poolpool", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "convproj", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "reluproj", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bnproj", "Outputs", "Output"],
                NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                 NeuralNetworks`NetPath[
                 "Nodes", "relu1x1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "relu3x3", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                 "Nodes", "reluproj", "Outputs", "Output"]}, 
               NeuralNetworks`NetPath["Nodes", "conv1x1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath[
                "Nodes", "max_poolpool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
           "global_pool" -> 
           Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {7, 7}, "Stride" -> {1, 1}, 
               "PaddingSize" -> {0, 0}, "Function" -> Mean, "Dimensionality" -> 
               2, "Channels" -> 1024, "$InputSize" -> {7, 7}, 
               "$OutputSize" -> {1, 1}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1024, 7, 7}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1024, 1, 1}, NeuralNetworks`RealT]]], 
           "linear" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{4315, 1024}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{4315}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {4315}, "$OutputSize" -> 4315, 
               "$InputSize" -> 1024, "$InputDimensions" -> {1024, 1, 1}], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1024, 1, 1}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{4315}, NeuralNetworks`RealT]]], 
           "softmax" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{4315}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{4315}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "conv_1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "bn_1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "conv_1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "relu_1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "bn_1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "pool_1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "relu_1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "conv_2_red", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "pool_1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "bn_2_red", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "conv_2_red", "Outputs", "Output"],
            NeuralNetworks`NetPath["Nodes", "relu_2_red", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "bn_2_red", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "conv_2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "relu_2_red", "Outputs", "Output"],
            NeuralNetworks`NetPath["Nodes", "bn_2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "conv_2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "relu_2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "bn_2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "pool_2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "relu_2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3a", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "pool_2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3b", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3a", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3c", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3b", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4a", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3c", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4b", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4a", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4c", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4b", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4d", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4c", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4e", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4d", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5a", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4e", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5b", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5a", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "global_pool", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5b", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "linear", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath[
            "Nodes", "global_pool", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "softmax", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "linear", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "softmax", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
              "ColorChannels" -> 3, "MeanImage" -> {0.48, 0.46, 0.4}], 
             NeuralNetworks`TensorT[{3, 224, 224}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association["Labels" -> {
                Entity["Building", "AzadiTower::7v988"], 
                Entity["Building", "Colosseum::pq39x"], 
                Entity["Building", "EiffelTower::5h9w8"], 
                Entity["Building", "ElizabethTower::4brf8"], 
                Entity["Building", "GatewayArch::b5qvn"], 
                Entity["Building", "GreatPyramidOfGiza::jbm66"], 
                Entity["Building", "GreatWall::f96r6"], 
                Entity["Building", "LeaningTowerOfPisa::snx99"], 
                Entity["Building", "LincolnMemorial::z9s68"], 
                Entity["Building", "MachuPicchu::3243b"], 
                Entity["Building", "Monticello::54xdv"], 
                Entity["Building", "Parthenon::p68yz"], 
                Entity["Building", "SpaceNeedle::79xq6"], 
                Entity["Building", "StatueOfLiberty::6k253"], 
                Entity["Building", "Stonehenge::46k59"], 
                Entity["Building", "TajMahal::zw4mm"], 
                Entity["Building", "ThePentagon::qzh8d"], 
                Entity["Building", "TheWhiteHouse::7q2yf"], 
                Entity["Building", "WashingtonMonument::37nf3"], 
                Entity["Concept", "Aardvark::r3rg2"], 
                Entity["Concept", "AaronsRod::2488g"], 
                Entity["Concept", "Abacus::s322h"], 
                Entity["Concept", "Abaya::327b3"], 
                Entity["Concept", "Abele::ryw6v"], 
                Entity["Concept", "Abelia::27b49"], 
                Entity["Concept", "AbelmoschusEsculentus::nr6z4"], 
                Entity["Concept", "AbelmoschusMoschatus::jrg26"], 
                Entity["Concept", "AberdeenAngus::7452t"], 
                Entity["Concept", "AbiesAlba::25t96"], 
                Entity["Concept", "AbiesAmabilis::933n8"], 
                Entity["Concept", "AbiesBalsamea::7z53n"], 
                Entity["Concept", "AbiesConcolor::3npn5"], 
                Entity["Concept", "AbiesFraseri::85r34"], 
                Entity["Concept", "AbiesGrandis::frn87"], 
                Entity["Concept", "AbiesLasiocarpa::4ttmt"], 
                Entity["Concept", "AbroniaVillosa::26xg2"], 
                Entity["Concept", "Absinth::mzz4c"], 
                Entity["Concept", "AbudefdufSaxatilis::62t8d"], 
                Entity["Concept", "AbutilonTheophrasti::qvn7p"], 
                Entity["Concept", "AbyssinianBanana::3y6f3"], 
                Entity["Concept", "AcaciaAuriculiformis::cyz5s"], 
                Entity["Concept", "AcaciaDealbata::73zc6"], 
                Entity["Concept", "AcaciaFarnesiana::458p4"], 
                Entity["Concept", "AcaciaMelanoxylon::y8vxf"], 
                Entity["Concept", "AcaciaPycnantha::r4vzy"], 
                Entity["Concept", "AcaciaXanthophloea::s8p96"], 
                Entity["Concept", "AcademicCostume::p832h"], 
                Entity["Concept", "AcanthocybiumSolandri::82x45"], 
                Entity["Concept", "AcanthusMollis::742p4"], 
                Entity["Concept", "AcceleratorPedal::c2h79"], 
                Entity["Concept", "AccipiterCooperii::45z67"], 
                Entity["Concept", "AccipiterGentilis::3g4m3"], 
                Entity["Concept", "AccipiterNisus::2w332"], 
                Entity["Concept", "Accordion::vx545"], 
                Entity["Concept", "AcerCampestre::3wqy7"], 
                Entity["Concept", "AcerCircinatum::dwx7x"], 
                Entity["Concept", "AcerJaponicum::24h8p"], 
                Entity["Concept", "AcerMacrophyllum::6vq83"], 
                Entity["Concept", "AcerNegundoCalifornicum::r6947"], 
                Entity["Concept", "AcerPlatanoides::cz4f2"], 
                Entity["Concept", "AcerPseudoplatanus::rc533"], 
                Entity["Concept", "AcerRubrum::zq9pv"], 
                Entity["Concept", "AcerSaccharinum::8tg99"], 
                Entity["Concept", "AcerSaccharum::p6272"], 
                Entity["Concept", "AcherontiaAtropos::363wr"], 
                Entity["Concept", "AchilleaMillefolium::v85t4"], 
                Entity["Concept", "Achimenes::66c96"], 
                Entity["Concept", "AcinonyxJubatus::3g535"], 
                Entity["Concept", "AcipenserHuso::8f6fg"], 
                Entity["Concept", "AconitumNapellus::gdjd9"], 
                Entity["Concept", "AcornBarnacle::xshw8"], 
                Entity["Concept", "Acorn::f62cf"], 
                Entity["Concept", "AcornSquash::666k4"], 
                Entity["Concept", "AcousticGuitar::wp46j"], 
                Entity["Concept", "AcridotheresTristis::57j92"], 
                Entity["Concept", "AcrocephalusSchoenobaenus::d46nv"], 
                Entity["Concept", "Acropolis::2bxcw"], 
                Entity["Concept", "ActaeaRubra::6v334"], 
                Entity["Concept", "ActiasLuna::nrv8g"], 
                Entity["Concept", "Actinia::xd3m2"], 
                Entity["Concept", "ActinidiaChinensis::8xs3f"], 
                Entity["Concept", "ActinomerisAlternifolia::vjmd9"], 
                Entity["Concept", "ActitisHypoleucos::x9q23"], 
                Entity["Concept", "ActitisMacularia::2byms"], 
                Entity["Concept", "AcuminateLeaf::4jc7x"], 
                Entity["Concept", "AdaliaBipunctata::s33k6"], 
                Entity["Concept", "AdamsNeedle::j2m7x"], 
                Entity["Concept", "AdansoniaDigitata::8p962"], 
                Entity["Concept", "Adaptor::329c4"], 
                Entity["Concept", "Addax::tr228"], 
                Entity["Concept", "AddersFern::4b6t5"], 
                Entity["Concept", "Adelie::k5595"], 
                Entity["Concept", "AdenantheraPavonina::vjd26"], 
                Entity["Concept", "AdeniumMultiflorum::dxmf4"], 
                Entity["Concept", "Adenoid::72djz"], 
                Entity["Concept", "AdiantumCapillus-veneris::v3qvt"], 
                Entity["Concept", "AdiantumPedatum::3cy7x"], 
                Entity["Concept", "AdjutantBird::2385x"], 
                Entity["Concept", "Admiral::j6fvp"], 
                Entity["Concept", "AedesAegypti::22f79"], 
                Entity["Concept", "AedesAlbopictus::645w3"], 
                Entity["Concept", "AegicerasMajus::k4phc"], 
                Entity["Concept", "AegilopsTriuncalis::8j547"], 
                Entity["Concept", "AegypiusMonachus::928n2"], 
                Entity["Concept", "AepycerosMelampus::q45p2"], 
                Entity["Concept", "AerialPhoto::9wkn2"], 
                Entity["Concept", "AerialTramway::65m89"], 
                Entity["Concept", "Aerides::ns9g6"], 
                Entity["Concept", "Aerogenerator::j5j56"], 
                Entity["Concept", "AetobatusNarinari::3yb87"], 
                Entity["Concept", "Affenpinscher::58wr6"], 
                Entity["Concept", "Afghan::8fnxm"], 
                Entity["Concept", "AfghanHound::6845m"], 
                Entity["Concept", "AfricanChameleon::x82fs"], 
                Entity["Concept", "AfricanClawedFrog::497m9"], 
                Entity["Concept", "AfricanCrocodile::zw55f"], 
                Entity["Concept", "AfricanDaisy::c744x"], 
                Entity["Concept", "AfricanElephant::634z7"], 
                Entity["Concept", "AfricanGray::84css"], 
                Entity["Concept", "AfricanHuntingDog::d9b86"], 
                Entity["Concept", "AfricanizedBee::sf5kh"], 
                Entity["Concept", "AfricanLily::96qmb"], 
                Entity["Concept", "AfricanMarigold::7v8h5"], 
                Entity["Concept", "AfricanMonitor::44h97"], 
                Entity["Concept", "AfricanViolet::r84d7"], 
                Entity["Concept", "Agama::22vdx"], 
                Entity["Concept", "AgastacheFoeniculum::rq857"], 
                Entity["Concept", "AgathisAustralis::888t3"], 
                Entity["Concept", "AgaveAmericana::r8gzy"], 
                Entity["Concept", "AgaveAtrovirens::2979g"], 
                Entity["Concept", "AgaveCantala::gbt8b"], 
                Entity["Concept", "AgelaiusPhoeniceus::62wmq"], 
                Entity["Concept", "AgeratumHoustonianum::957ng"], 
                Entity["Concept", "AgkistrodonContortrix::83n6g"], 
                Entity["Concept", "AgkistrodonPiscivorus::68k55"], 
                Entity["Concept", "AgrimoniaEupatoria::vw3jb"], 
                Entity["Concept", "AgriocharisOcellata::8974j"], 
                Entity["Concept", "AgrostemmaGithago::mkq93"], 
                Entity["Concept", "Agua::66y92"], 
                Entity["Concept", "Aguacate::874wr"], 
                Entity["Concept", "AgueWeed::3n727"], 
                Entity["Concept", "AilanthusAltissima::jg3fn"], 
                Entity["Concept", "AiluropodaMelanoleuca::xg799"], 
                Entity["Concept", "AilurusFulgens::m96y6"], 
                Entity["Concept", "AirCompressor::8kmj7"], 
                Entity["Concept", "AirConditioner::4842v"], 
                Entity["Concept", "AircraftCarrier::74d49"], 
                Entity["Concept", "AircraftEngine::3svnv"], 
                Entity["Concept", "Airdock::22k56"], 
                Entity["Concept", "Airedale::w6gf4"], 
                Entity["Concept", "AirplanePropeller::pk3dv"], 
                Entity["Concept", "AirportTerminal::dv5dp"], 
                Entity["Concept", "AixGalericulata::9527q"], 
                Entity["Concept", "Ai::z6968"], 
                Entity["Concept", "AjaiaAjaja::wtz9n"], 
                Entity["Concept", "AjugaGenevensis::35j66"], 
                Entity["Concept", "AjugaPyramidalis::yv32g"], 
                Entity["Concept", "AjugaReptans::y9zv3"], 
                Entity["Concept", "AlaskaFurSeal::5227v"], 
                Entity["Concept", "AlaskanBrownBear::49b26"], 
                Entity["Concept", "AlaskanMalamute::y6wqq"], 
                Entity["Concept", "AlaudaArvensis::38bs5"], 
                Entity["Concept", "AlbiziaJulibrissin::ysb84"], 
                Entity["Concept", "AlbiziaSaman::28c92"], 
                Entity["Concept", "AlbulaVulpes::85mbd"], 
                Entity["Concept", "AlcaTorda::x423g"], 
                Entity["Concept", "AlceaRosea::82d33"], 
                Entity["Concept", "AlcedoAtthis::92zy2"], 
                Entity["Concept", "AlcesAlces::h5543"], 
                Entity["Concept", "AlderFly::jsf58"], 
                Entity["Concept", "AlectorisRuffa::jd6hg"], 
                Entity["Concept", "AlecturaLathami::kqwv9"], 
                Entity["Concept", "Alehoof::3cn25"], 
                Entity["Concept", "Alfalfa::6fw4m"], 
                Entity["Concept", "Alkanet::gmd5z"], 
                Entity["Concept", "AllamandaCathartica::sfyx4"], 
                Entity["Concept", "All-daySucker::2tz2s"], 
                Entity["Concept", "AlleghanyPlum::7mfkm"], 
                Entity["Concept", "AlleghenyChinkapin::p5mbj"], 
                Entity["Concept", "AllenWrench::cdzf5"], 
                Entity["Concept", "AlliariaOfficinalis::rk2wp"], 
                Entity["Concept", "AlligatorClip::5gkpq"], 
                Entity["Concept", "AlligatorLizard::k6335"], 
                Entity["Concept", "AlligatorMississipiensis::s7582"], 
                Entity["Concept", "AlligatorSinensis::n53hb"], 
                Entity["Concept", "AlligatorSnapper::n74bb"], 
                Entity["Concept", "AlliumAscalonicum::m5rhr"], 
                Entity["Concept", "AlliumCernuum::ycy2v"], 
                Entity["Concept", "AlliumSchoenoprasum::78x9x"], 
                Entity["Concept", "AlliumTuberosum::h7h8g"], 
                Entity["Concept", "AlliumUrsinum::nf3xf"], 
                Entity["Concept", "Allmouth::h2psq"], 
                Entity["Concept", "All-terrainBike::7n976"], 
                Entity["Concept", "AlnusGlutinosa::4689g"], 
                Entity["Concept", "AlnusRhombifolia::2mbwg"], 
                Entity["Concept", "Alpenstock::9b5p5"], 
                Entity["Concept", "AlpineAsh::ymt7b"], 
                Entity["Concept", "AlpiniaGalanga::587p3"], 
                Entity["Concept", "AlpiniaSpeciosa::97wpn"], 
                Entity["Concept", "Alsatian::fh5zw"], 
                Entity["Concept", "AlstoniaScholaris::2b983"], 
                Entity["Concept", "Altarpiece::qqr25"], 
                Entity["Concept", "AltheaOfficinalis::92rgc"], 
                Entity["Concept", "AltocumulusClouds::756ys"], 
                Entity["Concept", "AltostratusClouds::9cct6"], 
                Entity["Concept", "AluminiumFoil::kf568"], 
                Entity["Concept", "Alyssum::7yyc5"], 
                Entity["Concept", "AmaranthusAlbus::xr28d"], 
                Entity["Concept", "AmaranthusHypochondriacus::9vkry"], 
                Entity["Concept", "Amazon::p9mwr"], 
                Entity["Concept", "Amberbell::smqr2"], 
                Entity["Concept", "Amberfish::dvy83"], 
                Entity["Concept", "AmblyrhynchusCristatus::885jt"], 
                Entity["Concept", "Ambo::585vd"], 
                Entity["Concept", "AmbrosiaPsilostachya::3wjms"], 
                Entity["Concept", "Ambulance::rgts3"], 
                Entity["Concept", "AmbystomaMaculatum::qnd2g"], 
                Entity["Concept", "AmbystomaMexicanum::k9j45"], 
                Entity["Concept", "AmbystomaTigrinum::vpc9p"], 
                Entity["Concept", "AmericanAntelope::mnsp5"], 
                Entity["Concept", "AmericanArborvitae::wj2dk"], 
                Entity["Concept", "AmericanBasswood::568cf"], 
                Entity["Concept", "AmericanBeech::3238n"], 
                Entity["Concept", "AmericanBison::68dvx"], 
                Entity["Concept", "AmericanBittern::r6scm"], 
                Entity["Concept", "AmericanChameleon::67k54"], 
                Entity["Concept", "AmericanChestnut::w7h35"], 
                Entity["Concept", "AmericanCockroach::wm66b"], 
                Entity["Concept", "AmericanCoot::c7452"], 
                Entity["Concept", "AmericanCopper::x7272"], 
                Entity["Concept", "AmericanCranberryBush::gv698"], 
                Entity["Concept", "AmericanCreeper::5vvm6"], 
                Entity["Concept", "AmericanCrow::bxn7d"], 
                Entity["Concept", "AmericanDogTick::vm2m6"], 
                Entity["Concept", "AmericanDogwood::6jtx3"], 
                Entity["Concept", "AmericanEagle::z2fqr"], 
                Entity["Concept", "AmericanEgret::43jz8"], 
                Entity["Concept", "AmericanElm::5y2b7"], 
                Entity["Concept", "AmericanGallinule::c8742"], 
                Entity["Concept", "AmericanGrayBirch::9m669"], 
                Entity["Concept", "AmericanHolly::5scr6"], 
                Entity["Concept", "AmericanKestrel::82hr9"], 
                Entity["Concept", "AmericanLarch::x472z"], 
                Entity["Concept", "AmericanLaurel::pjwr4"], 
                Entity["Concept", "AmericanLotus::85f57"], 
                Entity["Concept", "AmericanMerganser::4hkvk"], 
                Entity["Concept", "AmericanPennyroyal::4z3zh"], 
                Entity["Concept", "AmericanPitBullTerrier::kw55q"], 
                Entity["Concept", "AmericanPlane::87s54"], 
                Entity["Concept", "AmericanRedSquirrel::846xb"], 
                Entity["Concept", "AmericanRedstart::3bb6k"], 
                Entity["Concept", "AmericanRobin::wf28w"], 
                Entity["Concept", "AmericanSweetGum::8f7yg"], 
                Entity["Concept", "AmericanToad::xv8bt"], 
                Entity["Concept", "AmericanWhiteBirch::xq58n"], 
                Entity["Concept", "AmericanWhiteOak::nv864"], 
                Entity["Concept", "AmericanWhitePine::rcc27"], 
                Entity["Concept", "AmericanWidgeon::58xy9"], 
                Entity["Concept", "AmericanWistaria::ff444"], 
                Entity["Concept", "AmericanWoodcock::mbm6v"], 
                Entity["Concept", "AmiaCalva::262tw"], 
                Entity["Concept", "Ammeter::5mkwk"], 
                Entity["Concept", "AmmotragusLervia::h6b45"], 
                Entity["Concept", "Amniota::g962d"], 
                Entity["Concept", "AmorphaFruticosa::dqy3f"], 
                Entity["Concept", "Amorphophallus::rsf65"], 
                Entity["Concept", "AmphibiousAircraft::2pcpg"], 
                Entity["Concept", "AmphibiousVehicle::rr85n"], 
                Entity["Concept", "AmphiprionPercula::yzg99"], 
                Entity["Concept", "Amphora::tm522"], 
                Entity["Concept", "Ampoule::k4mq2"], 
                Entity["Concept", "AnacardiumOccidentale::kf925"], 
                Entity["Concept", "Anaconda::5k458"], 
                Entity["Concept", "AnagallisArvensis::zm8cw"], 
                Entity["Concept", "AnalogClock::3832f"], 
                Entity["Concept", "AnalogWatch::tzv3w"], 
                Entity["Concept", "AnalyticalBalance::2s8ys"], 
                Entity["Concept", "AnanasComosus::k4k95"], 
                Entity["Concept", "Ananas::m6nzv"], 
                Entity["Concept", "AnaphalisMargaritacea::7n59j"], 
                Entity["Concept", "AnasAcuta::24h83"], 
                Entity["Concept", "AnasaTristis::sp54v"], 
                Entity["Concept", "AnasClypeata::877d5"], 
                Entity["Concept", "AnasCrecca::b32sw"], 
                Entity["Concept", "AnasDiscors::442rs"], 
                Entity["Concept", "AnasPlatyrhynchos::pqj5k"], 
                Entity["Concept", "AnasQuerquedula::bdkn2"], 
                Entity["Concept", "AnasRubripes::x6444"], 
                Entity["Concept", "AncientPine::v26dg"], 
                Entity["Concept", "AndeanCondor::wgyy4"], 
                Entity["Concept", "AndiraInermis::fzy9s"], 
                Entity["Concept", "Andiron::659jh"], 
                Entity["Concept", "Andrena::99w94"], 
                Entity["Concept", "AndropogonFurcatus::dtb7z"], 
                Entity["Concept", "AndropogonScoparius::46vdr"], 
                Entity["Concept", "AnechoicChamber::7t8x3"], 
                Entity["Concept", "Anemometer::v39h8"], 
                Entity["Concept", "AnemoneCanadensis::gs5r5"], 
                Entity["Concept", "AnemonellaThalictroides::7f6j7"], 
                Entity["Concept", "AnemoneNemorosa::z8gkp"], 
                Entity["Concept", "AnemoneQuinquefolia::4479c"], 
                Entity["Concept", "AnemoneSylvestris::426c7"], 
                Entity["Concept", "Aneroid::442f3"], 
                Entity["Concept", "AnethumGraveolens::9f8z5"], 
                Entity["Concept", "Angelfish::9gq44"], 
                Entity["Concept", "AngelicaArchangelica::gjk57"], 
                Entity["Concept", "Angelica::j92q5"], 
                Entity["Concept", "AngelicaSylvestris::nbr76"], 
                Entity["Concept", "AngelShark::s4f4d"], 
                Entity["Concept", "Angel-wingBegonia::bw4hy"], 
                Entity["Concept", "Angiopteris::nj8nv"], 
                Entity["Concept", "Angleworm::qxp7y"], 
                Entity["Concept", "AngoraGoat::fnd84"], 
                Entity["Concept", "AngoraRabbit::v6627"], 
                Entity["Concept", "AnguillaSucklandii::m669m"], 
                Entity["Concept", "AnguisFragilis::8swd9"], 
                Entity["Concept", "AnhingaAnhinga::zf9ph"], 
                Entity["Concept", "AnigozanthusManglesii::643ys"], 
                Entity["Concept", "AnisotremusVirginicus::4924z"], 
                Entity["Concept", "AnkleBrace::tsvr6"], 
                Entity["Concept", "AnoplophoraGlabripennis::f286d"], 
                Entity["Concept", "AnserAnser::w8ynn"], 
                Entity["Concept", "AnserCygnoides::ctz8c"], 
                Entity["Concept", "AnsweringMachine::5xr2s"], 
                Entity["Concept", "Anteater::5krjh"], 
                Entity["Concept", "Anteater::8t864"], 
                Entity["Concept", "Antechamber::9375h"], 
                Entity["Concept", "AnthemisArvensis::7335m"], 
                Entity["Concept", "AnthemisCotula::v9bk7"], 
                Entity["Concept", "AnthemisNobilis::fjz7h"], 
                Entity["Concept", "AnthemisTinctoria::n5228"], 
                Entity["Concept", "AntheraeaPolyphemus::r22ss"], 
                Entity["Concept", "AnthriscusSylvestris::h53d6"], 
                Entity["Concept", "AnthuriumAndraeanum::wzm5k"], 
                Entity["Concept", "AnthusPratensis::484b3"], 
                Entity["Concept", "AnthyllisVulneraria::h87x5"], 
                Entity["Concept", "AntidorcasEuchore::scch6"], 
                Entity["Concept", "AntilopeCervicapra::4f79g"], 
                Entity["Concept", "Antiperspirant::f8568"], 
                Entity["Concept", "AntirrhinumMajus::3t825"], 
                Entity["Concept", "Anti-torqueRotor::5798j"], 
                Entity["Concept", "AntLion::963qn"], 
                Entity["Concept", "AntrozousPallidus::7cxsy"], 
                Entity["Concept", "Anvil::q9q72"], 
                Entity["Concept", "ApartmentBuilding::x94gv"], 
                Entity["Concept", "ApaturaIris::p296z"], 
                Entity["Concept", "Aperea::4hzj9"], 
                Entity["Concept", "AphrizaVirgata::75fd5"], 
                Entity["Concept", "AplysiaPunctata::x5rgz"], 
                Entity["Concept", "ApogonMaculatus::3vxmq"], 
                Entity["Concept", "Appenzeller::j96dj"], 
                Entity["Concept", "AppleMint::5h4y6"], 
                Entity["Concept", "AppleTurnover::9vdnn"], 
                Entity["Concept", "Apricot::p7qn3"], 
                Entity["Concept", "Apron::qr79c"], 
                Entity["Concept", "Apse::3qvqs"], 
                Entity["Concept", "AptenodytesForsteri::58mn3"], 
                Entity["Concept", "AptenodytesPatagonica::f85wf"], 
                Entity["Concept", "Apteryx::9jq79"], 
                Entity["Concept", "ApusApus::77dfp"], 
                Entity["Concept", "Aqua-Lung::r2673"], 
                Entity["Concept", "Aquarium::sz7z5"], 
                Entity["Concept", "Aqueduct::2d474"], 
                Entity["Concept", "AquilaRapax::5f749"], 
                Entity["Concept", "AquilegiaCaerulea::7yn44"], 
                Entity["Concept", "AquilegiaCanadensis::cpph4"], 
                Entity["Concept", "AquilegiaVulgaris::4r235"], 
                Entity["Concept", "ArabianCamel::98q62"], 
                Entity["Concept", "ArabianCoffee::s2k7p"], 
                Entity["Concept", "Aralia::6n927"], 
                Entity["Concept", "AramusGuarauna::qmjh7"], 
                Entity["Concept", "AramusPictus::964mw"], 
                Entity["Concept", "AraneaDiademata::4jvj8"], 
                Entity["Concept", "AraneusCavaticus::thm3g"], 
                Entity["Concept", "AraucariaAraucana::3g682"], 
                Entity["Concept", "AraucariaBidwillii::6xmc2"], 
                Entity["Concept", "Arbalest::y43pd"], 
                Entity["Concept", "Arboretum::ssfz3"], 
                Entity["Concept", "ArbutusUnedo::rz26d"], 
                Entity["Concept", "Arc-boutant::485fc"], 
                Entity["Concept", "Arch::46gv5"], 
                Entity["Concept", "ArchilochusColubris::rrgd8"], 
                Entity["Concept", "Architecture::8748k"], 
                Entity["Concept", "Archive::vmr27"], 
                Entity["Concept", "Arch::n7j5k"], 
                Entity["Concept", "ArchosargusProbatocephalus::t8r67"], 
                Entity["Concept", "Arctic::b27sp"], 
                Entity["Concept", "ArcticGroundSquirrel::p3s78"], 
                Entity["Concept", "ArcticPoppy::yn6m6"], 
                Entity["Concept", "ArcticSkua::5f657"], 
                Entity["Concept", "ArctictisBintourong::2c3dg"], 
                Entity["Concept", "ArcticWolf::4xr47"], 
                Entity["Concept", "ArctiumLappa::5bf6w"], 
                Entity["Concept", "ArctocephalusPhilippi::8cf6g"], 
                Entity["Concept", "ArdeaHerodius::7cpck"], 
                Entity["Concept", "ArdeaOccidentalis::548hy"], 
                Entity["Concept", "ArenariaGroenlandica::k6zk6"], 
                Entity["Concept", "ArenariaInterpres::3rbq4"], 
                Entity["Concept", "Arenaria-Melanocephala::3s2g6"], 
                Entity["Concept", "ArenaTheater::6tsfn"], 
                Entity["Concept", "ArengaPinnata::254c7"], 
                Entity["Concept", "ArethusaBulbosa::5rxmx"], 
                Entity["Concept", "ArgemoneMexicana::66p5p"], 
                Entity["Concept", "ArgiopeAurantia::633xv"], 
                Entity["Concept", "ArgonautaArgo::9bg47"], 
                Entity["Concept", "Argyle::4vtp6"], 
                Entity["Concept", "ArgyranthemumFrutescens::nk3rm"], 
                Entity["Concept", "ArgyrotaeniaCitrana::9x86j"], 
                Entity["Concept", "ArgyroxiphiumSandwicense::3c427"], 
                Entity["Concept", "ArilusCristatus::3nvr3"], 
                Entity["Concept", "ArisaemaAtrorubens::88jk7"], 
                Entity["Concept", "Arishth::2929z"], 
                Entity["Concept", "AristolochiaSerpentaria::537g9"], 
                Entity["Concept", "ArizonaCypress::gm343"], 
                Entity["Concept", "ArizonaElegans::s5b7p"], 
                Entity["Concept", "ArkansasKingbird::986bj"], 
                Entity["Concept", "ArkShell::t8782"], 
                Entity["Concept", "Armadillo::s9866"], 
                Entity["Concept", "Armguard::6c3y4"], 
                Entity["Concept", "Armoire::g6zc9"], 
                Entity["Concept", "ArmoredCar::9924f"], 
                Entity["Concept", "ArmoredCombatVehicle::353r5"], 
                Entity["Concept", "ArmoredPersonnelCarrier::sz5mm"], 
                Entity["Concept", "Arm::y6nb4"], 
                Entity["Concept", "ArmyWorm::z5d77"], 
                Entity["Concept", "ArnicaMontana::593qr"], 
                Entity["Concept", "Arnica::zv6p4"], 
                Entity["Concept", "ArollaPine::3xt4c"], 
                Entity["Concept", "ArrhenatherumElatius::x6223"], 
                Entity["Concept", "ArrivalGate::982r5"], 
                Entity["Concept", "ArrozConPollo::c7d58"], 
                Entity["Concept", "ArtemisiaCana::6brb3"], 
                Entity["Concept", "ArtemisiaVulgaris::45qms"], 
                Entity["Concept", "ArtGallery::rsz9r"], 
                Entity["Concept", "Arthrogram::5txyf"], 
                Entity["Concept", "ArtichokePlant::rmw6w"], 
                Entity["Concept", "ArticulatioCubiti::wmq7z"], 
                Entity["Concept", "ArticulatioGenus::bsf7d"], 
                Entity["Concept", "ArtificialHorizon::n2jpt"], 
                Entity["Concept", "ArtocarpusAltilis::4cjt8"], 
                Entity["Concept", "ArtocarpusHeterophyllus::9msf8"], 
                Entity["Concept", "Artwork::r5p3c"], 
                Entity["Concept", "ArumMaculatum::nqs2x"], 
                Entity["Concept", "ArvicolaAmphibius::m2756"], 
                Entity["Concept", "AsarumShuttleworthii::mnj24"], 
                Entity["Concept", "AsarumVirginicum::73f4v"], 
                Entity["Concept", "AscaphusTrui::qr2np"], 
                Entity["Concept", "AsclepiasIncarnata::4stqh"], 
                Entity["Concept", "AsclepiasSpeciosa::952r2"], 
                Entity["Concept", "AsclepiasTuberosa::nm653"], 
                Entity["Concept", "Ash-bin::6sd8p"], 
                Entity["Concept", "Ashtray::h9yk8"], 
                Entity["Concept", "AsianCrocodile::6gkmv"], 
                Entity["Concept", "AsiaticBlackBear::8m644"], 
                Entity["Concept", "AsiaticCockroach::t6693"], 
                Entity["Concept", "AsiminaTriloba::q3mvh"], 
                Entity["Concept", "AsioOtus::7f796"], 
                Entity["Concept", "AsparagusFern::2wf5f"], 
                Entity["Concept", "AsparagusOfficinales::wm8p2"], 
                Entity["Concept", "AsperulaOdorata::36c83"], 
                Entity["Concept", "Asphyxiator::6785n"], 
                Entity["Concept", "Aspidistra::hjc8q"], 
                Entity["Concept", "AspleniumAdiantum-nigrum::qzyz6"], 
                Entity["Concept", "AspleniumRhizophyllum::v2f75"], 
                Entity["Concept", "AspleniumScolopendrium::bh43t"], 
                Entity["Concept", "AspViper::m954p"], 
                Entity["Concept", "AssamRubber::nkq2n"], 
                Entity["Concept", "AssaultRifle::d2gst"], 
                Entity["Concept", "AssemblyLine::jk2m8"], 
                Entity["Concept", "AsterDumosus::dwb9g"], 
                Entity["Concept", "Asterism::6b59z"], 
                Entity["Concept", "AsterNovae-angliae::q4qrt"], 
                Entity["Concept", "AsterNovi-belgii::4m92c"], 
                Entity["Concept", "AsterTurbinellis::8f4r7"], 
                Entity["Concept", "AstilbeChinensisPumila::4zryw"], 
                Entity["Concept", "AstilbeJaponica::c4q4q"], 
                Entity["Concept", "AstrantiaMajor::59g99"], 
                Entity["Concept", "Astrolabe::qy8np"], 
                Entity["Concept", "AtelesGeoffroyi::8f944"], 
                Entity["Concept", "AtheneNoctua::x8368"], 
                Entity["Concept", "AthleticField::t9837"], 
                Entity["Concept", "AthleticSupporter::vhwr3"], 
                Entity["Concept", "AtlanticBonito::887f9"], 
                Entity["Concept", "AtlanticBottlenoseDolphin::nnx4p"], 
                Entity["Concept", "AtlanticHalibut::s7k74"], 
                Entity["Concept", "AtlanticManta::44vb6"], 
                Entity["Concept", "AtlanticPuffin::98ws7"], 
                Entity["Concept", "AtlanticRidley::62m5c"], 
                Entity["Concept", "AtlanticWhiteCedar::9y954"], 
                Entity["Concept", "AtlasCedar::p9r69"], 
                Entity["Concept", "AtlasMoth::25g9d"], 
                Entity["Concept", "AttackSubmarine::3rswy"], 
                Entity["Concept", "Attic::xfq86"], 
                Entity["Concept", "Auditorium::m9586"], 
                Entity["Concept", "AudubonsWarbler::4n8t9"], 
                Entity["Concept", "Auklet::88j2s"], 
                Entity["Concept", "AulostomusMaculatus::xpz65"], 
                Entity["Concept", "Auricle::2skh8"], 
                Entity["Concept", "Auriscope::2xz56"], 
                Entity["Concept", "AustralianPine::52n53"], 
                Entity["Concept", "AustralianPitcherPlant::qh4b4"], 
                Entity["Concept", "AustralianSeaLion::87p2r"], 
                Entity["Concept", "AustralianTerrier::q2h6g"], 
                Entity["Concept", "AustralianTurtledove::b5nth"], 
                Entity["Concept", "Autobus::v5t2j"], 
                Entity["Concept", "Autogiro::2d396"], 
                Entity["Concept", "Automat::82n8m"], 
                Entity["Concept", "AutomatedTeller::w8746"], 
                Entity["Concept", "AutomaticPistol::kq9qc"], 
                Entity["Concept", "AutomaticWasher::6d32z"], 
                Entity["Concept", "AutomerisIo::p9k29"], 
                Entity["Concept", "AutomobileEngine::jpgq6"], 
                Entity["Concept", "AutumnPumpkin::3768d"], 
                Entity["Concept", "AvenaSativa::3jjqv"], 
                Entity["Concept", "AverrhoaCarambola::n8cd6"], 
                Entity["Concept", "AvicenniaMarina::9b23m"], 
                Entity["Concept", "AvicenniaOfficinalis::377q7"], 
                Entity["Concept", "Avocet::g48jy"], 
                Entity["Concept", "Awning::2x69m"], 
                Entity["Concept", "AwningDeck::8rhdm"], 
                Entity["Concept", "AxeHead::z2822"], 
                Entity["Concept", "Ax::hjh5w"], 
                Entity["Concept", "Axle::397yk"], 
                Entity["Concept", "Axseed::qhx87"], 
                Entity["Concept", "AythyaAffinis::m2brh"], 
                Entity["Concept", "AythyaAmericana::p32f9"], 
                Entity["Concept", "AythyaFerina::p2rg3"], 
                Entity["Concept", "AythyaMarila::ht2qn"], 
                Entity["Concept", "AythyaValisineria::2537r"], 
                Entity["Concept", "Azalea::gtf4s"], 
                Entity["Concept", "Azedarach::8xrm6"], 
                Entity["Concept", "Babbler::3f37s"], 
                Entity["Concept", "Babies-breath::6mw26"], 
                Entity["Concept", "BabiesSlippers::n4839"], 
                Entity["Concept", "Baby::3mrdc"], 
                Entity["Concept", "BabyBlue-eyes::7572z"], 
                Entity["Concept", "BabyGrand::2sh57"], 
                Entity["Concept", "BabylonianWeepingWillow::b56t4"], 
                Entity["Concept", "BabyShoe::dn5sd"], 
                Entity["Concept", "Baby-walker::k6qtt"], 
                Entity["Concept", "BackBrace::m3gm9"], 
                Entity["Concept", "BackgammonBoard::k7yg6"], 
                Entity["Concept", "Backhoe::g2d26"], 
                Entity["Concept", "Backseat::q536j"], 
                Entity["Concept", "BaconAndEggs::644m8"], 
                Entity["Concept", "Bacon-lettuce-tomatoSandwich::k7pbz"], 
                Entity["Concept", "Bacteria::3z543"], 
                Entity["Concept", "BactrianCamel::v5wzd"], 
                Entity["Concept", "Badlands::pmyj4"], 
                Entity["Concept", "BadmintonRacket::h89z7"], 
                Entity["Concept", "BaggageClaim::h8632"], 
                Entity["Concept", "Baguet::3ch28"], 
                Entity["Concept", "BakedAlaska::4yh84"], 
                Entity["Concept", "BakingTray::r396g"], 
                Entity["Concept", "Balaclava::xqj86"], 
                Entity["Concept", "BalaenicepsRex::ymcp8"], 
                Entity["Concept", "BalaenopteraAcutorostrata::3sgfm"], 
                Entity["Concept", "BalaenopteraMusculus::tgr6f"], 
                Entity["Concept", "BalaenopteraPhysalus::47mv6"], 
                Entity["Concept", "BalanceBeam::6nyqs"], 
                Entity["Concept", "BalataTree::8h462"], 
                Entity["Concept", "Balcony::83c78"], 
                Entity["Concept", "Balcony::j257v"], 
                Entity["Concept", "Bald-facedHornet::7nmym"], 
                Entity["Concept", "Balibago::4j747"], 
                Entity["Concept", "BalistesVetula::t7fb5"], 
                Entity["Concept", "Balk::2nmz4"], 
                Entity["Concept", "BalletSkirt::gbrw7"], 
                Entity["Concept", "BallGown::n6thb"], 
                Entity["Concept", "Balloonfish::2c785"], 
                Entity["Concept", "BalloonFlower::3r2s8"], 
                Entity["Concept", "BalloonVine::z5224"], 
                Entity["Concept", "Ballpark::g5x44"], 
                Entity["Concept", "Ballpen::k35fx"], 
                Entity["Concept", "Ballroom::kjwj8"], 
                Entity["Concept", "BalsamApple::rzxv9"], 
                Entity["Concept", "BalsamPear::gvnp4"], 
                Entity["Concept", "BalsamPoplar::m69f2"], 
                Entity["Concept", "Balsamroot::8rq7g"], 
                Entity["Concept", "BaltimoreBird::7q394"], 
                Entity["Concept", "Baluster::245tk"], 
                Entity["Concept", "Balusters::nt6x4"], 
                Entity["Concept", "Bamboo::78j53"], 
                Entity["Concept", "Banana::f6z73"], 
                Entity["Concept", "BananaSplit::9nbrq"], 
                Entity["Concept", "Bandana::z6v48"], 
                Entity["Concept", "BandedAnteater::926y5"], 
                Entity["Concept", "BandedGecko::38zhr"], 
                Entity["Concept", "BandedPurple::75g43"], 
                Entity["Concept", "BandedWaterSnake::fcm3k"], 
                Entity["Concept", "BandSaw::873wp"], 
                Entity["Concept", "Bandtail::964s4"], 
                Entity["Concept", "Bangle::22nf3"], 
                Entity["Concept", "BanianTree::34q55"], 
                Entity["Concept", "Banjo::fs3f9"], 
                Entity["Concept", "BankBill::htnm3"], 
                Entity["Concept", "BankMartin::4267x"], 
                Entity["Concept", "BankVault::gd39s"], 
                Entity["Concept", "Bantam::7z27m"], 
                Entity["Concept", "BaptismalFont::m7729"], 
                Entity["Concept", "Bar::35r9j"], 
                Entity["Concept", "BarbareaVulgaris::x8fdj"], 
                Entity["Concept", "BarbaryApe::2965z"], 
                Entity["Concept", "BarbecuedSpareribs::725n3"], 
                Entity["Concept", "BarbecuedWing::kq2z4"], 
                Entity["Concept", "Barbecue::h56st"], 
                Entity["Concept", "Barbecue::jq488"], 
                Entity["Concept", "BarbecueSauce::g7rzs"], 
                Entity["Concept", "Barbell::295kg"], 
                Entity["Concept", "BarberChair::mybp2"], 
                Entity["Concept", "BarbertonDaisy::r3793"], 
                Entity["Concept", "Barbet::gp324"], 
                Entity["Concept", "BarChart::44c43"], 
                Entity["Concept", "BarCode::5bh6b"], 
                Entity["Concept", "BaritoneHorn::887r9"], 
                Entity["Concept", "BarkingDeer::8n8fz"], 
                Entity["Concept", "BarleyGrass::h8n4t"], 
                Entity["Concept", "Barn::6xw3q"], 
                Entity["Concept", "BarnabysThistle::y3325"], 
                Entity["Concept", "BarnacleGoose::5vb97"], 
                Entity["Concept", "BarnDoor::96gzk"], 
                Entity["Concept", "BarnOwl::gm4jf"], 
                Entity["Concept", "BarnSwallow::7k4v5"], 
                Entity["Concept", "Barque::g982v"], 
                Entity["Concept", "Barracouta::dzc32"], 
                Entity["Concept", "BarredOwl::779y6"], 
                Entity["Concept", "BarrelCactus::55s5r"], 
                Entity["Concept", "BarrelVault::v8d65"], 
                Entity["Concept", "Barrette::pz59n"], 
                Entity["Concept", "BarrowsGoldeneye::p7kt4"], 
                Entity["Concept", "BarSoap::42v57"], 
                Entity["Concept", "BartramiaLongicauda::4q46t"], 
                Entity["Concept", "Baseball::9f8qz"], 
                Entity["Concept", "BaseballBat::2n8qr"], 
                Entity["Concept", "BaseballCap::pmh98"], 
                Entity["Concept", "BaseballGlove::6c78v"], 
                Entity["Concept", "Basement::947k9"], 
                Entity["Concept", "Basenji::k9yy2"], 
                Entity["Concept", "Basil::b57p5"], 
                Entity["Concept", "Basilisk::4z438"], 
                Entity["Concept", "Basinet::gqth8"], 
                Entity["Concept", "BasketballBackboard::rssb7"], 
                Entity["Concept", "BasketballHoop::c7dns"], 
                Entity["Concept", "Basketball::jq262"], 
                Entity["Concept", "BasketOak::y2t59"], 
                Entity["Concept", "BasketWillow::jf7zp"], 
                Entity["Concept", "BaskingShark::684t7"], 
                Entity["Concept", "BassariscusAstutus::p275y"], 
                Entity["Concept", "BassClarinet::4342c"], 
                Entity["Concept", "BassDrum::qhs4v"], 
                Entity["Concept", "Basset::n769x"], 
                Entity["Concept", "BassFiddle::dqh28"], 
                Entity["Concept", "BassGuitar::9qns7"], 
                Entity["Concept", "Bassinet::yn2td"], 
                Entity["Concept", "Bastion::n6jhh"], 
                Entity["Concept", "BathingCap::tsd8r"], 
                Entity["Concept", "BathingTub::729f8"], 
                Entity["Concept", "Bath::xtj9q"], 
                Entity["Concept", "BattersBox::n7h73"], 
                Entity["Concept", "BatteryCharger::g32t7"], 
                Entity["Concept", "BattingCage::n64n4"], 
                Entity["Concept", "BattingHelmet::7k2gg"], 
                Entity["Concept", "BattleCruiser::4mpcq"], 
                Entity["Concept", "BattleDress::748k5"], 
                Entity["Concept", "Battlement::5h3tz"], 
                Entity["Concept", "BauhiniaVariegata::fd586"], 
                Entity["Concept", "Baya::kd826"], 
                Entity["Concept", "BayLaurel::85yy7"], 
                Entity["Concept", "BayLeaf::865h6"], 
                Entity["Concept", "BayLynx::7fk4n"], 
                Entity["Concept", "Bay-rumTree::c8cdd"], 
                Entity["Concept", "BayWillow::xnb68"], 
                Entity["Concept", "Bazaar::3p4tn"], 
                Entity["Concept", "Bazooka::62c79"], 
                Entity["Concept", "BeachBuggy::39g96"], 
                Entity["Concept", "BeachChair::3hqpw"], 
                Entity["Concept", "Beach::gn7tk"], 
                Entity["Concept", "BeachPea::3j589"], 
                Entity["Concept", "BeachStrawberry::7mgqz"], 
                Entity["Concept", "BeachWaggon::c945g"], 
                Entity["Concept", "BeadedLizard::j45r4"], 
                Entity["Concept", "BeadFern::z57r8"], 
                Entity["Concept", "Beagle::2bdvt"], 
                Entity["Concept", "Beaker::btv5s"], 
                Entity["Concept", "BeamScale::ff3sq"], 
                Entity["Concept", "Beanie::b5ht9"], 
                Entity["Concept", "BeardedVulture::4539z"], 
                Entity["Concept", "Bearwood::6393w"], 
                Entity["Concept", "Bechamel::3788k"], 
                Entity["Concept", "BechtelCrab::84h95"], 
                Entity["Concept", "BedBug::z9265"], 
                Entity["Concept", "Bedchamber::v7pzd"], 
                Entity["Concept", "BeddingGeranium::d539m"], 
                Entity["Concept", "BedlingtonTerrier::98h82"], 
                Entity["Concept", "Bedpan::g93bf"], 
                Entity["Concept", "BeeEater::376h3"], 
                Entity["Concept", "BeeFly::tcv7z"], 
                Entity["Concept", "BeefsteakGeranium::rz57v"], 
                Entity["Concept", "BeefWellington::6fy2n"], 
                Entity["Concept", "BeeKiller::m5d2m"], 
                Entity["Concept", "BeeOrchid::3zdtx"], 
                Entity["Concept", "BeerBarrel::qwq72"], 
                Entity["Concept", "BeerCan::y99p8"], 
                Entity["Concept", "BeerGlass::r6xp2"], 
                Entity["Concept", "BeerMat::nmyt6"], 
                Entity["Concept", "BegoniaSemperflorens::6p9m6"], 
                Entity["Concept", "BelamcandaChinensis::s288q"], 
                Entity["Concept", "BelleDeNuit::dj4mt"], 
                Entity["Concept", "BellGlass::95qp5"], 
                Entity["Concept", "BellisPerennis::n7494"], 
                Entity["Concept", "BellMagpie::kpp8d"], 
                Entity["Concept", "BeltBuckle::49v92"], 
                Entity["Concept", "BeltedKingfisher::77b5w"], 
                Entity["Concept", "BerberisVulgaris::z4bnn"], 
                Entity["Concept", "Beret::w5573"], 
                Entity["Concept", "Berg::7894d"], 
                Entity["Concept", "Bergamot::sgz25"], 
                Entity["Concept", "Bergenia::ppf7r"], 
                Entity["Concept", "BermudaButtercup::4f62h"], 
                Entity["Concept", "BermudaLily::5y748"], 
                Entity["Concept", "BerneseMountainDog::y32v5"], 
                Entity["Concept", "BetaVulgarisRubra::9628z"], 
                Entity["Concept", "BetulaAlleghaniensis::947kz"], 
                Entity["Concept", "BetulaFontinalis::t5y9c"], 
                Entity["Concept", "BetulaNigra::gs843"], 
                Entity["Concept", "BetulaPendula::9pb9j"], 
                Entity["Concept", "BetulaPubescens::fw752"], 
                Entity["Concept", "BewicksSwan::24k48"], 
                Entity["Concept", "BibosGaurus::qp482"], 
                Entity["Concept", "BicycleChain::g4pkq"], 
                Entity["Concept", "BicyclePump::42s52"], 
                Entity["Concept", "BicycleRack::x55p5"], 
                Entity["Concept", "BicycleSeat::43yz8"], 
                Entity["Concept", "BicycleWheel::6xj3c"], 
                Entity["Concept", "BidensCoronata::9875k"], 
                Entity["Concept", "Bigarade::744q4"], 
                Entity["Concept", "Bighorn::773z4"], 
                Entity["Concept", "Bikini::m86f8"], 
                Entity["Concept", "Billboard::54n96"], 
                Entity["Concept", "Billfold::z7845"], 
                Entity["Concept", "BilliardTable::9c56d"], 
                Entity["Concept", "BingCherry::c82w2"], 
                Entity["Concept", "Binoculars::yp4ss"], 
                Entity["Concept", "Biplane::33z4g"], 
                Entity["Concept", "BirchBark::vpy97"], 
                Entity["Concept", "Birdbath::823y9"], 
                Entity["Concept", "Birdcage::jj9yq"], 
                Entity["Concept", "BirdPepper::4g59c"], 
                Entity["Concept", "BirdsEye::w6tft"], 
                Entity["Concept", "Birds-footViolet::qq9y6"], 
                Entity["Concept", "BirdVetch::drp98"], 
                Entity["Concept", "BisonBonasus::f3q36"], 
                Entity["Concept", "BitisArietans::tg3cx"], 
                Entity["Concept", "BitisGabonica::5cznw"], 
                Entity["Concept", "BitterOrange::gwkh7"], 
                Entity["Concept", "Bitterroot::hpx5r"], 
                Entity["Concept", "Black-backedGull::9nrzk"], 
                Entity["Concept", "Blackberry::p4kdk"], 
                Entity["Concept", "Blackboard::4b535"], 
                Entity["Concept", "Blackburn::9858t"], 
                Entity["Concept", "Black-cappedChickadee::43cc8"], 
                Entity["Concept", "BlackcapRaspberry::8bt6n"], 
                Entity["Concept", "BlackCherryTree::nj44p"], 
                Entity["Concept", "Black-crownedNightHeron::29x3b"], 
                Entity["Concept", "Black-eyedSusanVine::86v4z"], 
                Entity["Concept", "BlackFly::3s98j"], 
                Entity["Concept", "Black-footedFerret::r6gqg"], 
                Entity["Concept", "BlackGuillemot::d3336"], 
                Entity["Concept", "BlackHemlock::7v4wr"], 
                Entity["Concept", "BlackHenbane::pygm6"], 
                Entity["Concept", "BlackKite::zfcf6"], 
                Entity["Concept", "BlackMallee::8sn2z"], 
                Entity["Concept", "BlackMarlin::845f2"], 
                Entity["Concept", "BlackMedick::n25zw"], 
                Entity["Concept", "Black-neckedCobra::h8nhp"], 
                Entity["Concept", "Black-neckedGrebe::9j9p5"], 
                Entity["Concept", "Black-neckedStilt::6kcyb"], 
                Entity["Concept", "Black-neckedStork::p5232"], 
                Entity["Concept", "BlackOak::q8n4d"], 
                Entity["Concept", "BlackOlive::8r2d2"], 
                Entity["Concept", "BlackPepper::pk4tm"], 
                Entity["Concept", "Blackpoll::kg2y9"], 
                Entity["Concept", "BlackRat::3m762"], 
                Entity["Concept", "BlackRatSnake::j53yn"], 
                Entity["Concept", "BlackRhinoceros::5w25r"], 
                Entity["Concept", "BlackSpruce::wc86j"], 
                Entity["Concept", "BlackSquirrel::qmv96"], 
                Entity["Concept", "BlackStork::5v349"], 
                Entity["Concept", "BlackSwan::6ft7p"], 
                Entity["Concept", "Blacktail::2kk7g"], 
                Entity["Concept", "BlacktailPrairieDog::923m7"], 
                Entity["Concept", "BlacktipShark::dhh38"], 
                Entity["Concept", "BlackWalnutTree::zp675"], 
                Entity["Concept", "BlackWidow::4682d"], 
                Entity["Concept", "BlackWillow::3sxd4"], 
                Entity["Concept", "Black-wingedStilt::23r8r"], 
                Entity["Concept", "BlattellaGermanica::f6z3c"], 
                Entity["Concept", "BlechnumSpicant::6522v"], 
                Entity["Concept", "Blender::3sh4p"], 
                Entity["Concept", "BlenheimSpaniel::cd3nm"], 
                Entity["Concept", "Bletia::3ncp2"], 
                Entity["Concept", "BletiaStriata::gm9sf"], 
                Entity["Concept", "Blimp::w7d5x"], 
                Entity["Concept", "Blindfold::hj9h4"], 
                Entity["Concept", "BlockPlane::js7mh"], 
                Entity["Concept", "Bloodhound::pc454"], 
                Entity["Concept", "Blood-twig::43mxc"], 
                Entity["Concept", "BlowDrier::t4dpz"], 
                Entity["Concept", "Blucher::2486k"], 
                Entity["Concept", "BlueAsh::ym26k"], 
                Entity["Concept", "BluebackSalmon::r7jd3"], 
                Entity["Concept", "Blue-belly::838vp"], 
                Entity["Concept", "Blueberry::3zbfr"], 
                Entity["Concept", "Bluebird::4k266"], 
                Entity["Concept", "BlueCat::6j687"], 
                Entity["Concept", "BlueDaisy::z5gtt"], 
                Entity["Concept", "Blue-eyedGrass::bcx97"], 
                Entity["Concept", "Blue::g6685"], 
                Entity["Concept", "Bluegill::38s78"], 
                Entity["Concept", "BlueGum::yr7pn"], 
                Entity["Concept", "Blue-headedVireo::wrvt3"], 
                Entity["Concept", "BlueJack::8728b"], 
                Entity["Concept", "BluejackOak::5vdf6"], 
                Entity["Concept", "BlueJay::b863w"], 
                Entity["Concept", "BlueMarlin::3899r"], 
                Entity["Concept", "BlueOrchid::c8sgf"], 
                Entity["Concept", "BluePeafowl::8h39h"], 
                Entity["Concept", "BluePea::tyng6"], 
                Entity["Concept", "BluePoppy::r9qm8"], 
                Entity["Concept", "BlueShark::rzgk9"], 
                Entity["Concept", "BlueThistle::f5t65"], 
                Entity["Concept", "Bluethroat::yvgw3"], 
                Entity["Concept", "BlueTit::fwp5g"], 
                Entity["Concept", "BoaConstrictor::qq73z"], 
                Entity["Concept", "BoarThistle::fs46t"], 
                Entity["Concept", "Boatbill::h464x"], 
                Entity["Concept", "BoatDeck::r56tw"], 
                Entity["Concept", "BoatswainBird::68y74"], 
                Entity["Concept", "BobbyPin::2567h"], 
                Entity["Concept", "Bob::n2762"], 
                Entity["Concept", "Bobolink::tqs3j"], 
                Entity["Concept", "Bobsled::38s7j"], 
                Entity["Concept", "BocceBall::y7249"], 
                Entity["Concept", "BoehmeriaNivea::jw26c"], 
                Entity["Concept", "BoforsGun::zyd59"], 
                Entity["Concept", "Bogbean::389dp"], 
                Entity["Concept", "BogCandles::f3t2d"], 
                Entity["Concept", "BogRhubarb::bkm4n"], 
                Entity["Concept", "BogStar::xj5qm"], 
                Entity["Concept", "BohemianWaxwing::289t5"], 
                Entity["Concept", "Boiler::63p28"], 
                Entity["Concept", "BolaTie::g65x6"], 
                Entity["Concept", "Bolero::69r43"], 
                Entity["Concept", "BoltCutter::q9tfy"], 
                Entity["Concept", "BombaxCeiba::7j634"], 
                Entity["Concept", "BombayCeiba::dxmw4"], 
                Entity["Concept", "BomberJacket::j3q4v"], 
                Entity["Concept", "BombinaBombina::95k62"], 
                Entity["Concept", "BombycillaCedrorun::msgb4"], 
                Entity["Concept", "BonasaUmbellus::bpbr3"], 
                Entity["Concept", "BoneMarrow::fh99r"], 
                Entity["Concept", "Bones::4n66z"], 
                Entity["Concept", "BongoDrum::w3t7w"], 
                Entity["Concept", "Bonnethead::w3y42"], 
                Entity["Concept", "Bonobo::54f68"], 
                Entity["Concept", "BoobTube::b9272"], 
                Entity["Concept", "Booby::4z483"], 
                Entity["Concept", "BoocercusEurycerus::f4827"], 
                Entity["Concept", "Bookcase::6t56v"], 
                Entity["Concept", "Bookend::349j8"], 
                Entity["Concept", "BookJacket::sy4d3"], 
                Entity["Concept", "Bookmark::5hh5k"], 
                Entity["Concept", "Book::mf665"], 
                Entity["Concept", "Bookshelf::zq9fw"], 
                Entity["Concept", "BoomBox::vw8bx"], 
                Entity["Concept", "Bootee::2b576"], 
                Entity["Concept", "Booyong::4gntw"], 
                Entity["Concept", "Borage::973df"], 
                Entity["Concept", "BoragoOfficinalis::564j6"], 
                Entity["Concept", "BorassusFlabellifer::86fcb"], 
                Entity["Concept", "BorderCollie::463w2"], 
                Entity["Concept", "BorderTerrier::gh5h6"], 
                Entity["Concept", "Borsch::f9945"], 
                Entity["Concept", "Borzoi::v43t8"], 
                Entity["Concept", "BosGrunniens::srgv4"], 
                Entity["Concept", "BostonBull::6662j"], 
                Entity["Concept", "BostonFern::423t8"], 
                Entity["Concept", "BostonIvy::m933m"], 
                Entity["Concept", "BotaurusStellaris::r6vb9"], 
                Entity["Concept", "BothropsAtrops::2x3rf"], 
                Entity["Concept", "BoTree::77m47"], 
                Entity["Concept", "Bottlecap::mgg5c"], 
                Entity["Concept", "BottleCork::z5hjf"], 
                Entity["Concept", "BottledWater::454g5"], 
                Entity["Concept", "BottleGentian::9wmj7"], 
                Entity["Concept", "BottleGourd::5jb5k"], 
                Entity["Concept", "Bottle-grass::nrr2w"], 
                Entity["Concept", "Bottle-nosedWhale::pt7m3"], 
                Entity["Concept", "BottleScrew::djq6x"], 
                Entity["Concept", "BouncingBess::x8h9c"], 
                Entity["Concept", "BouvierDesFlandres::h7txf"], 
                Entity["Concept", "BowieKnife::jz2b2"], 
                Entity["Concept", "BowlerHat::696ct"], 
                Entity["Concept", "BowlingAlley::sg32k"], 
                Entity["Concept", "BowlingBall::fy69r"], 
                Entity["Concept", "BowlingShoe::3tn86"], 
                Entity["Concept", "Bowsprit::qtr3f"], 
                Entity["Concept", "BowWindow::52m3k"], 
                Entity["Concept", "BoxCamera::57hd8"], 
                Entity["Concept", "BoxEndWrench::74q93"], 
                Entity["Concept", "Boxer::3966f"], 
                Entity["Concept", "Boxers::45t28"], 
                Entity["Concept", "BoxingGlove::ck37g"], 
                Entity["Concept", "BoxingRing::5tw2s"], 
                Entity["Concept", "BoxWhiteOak::43vy2"], 
                Entity["Concept", "Boysenberry::866z8"], 
                Entity["Concept", "Braces::5qx97"], 
                Entity["Concept", "BrachychitonAcerifolius::5599d"], 
                Entity["Concept", "BrachychitonAustralis::vspg5"], 
                Entity["Concept", "BrachychitonPopulneus::7r9rg"], 
                Entity["Concept", "BrachycomeIberidifolia::565y3"], 
                Entity["Concept", "Brachyuran::fm8q7"], 
                Entity["Concept", "BrainCoral::v7844"], 
                Entity["Concept", "BrakeDisk::6yptr"], 
                Entity["Concept", "Brambling::47bpt"], 
                Entity["Concept", "BrandyGlass::p8dwb"], 
                Entity["Concept", "Brandy::jq7gy"], 
                Entity["Concept", "BranMuffin::k3krq"], 
                Entity["Concept", "BrantaBernicla::qn6nc"], 
                Entity["Concept", "BrantaCanadensis::yc965"], 
                Entity["Concept", "Brassavola::cmn5x"], 
                Entity["Concept", "BrassiaLawrenceana::vc2q9"], 
                Entity["Concept", "BrassiaVerrucosa::2c225"], 
                Entity["Concept", "BrassicaKaber::z3rcc"], 
                Entity["Concept", "BrassicaNapus::3c2dt"], 
                Entity["Concept", "BrassicaOleraceaBotrytis::m3yj2"], 
                Entity["Concept", "BrassicaOleraceaGemmifera::d5rqx"], 
                Entity["Concept", "BrassicaOleraceaItalica::56n93"], 
                Entity["Concept", "BrassicaRapaChinensis::t3fw4"], 
                Entity["Concept", "BrassicaRapa::p2qbx"], 
                Entity["Concept", "BrassKnuckles::bc3wj"], 
                Entity["Concept", "BrazilianRosewood::rkbc8"], 
                Entity["Concept", "Breadbasket::h2h29"], 
                Entity["Concept", "Bread-bin::p5jwy"], 
                Entity["Concept", "BreadDough::9zf37"], 
                Entity["Concept", "Breadfruit::cm6jy"], 
                Entity["Concept", "Breathalyser::7jsrg"], 
                Entity["Concept", "Bren::47r93"], 
                Entity["Concept", "BrewersMountainHeather::6x296"], 
                Entity["Concept", "Brewery::hhm7q"], 
                Entity["Concept", "Briard::dtm5k"], 
                Entity["Concept", "BricksAndMortar::b2qvp"], 
                Entity["Concept", "BridalGown::662x3"], 
                Entity["Concept", "Bridge::76h97"], 
                Entity["Concept", "Brig::b6hrc"], 
                Entity["Concept", "Brioche::x7xd6"], 
                Entity["Concept", "BristleBrush::b6gs7"], 
                Entity["Concept", "BristleconePine::g5z8x"], 
                Entity["Concept", "BristlyOxtongue::ww993"], 
                Entity["Concept", "BrittanySpaniel::435gz"], 
                Entity["Concept", "BrittleBladderFern::x42bt"], 
                Entity["Concept", "BrittleBush::544m2"], 
                Entity["Concept", "Brittle-star::ydp77"], 
                Entity["Concept", "BroadBean::955b8"], 
                Entity["Concept", "Broadbill::2kg82"], 
                Entity["Concept", "BromptonStock::49cjg"], 
                Entity["Concept", "Brook::z4949"], 
                Entity["Concept", "Broom::hgy49"], 
                Entity["Concept", "BroomPalm::6m525"], 
                Entity["Concept", "BrosmeBrosme::sc4qg"], 
                Entity["Concept", "BroussonetiaPapyrifera::7443m"], 
                Entity["Concept", "Browallia::56q39"], 
                Entity["Concept", "BrownAlgae::56b53"], 
                Entity["Concept", "BrownBat::739v4"], 
                Entity["Concept", "BrownSnail::t5tsj"], 
                Entity["Concept", "BrownSwiss::26cr8"], 
                Entity["Concept", "BrownThrasher::h6nxc"], 
                Entity["Concept", "BrugmansiaArborea::8fqzs"], 
                Entity["Concept", "BrugmansiaSuaveolens::7k3vx"], 
                Entity["Concept", "BrusselsBiscuit::7jzvh"], 
                Entity["Concept", "BuboVirginianus::br8w5"], 
                Entity["Concept", "BubulcusIbis::4mj5p"], 
                Entity["Concept", "BucephelaAlbeola::vn2cw"], 
                Entity["Concept", "BucketSeat::4y2tt"], 
                Entity["Concept", "Buckskin::899xy"], 
                Entity["Concept", "BuckthornBerry::9734v"], 
                Entity["Concept", "Buddleia::2hhsc"], 
                Entity["Concept", "Budgereegah::bx5pf"], 
                Entity["Concept", "BudorcasTaxicolor::zh22d"], 
                Entity["Concept", "BuffaloGourd::73t83"], 
                Entity["Concept", "BuffaloWing::d8r27"], 
                Entity["Concept", "BuffetCar::4gb7m"], 
                Entity["Concept", "BufoBoreas::939f7"], 
                Entity["Concept", "BufoBufo::g49f9"], 
                Entity["Concept", "BufoCalamita::ykdk3"], 
                Entity["Concept", "Bufo::n2778"], 
                Entity["Concept", "BufoSpeciosus::gp55b"], 
                Entity["Concept", "BufoViridis::zs7g4"], 
                Entity["Concept", "Bug::572w9"], 
                Entity["Concept", "Buggy::x3gz4"], 
                Entity["Concept", "Bugle::2397d"], 
                Entity["Concept", "Built-inBed::ch624"], 
                Entity["Concept", "Bulbul::4x6vd"], 
                Entity["Concept", "BullBay::p5456"], 
                Entity["Concept", "BulletTrain::4dfr5"], 
                Entity["Concept", "Bullfinch::372cj"], 
                Entity["Concept", "Bullfrog::r9cvc"], 
                Entity["Concept", "Bullhorn::786cg"], 
                Entity["Concept", "BullMastiff::6p365"], 
                Entity["Concept", "BullocksOriole::7x8yq"], 
                Entity["Concept", "BullPine::x3mrr"], 
                Entity["Concept", "Bullring::xb6sp"], 
                Entity["Concept", "BullShark::3p769"], 
                Entity["Concept", "Bumblebee::939y7"], 
                Entity["Concept", "BumeliaLycioides::74c47"], 
                Entity["Concept", "BumperCar::k9984"], 
                Entity["Concept", "Bunchberry::36dm8"], 
                Entity["Concept", "BunkBed::nyhz8"], 
                Entity["Concept", "Bunker::td9km"], 
                Entity["Concept", "Bunting::3p293"], 
                Entity["Concept", "Burbot::fwtr6"], 
                Entity["Concept", "BurchellsZebra::bxp9w"], 
                Entity["Concept", "BurhinusOedicnemus::2872w"], 
                Entity["Concept", "BurialChamber::8xv8q"], 
                Entity["Concept", "BurialGround::zv438"], 
                Entity["Concept", "Burka::x4wwc"], 
                Entity["Concept", "BurlapBag::6n6tr"], 
                Entity["Concept", "BurOak::m93q3"], 
                Entity["Concept", "BurpGun::r8stj"], 
                Entity["Concept", "BurseraMicrophylla::f8jbw"], 
                Entity["Concept", "BurseraSimaruba::w2b5b"], 
                Entity["Concept", "Busby::448c3"], 
                Entity["Concept", "BushBaby::d273h"], 
                Entity["Concept", "Bushbuck::q6pcd"], 
                Entity["Concept", "BushHibiscus::6ndvg"], 
                Entity["Concept", "BushNasturtium::3j296"], 
                Entity["Concept", "BushTit::983y4"], 
                Entity["Concept", "BusinessOffice::5478w"], 
                Entity["Concept", "Butcherbird::v429j"], 
                Entity["Concept", "ButchersBroom::73q88"], 
                Entity["Concept", "ButeoButeo::j8ck9"], 
                Entity["Concept", "ButeoLagopus::syyy3"], 
                Entity["Concept", "ButeoLineatus::6cd35"], 
                Entity["Concept", "Butter-beanPlant::5kf8g"], 
                Entity["Concept", "ButterChurn::cw3jk"], 
                Entity["Concept", "ButterDish::8q9g3"], 
                Entity["Concept", "Butterflyfish::3334j"], 
                Entity["Concept", "ButterflyNut::9m67c"], 
                Entity["Concept", "ButtermilkBiscuit::s7292"], 
                Entity["Concept", "Butternut::8w4gv"], 
                Entity["Concept", "ButtHinge::4g4dz"], 
                Entity["Concept", "ButtonPink::ph7mp"], 
                Entity["Concept", "Button::rx92b"], 
                Entity["Concept", "ButtPack::579sh"], 
                Entity["Concept", "CabbagePalmetto::p2c35"], 
                Entity["Concept", "Cabbageworm::s3p9c"], 
                Entity["Concept", "Caber::673fd"], 
                Entity["Concept", "Cabin::7jtd4"], 
                Entity["Concept", "CabinCar::q56wh"], 
                Entity["Concept", "Cabinet::5773y"], 
                Entity["Concept", "CableCar::x24w2"], 
                Entity["Concept", "CacaoBean::88qh3"], 
                Entity["Concept", "CacatuaGalerita::tfz9w"], 
                Entity["Concept", "CactusWren::32j37"], 
                Entity["Concept", "CaesalpiniaGilliesii::c3vyg"], 
                Entity["Concept", "CaesarSalad::48fpk"], 
                Entity["Concept", "CairinaMoschata::459fj"], 
                Entity["Concept", "CairnTerrier::67c37"], 
                Entity["Concept", "Calabura::23f85"], 
                Entity["Concept", "CalamagrostisAcutiflora::fdhn4"], 
                Entity["Concept", "CalaminthaNepeta::w96tc"], 
                Entity["Concept", "Calamus::8597d"], 
                Entity["Concept", "CalathianViolet::9923v"], 
                Entity["Concept", "Calceolaria::2hwtc"], 
                Entity["Concept", "Caldron::k6c8c"], 
                Entity["Concept", "Calean::5sgy7"], 
                Entity["Concept", "CalendulaOfficinalis::9k356"], 
                Entity["Concept", "CalidrisCanutus::32v4h"], 
                Entity["Concept", "CalidrisFerruginea::jz86q"], 
                Entity["Concept", "CalidrisMelanotos::mq342"], 
                Entity["Concept", "CaliforniaBayTree::5xg3h"], 
                Entity["Concept", "CaliforniaCondor::gpv64"], 
                Entity["Concept", "CaliforniaDandelion::f3792"], 
                Entity["Concept", "CaliforniaFern::9yf2t"], 
                Entity["Concept", "CaliforniaFourOclock::9r45q"], 
                Entity["Concept", "CaliforniaFuchsia::6gp9f"], 
                Entity["Concept", "CaliforniaLadysSlipper::6hhn6"], 
                Entity["Concept", "CaliforniaLiveOak::7tq9v"], 
                Entity["Concept", "CaliforniaNewt::85gmf"], 
                Entity["Concept", "CaliforniaPoppy::k74m4"], 
                Entity["Concept", "CaliforniaQuail::76k28"], 
                Entity["Concept", "CaliforniaRedbud::69t63"], 
                Entity["Concept", "CaliforniaSeaLion::56f89"], 
                Entity["Concept", "CaliforniaSycamore::d6694"], 
                Entity["Concept", "CaliforniaTreePoppy::7kcsx"], 
                Entity["Concept", "CaliforniaWhiteOak::2qv4v"], 
                Entity["Concept", "CaliforniaYellowBells::b4w22"], 
                Entity["Concept", "CallaPalustris::3bggc"], 
                Entity["Concept", "Calliandra::q737x"], 
                Entity["Concept", "CallimorphaJacobeae::9h265"], 
                Entity["Concept", "CallinectesSapidus::c8436"], 
                Entity["Concept", "Calliopsis::89b69"], 
                Entity["Concept", "CalliphoraVicina::gr7tx"], 
                Entity["Concept", "CallistephusChinensis::4qw39"], 
                Entity["Concept", "CalocarpumZapota::xyv65"], 
                Entity["Concept", "CalocedrusDecurrens::23kp6"], 
                Entity["Concept", "CalopogonPulchellum::pfj5f"], 
                Entity["Concept", "CalthaPalustris::q3vtz"], 
                Entity["Concept", "CalycanthusFloridus::bmrm5"], 
                Entity["Concept", "Calypso::9dctk"], 
                Entity["Concept", "CalyxTube::9p998"], 
                Entity["Concept", "CamassiaQuamash::42z86"], 
                Entity["Concept", "CamberwellBeauty::2tbht"], 
                Entity["Concept", "Camcorder::mpq8q"], 
                Entity["Concept", "Camelopard::6b787"], 
                Entity["Concept", "Camion::787n2"], 
                Entity["Concept", "Camisole::7n69y"], 
                Entity["Concept", "CampanulaCarpatica::8763z"], 
                Entity["Concept", "CampanulaGlomerata::tg654"], 
                Entity["Concept", "CampanulaMedium::6gpk5"], 
                Entity["Concept", "CampanulaPersicifolia::jj6nk"], 
                Entity["Concept", "CampanulaRapunculoides::md4hn"], 
                Entity["Concept", "CampanulaRapunculus::mn7z4"], 
                Entity["Concept", "CampChair::34gvj"], 
                Entity["Concept", "Campeachy::rgkb4"], 
                Entity["Concept", "CamperTrailer::jvc73"], 
                Entity["Concept", "Campground::vm243"], 
                Entity["Concept", "CamphorTree::7qwnc"], 
                Entity["Concept", "CanachitesCanadensis::j6595"], 
                Entity["Concept", "CanadaLily::28f43"], 
                Entity["Concept", "CanadaLynx::p6f6d"], 
                Entity["Concept", "CanadaPorcupine::v8sv3"], 
                Entity["Concept", "CanadaThistle::723p9"], 
                Entity["Concept", "CanadianFleabane::t8897"], 
                Entity["Concept", "CanadianGoldenrod::9gvj6"], 
                Entity["Concept", "CanadianHemlock::dx2k5"], 
                Entity["Concept", "CanadianRedPine::v54t7"], 
                Entity["Concept", "Canafistola::xwc2x"], 
                Entity["Concept", "Canal::ss93h"], 
                Entity["Concept", "CanangaOdorata::3m972"], 
                Entity["Concept", "CanaryWhitewood::9r784"], 
                Entity["Concept", "CancerIrroratus::d69mr"], 
                Entity["Concept", "CancerMagister::5r562"], 
                Entity["Concept", "CancerWeed::7drhx"], 
                Entity["Concept", "CandiedApple::vss8x"], 
                Entity["Concept", "CandyCane::mbss2"], 
                Entity["Concept", "CandyCorn::5hy24"], 
                Entity["Concept", "Candytuft::2xn4s"], 
                Entity["Concept", "Caning::374y4"], 
                Entity["Concept", "CanisAureus::twfy2"], 
                Entity["Concept", "CanisDingo::529k9"], 
                Entity["Concept", "CanisLupus::5gwtc"], 
                Entity["Concept", "CanisNiger::99p6d"], 
                Entity["Concept", "CankerBrake::92hv3"], 
                Entity["Concept", "Cannister::548cs"], 
                Entity["Concept", "Cannon::54f56"], 
                Entity["Concept", "CannonBall::4zc4c"], 
                Entity["Concept", "CanoeCedar::f8bn5"], 
                Entity["Concept", "CanopicJar::7s97j"], 
                Entity["Concept", "CantaloupeVine::478j8"], 
                Entity["Concept", "Cantaloup::qyzs9"], 
                Entity["Concept", "Canteen::74f49"], 
                Entity["Concept", "CantonGinger::fk664"], 
                Entity["Concept", "Canvas::4gtd7"], 
                Entity["Concept", "CanyonLiveOak::w33rj"], 
                Entity["Concept", "CanyonTreefrog::b6rw3"], 
                Entity["Concept", "CapacitorMicrophone::chyd6"], 
                Entity["Concept", "CapeBuffalo::rm3ct"], 
                Entity["Concept", "CapeDagga::j4xsf"], 
                Entity["Concept", "CapeGooseberry::f8h8x"], 
                Entity["Concept", "CapeJasmine::25c27"], 
                Entity["Concept", "CapeMarigold::3354z"], 
                Entity["Concept", "CapeMayWarbler::6386h"], 
                Entity["Concept", "CapePeriwinkle::39v32"], 
                Entity["Concept", "Capercaillie::7535b"], 
                Entity["Concept", "Capibara::4d672"], 
                Entity["Concept", "Capitol::vb9nn"], 
                Entity["Concept", "CapparisSpinosa::pfp3b"], 
                Entity["Concept", "CapraIbex::p5pmr"], 
                Entity["Concept", "Caput::qmm2m"], 
                Entity["Concept", "Carabao::ynz4s"], 
                Entity["Concept", "Carabiner::9bfq9"], 
                Entity["Concept", "Caracal::562y8"], 
                Entity["Concept", "CaramelBun::c24jc"], 
                Entity["Concept", "Carancha::xrg4t"], 
                Entity["Concept", "Caranda::qck34"], 
                Entity["Concept", "CaranxHippos::77z2v"], 
                Entity["Concept", "CarassiusCarassius::j43sw"], 
                Entity["Concept", "Caravan::r337w"], 
                Entity["Concept", "Carbine::rrpj9"], 
                Entity["Concept", "Carburetor::nvxx7"], 
                Entity["Concept", "Carcase::yx479"], 
                Entity["Concept", "CarcharhinusPlumbeus::pj8vp"], 
                Entity["Concept", "CarchariasTaurus::g9jx9"], 
                Entity["Concept", "CarcharinusLongimanus::4tgqp"], 
                Entity["Concept", "CarcharodonCarcharias::st7pj"], 
                Entity["Concept", "CardamineDiphylla::72bv8"], 
                Entity["Concept", "CardaminePratensis::2ns9z"], 
                Entity["Concept", "Cardamum::65trb"], 
                Entity["Concept", "Cardcase::2279h"], 
                Entity["Concept", "Cardcastle::g5kmj"], 
                Entity["Concept", "Cardigan::237mv"], 
                Entity["Concept", "Cardigan::b724j"], 
                Entity["Concept", "CardinalGrosbeak::px456"], 
                Entity["Concept", "CardinalTetra::mvc66"], 
                Entity["Concept", "CardiumEdule::c94pm"], 
                Entity["Concept", "CarduelisCannabina::gtk6y"], 
                Entity["Concept", "CarduelisCarduelis::bv5y9"], 
                Entity["Concept", "CarduelisFlammea::ntwd7"], 
                Entity["Concept", "CarduelisHornemanni::nk8cy"], 
                Entity["Concept", "CarduelisSpinus::c5n6r"], 
                Entity["Concept", "CarduusNutans::98fq3"], 
                Entity["Concept", "CarettaCaretta::768y9"], 
                Entity["Concept", "CargoContainer::4p889"], 
                Entity["Concept", "CariamaCristata::c3xds"], 
                Entity["Concept", "Caribe::99dsf"], 
                Entity["Concept", "CaricaPapaya::97w82"], 
                Entity["Concept", "CarlinaAcaulis::dbyv9"], 
                Entity["Concept", "CarlinaVulgaris::2687s"], 
                Entity["Concept", "CarnaubaPalm::kdtz3"], 
                Entity["Concept", "CarnegieaGigantea::49t23"], 
                Entity["Concept", "CarobBeanTree::q2y37"], 
                Entity["Concept", "CarolinaChickadee::h3c56"], 
                Entity["Concept", "CarolinaJasmine::52p59"], 
                Entity["Concept", "CarolinaWren::45v3f"], 
                Entity["Concept", "Carousel::n2992"], 
                Entity["Concept", "CarPark::52j62"], 
                Entity["Concept", "CarpenterAnt::yfnw5"], 
                Entity["Concept", "CarpenterBee::7x684"], 
                Entity["Concept", "CarpentersHammer::5526j"], 
                Entity["Concept", "CarpentersKit::37rxx"], 
                Entity["Concept", "CarpetMoth::nhx7j"], 
                Entity["Concept", "CarpetSnake::qn3ms"], 
                Entity["Concept", "CarphophisAmoenus::35dfs"], 
                Entity["Concept", "CarpinusBetulus::yt6xh"], 
                Entity["Concept", "CarpobrotusEdulis::z9965"], 
                Entity["Concept", "CarpodacusMexicanus::zq6w8"], 
                Entity["Concept", "CarpodacusPurpureus::95v2k"], 
                Entity["Concept", "CarriageHouse::5xzrj"], 
                Entity["Concept", "CarrionCrow::t3644"], 
                Entity["Concept", "CarTransporter::c7745"], 
                Entity["Concept", "Cart-trackPlant::w67b2"], 
                Entity["Concept", "Caryatid::6834j"], 
                Entity["Concept", "CaryotaUrens::788gn"], 
                Entity["Concept", "Casbah::t984x"], 
                Entity["Concept", "CaseKnife::v32q8"], 
                Entity["Concept", "CashRegister::hcz77"], 
                Entity["Concept", "CasmerodiusAlbus::kxw9m"], 
                Entity["Concept", "Cassava::6684p"], 
                Entity["Concept", "CassegrainianTelescope::56y92"], 
                Entity["Concept", "CassetteRecorder::4c799"], 
                Entity["Concept", "CassetteTape::k7576"], 
                Entity["Concept", "Cassia-barkTree::4sdx8"], 
                Entity["Concept", "CassiaBark::z2jgx"], 
                Entity["Concept", "CassinsKingbird::7w258"], 
                Entity["Concept", "Cassowary::4253c"], 
                Entity["Concept", "CastaneaOzarkensis::877pq"], 
                Entity["Concept", "Caster::2y3t4"], 
                Entity["Concept", "CastillejaChromosa::6ngfv"], 
                Entity["Concept", "CastillejaMiniata::wj4f5"], 
                Entity["Concept", "Castle::m2pbs"], 
                Entity["Concept", "CastorBeanPlant::yqd4j"], 
                Entity["Concept", "Catacomb::3227k"], 
                Entity["Concept", "CatalyticConverter::3y493"], 
                Entity["Concept", "Catamaran::7b489"], 
                Entity["Concept", "Catamountain::b5867"], 
                Entity["Concept", "Catboat::m32w2"], 
                Entity["Concept", "CatharactaSkua::9p855"], 
                Entity["Concept", "CathartesAura::sj2yh"], 
                Entity["Concept", "Cathode-rayOscilloscope::z4q77"], 
                Entity["Concept", "Catmint::26zfk"], 
                Entity["Concept", "CatoptrophorusSemipalmatus::3g736"], 
                Entity["Concept", "CATScanner::3rq64"], 
                Entity["Concept", "Catsup::9x525"], 
                Entity["Concept", "CatsupBottle::b797q"], 
                Entity["Concept", "CattlePen::k693j"], 
                Entity["Concept", "Cattleya::mwj95"], 
                Entity["Concept", "CaucasianWalnut::sgc6s"], 
                Entity["Concept", "Cavalla::hf445"], 
                Entity["Concept", "Cavern::f8d88"], 
                Entity["Concept", "CaviaCobaya::b8w85"], 
                Entity["Concept", "Cayenne::p5td2"], 
                Entity["Concept", "C-clamp::k82d3"], 
                Entity["Concept", "CDDrive::drc4h"], 
                Entity["Concept", "CebuellaPygmaea::5yf74"], 
                Entity["Concept", "CebusCapucinus::4r452"], 
                Entity["Concept", "Cecropia::43dm2"], 
                Entity["Concept", "CedarElm::627tb"], 
                Entity["Concept", "CedarOfLebanon::kvk3n"], 
                Entity["Concept", "CedrusDeodara::2f94b"], 
                Entity["Concept", "Ceibo::r4w87"], 
                Entity["Concept", "CelandinePoppy::r6h2f"], 
                Entity["Concept", "CeleryStick::425q5"], 
                Entity["Concept", "Cello::hhbp5"], 
                Entity["Concept", "Cellphone::5k4s4"], 
                Entity["Concept", "CelosiaArgenteaCristata::cb353"], 
                Entity["Concept", "CeltisAustralis::95g25"], 
                Entity["Concept", "Cembalo::353r5"], 
                Entity["Concept", "CementMixer::xcp2d"], 
                Entity["Concept", "Cenotaph::kpy5x"], 
                Entity["Concept", "Censer::99dd2"], 
                Entity["Concept", "CentaureaCineraria::n29f5"], 
                Entity["Concept", "CentaureaCyanus::693zp"], 
                Entity["Concept", "CentaureaScabiosa::937nq"], 
                Entity["Concept", "CentranthusRuber::ry9bh"], 
                Entity["Concept", "CentrifugalPump::w6jf8"], 
                Entity["Concept", "CentrocercusUrophasianus::j72rz"], 
                Entity["Concept", "CentrosemaVirginianum::2g627"], 
                Entity["Concept", "CephalantheraRubra::3bx7j"], 
                Entity["Concept", "CepphusColumba::p23vv"], 
                Entity["Concept", "Cerastes::6575z"], 
                Entity["Concept", "CerastiumTomentosum::92fh7"], 
                Entity["Concept", "CeratotheriumSimum::h93cc"], 
                Entity["Concept", "CercidiumFloridum::cn9rh"], 
                Entity["Concept", "CercisCanadensis::r4cq7"], 
                Entity["Concept", "CercopithecusAethiopsPygerythrus::3cvsf"], 
                
                Entity["Concept", "CerealBox::rqt58"], 
                Entity["Concept", "CervusElaphusCanadensis::hff4r"], 
                Entity["Concept", "CervusNipon::6h4vj"], 
                Entity["Concept", "CestrumNocturnum::mvdh8"], 
                Entity["Concept", "CetoniaAurata::n2dm8"], 
                Entity["Concept", "Chacma::bvff9"], 
                Entity["Concept", "ChaenomelesJaponica::7nv52"], 
                Entity["Concept", "Chaetodon::cmz2t"], 
                Entity["Concept", "Chaffinch::kn3mk"], 
                Entity["Concept", "ChafingDish::677t7"], 
                Entity["Concept", "ChainSaw::f5bt6"], 
                Entity["Concept", "Chain::w548s"], 
                Entity["Concept", "ChairLift::dg6tp"], 
                Entity["Concept", "ChaiseLongue::3g9s5"], 
                Entity["Concept", "ChaliceVine::2rcjd"], 
                Entity["Concept", "Challah::597ch"], 
                Entity["Concept", "ChamaecyparisLawsoniana::537j4"], 
                Entity["Concept", "ChamberedNautilus::tspc6"], 
                Entity["Concept", "ChannelBass::24fs7"], 
                Entity["Concept", "ChaparralCock::6f624"], 
                Entity["Concept", "ChaparralSage::rg5pd"], 
                Entity["Concept", "CharadriusMelodus::p22rw"], 
                Entity["Concept", "CharadriusMorinellus::39tcv"], 
                Entity["Concept", "CharadriusVociferus::gwnc5"], 
                Entity["Concept", "ChargeCard::g6353"], 
                Entity["Concept", "Charolais::p42jk"], 
                Entity["Concept", "Chassis::y9ryg"], 
                Entity["Concept", "Checkerbloom::z7x45"], 
                Entity["Concept", "CheckeredAdder::xnvm9"], 
                Entity["Concept", "CheckeredDaffodil::rj492"], 
                Entity["Concept", "CheckoutCounter::36dwm"], 
                Entity["Concept", "CheddarPink::qxyc9"], 
                Entity["Concept", "Cheeseburger::3z2z7"], 
                Entity["Concept", "CheiranthusCheiri::p39qc"], 
                Entity["Concept", "ChelidoniumMajus::s99xk"], 
                Entity["Concept", "CheloniaMydas::v39xn"], 
                Entity["Concept", "ChelydraSerpentina::n75f9"], 
                Entity["Concept", "Chemise::yr2nk"], 
                Entity["Concept", "Chenfish::338gm"], 
                Entity["Concept", "Cherimolla::3tdmg"], 
                Entity["Concept", "CherryApple::79hn5"], 
                Entity["Concept", "CherryPlum::4td2s"], 
                Entity["Concept", "Chervil::65m77"], 
                Entity["Concept", "ChesapeakeBayRetriever::s8567"], 
                Entity["Concept", "Chesterfield::723zr"], 
                Entity["Concept", "Chestnut::6pvm9"], 
                Entity["Concept", "Chestnut::c38mp"], 
                Entity["Concept", "ChickenCoop::d2x7j"], 
                Entity["Concept", "ChickenSandwich::rqmx7"], 
                Entity["Concept", "Chickeree::7bxdb"], 
                Entity["Concept", "Chickpea::3fv2z"], 
                Entity["Concept", "ChickpeaPlant::5n9d3"], 
                Entity["Concept", "ChicoryPlant::x6426"], 
                Entity["Concept", "Chicory::w8795"], 
                Entity["Concept", "Chicot::3sfc5"], 
                Entity["Concept", "Chihuahua::8hmhf"], 
                Entity["Concept", "ChiliDog::vg8q9"], 
                Entity["Concept", "ChilopsisLinearis::5zbgq"], 
                Entity["Concept", "Chimneypiece::4gztm"], 
                Entity["Concept", "ChinaCabinet::9bmqg"], 
                Entity["Concept", "ChinchillaLaniger::369fj"], 
                Entity["Concept", "ChineseDate::cf6cn"], 
                Entity["Concept", "ChineseForget-me-not::nxpc8"], 
                Entity["Concept", "ChineseFriedRice::2784t"], 
                Entity["Concept", "ChineseLantern::9n4sj"], 
                Entity["Concept", "ChineseParasol::6yqnj"], 
                Entity["Concept", "ChineseParsley::wzsz6"], 
                Entity["Concept", "ChineseScholarTree::pqx4s"], 
                Entity["Concept", "ChinkapinOak::k38cz"], 
                Entity["Concept", "ChinRest::m3vy6"], 
                Entity["Concept", "Chipmunk::s96n3"], 
                Entity["Concept", "ChippingSparrow::74hdn"], 
                Entity["Concept", "Chips::96f85"], 
                Entity["Concept", "Chives::2477v"], 
                Entity["Concept", "ChlamydosaurusKingi::stq3k"], 
                Entity["Concept", "ChocolateEgg::h867z"], 
                Entity["Concept", "ChocolateKiss::zhx73"], 
                Entity["Concept", "ChocolateTruffle::2k628"], 
                Entity["Concept", "Cholla::7gjk8"], 
                Entity["Concept", "CholoepusDidactylus::nf69z"], 
                Entity["Concept", "CholoepusHoffmanni::56zg6"], 
                Entity["Concept", "ChorusFrog::j543k"], 
                Entity["Concept", "Chough::h5b3v"], 
                Entity["Concept", "ChowChow::7x292"], 
                Entity["Concept", "ChristmasCactus::4735s"], 
                Entity["Concept", "ChristmasFlower::n5k23"], 
                Entity["Concept", "ChristmasStocking::867r8"], 
                Entity["Concept", "ChristPlant::y9n49"], 
                Entity["Concept", "Chronograph::yrsy8"], 
                Entity["Concept", "Chrysalis::dvmq3"], 
                Entity["Concept", "ChrysanthemumCoccineum::n2j8s"], 
                Entity["Concept", "ChrysanthemumCoronarium::h6577"], 
                Entity["Concept", "ChrysanthemumDog::y9tps"], 
                Entity["Concept", "ChrysanthemumLeucanthemum::245y5"], 
                Entity["Concept", "ChrysanthemumMaximum::5qtnd"], 
                Entity["Concept", "ChrysanthemumMaximumMaximum::24j2c"], 
                Entity["Concept", "ChrysanthemumMorifolium::ftmx4"], 
                Entity["Concept", "ChrysanthemumParthenium::f3vjh"], 
                Entity["Concept", "ChrysanthemumPtarmiciflorum::2w5q8"], 
                Entity["Concept", "ChrysanthemumSegetum::f752k"], 
                Entity["Concept", "ChrysemysPicta::9h494"], 
                Entity["Concept", "ChrysolophusPictus::q6xmr"], 
                Entity["Concept", "ChrysophrysAuratus::jbs4s"], 
                Entity["Concept", "Chuckwalla::vm727"], 
                Entity["Concept", "Chunga::mntt9"], 
                Entity["Concept", "ChurchBench::38xgk"], 
                Entity["Concept", "ChurchBuilding::2394b"], 
                Entity["Concept", "CicadaKiller::294n3"], 
                Entity["Concept", "CiconiaCiconia::wkt3m"], 
                Entity["Concept", "CicutaVerosa::vmh57"], 
                Entity["Concept", "CigarBand::3fb43"], 
                Entity["Concept", "CigarCutter::33xw5"], 
                Entity["Concept", "CigaretteCase::5nbz4"], 
                Entity["Concept", "CigaretteHolder::7tqk2"], 
                Entity["Concept", "CigaretteLighter::574w7"], 
                Entity["Concept", "CinerariaMaritima::548jg"], 
                Entity["Concept", "Cineraria::zh8tb"], 
                Entity["Concept", "CinnamonBark::2k8wr"], 
                Entity["Concept", "CinnamonBun::d8rw6"], 
                Entity["Concept", "Cinquefoil::jy558"], 
                Entity["Concept", "CircassianWalnut::8v6k4"], 
                Entity["Concept", "CircisSiliquastrum::pf8b7"], 
                Entity["Concept", "CircuitBreaker::39h3x"], 
                Entity["Concept", "Circuitry::356v7"], 
                Entity["Concept", "CircusAeruginosus::vy86s"], 
                Entity["Concept", "CircusCyaneus::n432j"], 
                Entity["Concept", "CircusPygargus::534qx"], 
                Entity["Concept", "Cirrocumulus::2tvsx"], 
                Entity["Concept", "Cirrostratus::5k65f"], 
                Entity["Concept", "CirrusCloud::yh54t"], 
                Entity["Concept", "CirsiumDiscolor::6f4d8"], 
                Entity["Concept", "CirsiumEriophorum::y5vcm"], 
                Entity["Concept", "CistothorusPalustris::jn3dm"], 
                Entity["Concept", "CistothorusPlatensis::d7gx4"], 
                Entity["Concept", "CitellusLateralis::3473f"], 
                Entity["Concept", "CitellusVariegatus::275qx"], 
                Entity["Concept", "Citron::24q25"], 
                Entity["Concept", "CitrusAurantifolia::g87mw"], 
                Entity["Concept", "CitrusDecumana::6qj94"], 
                Entity["Concept", "CitrusLimetta::4343s"], 
                Entity["Concept", "CitrusParadisi::2vg75"], 
                Entity["Concept", "CitrusSinensis::z9bz5"], 
                Entity["Concept", "ClangulaHyemalis::qtv7p"], 
                Entity["Concept", "Clapperboard::92r9q"], 
                Entity["Concept", "ClarksNutcracker::6n757"], 
                Entity["Concept", "Clary::rvks2"], 
                Entity["Concept", "ClarySage::464f8"], 
                Entity["Concept", "Classroom::h6r5j"], 
                Entity["Concept", "ClatoniaLanceolata::xx3zd"], 
                Entity["Concept", "Clavichord::xdf9n"], 
                Entity["Concept", "ClaytoniaVirginica::jv3vs"], 
                Entity["Concept", "Clayware::5y675"], 
                Entity["Concept", "CleanRoom::t7y7k"], 
                Entity["Concept", "Cleats::zk8mb"], 
                Entity["Concept", "Cleat::t396r"], 
                Entity["Concept", "Cleaver::bk925"], 
                Entity["Concept", "Cleg::47pmj"], 
                Entity["Concept", "ClematisTexensis::375c9"], 
                Entity["Concept", "ClematisVerticillaris::24n3d"], 
                Entity["Concept", "Clementine::fx26v"], 
                Entity["Concept", "ClianthusFormosus::33m9k"], 
                Entity["Concept", "ClickBeetle::hz374"], 
                Entity["Concept", "Cliff::q56fy"], 
                Entity["Concept", "CliffSwallow::5c494"], 
                Entity["Concept", "ClimbingIron::2t7wk"], 
                Entity["Concept", "ClimbingLily::34g67"], 
                Entity["Concept", "ClinopodiumVulgare::cc4bv"], 
                Entity["Concept", "ClitoriaMariana::vrfv2"], 
                Entity["Concept", "Cloche::y3gxy"], 
                Entity["Concept", "ClockRadio::7rknq"], 
                Entity["Concept", "ClothCap::qw37g"], 
                Entity["Concept", "Clothesbrush::g53w9"], 
                Entity["Concept", "ClothesCloset::n45n8"], 
                Entity["Concept", "ClothesHanger::xd6ws"], 
                Entity["Concept", "ClothesPeg::w5mrd"], 
                Entity["Concept", "ClothesTree::86w48"], 
                Entity["Concept", "CloudBank::38h22"], 
                Entity["Concept", "ClovePink::x9fg3"], 
                Entity["Concept", "Club-head::cr868"], 
                Entity["Concept", "Clumber::2ddvk"], 
                Entity["Concept", "Clydesdale::7r247"], 
                Entity["Concept", "CnemidophorusSexlineatus::fkv7n"], 
                Entity["Concept", "CnidoscolusUrens::85ht8"], 
                Entity["Concept", "Coati::c4t96"], 
                Entity["Concept", "Coat-of-mailShell::h3tp5"], 
                Entity["Concept", "Cob::6tf5q"], 
                Entity["Concept", "CoccothraustesCoccothraustes::6y626"], 
                Entity["Concept", "Cockateel::vt923"], 
                Entity["Concept", "Cockchafer::759hk"], 
                Entity["Concept", "Cocker::7284r"], 
                Entity["Concept", "Cockpit::n5cvg"], 
                Entity["Concept", "Cocksfoot::r5p72"], 
                Entity["Concept", "CocktailShaker::r9655"], 
                Entity["Concept", "Cocoanut::m9m7g"], 
                Entity["Concept", "Coco::xh382"], 
                Entity["Concept", "CoeloglossumViride::24wn8"], 
                Entity["Concept", "CoffeeBean::2585r"], 
                Entity["Concept", "CoilSpring::99x44"], 
                Entity["Concept", "Coin::b3sgt"], 
                Entity["Concept", "Colander::73kyp"], 
                Entity["Concept", "ColaptesAuratus::755k8"], 
                Entity["Concept", "ColaptesCaperCollaris::644q4"], 
                Entity["Concept", "ColdChisel::v2772"], 
                Entity["Concept", "ColdFrame::r62r5"], 
                Entity["Concept", "ColdStuffedTomato::bk686"], 
                Entity["Concept", "ColeusBlumei::48fzj"], 
                Entity["Concept", "ColinusVirginianus::s54v6"], 
                Entity["Concept", "Coliseum::4njz3"], 
                Entity["Concept", "CollapsibleShelter::dhj5j"], 
                Entity["Concept", "Collar::2524y"], 
                Entity["Concept", "CollaredPeccary::zkv5x"], 
                Entity["Concept", "College::399zg"], 
                Entity["Concept", "Collembolan::s4cpy"], 
                Entity["Concept", "ColletChuck::v6pvn"], 
                Entity["Concept", "Collie::999kf"], 
                Entity["Concept", "ColocasiaEsculenta::58qdq"], 
                Entity["Concept", "ColoradoBeetle::7b393"], 
                Entity["Concept", "ColoradoBlueSpruce::g3bgh"], 
                Entity["Concept", "ColumbaLivia::8bb89"], 
                Entity["Concept", "ColumbaPalumbus::hh238"], 
                Entity["Concept", "Comatulid::8w224"], 
                Entity["Concept", "CombinationLock::b8rp7"], 
                Entity["Concept", "Combine::mm8c8"], 
                Entity["Concept", "CommaButterfly::w98vn"], 
                Entity["Concept", "CommandKey::2j7ng"], 
                Entity["Concept", "Commelina::swf9p"], 
                Entity["Concept", "Common::36z45"], 
                Entity["Concept", "CommonApricot::972x4"], 
                Entity["Concept", "CommonBirdCherry::vpt55"], 
                Entity["Concept", "CommonBlackfish::k59t5"], 
                Entity["Concept", "CommonBroom::k4s8n"], 
                Entity["Concept", "CommonCanary::drf76"], 
                Entity["Concept", "CommonChickweed::4d8d5"], 
                Entity["Concept", "CommonComfrey::vjm8v"], 
                Entity["Concept", "CommonCottonGrass::xpzp7"], 
                Entity["Concept", "CommonDandelion::35b9v"], 
                Entity["Concept", "CommonDevilsClaw::535k3"], 
                Entity["Concept", "CommonDolphin::79h29"], 
                Entity["Concept", "CommonDuckweed::z7s24"], 
                Entity["Concept", "CommonEuropeanAsh::g8rbx"], 
                Entity["Concept", "CommonEuropeanEarwig::s7kkz"], 
                Entity["Concept", "CommonEveningPrimrose::45x8b"], 
                Entity["Concept", "CommonFour-oclock::bpj6x"], 
                Entity["Concept", "CommonFoxglove::82p77"], 
                Entity["Concept", "CommonGarterSnake::btbf6"], 
                Entity["Concept", "CommonGrapeHyacinth::y5849"], 
                Entity["Concept", "CommonHorsetail::mb25m"], 
                Entity["Concept", "CommonHyacinth::44r2r"], 
                Entity["Concept", "CommonIguana::66q43"], 
                Entity["Concept", "CommonJasmine::y5m56"], 
                Entity["Concept", "CommonKingsnake::55dmr"], 
                Entity["Concept", "CommonLadys-slipper::kxv7z"], 
                Entity["Concept", "CommonLettuce::yxz6t"], 
                Entity["Concept", "CommonLilac::5x956"], 
                Entity["Concept", "CommonLimpet::555j8"], 
                Entity["Concept", "CommonLynx::8vpj2"], 
                Entity["Concept", "CommonMallow::vxgw3"], 
                Entity["Concept", "CommonMilkwort::hm55r"], 
                Entity["Concept", "CommonMosquito::93z7s"], 
                Entity["Concept", "CommonMurre::tf445"], 
                Entity["Concept", "CommonMyrtle::hyhk5"], 
                Entity["Concept", "CommonNewt::9nx3s"], 
                Entity["Concept", "CommonOak::yd666"], 
                Entity["Concept", "CommonOpossum::s7846"], 
                Entity["Concept", "CommonOsier::vr87w"], 
                Entity["Concept", "CommonPlum::28tbv"], 
                Entity["Concept", "CommonPrivet::5453q"], 
                Entity["Concept", "CommonRaccoon::p862w"], 
                Entity["Concept", "CommonRoseMallow::s6857"], 
                Entity["Concept", "CommonSage::rwvg8"], 
                Entity["Concept", "CommonScoter::w8hkc"], 
                Entity["Concept", "CommonSeal::439f8"], 
                Entity["Concept", "CommonSpeedwell::rpt35"], 
                Entity["Concept", "CommonSpoonbill::yc7t2"], 
                Entity["Concept", "CommonSpottedOrchid::s8yj8"], 
                Entity["Concept", "CommonStaghornFern::3r99s"], 
                Entity["Concept", "CommonStarling::679bc"], 
                Entity["Concept", "CommonStJohnsWort::mn3s5"], 
                Entity["Concept", "CommonSunflower::px2hr"], 
                Entity["Concept", "CommonTeasel::469qr"], 
                Entity["Concept", "CommonValerian::y5cr5"], 
                Entity["Concept", "CommonViper::423c3"], 
                Entity["Concept", "CommonWasp::58v7y"], 
                Entity["Concept", "CommonWhiteDogwood::5z5k9"], 
                Entity["Concept", "CommonWoodSorrel::d4m32"], 
                Entity["Concept", "CommonYellowthroat::t443w"], 
                Entity["Concept", "CommunionTable::d559s"], 
                Entity["Concept", "Community::8xqvn"], 
                Entity["Concept", "Compass::g328m"], 
                Entity["Concept", "CompoundMicroscope::s234b"], 
                Entity["Concept", "ComputerKeyboard::26d5s"], 
                Entity["Concept", "ComputerMonitor::53q3f"], 
                Entity["Concept", "ComputerMouse::kbzr4"], 
                Entity["Concept", "Conacaste::4293n"], 
                Entity["Concept", "Concertina::77wpr"], 
                Entity["Concept", "ConcordGrape::t8ph3"], 
                Entity["Concept", "CondensationTrail::n87kq"], 
                Entity["Concept", "Coneflower::cf654"], 
                Entity["Concept", "Conessi::x4846"], 
                Entity["Concept", "Conestoga::k745k"], 
                Entity["Concept", "ConfederateRose::bdb59"], 
                Entity["Concept", "ConferenceCenter::g243v"], 
                Entity["Concept", "ConferenceRoom::2rhz6"], 
                Entity["Concept", "Conger::55j3j"], 
                Entity["Concept", "Conker::v8p64"], 
                Entity["Concept", "ConocliniumCoelestinum::z84vx"], 
                Entity["Concept", "ConsoleTable::ht624"], 
                Entity["Concept", "ConsolidaAmbigua::k3sbf"], 
                Entity["Concept", "ContainerShip::tsz7x"], 
                Entity["Concept", "ContopusSordidulus::787v9"], 
                Entity["Concept", "ControlRoom::t65s6"], 
                Entity["Concept", "Convertible::4pxj2"], 
                Entity["Concept", "ConvolvulusArvensis::q2577"], 
                Entity["Concept", "Cooker::84g9c"], 
                Entity["Concept", "CookieCutter::9868k"], 
                Entity["Concept", "CookingPan::638nx"], 
                Entity["Concept", "CoolingTower::mgb4t"], 
                Entity["Concept", "Coolwart::57g4n"], 
                Entity["Concept", "Coonskin::3n76g"], 
                Entity["Concept", "Cooter::k95t6"], 
                Entity["Concept", "CopperBeech::rfxy3"], 
                Entity["Concept", "CoraciasGarrulus::23t7t"], 
                Entity["Concept", "Coracle::z74nc"], 
                Entity["Concept", "CoralBean::264t3"], 
                Entity["Concept", "CoralHoneysuckle::c8433"], 
                Entity["Concept", "CorallorhizaMaculata::df7jr"], 
                Entity["Concept", "CordiaAlliodora::3683f"], 
                Entity["Concept", "CordylineAustralis::cnwq7"], 
                Entity["Concept", "CorkOak::zy697"], 
                Entity["Concept", "CorkscrewFlower::22myd"], 
                Entity["Concept", "Cormorant::ww5zj"], 
                Entity["Concept", "CornelianCherry::z8qjs"], 
                Entity["Concept", "Cornetfish::rvg6q"], 
                Entity["Concept", "CornflowerAster::d6tmc"], 
                Entity["Concept", "Corn::m7hpj"], 
                Entity["Concept", "CornPoppy::m8cg5"], 
                Entity["Concept", "CornSnake::w9dcv"], 
                Entity["Concept", "CornSpeedwell::q2hst"], 
                Entity["Concept", "CornStalk::96r29"], 
                Entity["Concept", "CorrectionalInstitution::64g7n"], 
                Entity["Concept", "Corridor::99yrs"], 
                Entity["Concept", "Corsage::2385f"], 
                Entity["Concept", "CortaderiaSelloana::57f92"], 
                Entity["Concept", "CorvusCorax::zb2rx"], 
                Entity["Concept", "CorvusFrugilegus::5t7y3"], 
                Entity["Concept", "CorvusMonedula::sn488"], 
                Entity["Concept", "Corydalis::9vc49"], 
                Entity["Concept", "CorydalusCornutus::yc2y3"], 
                Entity["Concept", "Coscoroba::8k8ry"], 
                Entity["Concept", "Cosmea::b72fv"], 
                Entity["Concept", "Cosy::gjgd5"], 
                Entity["Concept", "Cot::3kgws"], 
                Entity["Concept", "CottagePink::693k7"], 
                Entity["Concept", "CottonThistle::yhb2w"], 
                Entity["Concept", "Cougar::7bc9f"], 
                Entity["Concept", "CountryStore::244r3"], 
                Entity["Concept", "Coupe::5vr58"], 
                Entity["Concept", "Courthouse::96yx7"], 
                Entity["Concept", "Courtroom::25rwj"], 
                Entity["Concept", "Courtyard::5n4j8"], 
                Entity["Concept", "Couscous::647q5"], 
                Entity["Concept", "Cowbell::x5gjp"], 
                Entity["Concept", "Cowbird::939g9"], 
                Entity["Concept", "CowboyBoot::5f655"], 
                Entity["Concept", "CowboyHat::59wk9"], 
                Entity["Concept", "Cowfish::zvxw3"], 
                Entity["Concept", "CowParsnip::99j33"], 
                Entity["Concept", "CowpeaPlant::w8v26"], 
                Entity["Concept", "Coypu::bq656"], 
                Entity["Concept", "CrabApple::qb6th"], 
                Entity["Concept", "CrabCactus::4ptjf"], 
                Entity["Concept", "CrabeaterSeal::4r7rw"], 
                Entity["Concept", "Cradle::3882z"], 
                Entity["Concept", "Crampbark::f9384"], 
                Entity["Concept", "Crampfish::6369q"], 
                Entity["Concept", "Cranberry::257f4"], 
                Entity["Concept", "CraneFly::5y4f8"], 
                Entity["Concept", "Crapaud::b64yv"], 
                Entity["Concept", "CrapeMyrtle::5jm5c"], 
                Entity["Concept", "CrashHelmet::76cs8"], 
                Entity["Concept", "CrataegusCalpodendron::398s2"], 
                Entity["Concept", "Crayon::37pgx"], 
                Entity["Concept", "CreamViolet::74vc5"], 
                Entity["Concept", "Credenza::87dzp"], 
                Entity["Concept", "CreepingButtercup::928z9"], 
                Entity["Concept", "CreepingCharlie::9xb8j"], 
                Entity["Concept", "CreepingOxalis::64j2z"], 
                Entity["Concept", "CreepingStJohnsWort::z2576"], 
                Entity["Concept", "CreepingThyme::97kt6"], 
                Entity["Concept", "CremeCaramel::z6x3r"], 
                Entity["Concept", "CrenateLeaf::x8zry"], 
                Entity["Concept", "CrescentRoll::9vn94"], 
                Entity["Concept", "CrestedPenguin::5wf33"], 
                Entity["Concept", "Crevasse::2m6jk"], 
                Entity["Concept", "CricketBall::6fw2k"], 
                Entity["Concept", "CricketBat::4t76w"], 
                Entity["Concept", "CrimsonClover::n8443"], 
                Entity["Concept", "Crisp::2y3w4"], 
                Entity["Concept", "CrocethiaAlba::gnyq9"], 
                Entity["Concept", "CrochetHook::dxy6f"], 
                Entity["Concept", "CrocusSativus::54dg5"], 
                Entity["Concept", "CrocutaCrocuta::52k76"], 
                Entity["Concept", "Cromlech::2pyz5"], 
                Entity["Concept", "CroquetBall::g84t5"], 
                Entity["Concept", "CroquetMallet::8346z"], 
                Entity["Concept", "Croquette::7772m"], 
                Entity["Concept", "Crossbill::34d6d"], 
                Entity["Concept", "Crossbow::zjp6v"], 
                Entity["Concept", "CrossBun::c5483"], 
                Entity["Concept", "CrossOfLorraine::s3szj"], 
                Entity["Concept", "Crossword::yqtk6"], 
                Entity["Concept", "Cross::xc66j"], 
                Entity["Concept", "CrotalusAdamanteus::8ynrx"], 
                Entity["Concept", "CrotalusAtrox::v8yfj"], 
                Entity["Concept", "CrotalusCerastes::m382t"], 
                Entity["Concept", "CrotalusLepidus::9xr87"], 
                Entity["Concept", "CrotalusMitchellii::g5588"], 
                Entity["Concept", "CrotalusScutulatus::qxf3b"], 
                Entity["Concept", "CrotalusViridis::7y7s2"], 
                Entity["Concept", "Crouton::r9yct"], 
                Entity["Concept", "CrownImperial::24y69"], 
                Entity["Concept", "CrowsNest::35fb8"], 
                Entity["Concept", "CruiseLiner::jnx3v"], 
                Entity["Concept", "Crutch::3q57h"], 
                Entity["Concept", "CryptobranchusAlleganiensis::9539q"], 
                Entity["Concept", "CryptomeriaJaponica::2fb8v"], 
                Entity["Concept", "CubanSandwich::p7fv7"], 
                Entity["Concept", "CuckooClock::kgv4r"], 
                Entity["Concept", "CuculusCanorus::2h9wb"], 
                Entity["Concept", "CucumisMeloInodorus::dxk47"], 
                Entity["Concept", "CucumisMeloReticulatus::8p63b"], 
                Entity["Concept", "CucurbitaArgyrosperma::8555j"], 
                Entity["Concept", "CucurbitaMoschata::7bsn7"], 
                Entity["Concept", "CueBall::9vs43"], 
                Entity["Concept", "CueStick::8w35b"], 
                Entity["Concept", "Cuirass::256jq"], 
                Entity["Concept", "Cumulonimbus::ns75q"], 
                Entity["Concept", "CumulusCloud::m982g"], 
                Entity["Concept", "CuonAlpinus::f5yfn"], 
                Entity["Concept", "Cupola::4rw2g"], 
                Entity["Concept", "CupressusMacrocarpa::68km8"], 
                Entity["Concept", "CupressusSempervirens::fvg4q"], 
                Entity["Concept", "Cup::w4d7b"], 
                Entity["Concept", "Curler::6wmw4"], 
                Entity["Concept", "CurlingIron::sqm4h"], 
                Entity["Concept", "Currant::234zf"], 
                Entity["Concept", "Cuttle::8r287"], 
                Entity["Concept", "CycasCircinalis::q63d8"], 
                Entity["Concept", "CyclamenHederifolium::x88pq"], 
                Entity["Concept", "Cyclamen::pnf5j"], 
                Entity["Concept", "CydoniaOblonga::wds96"], 
                Entity["Concept", "CygnusBuccinator::6cpmj"], 
                Entity["Concept", "CygnusColumbianusColumbianus::748d2"], 
                Entity["Concept", "CygnusCygnus::32d36"], 
                Entity["Concept", "CygnusOlor::6hb7f"], 
                Entity["Concept", "Cylinder::w6cqg"], 
                Entity["Concept", "Cymbid::x2c38"], 
                Entity["Concept", "CynaraCardunculus::3rpkm"], 
                Entity["Concept", "CynoscionNebulosus::y7my6"], 
                Entity["Concept", "CyperusAlternifolius::b2772"], 
                Entity["Concept", "CyperusRotundus::77x49"], 
                Entity["Concept", "CypraeaTigris::24g68"], 
                Entity["Concept", "CypressSpurge::hm63f"], 
                Entity["Concept", "CypressVine::7t688"], 
                Entity["Concept", "CypripediumAcaule::w3xgw"], 
                Entity["Concept", "CypripediumCalceolusPubescens::3xfwp"], 
                Entity["Concept", "CypripediumMontanum::tfjg3"], 
                Entity["Concept", "CyrtomiumAculeatum::z3p49"], 
                Entity["Concept", "Dabchick::3qzh4"], 
                Entity["Concept", "Dace::2bsqd"], 
                Entity["Concept", "DaceloGigas::79k86"], 
                Entity["Concept", "DacrydiumCupressinum::59r6f"], 
                Entity["Concept", "Dahlia::2sjyw"], 
                Entity["Concept", "Daikon::69b64"], 
                Entity["Concept", "DailyDew::z4dvh"], 
                Entity["Concept", "Daishiki::62rk6"], 
                Entity["Concept", "DaisyFleabane::c55mm"], 
                Entity["Concept", "DallisGrass::646wv"], 
                Entity["Concept", "DallSheep::4532t"], 
                Entity["Concept", "DamaDama::whc7y"], 
                Entity["Concept", "DamaliscusLunatus::jm5f2"], 
                Entity["Concept", "DamaskRose::4fcx7"], 
                Entity["Concept", "DamaskViolet::9276p"], 
                Entity["Concept", "Damselfly::dh8zj"], 
                Entity["Concept", "Dam::w9687"], 
                Entity["Concept", "DanausPlexippus::bfk9c"], 
                Entity["Concept", "DancingLadyOrchid::xqt2h"], 
                Entity["Concept", "DandieDinmont::ff47s"], 
                Entity["Concept", "Dandy::57gbz"], 
                Entity["Concept", "DaphneMezereum::66hq5"], 
                Entity["Concept", "Daphnia::83f39"], 
                Entity["Concept", "DarkBread::r8g28"], 
                Entity["Concept", "Dark-eyedJunco::b7474"], 
                Entity["Concept", "Dashboard::928h5"], 
                Entity["Concept", "Dashboard::92m73"], 
                Entity["Concept", "DataSystem::89b67"], 
                Entity["Concept", "Date::67nkx"], 
                Entity["Concept", "DatePalm::y5mb9"], 
                Entity["Concept", "DaucusCarota::8w562"], 
                Entity["Concept", "DawnRedwood::x59wn"], 
                Entity["Concept", "Dayfly::7tqm2"], 
                Entity["Concept", "Deaf-aid::w7kvd"], 
                Entity["Concept", "DeathChair::t8v74"], 
                Entity["Concept", "Deerhound::btsv4"], 
                Entity["Concept", "DeerMouse::jg82k"], 
                Entity["Concept", "DeerTick::399kd"], 
                Entity["Concept", "DelichonUrbica::t9xr5"], 
                Entity["Concept", "DelonixRegia::8nq2w"], 
                Entity["Concept", "DelphinapterusLeucas::99ngb"], 
                Entity["Concept", "Dendrobium::2v36c"], 
                Entity["Concept", "DendroicaCoronata::bt9rz"], 
                Entity["Concept", "DendroicaPetechia::xx2x2"], 
                Entity["Concept", "DenisoniaSuperba::w8kjr"], 
                Entity["Concept", "DentalPlate::j97md"], 
                Entity["Concept", "DermochelysCoriacea::ypc4b"], 
                Entity["Concept", "Derrick::nvw77"], 
                Entity["Concept", "Desert::44kv3"], 
                Entity["Concept", "DesertIguana::89b3x"], 
                Entity["Concept", "DesertSunflower::g3q6p"], 
                Entity["Concept", "DesertTortoise::jsm9w"], 
                Entity["Concept", "Deutzia::446q7"], 
                Entity["Concept", "DeviledEgg::k9523"], 
                Entity["Concept", "Devilfish::56ymn"], 
                Entity["Concept", "DevilLily::4y38d"], 
                Entity["Concept", "DevilsWeed::7y289"], 
                Entity["Concept", "Dhow::gh7jb"], 
                Entity["Concept", "Dial::952x2"], 
                Entity["Concept", "DialogBox::nqmj9"], 
                Entity["Concept", "DialPhone::3j2f6"], 
                Entity["Concept", "DiamondbackTerrapin::2b479"], 
                Entity["Concept", "DianthusBarbatus::kw8n5"], 
                Entity["Concept", "DianthusChinensisHeddewigii::7khfj"], 
                Entity["Concept", "DianthusDeltoides::tp39x"], 
                Entity["Concept", "Diaper::rzs4y"], 
                Entity["Concept", "Diapheromera::wpb68"], 
                Entity["Concept", "Dicamptodon::2p34r"], 
                Entity["Concept", "DicentraCucullaria::82hrt"], 
                Entity["Concept", "DicentraSpectabilis::trds2"], 
                Entity["Concept", "DicksoniaAntarctica::w42q3"], 
                Entity["Concept", "DigitalClock::hm3x5"], 
                Entity["Concept", "DigitalWatch::v274r"], 
                Entity["Concept", "Dik-dik::54qs9"], 
                Entity["Concept", "DillPickle::7czzn"], 
                Entity["Concept", "DillWeed::8747b"], 
                Entity["Concept", "DimocarpusLongan::k4hbj"], 
                Entity["Concept", "Dinette::wyp77"], 
                Entity["Concept", "Dining-room::5jgkb"], 
                Entity["Concept", "DinnerTable::7662t"], 
                Entity["Concept", "DiodonHystrix::n539q"], 
                Entity["Concept", "DiomedeaExulans::c6k7w"], 
                Entity["Concept", "DionaeaMuscipula::dtb45"], 
                Entity["Concept", "Dioon::g65j7"], 
                Entity["Concept", "DiospyrosKaki::sqn25"], 
                Entity["Concept", "Dipper::p28qc"], 
                Entity["Concept", "Dirndl::rbz8c"], 
                Entity["Concept", "Disa::2p6jw"], 
                Entity["Concept", "DishAerial::bkh5h"], 
                Entity["Concept", "DishRack::qq224"], 
                Entity["Concept", "DishWasher::px58r"], 
                Entity["Concept", "DiskClutch::yzj3q"], 
                Entity["Concept", "Diskette::fp826"], 
                Entity["Concept", "DistributorCap::f4y3d"], 
                Entity["Concept", "DitchFern::j8sgm"], 
                Entity["Concept", "Diver::224c5"], 
                Entity["Concept", "DivingDress::y8tp4"], 
                Entity["Concept", "Doberman::zgqf4"], 
                Entity["Concept", "DockingFacility::f42zy"], 
                Entity["Concept", "DogHouse::mpn6r"], 
                Entity["Concept", "DogSled::34t8q"], 
                Entity["Concept", "Dogs-toothCheck::2g572"], 
                Entity["Concept", "DogViolet::4b726"], 
                Entity["Concept", "Doily::w45vm"], 
                Entity["Concept", "Dolmas::92qhy"], 
                Entity["Concept", "DomesticCat::jpx55"], 
                Entity["Concept", "Donjon::vh559"], 
                Entity["Concept", "Donut::332td"], 
                Entity["Concept", "Door::3fzr9"], 
                Entity["Concept", "Doorknocker::776hy"], 
                Entity["Concept", "DoorLatch::268jn"], 
                Entity["Concept", "Door::px47t"], 
                Entity["Concept", "Doorway::34g6p"], 
                Entity["Concept", "Dormer::k8s27"], 
                Entity["Concept", "DorotheanthusBellidiformis::d3jvh"], 
                Entity["Concept", "DoubleBed::m57pc"], 
                Entity["Concept", "DoubleDoor::h3vk2"], 
                Entity["Concept", "Doublet::spd47"], 
                Entity["Concept", "DouglasHemlock::fn7nb"], 
                Entity["Concept", "Dovekie::6p8b6"], 
                Entity["Concept", "DovesFootGeranium::qq3q8"], 
                Entity["Concept", "Dovetail::m9387"], 
                Entity["Concept", "DownyWoodpecker::x4724"], 
                Entity["Concept", "DraftingTable::mfcf4"], 
                Entity["Concept", "Dragee::5x423"], 
                Entity["Concept", "Dragger::jbp7n"], 
                Entity["Concept", "Dragonet::frhy2"], 
                Entity["Concept", "Dragonfly::7s252"], 
                Entity["Concept", "DragonLizard::s68v6"], 
                Entity["Concept", "Drawer::9csq7"], 
                Entity["Concept", "DreissenaPolymorpha::syy79"], 
                Entity["Concept", "Dresser::3528x"], 
                Entity["Concept", "DressHat::yz2ft"], 
                Entity["Concept", "DressingTable::pqrw2"], 
                Entity["Concept", "DrillingRig::28rrt"], 
                Entity["Concept", "DrinkingFountain::5ydsw"], 
                Entity["Concept", "DrivingRange::ms4vs"], 
                Entity["Concept", "DrivingWheel::3dxmz"], 
                Entity["Concept", "DromaiusNovaehollandiae::55fcb"], 
                Entity["Concept", "DroppedEgg::97z84"], 
                Entity["Concept", "Drosophila::qp482"], 
                Entity["Concept", "Drumhead::mcjn2"], 
                Entity["Concept", "DryasOctopetala::5g2v6"], 
                Entity["Concept", "DryFly::gc3yb"], 
                Entity["Concept", "DryopterisFilix-mas::d6647"], 
                Entity["Concept", "DryopterisMarginalis::w5qrb"], 
                Entity["Concept", "DryopterisOreopteris::rc6jr"], 
                Entity["Concept", "DryopterisPhegopteris::2rgtz"], 
                Entity["Concept", "Dry-stoneWall::34n59"], 
                Entity["Concept", "Duck-billedPlatypus::b8867"], 
                Entity["Concept", "DuffelBag::jfzg6"], 
                Entity["Concept", "Dugong::ss39b"], 
                Entity["Concept", "Dulcimer::9g5zf"], 
                Entity["Concept", "Dumbbell::qjh33"], 
                Entity["Concept", "DumetellaCarolinensis::395sk"], 
                Entity["Concept", "Dumper::rm443"], 
                Entity["Concept", "Dumpsite::cw88k"], 
                Entity["Concept", "Dumpster::696r5"], 
                Entity["Concept", "Dune::255v6"], 
                Entity["Concept", "Dunlin::4mj52"], 
                Entity["Concept", "Dunnock::r43s6"], 
                Entity["Concept", "Durian::894w2"], 
                Entity["Concept", "DurianTree::3pr5k"], 
                Entity["Concept", "DuskySalamander::hshp6"], 
                Entity["Concept", "Dustcart::2bbpr"], 
                Entity["Concept", "Dustpan::5t3z3"], 
                Entity["Concept", "DutchCase-knifeBean::d4362"], 
                Entity["Concept", "DutchClover::nyt23"], 
                Entity["Concept", "DutchElm::n9v2q"], 
                Entity["Concept", "DutchOven::f8685"], 
                Entity["Concept", "DutchOven::qy3dv"], 
                Entity["Concept", "DwarfBanana::8p7n7"], 
                Entity["Concept", "DwarfMountainPine::p7kc7"], 
                Entity["Concept", "DwarfPhlox::w76km"], 
                Entity["Concept", "DwarfTulip::mgff6"], 
                Entity["Concept", "Dyers-broom::m4ypk"], 
                Entity["Concept", "DyersWoad::p2dw8"], 
                Entity["Concept", "EaclesImperialis::pyj95"], 
                Entity["Concept", "Earflap::256g4"], 
                Entity["Concept", "EarlessLizard::97y66"], 
                Entity["Concept", "EarlyPurpleOrchid::cf73z"], 
                Entity["Concept", "EarlySpiderOrchid::qb4f6"], 
                Entity["Concept", "Earmuff::cfp8x"], 
                Entity["Concept", "Earplug::dcs7g"], 
                Entity["Concept", "Earplug::fct3t"], 
                Entity["Concept", "Earring::p6535"], 
                Entity["Concept", "Earth-closet::qd56h"], 
                Entity["Concept", "Earthenware::875r3"], 
                Entity["Concept", "Earth::h8krm"], 
                Entity["Concept", "Easel::55c39"], 
                Entity["Concept", "EasterDaisy::2f36b"], 
                Entity["Concept", "EasterEgg::64cmg"], 
                Entity["Concept", "EasternChimpanzee::r74nz"], 
                Entity["Concept", "EasternChipmunk::g95t6"], 
                Entity["Concept", "EasternCoralSnake::325pn"], 
                Entity["Concept", "EasternCottontail::d74j9"], 
                Entity["Concept", "EasternCottonwood::q74cr"], 
                Entity["Concept", "EasternFenceLizard::5qt37"], 
                Entity["Concept", "EasternFoxSquirrel::8g9v6"], 
                Entity["Concept", "EasternGraySquirrel::69qd5"], 
                Entity["Concept", "EasternHopHornbeam::xbhj4"], 
                Entity["Concept", "EasternKingbird::gg4f3"], 
                Entity["Concept", "EasternLowlandGorilla::x3jk3"], 
                Entity["Concept", "EasternMeadowlark::94j4n"], 
                Entity["Concept", "EasternNarrow-mouthedToad::d8m56"], 
                Entity["Concept", "EasternRed-backedSalamander::3nscb"], 
                Entity["Concept", "EasternSpruce::99n26"], 
                Entity["Concept", "Eatery::f73dy"], 
                Entity["Concept", "EcballiumElaterium::g4crv"], 
                Entity["Concept", "EchinocactusGrusonii::m2g3t"], 
                Entity["Concept", "EchinusEsculentus::xw9q7"], 
                Entity["Concept", "Echogram::dc9h9"], 
                Entity["Concept", "Edelweiss::62cs4"], 
                Entity["Concept", "EdibleBanana::c4254"], 
                Entity["Concept", "EdibleMussel::kbt8x"], 
                Entity["Concept", "EdibleSnail::7wx97"], 
                Entity["Concept", "Eft::t3bv7"], 
                Entity["Concept", "EggRoll::9xj3c"], 
                Entity["Concept", "EggsBenedict::r55d8"], 
                Entity["Concept", "Eggs::j9vgc"], 
                Entity["Concept", "Eggwhisk::yptm8"], 
                Entity["Concept", "EggYolk::dxq54"], 
                Entity["Concept", "EgrettaCaerulea::9965c"], 
                Entity["Concept", "EgrettaGarzetta::z8r5n"], 
                Entity["Concept", "EgrettaThula::x9964"], 
                Entity["Concept", "EgyptianVulture::gmkt2"], 
                Entity["Concept", "EichhorniaCrassipes::m38gx"], 
                Entity["Concept", "Eider::69g47"], 
                Entity["Concept", "EightBall::ftn78"], 
                Entity["Concept", "EjectionSeat::zrf49"], 
                Entity["Concept", "ElagatisBipinnulata::xf2bm"], 
                Entity["Concept", "ElanoidesForficatus::498w3"], 
                Entity["Concept", "ElanusLeucurus::4tj3m"], 
                Entity["Concept", "ElasticBand::5c995"], 
                Entity["Concept", "ElbowPad::845g2"], 
                Entity["Concept", "Elderberry::8d773"], 
                Entity["Concept", "ElectricalRelay::765d3"], 
                Entity["Concept", "ElectricalSwitch::5gnjt"], 
                Entity["Concept", "ElectricBattery::m666h"], 
                Entity["Concept", "ElectricDrill::3t24j"], 
                Entity["Concept", "ElectricEel::x4785"], 
                Entity["Concept", "ElectricFan::n79z5"], 
                Entity["Concept", "ElectricGuitar::9pkmr"], 
                Entity["Concept", "ElectricHammer::xr83q"], 
                Entity["Concept", "ElectricLight::n7mkr"], 
                Entity["Concept", "ElectricMeter::4w545"], 
                Entity["Concept", "ElectricOrgan::544h8"], 
                Entity["Concept", "ElectricPig::t7p29"], 
                Entity["Concept", "ElectricRange::9gtc2"], 
                Entity["Concept", "ElectricRazor::nmkt4"], 
                Entity["Concept", "ElectricToothbrush::r3763"], 
                Entity["Concept", "Electrocardiograph::c7bq9"], 
                Entity["Concept", "ElectronicBalance::5snxr"], 
                Entity["Concept", "ElephantSeal::8vcmx"], 
                Entity["Concept", "Elevator::2v7fm"], 
                Entity["Concept", "ElevatorCar::952n3"], 
                Entity["Concept", "ElevatorShaft::3qvj9"], 
                Entity["Concept", "ElfCup::6fhxh"], 
                Entity["Concept", "Elkhound::62q39"], 
                Entity["Concept", "Elk-wood::274y8"], 
                Entity["Concept", "ElongateLeaf::27cx9"], 
                Entity["Concept", "EmberizaCitrinella::kx2d7"], 
                Entity["Concept", "EmberizaHortulana::7p279"], 
                Entity["Concept", "EmberizaSchoeniclus::78bg2"], 
                Entity["Concept", "EmbroideryFrame::667hy"], 
                Entity["Concept", "EmeraldCreeper::z8j92"], 
                Entity["Concept", "EmeryWheel::2h3df"], 
                Entity["Concept", "Emmental::j243h"], 
                Entity["Concept", "EmperorMoth::8528k"], 
                Entity["Concept", "Enamelware::n2zqf"], 
                Entity["Concept", "Encephalartos::ks4p7"], 
                Entity["Concept", "EncycliaTampensis::5gqy9"], 
                Entity["Concept", "EncycliaVenosa::2873n"], 
                Entity["Concept", "EngineRoom::89p36"], 
                Entity["Concept", "EnglishCavalrySaddle::g8shx"], 
                Entity["Concept", "EnglishElm::5cdy3"], 
                Entity["Concept", "EnglishLavender::w4s47"], 
                Entity["Concept", "EnglishMuffin::xsr56"], 
                Entity["Concept", "EnglishPrimrose::96j23"], 
                Entity["Concept", "EnglishSetter::ps793"], 
                Entity["Concept", "EnglishSparrow::2w45v"], 
                Entity["Concept", "EnglishSpringer::f4dq6"], 
                Entity["Concept", "EnglishYew::z5d64"], 
                Entity["Concept", "EnhydraLutris::7d589"], 
                Entity["Concept", "Entablature::66n65"], 
                Entity["Concept", "Entellus::395b7"], 
                Entity["Concept", "EntertainmentCenter::mg549"], 
                Entity["Concept", "Envelope::c722j"], 
                Entity["Concept", "Envelope::zmg8p"], 
                Entity["Concept", "Epee::t8vg6"], 
                Entity["Concept", "EphippiorhynchusSenegalensis::4b69b"], 
                Entity["Concept", "EpilobiumAngustifolium::672zd"], 
                Entity["Concept", "EpipactisGigantea::2822d"], 
                Entity["Concept", "EpipactisHelleborine::snty4"], 
                Entity["Concept", "Epiphyllum::76yj6"], 
                Entity["Concept", "EpipremnumAureum::g382k"], 
                Entity["Concept", "Equaliser::k2286"], 
                Entity["Concept", "Equatorial::4mf5p"], 
                Entity["Concept", "EquisetumHyemale::pyym8"], 
                Entity["Concept", "EquusCaballusPrzevalskii::s625w"], 
                Entity["Concept", "EquusGrevyi::tkv46"], 
                Entity["Concept", "EquusZebraZebra::4283j"], 
                Entity["Concept", "EranthisHyemalis::9gc45"], 
                Entity["Concept", "ErechtitesHieracifolia::s53xy"], 
                Entity["Concept", "EretmochelysImbricata::8pz8w"], 
                Entity["Concept", "EricaArborea::8s556"], 
                Entity["Concept", "EricaCarnea::6nw3h"], 
                Entity["Concept", "EricaCinerea::rb6xc"], 
                Entity["Concept", "ErigeronAurantiacus::48m26"], 
                Entity["Concept", "ErigeronPhiladelphicus::v4744"], 
                Entity["Concept", "ErinaceusEuropaeus::w9py5"], 
                Entity["Concept", "EriobotryaJaponica::43d7r"], 
                Entity["Concept", "ErithacusRubecola::h5f49"], 
                Entity["Concept", "ErlenmeyerFlask::bq3vr"], 
                Entity["Concept", "Ern::jpsr9"], 
                Entity["Concept", "EroliaMinutilla::b28ky"], 
                Entity["Concept", "EryngiumMaritimum::65zy9"], 
                Entity["Concept", "ErythrinaIndica::m3xmn"], 
                Entity["Concept", "ErythrinaVespertilio::962s3"], 
                Entity["Concept", "ErythrocebusPatas::949v6"], 
                Entity["Concept", "ErythroniumCalifornicum::78g4t"], 
                Entity["Concept", "ErythroniumGrandiflorum::7566b"], 
                Entity["Concept", "EschrichtiusGibbosus::2c8q9"], 
                Entity["Concept", "Escritoire::pfmc4"], 
                Entity["Concept", "EskimoDog::2vm97"], 
                Entity["Concept", "EsoxLucius::3s3s7"], 
                Entity["Concept", "EsoxMasquinongy::c3kb4"], 
                Entity["Concept", "Esparcet::7hmp3"], 
                Entity["Concept", "EspressoMaker::z42xs"], 
                Entity["Concept", "EthernetCable::h5k9t"], 
                Entity["Concept", "EucalyptusAmygdalina::g4ysf"], 
                Entity["Concept", "EucalyptusCalophylla::2n8r5"], 
                Entity["Concept", "EucalyptusCoriacea::63fm6"], 
                Entity["Concept", "EucalyptusRegnans::29qqd"], 
                Entity["Concept", "EugeniaCorynantha::f4h48"], 
                Entity["Concept", "EugeniaUniflora::9w4mx"], 
                Entity["Concept", "EumecesSkiltonianus::g2753"], 
                Entity["Concept", "EumetopiasJubatus::w7jz4"], 
                Entity["Concept", "EuonymusAmericanus::9654x"], 
                Entity["Concept", "EuonymusAtropurpureus::d3bvn"], 
                Entity["Concept", "EuopeanHoopoe::hxy53"], 
                Entity["Concept", "EupatoriumMaculatum::6yn92"], 
                Entity["Concept", "EupatoriumPerfoliatum::b8y57"], 
                Entity["Concept", "EupatoriumPurpureum::486t3"], 
                Entity["Concept", "EuphagusCarilonus::x359x"], 
                Entity["Concept", "Euphonium::t6x7q"], 
                Entity["Concept", "EuphorbiaAmygdaloides::6zpxg"], 
                Entity["Concept", "EuphorbiaMarginata::knxm6"], 
                Entity["Concept", "EurasianOtter::33j23"], 
                Entity["Concept", "EuropeanBlackbird::3q593"], 
                Entity["Concept", "EuropeanBlackCurrant::9694q"], 
                Entity["Concept", "EuropeanBlackGrouse::b9265"], 
                Entity["Concept", "EuropeanBlueberry::kzyt8"], 
                Entity["Concept", "EuropeanBrooklime::zsy56"], 
                Entity["Concept", "EuropeanCatfish::236c6"], 
                Entity["Concept", "EuropeanCurlew::7762d"], 
                Entity["Concept", "EuropeanFieldElm::nm844"], 
                Entity["Concept", "EuropeanFireSalamander::t6v33"], 
                Entity["Concept", "EuropeanGallinule::c7jfx"], 
                Entity["Concept", "EuropeanHare::kgq4j"], 
                Entity["Concept", "EuropeanLadiesTresses::32bqs"], 
                Entity["Concept", "EuropeanMagpie::z7842"], 
                Entity["Concept", "EuropeanMountainAsh::2g528"], 
                Entity["Concept", "EuropeanNuthatch::8tnr9"], 
                Entity["Concept", "EuropeanNutPine::ky8mm"], 
                Entity["Concept", "EuropeanOliveTree::3dnxp"], 
                Entity["Concept", "EuropeanPerch::nr688"], 
                Entity["Concept", "EuropeanQuakingAspen::94w29"], 
                Entity["Concept", "EuropeanRabbit::5325f"], 
                Entity["Concept", "EuropeanRaspberry::3b9br"], 
                Entity["Concept", "EuropeanRedElder::382z9"], 
                Entity["Concept", "EuropeanShrike::9786b"], 
                Entity["Concept", "EuropeanSpiderCrab::64k92"], 
                Entity["Concept", "EuropeanTortoise::548zs"], 
                Entity["Concept", "EuropeanTurkeyOak::mv8h7"], 
                Entity["Concept", "EuropeanWhiteLily::j8v4c"], 
                Entity["Concept", "EuropeanWolfSpider::sdts3"], 
                Entity["Concept", "EustomaGrandiflorum::29tp3"], 
                Entity["Concept", "EuterpeOleracea::3296m"], 
                Entity["Concept", "EveningGrosbeak::jn55r"], 
                Entity["Concept", "EveningLychnis::pj37v"], 
                Entity["Concept", "EvergreenWinterberry::bg889"], 
                Entity["Concept", "Ewer::w6672"], 
                Entity["Concept", "Excavation::x8kvh"], 
                Entity["Concept", "ExerciseBike::72h39"], 
                Entity["Concept", "Exmoor::c38bq"], 
                Entity["Concept", "ExtensionCord::k4824"], 
                Entity["Concept", "Eyeglasses::f7686"], 
                Entity["Concept", "Eyeglass::tpc34"], 
                Entity["Concept", "EyeMask::52fc2"], 
                Entity["Concept", "Eyepatch::3358g"], 
                Entity["Concept", "Facade::32gmh"], 
                Entity["Concept", "Factory::n4m6r"], 
                Entity["Concept", "FagusPendula::ftk9n"], 
                Entity["Concept", "Fair-maids-of-France::x8433"], 
                Entity["Concept", "Fairway::5s4g5"], 
                Entity["Concept", "FairyBluebird::f2wvp"], 
                Entity["Concept", "FairyLight::2kvqk"], 
                Entity["Concept", "FalcoColumbarius::6n935"], 
                Entity["Concept", "FalcoRusticolus::7qg84"], 
                Entity["Concept", "FalcoSubbuteo::q62xt"], 
                Entity["Concept", "FalcoTinnunculus::b9969"], 
                Entity["Concept", "FallArmyworm::zgqx9"], 
                Entity["Concept", "Fall-bloomingHydrangea::8g3gg"], 
                Entity["Concept", "FallWebworm::6whpt"], 
                Entity["Concept", "FalseDogwood::5888y"], 
                Entity["Concept", "FalseLupine::km4xd"], 
                Entity["Concept", "FanBlade::45p75"], 
                Entity["Concept", "FanjetEngine::8t5dm"], 
                Entity["Concept", "Fanweed::z33w6"], 
                Entity["Concept", "Faucet::92d79"], 
                Entity["Concept", "Fawn::4x83j"], 
                Entity["Concept", "FeabaneMullet::ky88g"], 
                Entity["Concept", "FeatherBall::dq5v6"], 
                Entity["Concept", "FeatherBoa::c94h7"], 
                Entity["Concept", "Fedora::bqh65"], 
                Entity["Concept", "FeedingBottle::6z3y5"], 
                Entity["Concept", "FeedingChair::r5pt6"], 
                Entity["Concept", "FelisChaus::33y75"], 
                Entity["Concept", "FelisManul::c4fp8"], 
                Entity["Concept", "FelisOnca::jh7tq"], 
                Entity["Concept", "FelisPardalis::64wb4"], 
                Entity["Concept", "FelisServal::pc9s5"], 
                Entity["Concept", "FelisWiedi::43vr5"], 
                Entity["Concept", "Felucca::9378z"], 
                Entity["Concept", "FencersMask::f9wwp"], 
                Entity["Concept", "Fennel::r54jh"], 
                Entity["Concept", "FenOrchid::4749f"], 
                Entity["Concept", "FernRhapis::6hmn8"], 
                Entity["Concept", "Ferret::s9q8z"], 
                Entity["Concept", "FerrisWheel::4tg6j"], 
                Entity["Concept", "Ferrule::ydx5v"], 
                Entity["Concept", "Fescue::3n8dm"], 
                Entity["Concept", "Fez::98s7x"], 
                Entity["Concept", "FicusAurea::r9483"], 
                Entity["Concept", "FiddlerCrab::4mt9n"], 
                Entity["Concept", "Field::3w493"], 
                Entity["Concept", "FieldArtillery::cq795"], 
                Entity["Concept", "Fieldfare::4v272"], 
                Entity["Concept", "FieldHockeyBall::6fx8x"], 
                Entity["Concept", "FieldLens::4tdmt"], 
                Entity["Concept", "FieldPansy::9p5j7"], 
                Entity["Concept", "FieldScabious::pgc4m"], 
                Entity["Concept", "FieldSparrow::5946r"], 
                Entity["Concept", "FieldSpeedwell::jxz53"], 
                Entity["Concept", "FiestaFlower::q385j"], 
                Entity["Concept", "Fig::d3p6f"], 
                Entity["Concept", "Figeater::4np38"], 
                Entity["Concept", "FigureSkate::tgqh8"], 
                Entity["Concept", "Filament::5w9zb"], 
                Entity["Concept", "FileFolder::wq3fp"], 
                Entity["Concept", "FillingStation::c4d3x"], 
                Entity["Concept", "FilmFern::5438b"], 
                Entity["Concept", "Finger::f4343"], 
                Entity["Concept", "Fingerprint::gd3mk"], 
                Entity["Concept", "FireAnt::m624h"], 
                Entity["Concept", "FireBeetle::t3348"], 
                Entity["Concept", "FireBell::c8tfs"], 
                Entity["Concept", "Fireboat::xf64t"], 
                Entity["Concept", "Firedrake::2t6c9"], 
                Entity["Concept", "FireEngine::zsvx8"], 
                Entity["Concept", "Firehouse::72spn"], 
                Entity["Concept", "FirePink::zj86y"], 
                Entity["Concept", "FireSalamander::k4gr5"], 
                Entity["Concept", "FireScreen::665b5"], 
                Entity["Concept", "Fireside::2hv85"], 
                Entity["Concept", "FireThorn::g6pdx"], 
                Entity["Concept", "FiringRange::8zf95"], 
                Entity["Concept", "First-aidKit::39wfg"], 
                Entity["Concept", "FishAndChips::hj3hc"], 
                Entity["Concept", "FishEagle::yrv87"], 
                Entity["Concept", "FishingEagle::479m6"], 
                Entity["Concept", "FishingPole::g9568"], 
                Entity["Concept", "Flagon::k253t"], 
                Entity["Concept", "Flag::w2299"], 
                Entity["Concept", "Flake::3656z"], 
                Entity["Concept", "Flamingo::28r7m"], 
                Entity["Concept", "FlamingPoppy::pbn8b"], 
                Entity["Concept", "Flan::z4mr6"], 
                Entity["Concept", "FlashBulb::n52mt"], 
                Entity["Concept", "FlatBench::4y22t"], 
                Entity["Concept", "Flat-coatedRetriever::866mk"], 
                Entity["Concept", "Flathead::5hkk7"], 
                Entity["Concept", "Flathead::5ms79"], 
                Entity["Concept", "FlatheadCatfish::658g4"], 
                Entity["Concept", "Flat-leafParsley::q56x5"], 
                Entity["Concept", "FlatPanelDisplay::6hqw5"], 
                Entity["Concept", "Flats::r36b3"], 
                Entity["Concept", "Flax::znxv2"], 
                Entity["Concept", "FleaBeetle::3794s"], 
                Entity["Concept", "FleshFly::qb52h"], 
                Entity["Concept", "Fleur-de-lys::9njtt"], 
                Entity["Concept", "FlightDeck::bs5yd"], 
                Entity["Concept", "FlindersiaAustralis::xv4tg"], 
                Entity["Concept", "Flinthead::p5m53"], 
                Entity["Concept", "Flip-flop::3m4br"], 
                Entity["Concept", "Floatplane::5wd4t"], 
                Entity["Concept", "Floe::38bf9"], 
                Entity["Concept", "FloorJoist::3t382"], 
                Entity["Concept", "FloorLamp::b77v8"], 
                Entity["Concept", "FloridaGallinule::7qjyx"], 
                Entity["Concept", "FloristsWillow::dvr6d"], 
                Entity["Concept", "Floss::6cbrs"], 
                Entity["Concept", "Flounder::9r5cv"], 
                Entity["Concept", "FlowerGarden::z2869"], 
                Entity["Concept", "FloweringHazel::h5cyx"], 
                Entity["Concept", "FloweringMaple::2c928"], 
                Entity["Concept", "FlowerPetal::ds674"], 
                Entity["Concept", "Fluegelhorn::9p72b"], 
                Entity["Concept", "FluorescentLamp::4z25p"], 
                Entity["Concept", "FlushToilet::c8456"], 
                Entity["Concept", "FlyingBoat::t75c7"], 
                Entity["Concept", "FlyingFox::388fb"], 
                Entity["Concept", "FlyOrchid::67pxv"], 
                Entity["Concept", "Flyswat::mgs7t"], 
                Entity["Concept", "FoeniculumVulgare::994f2"], 
                Entity["Concept", "FoetidPothos::5933j"], 
                Entity["Concept", "Foil::xsy6p"], 
                Entity["Concept", "FoodProcessor::2q437"], 
                Entity["Concept", "FootballHelmet::c6twc"], 
                Entity["Concept", "FootballStadium::w5x75"], 
                Entity["Concept", "Footrest::s8q86"], 
                Entity["Concept", "ForestTentCaterpillar::74fkh"], 
                Entity["Concept", "Forget-me-not::h7226"], 
                Entity["Concept", "Fork::c4c8f"], 
                Entity["Concept", "Forklift::b2dfv"], 
                Entity["Concept", "FormalGarden::3y2cq"], 
                Entity["Concept", "FormicaRufa::3gxdn"], 
                Entity["Concept", "FormicaSanguinea::55w97"], 
                Entity["Concept", "Forsythia::d7277"], 
                Entity["Concept", "FortifiedWine::9y8m8"], 
                Entity["Concept", "Fothergilla::4335d"], 
                Entity["Concept", "Fountain::4sk7q"], 
                Entity["Concept", "FountainGrass::jhb99"], 
                Entity["Concept", "FountainPen::r2vw4"], 
                Entity["Concept", "Foxberry::4x323"], 
                Entity["Concept", "FragrantOrchid::z5494"], 
                Entity["Concept", "FragrantWaterLily::hh7jj"], 
                Entity["Concept", "Frame::27k2n"], 
                Entity["Concept", "FrancoaRamosa::wkc2f"], 
                Entity["Concept", "FrankfurterBun::b84z3"], 
                Entity["Concept", "FrankincensePine::d9858"], 
                Entity["Concept", "FraterculaCorniculata::69x43"], 
                Entity["Concept", "FraxinusAmericana::2mwn4"], 
                Entity["Concept", "FraxinusLatifolia::p6zfv"], 
                Entity["Concept", "FraxinusOrnus::4rf7x"], 
                Entity["Concept", "FraxinusTexensis::kd3z5"], 
                Entity["Concept", "FraxinusTomentosa::rp8qt"], 
                Entity["Concept", "Freewheel::48d95"], 
                Entity["Concept", "Freighter::968s8"], 
                Entity["Concept", "FrenchBulldog::3jg82"], 
                Entity["Concept", "FrenchHorn::rm367"], 
                Entity["Concept", "FrenchMarigold::7ny7z"], 
                Entity["Concept", "FrenchToast::5y3db"], 
                Entity["Concept", "FriedEgg::49snd"], 
                Entity["Concept", "FrigateBird::844j6"], 
                Entity["Concept", "Frisbee::9h9t9"], 
                Entity["Concept", "Frittata::3rg4x"], 
                Entity["Concept", "Frogfish::378r9"], 
                Entity["Concept", "Froghopper::7g6w5"], 
                Entity["Concept", "Frogmouth::km243"], 
                Entity["Concept", "FrontProjector::4y896"], 
                Entity["Concept", "FrontRoom::773p3"], 
                Entity["Concept", "FuelGauge::86hh8"], 
                Entity["Concept", "Fuji::jqr4s"], 
                Entity["Concept", "FulicaAtra::834gk"], 
                Entity["Concept", "Fulmar::2fpjc"], 
                Entity["Concept", "FundulusMajalis::2463q"], 
                Entity["Concept", "Furze::4t243"], 
                Entity["Concept", "GaleocerdoCuvieri::h7238"], 
                Entity["Concept", "GaleopsisTetrahit::dzk3q"], 
                Entity["Concept", "GaliumVerum::96dyq"], 
                Entity["Concept", "GallinagoGallinago::9g6jk"], 
                Entity["Concept", "GallinagoMedia::5s745"], 
                Entity["Concept", "GallinulaChloropus::h8gqz"], 
                Entity["Concept", "Gallus::627y8"], 
                Entity["Concept", "Gamba::3vw39"], 
                Entity["Concept", "GamblingCasino::6yv82"], 
                Entity["Concept", "GambusiaAffinis::99r7d"], 
                Entity["Concept", "Garage::m5448"], 
                Entity["Concept", "GardenBalm::f4s42"], 
                Entity["Concept", "GardenersDelight::tbb52"], 
                Entity["Concept", "GardenForget-me-not::r5ynq"], 
                Entity["Concept", "GardenNasturtium::6fsqm"], 
                Entity["Concept", "GardenPea::jn6hk"], 
                Entity["Concept", "GardenRhubarb::8njf6"], 
                Entity["Concept", "Garfish::p9w7b"], 
                Entity["Concept", "Garget::99c58"], 
                Entity["Concept", "GarryOak::yrd6t"], 
                Entity["Concept", "GasGage::j9554"], 
                Entity["Concept", "GasHelmet::23k79"], 
                Entity["Concept", "GasMeter::2q6zx"], 
                Entity["Concept", "GasolinePump::wk2nk"], 
                Entity["Concept", "GasRing::9sskg"], 
                Entity["Concept", "Gavial::f4qny"], 
                Entity["Concept", "GazaniaRigens::hm7rv"], 
                Entity["Concept", "Gazebo::kgq3t"], 
                Entity["Concept", "GazellaThomsoni::j5cmv"], 
                Entity["Concept", "GazelleHound::7k449"], 
                Entity["Concept", "Gearset::jy5rq"], 
                Entity["Concept", "GemClip::34d4y"], 
                Entity["Concept", "Gemsbok::6552p"], 
                Entity["Concept", "Genet::775k8"], 
                Entity["Concept", "GentianaAcaulis::47k49"], 
                Entity["Concept", "GentianaClausa::7kk8q"], 
                Entity["Concept", "GentianaLutea::d625g"], 
                Entity["Concept", "GeodesicDome::3z9g7"], 
                Entity["Concept", "Geoduck::h95p3"], 
                Entity["Concept", "GeorgiaPine::3y635"], 
                Entity["Concept", "GeraniumMaculatum::kr853"], 
                Entity["Concept", "GeraniumPratense::2cdkk"], 
                Entity["Concept", "GeraniumRobertianum::3996g"], 
                Entity["Concept", "Gerenuk::8949v"], 
                Entity["Concept", "GermanChamomile::jpp74"], 
                Entity["Concept", "GermanShort-hairedPointer::k3297"], 
                Entity["Concept", "Geta::3r9c9"], 
                Entity["Concept", "GeumTriflorum::s9xxg"], 
                Entity["Concept", "GiantAnteater::y96st"], 
                Entity["Concept", "GiantConch::f3kfh"], 
                Entity["Concept", "GiantGranadilla::p9925"], 
                Entity["Concept", "GiantHornet::r4yrx"], 
                Entity["Concept", "GiantKangaroo::45dx4"], 
                Entity["Concept", "GiantSalamander::599jh"], 
                Entity["Concept", "GiantSchnauzer::8fwv6"], 
                Entity["Concept", "GiantSunflower::4y488"], 
                Entity["Concept", "GiantWaterBug::fnz6r"], 
                Entity["Concept", "Gibbon::7yqsr"], 
                Entity["Concept", "Gig::gn638"], 
                Entity["Concept", "GilaMonster::k8q26"], 
                Entity["Concept", "Gingko::ky9mp"], 
                Entity["Concept", "GinglymostomaCirratum::8gyc5"], 
                Entity["Concept", "Ginseng::8675h"], 
                Entity["Concept", "GipsyMoth::8kgb3"], 
                Entity["Concept", "Glasshouse::qxjm6"], 
                Entity["Concept", "GlauciumFlavum::fd5qs"], 
                Entity["Concept", "GleditsiaTriacanthos::28fq9"], 
                Entity["Concept", "GlobalPositioningSystem::x6392"], 
                Entity["Concept", "GlobeAmaranth::vzj8x"], 
                Entity["Concept", "Globefish::z6448"], 
                Entity["Concept", "GlobeThistle::b8726"], 
                Entity["Concept", "Glockenspiel::p75rx"], 
                Entity["Concept", "GloveCompartment::7y7bd"], 
                Entity["Concept", "GloxiniaPerennis::384j4"], 
                Entity["Concept", "Gnu::y7788"], 
                Entity["Concept", "GoaBeanVine::z6xfx"], 
                Entity["Concept", "Goalpost::24v65"], 
                Entity["Concept", "Goatsbeard::c234z"], 
                Entity["Concept", "GobioGobio::z3gym"], 
                Entity["Concept", "Goblet::h85x9"], 
                Entity["Concept", "Go-kart::gjsj5"], 
                Entity["Concept", "Goldcrest::2zfkw"], 
                Entity["Concept", "GoldenButtons::2tjbs"], 
                Entity["Concept", "GoldenEverlasting::48wjy"], 
                Entity["Concept", "GoldenHamster::s252h"], 
                Entity["Concept", "GoldenOriole::tr8jz"], 
                Entity["Concept", "GoldenPlover::869c8"], 
                Entity["Concept", "GoldenRetriever::t59tg"], 
                Entity["Concept", "GoldenSeal::gk753"], 
                Entity["Concept", "GoldenWillow::7877c"], 
                Entity["Concept", "GolfBag::r894j"], 
                Entity["Concept", "GolfBall::63tb2"], 
                Entity["Concept", "GolfCart::sxmp6"], 
                Entity["Concept", "GolfCourse::6kg47"], 
                Entity["Concept", "GolfGlove::76j8h"], 
                Entity["Concept", "GolfTee::6q54h"], 
                Entity["Concept", "Golliwog::vggr6"], 
                Entity["Concept", "Goober::h4f7y"], 
                Entity["Concept", "Goosander::c3nqw"], 
                Entity["Concept", "GooseBarnacle::v2vv4"], 
                Entity["Concept", "GooseberryBush::58ffq"], 
                Entity["Concept", "GopherTortoise::b3d4v"], 
                Entity["Concept", "GordonSetter::yvx65"], 
                Entity["Concept", "Gorget::wyt76"], 
                Entity["Concept", "GorillaGorillaGorilla::mdgn8"], 
                Entity["Concept", "Gosling::c6pth"], 
                Entity["Concept", "Gouge::m9z7p"], 
                Entity["Concept", "GrabBar::6vr95"], 
                Entity["Concept", "GraculaReligiosa::nrf2b"], 
                Entity["Concept", "GraduatedCylinder::7wgfs"], 
                Entity["Concept", "Graffiti::4c8mh"], 
                Entity["Concept", "Grain::687zf"], 
                Entity["Concept", "GrandfatherClock::ttqp2"], 
                Entity["Concept", "Grapefruit::9539q"], 
                Entity["Concept", "GrassFrog::43r85"], 
                Entity["Concept", "GrassSkirt::64f74"], 
                Entity["Concept", "Grate::kk3kz"], 
                Entity["Concept", "Grater::2c596"], 
                Entity["Concept", "Gravestone::5g3c5"], 
                Entity["Concept", "Gray::6499h"], 
                Entity["Concept", "GrayFox::vftd5"], 
                Entity["Concept", "GrayKingbird::77dz3"], 
                Entity["Concept", "GrayPartridge::78kgc"], 
                Entity["Concept", "GrazingLand::489x6"], 
                Entity["Concept", "Grease-gun::4hxzh"], 
                Entity["Concept", "GreatCrestedGrebe::33v29"], 
                Entity["Concept", "GreatDane::xg8dn"], 
                Entity["Concept", "GreaterKudu::b5gr2"], 
                Entity["Concept", "GreaterPrairieChicken::7ff7x"], 
                Entity["Concept", "GreaterSwissMountainDog::t7642"], 
                Entity["Concept", "GreaterWhitethroat::36r5t"], 
                Entity["Concept", "GreaterYellowlegs::k65zr"], 
                Entity["Concept", "GreatGrayOwl::97vk2"], 
                Entity["Concept", "GreatPyrenees::t8qh7"], 
                Entity["Concept", "GreatStJohnsWort::xk69f"], 
                Entity["Concept", "Greenbottle::8sm7p"], 
                Entity["Concept", "GreenCorn::8cpx4"], 
                Entity["Concept", "GreenFringedOrchis::d9557"], 
                Entity["Concept", "GreenFrog::8c683"], 
                Entity["Concept", "Greenhood::7j733"], 
                Entity["Concept", "GreenLizard::2fkzv"], 
                Entity["Concept", "GreenOlive::m444c"], 
                Entity["Concept", "GreenPeafowl::dg5pr"], 
                Entity["Concept", "GreenPlover::vz8dm"], 
                Entity["Concept", "GreenSalad::sg3k8"], 
                Entity["Concept", "Greenshank::5s743"], 
                Entity["Concept", "GreenSnake::35p23"], 
                Entity["Concept", "GreenWoodpecker::zpv3y"], 
                Entity["Concept", "Grey-leafPine::258t9"], 
                Entity["Concept", "Griddle::b57db"], 
                Entity["Concept", "GriffonVulture::mb24w"], 
                Entity["Concept", "Grinder::3v695"], 
                Entity["Concept", "Grindstone::6xy8z"], 
                Entity["Concept", "Grizzly::rj93f"], 
                Entity["Concept", "Groats::852cq"], 
                Entity["Concept", "Groenendael::5854s"], 
                Entity["Concept", "Ground-effectMachine::f72j2"], 
                Entity["Concept", "GroundFir::t765m"], 
                Entity["Concept", "Groundhog::xm342"], 
                Entity["Concept", "GroundRattler::d9f52"], 
                Entity["Concept", "Grunter::437d2"], 
                Entity["Concept", "GrusAmericana::4xmbs"], 
                Entity["Concept", "Guacamole::xc482"], 
                Entity["Concept", "Guanabana::j83p3"], 
                Entity["Concept", "Guanaco::3s6dj"], 
                Entity["Concept", "Guardrail::mq454"], 
                Entity["Concept", "GuavaBush::8rnkc"], 
                Entity["Concept", "Guillotine::w4656"], 
                Entity["Concept", "GuineaHen::jtq9p"], 
                Entity["Concept", "GuitarPick::827f6"], 
                Entity["Concept", "GuloGulo::2v5b7"], 
                Entity["Concept", "GunEnclosure::yk88b"], 
                Entity["Concept", "Guppy::t6x83"], 
                Entity["Concept", "Gym::2fw7w"], 
                Entity["Concept", "GymnocarpiumDryopteris::xt23d"], 
                Entity["Concept", "GymnorhinaTibicen::9nmgw"], 
                Entity["Concept", "Gyro::2348d"], 
                Entity["Concept", "Gyroscope::668pf"], 
                Entity["Concept", "HabenariaPsycodes::nhdh5"], 
                Entity["Concept", "Haemostat::ggy65"], 
                Entity["Concept", "Hairbrush::hcm6m"], 
                Entity["Concept", "HairSlide::3xwcp"], 
                Entity["Concept", "HalesiaCarolina::35rx6"], 
                Entity["Concept", "HaliaeetusPelagicus::m6crc"], 
                Entity["Concept", "HaliotisTuberculata::73fcr"], 
                Entity["Concept", "Hammer::t5864"], 
                Entity["Concept", "Hammock::kjy9b"], 
                Entity["Concept", "Handbasin::6w875"], 
                Entity["Concept", "Handbell::d57k8"], 
                Entity["Concept", "HandCalculator::gmxc4"], 
                Entity["Concept", "Handcar::hx379"], 
                Entity["Concept", "Handcuff::zv5sq"], 
                Entity["Concept", "Hand-heldComputer::zs5zw"], 
                Entity["Concept", "Handlebar::59pyb"], 
                Entity["Concept", "Handle-bars::mvr9v"], 
                Entity["Concept", "HandLuggage::992vm"], 
                Entity["Concept", "HandMirror::259y7"], 
                Entity["Concept", "HandPump::z4zms"], 
                Entity["Concept", "HangGlider::852m2"], 
                Entity["Concept", "HangingGeranium::2k5wh"], 
                Entity["Concept", "Harmonica::8t835"], 
                Entity["Concept", "Harmonium::2t56k"], 
                Entity["Concept", "Harness::77y28"], 
                Entity["Concept", "Harness::k724x"], 
                Entity["Concept", "HarpiaHarpyja::5975t"], 
                Entity["Concept", "Harp::mp5bz"], 
                Entity["Concept", "HarpSeal::8n44j"], 
                Entity["Concept", "HarrierEagle::zqpb7"], 
                Entity["Concept", "Hartebeest::r8276"], 
                Entity["Concept", "Hart::kqk68"], 
                Entity["Concept", "Harvestman::545h3"], 
                Entity["Concept", "Hasp::2pv6h"], 
                Entity["Concept", "Hatbox::mh5qs"], 
                Entity["Concept", "Hatchback::78j33"], 
                Entity["Concept", "HatchbackDoor::n39m2"], 
                Entity["Concept", "HawaiianGuitar::84g78"], 
                Entity["Concept", "HawkOwl::6gb3x"], 
                Entity["Concept", "Hawkweed::5nywy"], 
                Entity["Concept", "HayBale::k66cq"], 
                Entity["Concept", "Hayfield::rnj24"], 
                Entity["Concept", "HeadGasket::py6zh"], 
                Entity["Concept", "Headland::8n9c9"], 
                Entity["Concept", "Hearse::46q8t"], 
                Entity["Concept", "HeatSink::4p498"], 
                Entity["Concept", "HedgehogCactus::598vw"], 
                Entity["Concept", "HedgeMustard::5n62s"], 
                Entity["Concept", "HedgeTrimmer::fjh2y"], 
                Entity["Concept", "HelianthusAngustifolius::bn7d4"], 
                Entity["Concept", "HelianthusPetiolaris::4mz55"], 
                Entity["Concept", "HelianthusTuberosus::z92p8"], 
                Entity["Concept", "Heliopsis::w5695"], 
                Entity["Concept", "Heliport::vn5cn"], 
                Entity["Concept", "Helleri::4433j"], 
                Entity["Concept", "Helmetflower::sg8xj"], 
                Entity["Concept", "HelminthostachysZeylanica::7v5p6"], 
                Entity["Concept", "HemachatusHaemachatus::37gsx"], 
                Entity["Concept", "HemerocallisFlava::4567g"], 
                Entity["Concept", "Henbit::n333t"], 
                Entity["Concept", "HerbGarden::v944v"], 
                Entity["Concept", "Hereford::75m7b"], 
                Entity["Concept", "HeritieraLittoralis::x67yf"], 
                Entity["Concept", "HermissendaCrassicornis::vf4wd"], 
                Entity["Concept", "HermitCrab::4k242"], 
                Entity["Concept", "HermitThrush::8q3x5"], 
                Entity["Concept", "HerringbonePattern::8g987"], 
                Entity["Concept", "HerringGull::fv8wn"], 
                Entity["Concept", "HexalectrisWarnockii::3d45r"], 
                Entity["Concept", "HickoryPine::98t8v"], 
                Entity["Concept", "HighAltar::bsy83"], 
                Entity["Concept", "HighballGlass::fp5xf"], 
                Entity["Concept", "HighBar::n5222"], 
                Entity["Concept", "Hill::3k7f4"], 
                Entity["Concept", "HimantoglossumHircinum::nd9wm"], 
                Entity["Concept", "Hipflask::948m7"], 
                Entity["Concept", "Hippeastrum::s2dbp"], 
                Entity["Concept", "Hippo::647b2"], 
                Entity["Concept", "HippoboscaEquina::t97v5"], 
                Entity["Concept", "HipPocket::388h2"], 
                Entity["Concept", "HippodamiaConvergens::7xt8j"], 
                Entity["Concept", "HippotragusNiger::6vp77"], 
                Entity["Concept", "HirudoMedicinalis::m275r"], 
                Entity["Concept", "HirundoNigricans::v8xq9"], 
                Entity["Concept", "Hoactzin::99g32"], 
                Entity["Concept", "HoaryMarmot::2dpyb"], 
                Entity["Concept", "HockeyPuck::3hj3q"], 
                Entity["Concept", "HockeyStick::mdz6m"], 
                Entity["Concept", "Hodometer::jw6kb"], 
                Entity["Concept", "Hoe::297xb"], 
                Entity["Concept", "HognoseSnake::k5k58"], 
                Entity["Concept", "HoheriaPopulnea::9n4y4"], 
                Entity["Concept", "HolcusLanatus::w4jc4"], 
                Entity["Concept", "Holibut::8543n"], 
                Entity["Concept", "Hollygrape::f5h8y"], 
                Entity["Concept", "HolocanthusTricolor::6t872"], 
                Entity["Concept", "HolothuriaEdulis::52f34"], 
                Entity["Concept", "HolyThistle::4j723"], 
                Entity["Concept", "HomarusAmericanus::n2j65"], 
                Entity["Concept", "HomePlate::2643s"], 
                Entity["Concept", "HomeTheater::4y845"], 
                Entity["Concept", "HomonaCoffearia::ykhf6"], 
                Entity["Concept", "HondurasMahogany::q3cs2"], 
                Entity["Concept", "HoneyBear::t4wf4"], 
                Entity["Concept", "HoneyBuzzard::7x32k"], 
                Entity["Concept", "Honeycomb::9g58f"], 
                Entity["Concept", "Honeydew::xjv3c"], 
                Entity["Concept", "Honeypot::t9577"], 
                Entity["Concept", "HoodedMerganser::trk52"], 
                Entity["Concept", "Hoop::74nr5"], 
                Entity["Concept", "Hornbill::6389h"], 
                Entity["Concept", "HornedViolet::4v996"], 
                Entity["Concept", "HorseBarn::2yfwj"], 
                Entity["Concept", "Horseshoe::29p63"], 
                Entity["Concept", "Horseshoe::c3gkc"], 
                Entity["Concept", "HorseshoeCrab::q28j2"], 
                Entity["Concept", "Hospital::5vz7v"], 
                Entity["Concept", "HospitalBed::89p76"], 
                Entity["Concept", "HospitalRoom::822m3"], 
                Entity["Concept", "HospitalShip::5x2nt"], 
                Entity["Concept", "Hot-airBalloon::23k45"], 
                Entity["Concept", "Hotel::74q74"], 
                Entity["Concept", "HotLine::vqtm7"], 
                Entity["Concept", "HotPlate::2sq6r"], 
                Entity["Concept", "HotSpring::638q8"], 
                Entity["Concept", "HotStuffedTomato::z4674"], 
                Entity["Concept", "Hourglass::83jnz"], 
                Entity["Concept", "House::8tkvp"], 
                Entity["Concept", "Houseboat::772p5"], 
                Entity["Concept", "HouseCentipede::vn4xr"], 
                Entity["Concept", "HouseFly::5f478"], 
                Entity["Concept", "HouseMouse::tyf4y"], 
                Entity["Concept", "HouseWren::rmvm8"], 
                Entity["Concept", "Howitzer::xn4pp"], 
                Entity["Concept", "HowlerMonkey::87c48"], 
                Entity["Concept", "HoyaCarnosa::9j363"], 
                Entity["Concept", "Hubcap::265j7"], 
                Entity["Concept", "HudsonianGodwit::7457p"], 
                Entity["Concept", "Hula-hoop::8r34s"], 
                Entity["Concept", "HumanFoot::s8897"], 
                Entity["Concept", "HumanSkeleton::23lki"], 
                Entity["Concept", "Hum-Vee::dq723"], 
                Entity["Concept", "HungarianPointer::7555p"], 
                Entity["Concept", "HuntingKnife::y7jz9"], 
                Entity["Concept", "Hurdle::jyww6"], 
                Entity["Concept", "Hurricane::5wbfg"], 
                Entity["Concept", "HurricaneLamp::gk556"], 
                Entity["Concept", "HyaenaHyaena::3zrqj"], 
                Entity["Concept", "HybridPetunia::q8278"], 
                Entity["Concept", "HydrangeaMacrophyllaHortensis::275gp"], 
                Entity["Concept", "Hydrofoil::66pc3"], 
                Entity["Concept", "HylaCrucifer::f64j2"], 
                Entity["Concept", "HylaRegilla::fk8rx"], 
                Entity["Concept", "HylobatesSyndactylus::3g4xn"], 
                Entity["Concept", "HylocichlaFuscescens::9pjmk"], 
                Entity["Concept", "HylocichlaMustelina::jpgz5"], 
                Entity["Concept", "HypericumPerforatum::jcn2d"], 
                Entity["Concept", "HypodermicNeedle::dx4j6"], 
                Entity["Concept", "HypsiglenaTorquata::6869v"], 
                Entity["Concept", "HyssopusOfficinalis::vd87d"], 
                Entity["Concept", "I-beam::25b5q"], 
                Entity["Concept", "IbisIbis::r9664"], 
                Entity["Concept", "IbizanHound::987kj"], 
                Entity["Concept", "IceBear::fnc5j"], 
                Entity["Concept", "Ice-creamCone::b5dfc"], 
                Entity["Concept", "IceLolly::473v3"], 
                Entity["Concept", "IcePlant::hfpb4"], 
                Entity["Concept", "IceRink::32f4d"], 
                Entity["Concept", "IceShelf::4pwhj"], 
                Entity["Concept", "IchneumonFly::b242c"], 
                Entity["Concept", "IcteriaVirens::76hqr"], 
                Entity["Concept", "IcterusSpurius::296sb"], 
                Entity["Concept", "Igloo::n559k"], 
                Entity["Concept", "IgneousRock::9r5r5"], 
                Entity["Concept", "IlexDecidua::8f2fm"], 
                Entity["Concept", "IlliciumVerum::p322s"], 
                Entity["Concept", "ImpatiensCapensis::957m2"], 
                Entity["Concept", "InachisIo::2n487"], 
                Entity["Concept", "Inchworm::75p9q"], 
                Entity["Concept", "IndianBeet::377s5"], 
                Entity["Concept", "IndianCobra::2sv7h"], 
                Entity["Concept", "IndianCrocus::7t68s"], 
                Entity["Concept", "IndianPipe::xj9yx"], 
                Entity["Concept", "IndianPython::c7n8m"], 
                Entity["Concept", "IndianRhinoceros::5zv66"], 
                Entity["Concept", "IndianTapir::v6tk3"], 
                Entity["Concept", "IndigoBird::6365d"], 
                Entity["Concept", "Indri::w2dsm"], 
                Entity["Concept", "IndustrialPark::tk37w"], 
                Entity["Concept", "Inhaler::344r5"], 
                Entity["Concept", "Interceptor::zff3s"], 
                Entity["Concept", "InteriorLiveOak::65yy2"], 
                Entity["Concept", "Involucre::2fx62"], 
                Entity["Concept", "IpomoeaCoccinea::56f3w"], 
                Entity["Concept", "IpomoeaNil::8pnvn"], 
                Entity["Concept", "IridoprocneBicolor::g3q68"], 
                Entity["Concept", "IrisCristata::hzm8j"], 
                Entity["Concept", "IrisGermanica::hj99n"], 
                Entity["Concept", "IrishSetter::h5pp3"], 
                Entity["Concept", "IrishTerrier::qmsm4"], 
                Entity["Concept", "IrishWolfhound::8m3gw"], 
                Entity["Concept", "IrisKaempferi::8nmjn"], 
                Entity["Concept", "IrisVerna::2528b"], 
                Entity["Concept", "IrisXiphium::g86v2"], 
                Entity["Concept", "Iron-tree::7httx"], 
                Entity["Concept", "Ironweed::nv3rw"], 
                Entity["Concept", "Isle::326gs"], 
                Entity["Concept", "ItalianGreyhound::s4gq3"], 
                Entity["Concept", "ItalianRice::k48jr"], 
                Entity["Concept", "IvoryGull::8682s"], 
                Entity["Concept", "IxobrychusExilis::4fcjx"], 
                Entity["Concept", "IxodesRicinus::bk6g8"], 
                Entity["Concept", "JabiruMycteria::r3jwm"], 
                Entity["Concept", "Jaboticaba::r9dp9"], 
                Entity["Concept", "JaboticabaTree::4889z"], 
                Entity["Concept", "Jabot::yct7q"], 
                Entity["Concept", "Jacamar::v7428"], 
                Entity["Concept", "Jack::363y2"], 
                Entity["Concept", "JackassPenguin::s7wzk"], 
                Entity["Concept", "Jack-in-the-box::c49p5"], 
                Entity["Concept", "JackMackerel::hc464"], 
                Entity["Concept", "Jack-o-lantern::yss6v"], 
                Entity["Concept", "JackPine::77fn5"], 
                Entity["Concept", "JailCell::rg79p"], 
                Entity["Concept", "Jak::p6r56"], 
                Entity["Concept", "JamaicaHoneysuckle::285q5"], 
                Entity["Concept", "JapaneseApricot::28s37"], 
                Entity["Concept", "JapaneseBanana::k7883"], 
                Entity["Concept", "JapaneseBeech::6c968"], 
                Entity["Concept", "JapaneseBeetle::9kvxt"], 
                Entity["Concept", "JapaneseBlackPine::y4w92"], 
                Entity["Concept", "JapaneseCherry::7hm62"], 
                Entity["Concept", "JapaneseHoneysuckle::bsp45"], 
                Entity["Concept", "JapanesePlum::q4qgn"], 
                Entity["Concept", "JapaneseUmbrellaPine::h3565"], 
                Entity["Concept", "JapaneseWistaria::qhqc5"], 
                Entity["Concept", "JasminumNudiflorum::3d887"], 
                Entity["Concept", "JavaFinch::kq4fc"], 
                Entity["Concept", "Java::jjtd5"], 
                Entity["Concept", "Javelin::vtnk7"], 
                Entity["Concept", "Jawfish::5nhwy"], 
                Entity["Concept", "Jeep::5twmt"], 
                Entity["Concept", "JeffreyPine::64f95"], 
                Entity["Concept", "JellyBean::3mrk3"], 
                Entity["Concept", "JerusalemArtichoke::2hwky"], 
                Entity["Concept", "JerusalemCricket::js76y"], 
                Entity["Concept", "Jetliner::p464v"], 
                Entity["Concept", "JewelersLoupe::kg4bc"], 
                Entity["Concept", "JewelryDealer::778w9"], 
                Entity["Concept", "JigsawPuzzle::jgp79"], 
                Entity["Concept", "Jinrikisha::g7j7m"], 
                Entity["Concept", "Joinery::z5mvb"], 
                Entity["Concept", "JointedCharlock::d627k"], 
                Entity["Concept", "JointHinge::z66rn"], 
                Entity["Concept", "Jonquil::82x6j"], 
                Entity["Concept", "JoshuaTree::7n346"], 
                Entity["Concept", "Joystick::nj32z"], 
                Entity["Concept", "Jug::ztgy9"], 
                Entity["Concept", "JuiceReamer::47m79"], 
                Entity["Concept", "Jukebox::s4vg2"], 
                Entity["Concept", "JumboJet::558sx"], 
                Entity["Concept", "JungleGym::ptht3"], 
                Entity["Concept", "JuniperBerries::rdfw3"], 
                Entity["Concept", "JuniperBerry::s4rts"], 
                Entity["Concept", "Junk::74nvj"], 
                Entity["Concept", "Jupiter::5qs22"], 
                Entity["Concept", "KaiserRoll::22qq5"], 
                Entity["Concept", "KakatoeLeadbeateri::28y43"], 
                Entity["Concept", "Kali::b73zq"], 
                Entity["Concept", "Kameez::6v488"], 
                Entity["Concept", "KangarooBear::hvf3s"], 
                Entity["Concept", "KatsuwonusPelamis::y32gt"], 
                Entity["Concept", "Kayak::pmh72"], 
                Entity["Concept", "Kazoo::cg6y3"], 
                Entity["Concept", "Kea::jj8ks"], 
                Entity["Concept", "Keeshond::rz734"], 
                Entity["Concept", "Kelpie::k6795"], 
                Entity["Concept", "Kepi::y77jh"], 
                Entity["Concept", "KerryBlueTerrier::t9c62"], 
                Entity["Concept", "Ketch::h284b"], 
                Entity["Concept", "Kettledrum::5q5b7"], 
                Entity["Concept", "Keyhole::w5wnn"], 
                Entity["Concept", "KeyLime::z9578"], 
                Entity["Concept", "KeyPalm::y2388"], 
                Entity["Concept", "Khukuri::5s498"], 
                Entity["Concept", "KillerWhale::26sj4"], 
                Entity["Concept", "Kilt::sy926"], 
                Entity["Concept", "Kimono::284nv"], 
                Entity["Concept", "King::8tmwc"], 
                Entity["Concept", "KingCharlesSpaniel::6r663"], 
                Entity["Concept", "KingCobra::gwr8g"], 
                Entity["Concept", "Kingfish::2wws3"], 
                Entity["Concept", "KingOfBeasts::vrwm9"], 
                Entity["Concept", "KingVulture::v8869"], 
                Entity["Concept", "Kiosk::h4sfk"], 
                Entity["Concept", "KitchenGarden::wz436"], 
                Entity["Concept", "Kitchen::vrsg6"], 
                Entity["Concept", "Kittiwake::n223q"], 
                Entity["Concept", "KiwiFruit::854z5"], 
                Entity["Concept", "KneeBrace::9898t"], 
                Entity["Concept", "Knee-hi::h5ycb"], 
                Entity["Concept", "KneePad::nh7y5"], 
                Entity["Concept", "KniphofiaPraecox::r4f7w"], 
                Entity["Concept", "KnittingNeedle::22s96"], 
                Entity["Concept", "Knot::f4x5y"], 
                Entity["Concept", "KnottedMarjoram::b6cqv"], 
                Entity["Concept", "Kob::shdy6"], 
                Entity["Concept", "Komondor::p8q9b"], 
                Entity["Concept", "Koto::6y74p"], 
                Entity["Concept", "Kowhai::3382q"], 
                Entity["Concept", "Kudzu::3w7x7"], 
                Entity["Concept", "Kumquat::r744x"], 
                Entity["Concept", "Kurta::s9652"], 
                Entity["Concept", "Kuvasz::z4sxp"], 
                Entity["Concept", "LabradorRetriever::7g587"], 
                Entity["Concept", "Labyrinth::gc6rg"], 
                Entity["Concept", "Lace::5y6z9"], 
                Entity["Concept", "LacertaAgilis::dv7v7"], 
                Entity["Concept", "LactucaSativaCrispa::7359v"], 
                Entity["Concept", "Ladder-backChair::2s3g6"], 
                Entity["Concept", "Laelia::d5sj9"], 
                Entity["Concept", "LagarostrobusColensoi::768s9"], 
                Entity["Concept", "LagerstroemiaSpeciosa::f6mv3"], 
                Entity["Concept", "LagodonRhomboides::6f322"], 
                Entity["Concept", "LagunculariaRacemosa::95ffj"], 
                Entity["Concept", "Lake::g4z3f"], 
                Entity["Concept", "LakelandTerrier::b729b"], 
                Entity["Concept", "LakeSalmon::nm9sc"], 
                Entity["Concept", "LamaPacos::75yp4"], 
                Entity["Concept", "LamiumAlbum::8j945"], 
                Entity["Concept", "LamnaNasus::nswj3"], 
                Entity["Concept", "Lamppost::7q5zr"], 
                Entity["Concept", "LampShade::4b824"], 
                Entity["Concept", "LancetWindow::8458v"], 
                Entity["Concept", "LandingNet::sgr2d"], 
                Entity["Concept", "Laniard::knv4b"], 
                Entity["Concept", "LaniusBorealis::434q7"], 
                Entity["Concept", "LaniusLucovicianus::3dy59"], 
                Entity["Concept", "Laptop::zdd33"], 
                Entity["Concept", "Largemouth::464g8"], 
                Entity["Concept", "LargePeriwinkle::bs69f"], 
                Entity["Concept", "LargeWhite::k6595"], 
                Entity["Concept", "Lariat::8pffb"], 
                Entity["Concept", "LarixOccidentalis::k84y9"], 
                Entity["Concept", "Larkspur::gz9qs"], 
                Entity["Concept", "LarusCanus::52t8t"], 
                Entity["Concept", "LarusRidibundus::2gq7k"], 
                Entity["Concept", "Laryngoscope::7k583"], 
                Entity["Concept", "Lasagna::pc8pw"], 
                Entity["Concept", "LaserPrinter::ph277"], 
                Entity["Concept", "Laser::wg253"], 
                Entity["Concept", "Latch::25x5q"], 
                Entity["Concept", "LaundryCart::s9zh3"], 
                Entity["Concept", "Lav::5mtv5"], 
                Entity["Concept", "LavandulaLatifolia::2286r"], 
                Entity["Concept", "LavandulaStoechas::6496q"], 
                Entity["Concept", "LavenderCotton::524m6"], 
                Entity["Concept", "LayiaPlatyglossa::27k44"], 
                Entity["Concept", "LeadTree::854z7"], 
                Entity["Concept", "Leaf-cutter::j75c6"], 
                Entity["Concept", "Leaf-footBug::fnf35"], 
                Entity["Concept", "Leatherfish::4wxdf"], 
                Entity["Concept", "Lectern::v8fw8"], 
                Entity["Concept", "Leechee::q8m6f"], 
                Entity["Concept", "Leghorn::96m72"], 
                Entity["Concept", "LeglessLizard::zthf4"], 
                Entity["Concept", "Leg::w5w74"], 
                Entity["Concept", "Lemon::743j2"], 
                Entity["Concept", "LemonBalm::bxyg8"], 
                Entity["Concept", "LemonShark::4p288"], 
                Entity["Concept", "LemurCatta::4z4fy"], 
                Entity["Concept", "LensCap::6j259"], 
                Entity["Concept", "LensCulinaris::3kp5n"], 
                Entity["Concept", "LenticularClouds::4s6jz"], 
                Entity["Concept", "Lentisk::6h378"], 
                Entity["Concept", "Leonberg::49td5"], 
                Entity["Concept", "LeonurusCardiaca::x8m7f"], 
                Entity["Concept", "LeopardFrog::n8937"], 
                Entity["Concept", "LeopardLizard::n5952"], 
                Entity["Concept", "LepidochelysOlivacea::k7753"], 
                Entity["Concept", "LepismaSaccharina::44y5d"], 
                Entity["Concept", "LepomisGibbosus::9d49f"], 
                Entity["Concept", "LeptoptilusCrumeniferus::t7q42"], 
                Entity["Concept", "LepusAmericanus::86wj7"], 
                Entity["Concept", "LesserAnteater::45x83"], 
                Entity["Concept", "LesserCelandine::788rg"], 
                Entity["Concept", "LesserWhitethroat::8z24s"], 
                Entity["Concept", "LesserYellowlegs::9q8b5"], 
                Entity["Concept", "Leucocyte::v5689"], 
                Entity["Concept", "LeverTumbler::565k8"], 
                Entity["Concept", "LevisticumOfficinale::85c48"], 
                Entity["Concept", "LhasaApso::cr28m"], 
                Entity["Concept", "LibocedrusBidwillii::w8fkz"], 
                Entity["Concept", "Library::35dt7"], 
                Entity["Concept", "Library::8855f"], 
                Entity["Concept", "Library::fc476"], 
                Entity["Concept", "LichanuraTrivirgata::4238d"], 
                Entity["Concept", "LidoDeck::xds4j"], 
                Entity["Concept", "Liger::dww25"], 
                Entity["Concept", "LightningArrester::jtt72"], 
                Entity["Concept", "Lightning::h59dm"], 
                Entity["Concept", "Lightship::q32kd"], 
                Entity["Concept", "LightWhippingCream::rytm5"], 
                Entity["Concept", "LiliumAuratum::h2xyg"], 
                Entity["Concept", "LiliumCatesbaei::8w9cs"], 
                Entity["Concept", "LiliumMartagon::3dx6d"], 
                Entity["Concept", "LiliumPardalinum::3768c"], 
                Entity["Concept", "LiliumSuperbum::45v37"], 
                Entity["Concept", "LimenitisArchippus::8b446"], 
                Entity["Concept", "LimenitisAstyanax::5k738"], 
                Entity["Concept", "LimenitisCamilla::3qkzq"], 
                Entity["Concept", "LimnodromusGriseus::2db27"], 
                Entity["Concept", "Limo::jfrr3"], 
                Entity["Concept", "Linotype::w5fbf"], 
                Entity["Concept", "Lionfish::45vp5"], 
                Entity["Concept", "Lip::8f3g7"], 
                Entity["Concept", "Liparis::fg54m"], 
                Entity["Concept", "LipRouge::4vd22"], 
                Entity["Concept", "LiqueurGlass::8777b"], 
                Entity["Concept", "ListeraOvata::r2852"], 
                Entity["Concept", "LitchiChinensis::2jtq9"], 
                Entity["Concept", "LithocarpusGlaber::r62sv"], 
                Entity["Concept", "LithophragmaAffine::9h2sq"], 
                Entity["Concept", "Litter-basket::qh3j2"], 
                Entity["Concept", "Littleneck::858g8"], 
                Entity["Concept", "LiverChestnut::8yby8"], 
                Entity["Concept", "Liverleaf::dz934"], 
                Entity["Concept", "LivistonaAustralis::76g95"], 
                Entity["Concept", "Lizardfish::5rz5y"], 
                Entity["Concept", "Loach::6czym"], 
                Entity["Concept", "LoadingDock::tm5xn"], 
                Entity["Concept", "LobsterPot::zyqt9"], 
                Entity["Concept", "LobulariaMaritima::jwf3k"], 
                Entity["Concept", "LockChamber::jxz2m"], 
                Entity["Concept", "LockerRoom::z57pq"], 
                Entity["Concept", "Locket::6g6tw"], 
                Entity["Concept", "Locomotive::386s7"], 
                Entity["Concept", "LocustaMigratoria::7p594"], 
                Entity["Concept", "Lodgepole::8jxpv"], 
                Entity["Concept", "Loggia::t7pfy"], 
                Entity["Concept", "Logo::w59n9"], 
                Entity["Concept", "LonasAnnua::vd25t"], 
                Entity["Concept", "LondonPlane::j8pn7"], 
                Entity["Concept", "Longbow::vg74r"], 
                Entity["Concept", "Long-headConeflower::gkd78"], 
                Entity["Concept", "Longhorn::4wfkr"], 
                Entity["Concept", "LongHorse::x4679"], 
                Entity["Concept", "LongJohns::7jhyr"], 
                Entity["Concept", "LongSleeve::j9276"], 
                Entity["Concept", "LoniceraFlava::7czcb"], 
                Entity["Concept", "LoniceraPericlymenum::5h646"], 
                Entity["Concept", "LoudPedal::wq4pf"], 
                Entity["Concept", "LoungeSuit::h58ff"], 
                Entity["Concept", "Lovage::q2xt7"], 
                Entity["Concept", "Lovebird::zpg29"], 
                Entity["Concept", "LoveSeat::46sfq"], 
                Entity["Concept", "LowbushCranberry::794f9"], 
                Entity["Concept", "L-P::7jsc4"], 
                Entity["Concept", "LuffaCylindrica::yc89d"], 
                Entity["Concept", "Luger::39w62"], 
                Entity["Concept", "LuggageRack::853j3"], 
                Entity["Concept", "LundaCirrhata::s7694"], 
                Entity["Concept", "LupinusSubcarnosus::358m5"], 
                Entity["Concept", "LupinusTexensis::z3375"], 
                Entity["Concept", "LusciniaLuscinia::7vcyt"], 
                Entity["Concept", "Lute::3879d"], 
                Entity["Concept", "LutjanusApodus::2y8rx"], 
                Entity["Concept", "LutraCanadensis::775t2"], 
                Entity["Concept", "LychinsChalcedonica::q6q27"], 
                Entity["Concept", "LychinsFloscuculi::479c6"], 
                Entity["Concept", "LychnisDioica::6t8f5"], 
                Entity["Concept", "LyciumCarolinianum::5v8t6"], 
                Entity["Concept", "LycopodiumComplanatum::69c67"], 
                Entity["Concept", "Lyrebird::8c48w"], 
                Entity["Concept", "LysichitonAmericanum::92dj4"], 
                Entity["Concept", "LythrumSalicaria::m53b9"], 
                Entity["Concept", "MacacaMulatta::mtz4t"], 
                Entity["Concept", "MacadamiaNut::3k8n6"], 
                Entity["Concept", "Macaw::ntx97"], 
                Entity["Concept", "Machete::6jd97"], 
                Entity["Concept", "MacrodactylusSubspinosus::2xs99"], 
                Entity["Concept", "Macrozamia::dkp76"], 
                Entity["Concept", "MagicicadaSeptendecim::ry5sv"], 
                Entity["Concept", "MagnoliaStellata::jyc9t"], 
                Entity["Concept", "MagnoliaVirginiana::cpzh3"], 
                Entity["Concept", "MahoniaNervosa::428wj"], 
                Entity["Concept", "MaianthemumBifolium::gq7v4"], 
                Entity["Concept", "MaianthemumCanadense::vt999"], 
                Entity["Concept", "MalcolmStock::hg9xy"], 
                Entity["Concept", "Malinois::k8y57"], 
                Entity["Concept", "MalpighiaGlabra::j3tg7"], 
                Entity["Concept", "MalteseDog::trsv6"], 
                Entity["Concept", "MalusAngustifolia::pj8hh"], 
                Entity["Concept", "MalusPumila::t7d6g"], 
                Entity["Concept", "MalusSylvestris::q2fc9"], 
                Entity["Concept", "MalvaMoschata::8z87t"], 
                Entity["Concept", "Mammillaria::8564d"], 
                Entity["Concept", "Manakin::9y3f7"], 
                Entity["Concept", "Manatee::yn97d"], 
                Entity["Concept", "Mandola::pk7g6"], 
                Entity["Concept", "Mandrel::6r683"], 
                Entity["Concept", "Mandrill::8jcq7"], 
                Entity["Concept", "MangiferaIndica::c7pyf"], 
                Entity["Concept", "Mangle::65xk6"], 
                Entity["Concept", "Mango::ghb5w"], 
                Entity["Concept", "Mangosteen::mj4x4"], 
                Entity["Concept", "Mangrove::86p5q"], 
                Entity["Concept", "ManholeCover::4x7fq"], 
                Entity["Concept", "Mantilla::dt3h4"], 
                Entity["Concept", "MantisReligioso::mztk6"], 
                Entity["Concept", "ManufacturedHome::d7czj"], 
                Entity["Concept", "Manus::3qtmf"], 
                Entity["Concept", "MaoriHen::8p7cz"], 
                Entity["Concept", "Map::82r8s"], 
                Entity["Concept", "Maraca::395nq"], 
                Entity["Concept", "Marble::mf6zp"], 
                Entity["Concept", "Marimba::kbbq5"], 
                Entity["Concept", "Marjoram::986cb"], 
                Entity["Concept", "Marker::h922h"], 
                Entity["Concept", "MarketSquare::6xt89"], 
                Entity["Concept", "Markweed::645s2"], 
                Entity["Concept", "MarshRosemary::g6j95"], 
                Entity["Concept", "MarsileaQuadrifolia::387n9"], 
                Entity["Concept", "MartesMartes::tp4m4"], 
                Entity["Concept", "Mascara::jc7hf"], 
                Entity["Concept", "Masdevallia::8hjpc"], 
                Entity["Concept", "MasonBee::v5f49"], 
                Entity["Concept", "MasonWasp::9936w"], 
                Entity["Concept", "MasonWasp::v3pbj"], 
                Entity["Concept", "MassasaugaRattler::6p63v"], 
                Entity["Concept", "Mast::725k9"], 
                Entity["Concept", "Matai::yg4wg"], 
                Entity["Concept", "Match::cp294"], 
                Entity["Concept", "Matchstick::266wm"], 
                Entity["Concept", "MathematicalNotation::z5psk"], 
                Entity["Concept", "Maul::p9b5j"], 
                Entity["Concept", "Mavis::466q8"], 
                Entity["Concept", "Mayapple::tv6rq"], 
                Entity["Concept", "Maypole::qc3qr"], 
                Entity["Concept", "Maypop::fwt2v"], 
                Entity["Concept", "MeadowButtercup::82g8x"], 
                Entity["Concept", "MeadowClary::x24vw"], 
                Entity["Concept", "MeadowSpittlebug::2b45t"], 
                Entity["Concept", "Mealie::86d82"], 
                Entity["Concept", "MeasuringCup::7b637"], 
                Entity["Concept", "MeatCounter::d538s"], 
                Entity["Concept", "MeatGrinder::qksy6"], 
                Entity["Concept", "MeatThermometer::mm48d"], 
                Entity["Concept", "MechanicalPiano::95jm8"], 
                Entity["Concept", "MeconopsisCambrica::qzk67"], 
                Entity["Concept", "MedicineBall::598td"], 
                Entity["Concept", "Medina::9632f"], 
                Entity["Concept", "Medlar::7tfnv"], 
                Entity["Concept", "Medlar::hf9fj"], 
                Entity["Concept", "MedlarTree::tc33j"], 
                Entity["Concept", "Megaphone::h2tn2"], 
                Entity["Concept", "MelanerpesErythrocephalus::7mmxz"], 
                Entity["Concept", "MelospizaGeorgiana::jt49d"], 
                Entity["Concept", "MelospizaMelodia::6783h"], 
                Entity["Concept", "MelursusUrsinus::48x75"], 
                Entity["Concept", "Menorah::4js3g"], 
                Entity["Concept", "Menorah::6v4v5"], 
                Entity["Concept", "MenthaAquatica::d8dg4"], 
                Entity["Concept", "MenthaPiperita::nfn9d"], 
                Entity["Concept", "MenthaPulegium::xcgs7"], 
                Entity["Concept", "MenthaSpicata::86f39"], 
                Entity["Concept", "MephitisMephitis::z8755"], 
                Entity["Concept", "Mercury::kdbr5"], 
                Entity["Concept", "MergusAlbellus::qsk3j"], 
                Entity["Concept", "MergusSerrator::5t86m"], 
                Entity["Concept", "MertensiaVirginica::55yj6"], 
                Entity["Concept", "MetamorphicRock::9jnz4"], 
                Entity["Concept", "Metronome::jkn2k"], 
                Entity["Concept", "MexicanHat::jw8ks"], 
                Entity["Concept", "MexicanSunflower::k839k"], 
                Entity["Concept", "MicrometerCaliper::2xwd2"], 
                Entity["Concept", "MicropterusDolomieu::kjx2y"], 
                Entity["Concept", "Midge::q4895"], 
                Entity["Concept", "Mignonette::f5x52"], 
                Entity["Concept", "Mihrab::b28s6"], 
                Entity["Concept", "MilkCan::d9g72"], 
                Entity["Concept", "Millepede::js6bn"], 
                Entity["Concept", "Millet::b4h9s"], 
                Entity["Concept", "Millstone::dv72m"], 
                Entity["Concept", "Millstone::gsg4v"], 
                Entity["Concept", "MillWheel::26zs5"], 
                Entity["Concept", "Miltomate::j4675"], 
                Entity["Concept", "MimusPolyglotktos::sv9g6"], 
                Entity["Concept", "Mincer::5j857"], 
                Entity["Concept", "MiniaturePinscher::jvy9c"], 
                Entity["Concept", "MiniaturePoodle::4955p"], 
                Entity["Concept", "MiniatureSchnauzer::848y9"], 
                Entity["Concept", "Mini::pn78q"], 
                Entity["Concept", "Minnow::p5qz4"], 
                Entity["Concept", "Mint::j4mmf"], 
                Entity["Concept", "Mint::vy4q9"], 
                Entity["Concept", "Miro::7n77q"], 
                Entity["Concept", "MisselThrush::j5brg"], 
                Entity["Concept", "MissouriPrimrose::yc489"], 
                Entity["Concept", "Mitten::7d534"], 
                Entity["Concept", "Mixer::238c4"], 
                Entity["Concept", "ModelT::c44dv"], 
                Entity["Concept", "MoehringiaLateriflora::77gw2"], 
                Entity["Concept", "MoehringiaMucosa::3x24k"], 
                Entity["Concept", "Molle::fmyr5"], 
                Entity["Concept", "MolochHorridus::9p79d"], 
                Entity["Concept", "Momot::f7x9q"], 
                Entity["Concept", "MonardaDidyma::v49b7"], 
                Entity["Concept", "MonardaFistulosa::swwj6"], 
                Entity["Concept", "MonardaPunctata::hgq46"], 
                Entity["Concept", "Mongoose::5hp73"], 
                Entity["Concept", "Monocycle::mrm29"], 
                Entity["Concept", "MonsteraDeliciosa::34f2z"], 
                Entity["Concept", "MontereyPine::s7d9g"], 
                Entity["Concept", "MontiaChamissoi::2ph5c"], 
                Entity["Concept", "Moorhen::dd52z"], 
                Entity["Concept", "Mop::v6xdr"], 
                Entity["Concept", "Moray::7t957"], 
                Entity["Concept", "Morgan::375t6"], 
                Entity["Concept", "MorningCoat::j4zdq"], 
                Entity["Concept", "Mortarboard::8r99w"], 
                Entity["Concept", "Mortar::jz37q"], 
                Entity["Concept", "MorusAlba::9tbpd"], 
                Entity["Concept", "Mosque::35k94"], 
                Entity["Concept", "MosquitoNet::5z562"], 
                Entity["Concept", "MossCampion::34p46"], 
                Entity["Concept", "Mother-of-pearlCloud::n4xpd"], 
                Entity["Concept", "MothMullein::6r576"], 
                Entity["Concept", "Motorcycle::4gd85"], 
                Entity["Concept", "MotorScooter::bbwp9"], 
                Entity["Concept", "Moufflon::272gp"], 
                Entity["Concept", "Mount::277j9"], 
                Entity["Concept", "MountainGoat::29z82"], 
                Entity["Concept", "MournfulWidow::584zy"], 
                Entity["Concept", "MourningDove::993td"], 
                Entity["Concept", "Mousetrap::j8542"], 
                Entity["Concept", "Moussaka::38r98"], 
                Entity["Concept", "Mouth::78j76"], 
                Entity["Concept", "MovieHouse::hbj23"], 
                Entity["Concept", "MovingRidge::8yt7m"], 
                Entity["Concept", "MudDauber::t7p42"], 
                Entity["Concept", "Mudguard::cy63c"], 
                Entity["Concept", "Mudskipper::6dr2b"], 
                Entity["Concept", "Mug::vw297"], 
                Entity["Concept", "Mulberry::8939x"], 
                Entity["Concept", "Mulch::6w6nr"], 
                Entity["Concept", "Muller::h9246"], 
                Entity["Concept", "Mulloway::c5868"], 
                Entity["Concept", "MurphyBed::h9mdy"], 
                Entity["Concept", "MusaParadisiaca::98h8n"], 
                Entity["Concept", "MuscariComosum::29c45"], 
                Entity["Concept", "MuscicapaGrisola::h4qwp"], 
                Entity["Concept", "Muscivora-forficata::6927n"], 
                Entity["Concept", "Museum::57sqy"], 
                Entity["Concept", "MushroomCoral::4874h"], 
                Entity["Concept", "Mushroom::wnmj8"], 
                Entity["Concept", "MusicalBox::wc8wj"], 
                Entity["Concept", "MusicalNotation::4kd4n"], 
                Entity["Concept", "MusicRack::s4g58"], 
                Entity["Concept", "MuskOx::3vt95"], 
                Entity["Concept", "MuskRose::6xgt4"], 
                Entity["Concept", "MuskTurtle::348g3"], 
                Entity["Concept", "Musquash::7ysk4"], 
                Entity["Concept", "MustelusMustelus::q6nq8"], 
                Entity["Concept", "Muzzle::c7f4q"], 
                Entity["Concept", "MyaArenaria::6k8cj"], 
                Entity["Concept", "MycteropercaBonaci::t764g"], 
                Entity["Concept", "MyristicaFragrans::7446g"], 
                Entity["Concept", "MyrrhisOdorata::473w7"], 
                Entity["Concept", "Naan::7fbvq"], 
                Entity["Concept", "Nacho::s58h7"], 
                Entity["Concept", "NailEnamel::2ds54"], 
                Entity["Concept", "Nail::x2828"], 
                Entity["Concept", "Nandu::jvdx9"], 
                Entity["Concept", "Nanny-goat::697ww"], 
                Entity["Concept", "NarcissusJonquilla::b7629"], 
                Entity["Concept", "NasalisLarvatus::92p77"], 
                Entity["Concept", "Nasturtium::ryg9p"], 
                Entity["Concept", "NatrixMaura::sm8wc"], 
                Entity["Concept", "NavelOrange::j6q95"], 
                Entity["Concept", "Nebule::d9mmw"], 
                Entity["Concept", "Neckerchief::tkw7x"], 
                Entity["Concept", "Necklace::58n8w"], 
                Entity["Concept", "Necklet::q56g3"], 
                Entity["Concept", "Nectar::5hm38"], 
                Entity["Concept", "Nectarine::3dhjr"], 
                Entity["Concept", "NemophilaMaculata::4njvn"], 
                Entity["Concept", "NepheliumLappaceum::n2m2w"], 
                Entity["Concept", "NephropsNorvegicus::f4828"], 
                Entity["Concept", "Neptune::zpx6x"], 
                Entity["Concept", "Nerita::98p54"], 
                Entity["Concept", "NeriumOleander::brty6"], 
                Entity["Concept", "NewfoundlandDog::q787h"], 
                Entity["Concept", "NewtonianReflector::767w4"], 
                Entity["Concept", "NewWorldGoldfinch::9h7z4"], 
                Entity["Concept", "NigellaDamascena::n6v9v"], 
                Entity["Concept", "Night-bloomingCereus::6n4dd"], 
                Entity["Concept", "Night-bloomingCereus::j379m"], 
                Entity["Concept", "Nightdress::483nq"], 
                Entity["Concept", "Night-light::64q3q"], 
                Entity["Concept", "NightLizard::7259w"], 
                Entity["Concept", "NimbostratusClouds::nr2d6"], 
                Entity["Concept", "NimbusCloud::s2g79"], 
                Entity["Concept", "Nipple::jfzc3"], 
                Entity["Concept", "Niqab::gx6qd"], 
                Entity["Concept", "NissenHut::6t2p4"], 
                Entity["Concept", "Nopal::n2344"], 
                Entity["Concept", "NorfolkTerrier::b7z76"], 
                Entity["Concept", "Noria::vcd7c"], 
                Entity["Concept", "NorthernParula::ws252"], 
                Entity["Concept", "NorthernPitchPine::287w9"], 
                Entity["Concept", "NorthernRedOak::5z394"], 
                Entity["Concept", "NorwaySpruce::vz539"], 
                Entity["Concept", "NorwichTerrier::9v483"], 
                Entity["Concept", "Noseband::w5gnv"], 
                Entity["Concept", "NotechisScutatus::nw434"], 
                Entity["Concept", "NotophthalmusViridescens::4j4b5"], 
                Entity["Concept", "Notornis::zjw89"], 
                Entity["Concept", "Nougat::c576d"], 
                Entity["Concept", "NutAndBolt::7n38q"], 
                Entity["Concept", "Nyala::ttwn4"], 
                Entity["Concept", "NyctanassaViolacea::7rq25"], 
                Entity["Concept", "NycticebusPygmaeus::nhdv8"], 
                Entity["Concept", "NyssaSylvatica::v2nhc"], 
                Entity["Concept", "Oast::626g4"], 
                Entity["Concept", "OastHouse::4x587"], 
                Entity["Concept", "Obelisk::s7vg6"], 
                Entity["Concept", "ObjectGlass::966k6"], 
                Entity["Concept", "Observatory::vd2hg"], 
                Entity["Concept", "Ocarina::zc9mv"], 
                Entity["Concept", "Ocean::4zbf3"], 
                Entity["Concept", "Oculus::69g2k"], 
                Entity["Concept", "OdocoileusVirginianus::mhq9k"], 
                Entity["Concept", "Odontoglossum::84xn9"], 
                Entity["Concept", "OenotheraFruticosa::58xgf"], 
                Entity["Concept", "OfficeBlock::83k99"], 
                Entity["Concept", "Ohmmeter::7rqg7"], 
                Entity["Concept", "OilFilter::d8chh"], 
                Entity["Concept", "OilRefinery::k6869"], 
                Entity["Concept", "Okapi::325yk"], 
                Entity["Concept", "Okra::dgq9j"], 
                Entity["Concept", "OldEnglishSheepdog::4zdy3"], 
                Entity["Concept", "OldWorldHopHornbeam::rry2v"], 
                Entity["Concept", "OldWorldScopsOwl::332tw"], 
                Entity["Concept", "OldWorldWhitePelican::34rys"], 
                Entity["Concept", "OlfactoryOrgan::z8zxt"], 
                Entity["Concept", "Olive::nhsy3"], 
                Entity["Concept", "OncidiumPapilio::686hz"], 
                Entity["Concept", "OncorhynchusTshawytscha::y6t35"], 
                Entity["Concept", "OnionDome::274x2"], 
                Entity["Concept", "Openbill::7gktb"], 
                Entity["Concept", "OperatingTable::w6963"], 
                Entity["Concept", "OpheodrysAestivus::m636k"], 
                Entity["Concept", "OpheodrysVernalis::3nny3"], 
                Entity["Concept", "OphrysInsectifera::p54g5"], 
                Entity["Concept", "OpiumPoppy::cy4nw"], 
                Entity["Concept", "OpuntiaLindheimeri::h6385"], 
                Entity["Concept", "Orang::5385s"], 
                Entity["Concept", "OrangePeel::rbx22"], 
                Entity["Concept", "Orchard::33b3z"], 
                Entity["Concept", "OrchisPapilionaceae::yh4p5"], 
                Entity["Concept", "Organdie::pzg3f"], 
                Entity["Concept", "OrganizationChart::98yr7"], 
                Entity["Concept", "OrientalArborvitae::4mt28"], 
                Entity["Concept", "OrientalBushCherry::pg35r"], 
                Entity["Concept", "OrientalPoppy::dqv84"], 
                Entity["Concept", "OrientalSpruce::3477r"], 
                Entity["Concept", "OrthotomusSutorius::5vgk6"], 
                Entity["Concept", "Oscillograph::52z86"], 
                Entity["Concept", "Ostensorium::tzr65"], 
                Entity["Concept", "OtusAsio::8876f"], 
                Entity["Concept", "Outrigger::x242j"], 
                Entity["Concept", "OutsideMirror::y7837"], 
                Entity["Concept", "Ovenbird::c884q"], 
                Entity["Concept", "OverheadProjector::y7nv4"], 
                Entity["Concept", "Owlet::4jrtk"], 
                Entity["Concept", "OxalisViolacea::d7zcq"], 
                Entity["Concept", "Oxcart::vwjn2"], 
                Entity["Concept", "Oximeter::sm6nb"], 
                Entity["Concept", "Oxlip::2fw59"], 
                Entity["Concept", "OxydendrumArboreum::7377z"], 
                Entity["Concept", "OxygenMask::4k479"], 
                Entity["Concept", "OxyuraJamaicensis::6884w"], 
                Entity["Concept", "OxyuranusScutellatus::jq999"], 
                Entity["Concept", "OysterCatcher::9drpt"], 
                Entity["Concept", "Pachouli::43w62"], 
                Entity["Concept", "PacificBottlenoseDolphin::p63r9"], 
                Entity["Concept", "PacificHemlock::8f4sg"], 
                Entity["Concept", "Pack::9x8yj"], 
                Entity["Concept", "PackingCase::m8bgc"], 
                Entity["Concept", "Paddlefish::vnxd6"], 
                Entity["Concept", "PaddleWheel::c59g3"], 
                Entity["Concept", "Paddymelon::x7ckx"], 
                Entity["Concept", "Padlock::73c99"], 
                Entity["Concept", "Paeony::nv7x9"], 
                Entity["Concept", "PaintballGun::75z54"], 
                Entity["Concept", "Paintbrush::2456k"], 
                Entity["Concept", "PaintedBeauty::p82vk"], 
                Entity["Concept", "Painting::4rh82"], 
                Entity["Concept", "PairOfPincers::xg4n6"], 
                Entity["Concept", "PairOfPliers::9756m"], 
                Entity["Concept", "PairOfScissors::3gyct"], 
                Entity["Concept", "Paisley::2762m"], 
                Entity["Concept", "Paling::2brd3"], 
                Entity["Concept", "Pallasite::32tn9"], 
                Entity["Concept", "Palomino::vckx3"], 
                Entity["Concept", "PanamaTree::gzjr6"], 
                Entity["Concept", "PandeanPipe::gjck2"], 
                Entity["Concept", "Pangolin::wwqg6"], 
                Entity["Concept", "Panicle::4hkn3"], 
                Entity["Concept", "PanicumVirgatum::mp4sk"], 
                Entity["Concept", "PanonychusUlmi::7745s"], 
                Entity["Concept", "PansyOrchid::27fp3"], 
                Entity["Concept", "Pan::t7b86"], 
                Entity["Concept", "PantheraPardus::r35k5"], 
                Entity["Concept", "PantheraTigris::2mpmq"], 
                Entity["Concept", "PantheraUncia::z6697"], 
                Entity["Concept", "Pantie::83c49"], 
                Entity["Concept", "Pantry::956q9"], 
                Entity["Concept", "PantyGirdle::7464y"], 
                Entity["Concept", "Pantyhose::k5x6b"], 
                Entity["Concept", "PapaverAlpinum::3gkpv"], 
                Entity["Concept", "PapaverArgemone::548k4"], 
                Entity["Concept", "Papaw::vdv63"], 
                Entity["Concept", "Papaya::27bj9"], 
                Entity["Concept", "PaperChain::775m7"], 
                Entity["Concept", "PaperTowel::j7j8m"], 
                Entity["Concept", "Papillon::zhn7j"], 
                Entity["Concept", "ParalithodesCamtschatica::pfzy2"], 
                Entity["Concept", "Parasol::qzn44"], 
                Entity["Concept", "ParkingMeter::h445p"], 
                Entity["Concept", "Parrotfish::n3wvw"], 
                Entity["Concept", "Parsley::6d52j"], 
                Entity["Concept", "ParusBicolor::cx34w"], 
                Entity["Concept", "PasserMontanus::32mk7"], 
                Entity["Concept", "PassifloraFoetida::967wx"], 
                Entity["Concept", "PatchPocket::y7x52"], 
                Entity["Concept", "Path::8d5bp"], 
                Entity["Concept", "Patio::65kf2"], 
                Entity["Concept", "PatrolCar::cb8bg"], 
                Entity["Concept", "Pavonia::2f27r"], 
                Entity["Concept", "Pay-phone::4h2kc"], 
                Entity["Concept", "PeaceLily::gk6fc"], 
                Entity["Concept", "Peach::442hf"], 
                Entity["Concept", "PeachTree::gc7fr"], 
                Entity["Concept", "Peacock::kd2y4"], 
                Entity["Concept", "Peahen::fb4fv"], 
                Entity["Concept", "Peanut::6bc72"], 
                Entity["Concept", "PearTree::hj64n"], 
                Entity["Concept", "Pecan::9m3y8"], 
                Entity["Concept", "PedioecetesPhasianellus::p2h55"], 
                Entity["Concept", "Pedometer::5rpsk"], 
                Entity["Concept", "Peeler::b8777"], 
                Entity["Concept", "Peg::gzc28"], 
                Entity["Concept", "Peke::b9n5f"], 
                Entity["Concept", "PelargoniumGraveolens::g657k"], 
                Entity["Concept", "PelecanusErythrorhynchos::h87qy"], 
                Entity["Concept", "Pelmet::by8vn"], 
                Entity["Concept", "Pembroke::95g54"], 
                Entity["Concept", "Pencil::fjb3r"], 
                Entity["Concept", "PencilSharpener::23nv4"], 
                Entity["Concept", "PennyArcade::73r25"], 
                Entity["Concept", "Pennywhistle::2j4bn"], 
                Entity["Concept", "PercaFlavescens::x3db2"], 
                Entity["Concept", "Perch::83n3t"], 
                Entity["Concept", "PerodicticusPotto::7z6h9"], 
                Entity["Concept", "Persimmon::p4v39"], 
                Entity["Concept", "Person::93r37"], 
                Entity["Concept", "Pestle::qw8x7"], 
                Entity["Concept", "PetriDish::xt977"], 
                Entity["Concept", "PetromyzonMarinus::563q2"], 
                Entity["Concept", "Phaius::764n9"], 
                Entity["Concept", "PhalaropusFulicarius::jtm24"], 
                Entity["Concept", "PhasianusColchicus::4j55s"], 
                Entity["Concept", "PhellodendronAmurense::rb7dp"], 
                Entity["Concept", "PhiladelphusCoronarius::98n43"], 
                Entity["Concept", "Philodendron::658kq"], 
                Entity["Concept", "Phlomis::6s785"], 
                Entity["Concept", "Phoebe::j9w64"], 
                Entity["Concept", "PhoneCord::376x2"], 
                Entity["Concept", "PhoneJack::33sn7"], 
                Entity["Concept", "PhonographNeedle::34p5p"], 
                Entity["Concept", "PhrynosomaCornutum::2zy82"], 
                Entity["Concept", "PhylloscopusSibilatrix::tcrr5"], 
                Entity["Concept", "PhysalisIxocarpa::chf8x"], 
                Entity["Concept", "PianoKeyboard::6xz3r"], 
                Entity["Concept", "Piazza::8qf59"], 
                Entity["Concept", "PiceaGlauca::479rr"], 
                Entity["Concept", "PiceaSitchensis::s8dv2"], 
                Entity["Concept", "PickerelFrog::5fspc"], 
                Entity["Concept", "PickupTruck::9k58n"], 
                Entity["Concept", "PicnicArea::9k957"], 
                Entity["Concept", "PictureFrame::njnz2"], 
                Entity["Concept", "PieChart::4p9fd"], 
                Entity["Concept", "Pied-billedGrebe::w5jdh"], 
                Entity["Concept", "Pieta::j4r84"], 
                Entity["Concept", "Pignolia::8cvvw"], 
                Entity["Concept", "PigsInBlankets::d5bqs"], 
                Entity["Concept", "PileDriver::8tctw"], 
                Entity["Concept", "PillBug::sng68"], 
                Entity["Concept", "Pillory::yy4k8"], 
                Entity["Concept", "Pilothouse::6z229"], 
                Entity["Concept", "Pinata::8zxkt"], 
                Entity["Concept", "PinballMachine::p8982"], 
                Entity["Concept", "PinCherry::3nn28"], 
                Entity["Concept", "PineappleGuava::687f4"], 
                Entity["Concept", "PineFinch::6ngxc"], 
                Entity["Concept", "PineGrosbeak::3d48d"], 
                Entity["Concept", "Ping-pongBall::3vdwp"], 
                Entity["Concept", "PingpongPaddle::9s449"], 
                Entity["Concept", "Ping-pongTable::zjbd3"], 
                Entity["Concept", "Pinnule::g2477"], 
                Entity["Concept", "Pintado::q5bn3"], 
                Entity["Concept", "Pinto::4d9t2"], 
                Entity["Concept", "PinusAlbicaulis::6fp2n"], 
                Entity["Concept", "PinusGlabra::dvmg7"], 
                Entity["Concept", "PinusMonophylla::r39pv"], 
                Entity["Concept", "PinusMonticola::kd793"], 
                Entity["Concept", "PinusNigra::sm4nv"], 
                Entity["Concept", "PinusSerotina::3r2w3"], 
                Entity["Concept", "PinusSylvestris::h943s"], 
                Entity["Concept", "PinwheelWindCollector::m646p"], 
                Entity["Concept", "PipeCutter::9597n"], 
                Entity["Concept", "PipeOrgan::gq9sr"], 
                Entity["Concept", "Pipistrel::vn764"], 
                Entity["Concept", "PirangaLudoviciana::6k5hz"], 
                Entity["Concept", "PirangaOlivacea::bw8f4"], 
                Entity["Concept", "PirangaRubra::tpq56"], 
                Entity["Concept", "PistachioNut::256v7"], 
                Entity["Concept", "Pistia::8stj9"], 
                Entity["Concept", "Piston::km8w3"], 
                Entity["Concept", "PistonRod::552mn"], 
                Entity["Concept", "Pitahaya::976h9"], 
                Entity["Concept", "Pita::my5jj"], 
                Entity["Concept", "PitchersMound::25n4w"], 
                Entity["Concept", "PithHat::hz637"], 
                Entity["Concept", "Pitta::q3bwn"], 
                Entity["Concept", "PituophisMelanoleucus::b6652"], 
                Entity["Concept", "Pizza::56w88"], 
                Entity["Concept", "PlaneSeat::9s7fc"], 
                Entity["Concept", "Planetarium::kq5yg"], 
                Entity["Concept", "PlasterBandage::hxxm2"], 
                Entity["Concept", "Plastron::g5m85"], 
                Entity["Concept", "Platy::g5728"], 
                Entity["Concept", "PlatymisciumTrinitatis::k6943"], 
                Entity["Concept", "PlaygroundSlide::88yg8"], 
                Entity["Concept", "Plecopteran::9p4c7"], 
                Entity["Concept", "Plectranthus::22v6r"], 
                Entity["Concept", "PlectrophenaxNivalis::mr6st"], 
                Entity["Concept", "PleuronectesPlatessa::4kmbc"], 
                Entity["Concept", "Plot::7jp7f"], 
                Entity["Concept", "Plough::y6c4t"], 
                Entity["Concept", "Plughole::87zj4"], 
                Entity["Concept", "Plumb::9kqpf"], 
                Entity["Concept", "Plumbago::3792s"], 
                Entity["Concept", "PlumbersHelper::hq4m2"], 
                Entity["Concept", "PlushToy::53zdc"], 
                Entity["Concept", "Pluto::8y97x"], 
                Entity["Concept", "Pluviometer::335r2"], 
                Entity["Concept", "PocketKnife::b389r"], 
                Entity["Concept", "PocketWatch::vygc6"], 
                Entity["Concept", "PodicepsGrisegena::j9378"], 
                Entity["Concept", "PoephilaCastanotis::tghz6"], 
                Entity["Concept", "Pogonia::536p7"], 
                Entity["Concept", "PoisonAsh::jzg72"], 
                Entity["Concept", "PolianthesTuberosa::889d4"], 
                Entity["Concept", "Polisher::w567r"], 
                Entity["Concept", "PollachiusPollachius::dph6h"], 
                Entity["Concept", "Polliwog::br5yx"], 
                Entity["Concept", "Polyanthus::vjpq2"], 
                Entity["Concept", "PomatomusSaltatrix::gcdt9"], 
                Entity["Concept", "Pomegranate::dh736"], 
                Entity["Concept", "PomegranateTree::d245v"], 
                Entity["Concept", "Pomelo::93yhj"], 
                Entity["Concept", "Pomeranian::dx7mr"], 
                Entity["Concept", "PommelHorse::8v788"], 
                Entity["Concept", "Pompadour::339h2"], 
                Entity["Concept", "Poncho::tr389"], 
                Entity["Concept", "Pontoon::j583g"], 
                Entity["Concept", "PooecetesGramineus::6c495"], 
                Entity["Concept", "Poolroom::6xj75"], 
                Entity["Concept", "PoopDeck::gwh5b"], 
                Entity["Concept", "Popcorn::kgs4w"], 
                Entity["Concept", "Popover::7h5b6"], 
                Entity["Concept", "PopulusTrichocarpa::ns95t"], 
                Entity["Concept", "Porcelain::33d5s"], 
                Entity["Concept", "Portcullis::m27qk"], 
                Entity["Concept", "PortugueseMan-of-war::2wckg"], 
                Entity["Concept", "PortulacaGrandiflora::mfyj2"], 
                Entity["Concept", "PorzanaPorzana::8ss64"], 
                Entity["Concept", "PossumOak::r8962"], 
                Entity["Concept", "PotatoSalad::6w732"], 
                Entity["Concept", "PotatoWorm::8r9ht"], 
                Entity["Concept", "Potentiometer::3ty72"], 
                Entity["Concept", "Pothos::fq6vf"], 
                Entity["Concept", "PottersWheel::zwt32"], 
                Entity["Concept", "PottyChair::5hq4d"], 
                Entity["Concept", "Pouffe::n5c2g"], 
                Entity["Concept", "PowderFlask::37x53"], 
                Entity["Concept", "PowerCord::h83mp"], 
                Entity["Concept", "PowerPlant::f5bcm"], 
                Entity["Concept", "PrairieFox::7p26f"], 
                Entity["Concept", "PressureCooker::9x29n"], 
                Entity["Concept", "PricklyPear::4qb6m"], 
                Entity["Concept", "PrimulaVeris::3kgwn"], 
                Entity["Concept", "Primus::b3gxc"], 
                Entity["Concept", "ProcaviaCapensis::5d26t"], 
                Entity["Concept", "ProgneSubis::sr52p"], 
                Entity["Concept", "Projector::m6hfr"], 
                Entity["Concept", "Protractor::fb68j"], 
                Entity["Concept", "PrunusCaroliniana::2s728"], 
                Entity["Concept", "PrunusSieboldii::3h578"], 
                Entity["Concept", "PrunusTriloba::759gz"], 
                Entity["Concept", "PseudemysRubriventris::fq2q8"], 
                Entity["Concept", "PseudemysScripta::vkw6n"], 
                Entity["Concept", "PsidiumLittorale::3wd5s"], 
                Entity["Concept", "PsittaculaKrameri::yvkv8"], 
                Entity["Concept", "PtilonorhynchusViolaceus::khg4z"], 
                Entity["Concept", "Puffbird::8866n"], 
                Entity["Concept", "Pug::6799h"], 
                Entity["Concept", "Pulsar::dzc44"], 
                Entity["Concept", "PumpkinSeed::bw2wn"], 
                Entity["Concept", "PunchBag::wm5qg"], 
                Entity["Concept", "PurpleClover::mf83q"], 
                Entity["Concept", "PurpleGrackle::tcj8s"], 
                Entity["Concept", "PurpleSaxifrage::9447y"], 
                Entity["Concept", "Purse::n57jd"], 
                Entity["Concept", "PuttingGreen::5v952"], 
                Entity["Concept", "PyrocephalusRubinusMexicanus::n49bn"], 
                Entity["Concept", "PyrolaRotundifolia::cz5wg"], 
                Entity["Concept", "Pyrrhuloxia::r6xsj"], 
                Entity["Concept", "PythonReticulatus::28vxg"], 
                Entity["Concept", "PythonSebae::dmhh6"], 
                Entity["Concept", "QRCode::p765t"], 
                Entity["Concept", "Quadcopter::qdxy6"], 
                Entity["Concept", "Queenfish::7q866"], 
                Entity["Concept", "QuercusFalcata::38c73"], 
                Entity["Concept", "QuercusImbricaria::3892r"], 
                Entity["Concept", "QuercusLaurifolia::629t4"], 
                Entity["Concept", "QuercusMichauxii::h6xtr"], 
                Entity["Concept", "QuercusPalustris::b4j3q"], 
                Entity["Concept", "QuercusVirginiana::j4bmv"], 
                Entity["Concept", "Quesadilla::9d5f5"], 
                Entity["Concept", "QuillPen::jm57s"], 
                Entity["Concept", "Quince::553s5"], 
                Entity["Concept", "Quiver::2873q"], 
                Entity["Concept", "Racecourse::bh4b4"], 
                Entity["Concept", "Racquetball::4x923"], 
                Entity["Concept", "RadarDome::srx22"], 
                Entity["Concept", "RadiatorGrille::75d36"], 
                Entity["Concept", "Radiator::vv949"], 
                Entity["Concept", "RaffiaVinifera::k9zsr"], 
                Entity["Concept", "Raft::g5z85"], 
                Entity["Concept", "Rail::36jk3"], 
                Entity["Concept", "RailroadTrack::8b344"], 
                Entity["Concept", "RailroadTunnel::6bcy3"], 
                Entity["Concept", "RainbowLorikeet::29w5z"], 
                Entity["Concept", "RainForest::n3ncm"], 
                Entity["Concept", "Rake::564h4"], 
                Entity["Concept", "Rambotan::9m93n"], 
                Entity["Concept", "RanaSylvatica::9g882"], 
                Entity["Concept", "RangeHood::q8j43"], 
                Entity["Concept", "RangiferCaribou::5wzkm"], 
                Entity["Concept", "RanunculusAquatilis::z85q7"], 
                Entity["Concept", "RaphanusSativus::gfc6g"], 
                Entity["Concept", "RaphicerusCampestris::w6979"], 
                Entity["Concept", "Raspberry::v449c"], 
                Entity["Concept", "RatibidaTagetes::mjnx5"], 
                Entity["Concept", "RearLamp::n8qn7"], 
                Entity["Concept", "RearviewMirror::gx5qy"], 
                Entity["Concept", "ReceptionDesk::y2d2f"], 
                Entity["Concept", "ReceptionRoom::wt333"], 
                Entity["Concept", "ReciprocatingSaw::3qj8n"], 
                Entity["Concept", "Recliner::35nd9"], 
                Entity["Concept", "RecreationRoom::8vn25"], 
                Entity["Concept", "RecyclingBin::3hcgs"], 
                Entity["Concept", "RedAdmiral::23z79"], 
                Entity["Concept", "Redbone::j6h4x"], 
                Entity["Concept", "Red-breastedNuthatch::gyz5m"], 
                Entity["Concept", "Red-breastedSapsucker::qwx4x"], 
                Entity["Concept", "RedCurrant::6mmkc"], 
                Entity["Concept", "RedDelicious::xxzy3"], 
                Entity["Concept", "Red-eyedVireo::htt2q"], 
                Entity["Concept", "RedJungleFowl::pw962"], 
                Entity["Concept", "RedPlanet::wbck3"], 
                Entity["Concept", "Redshank::yvbj8"], 
                Entity["Concept", "Redstart::t5btg"], 
                Entity["Concept", "RedWine::666g6"], 
                Entity["Concept", "Reef::qc387"], 
                Entity["Concept", "ReefWhitetipShark::cvm75"], 
                Entity["Concept", "Reel::9ymsb"], 
                Entity["Concept", "Reel::v4rgf"], 
                Entity["Concept", "Refractometer::98d36"], 
                Entity["Concept", "RegulusCalendula::46d93"], 
                Entity["Concept", "Remote::h4drx"], 
                Entity["Concept", "ResidentialArea::s4j77"], 
                Entity["Concept", "Resistor::d7w57"], 
                Entity["Concept", "Retractor::3v669"], 
                Entity["Concept", "Revolver::b4x23"], 
                Entity["Concept", "RhamnusCroceus::475q6"], 
                Entity["Concept", "RheaAmericana::hw98s"], 
                Entity["Concept", "RhincodonTypus::r786w"], 
                Entity["Concept", "RhinocerosBeetle::23y53"], 
                Entity["Concept", "RhodeIslandRed::39xc4"], 
                Entity["Concept", "RhodesianRidgeback::jph75"], 
                Entity["Concept", "RhododendronMaxima::d8593"], 
                Entity["Concept", "RhododendronViscosum::d4m8c"], 
                Entity["Concept", "RhusTyphina::tr5nc"], 
                Entity["Concept", "Riband::22tqh"], 
                Entity["Concept", "RibbedVault::93psb"], 
                Entity["Concept", "RibbonSnake::7tfhk"], 
                Entity["Concept", "Ridgeline::6yxnp"], 
                Entity["Concept", "RidgeRope::mw677"], 
                Entity["Concept", "RidingMower::n8mmd"], 
                Entity["Concept", "Ring-binder::848m9"], 
                Entity["Concept", "RingBlackbird::6549j"], 
                Entity["Concept", "RingletButterfly::28v7s"], 
                Entity["Concept", "Ring-neckedSnake::2f823"], 
                Entity["Concept", "River::m23qn"], 
                Entity["Concept", "Rivet::79mtr"], 
                Entity["Concept", "Rivulus::9vq87"], 
                Entity["Concept", "Road::j3vqw"], 
                Entity["Concept", "RoadRoller::99d69"], 
                Entity["Concept", "Roan::gj8fq"], 
                Entity["Concept", "RobiniaPseudoacacia::sm3gn"], 
                Entity["Concept", "RoccusSaxatilis::gygb4"], 
                Entity["Concept", "Rock::9zbnr"], 
                Entity["Concept", "RockKangaroo::h25d2"], 
                Entity["Concept", "RodoliaCardinalis::wyg5m"], 
                Entity["Concept", "RollerBlind::5r992"], 
                Entity["Concept", "RollerSkate::fz772"], 
                Entity["Concept", "RollingPin::98bk7"], 
                Entity["Concept", "Rood::y47g7"], 
                Entity["Concept", "RoseApple::zcqw6"], 
                Entity["Concept", "Rosebud::6kk73"], 
                Entity["Concept", "RoseHip::333d2"], 
                Entity["Concept", "Rosemary::5c289"], 
                Entity["Concept", "RoseWindow::898p9"], 
                Entity["Concept", "RosmarinusOfficinalis::s83f7"], 
                Entity["Concept", "Rottweiler::zywt3"], 
                Entity["Concept", "Rough-skinnedNewt::55hq8"], 
                Entity["Concept", "RouletteWheel::68hp8"], 
                Entity["Concept", "RoveBeetle::5xsv6"], 
                Entity["Concept", "Rowanberry::f7drb"], 
                Entity["Concept", "RoyalPalm::f6wtt"], 
                Entity["Concept", "RoystoneaOleracea::f6243"], 
                Entity["Concept", "RubusParviflorus::3bmc6"], 
                Entity["Concept", "RudbeckiaHirta::x8mxh"], 
                Entity["Concept", "RugbyBall::34tbp"], 
                Entity["Concept", "Ruin::cb3x7"], 
                Entity["Concept", "Rule::shrw6"], 
                Entity["Concept", "RumbleSeat::wbv7j"], 
                Entity["Concept", "RumexAcetosa::982f4"], 
                Entity["Concept", "Runway::64ckp"], 
                Entity["Concept", "RupicapraRupicapra::9k9gz"], 
                Entity["Concept", "RupicolaPeruviana::b8j9k"], 
                Entity["Concept", "RupicolaRupicola::9842j"], 
                Entity["Concept", "Saber::5tzc5"], 
                Entity["Concept", "SacredIbis::v3tf6"], 
                Entity["Concept", "Safe::36p67"], 
                Entity["Concept", "SafetyHat::t3g5y"], 
                Entity["Concept", "SafetyPin::8h4m3"], 
                Entity["Concept", "SafetyRazor::388mh"], 
                Entity["Concept", "Saffron::36w99"], 
                Entity["Concept", "SagittariusSerpentarius::5tp45"], 
                Entity["Concept", "Sail::f2vt7"], 
                Entity["Concept", "SaimiriSciureus::f9528"], 
                Entity["Concept", "SaintBernard::r5277"], 
                Entity["Concept", "SaintPetersWreath::f2zfv"], 
                Entity["Concept", "Salade::8sjdy"], 
                Entity["Concept", "SalixDiscolor::9895m"], 
                Entity["Concept", "SalmoGairdneri::7s72w"], 
                Entity["Concept", "Saloon::y8y52"], 
                Entity["Concept", "SalpinctesObsoletus::2yn8v"], 
                Entity["Concept", "Salsa::8mtkh"], 
                Entity["Concept", "SaltShaker::7k48t"], 
                Entity["Concept", "SalvelinusFontinalis::2c8ny"], 
                Entity["Concept", "SalvelinusNamaycush::h7bhs"], 
                Entity["Concept", "SalviaClarea::753q6"], 
                Entity["Concept", "SalviaVerbenaca::h7xfw"], 
                Entity["Concept", "Samisen::462qb"], 
                Entity["Concept", "Samosa::d9d7h"], 
                Entity["Concept", "Samovar::dj5fx"], 
                Entity["Concept", "Samoyede::rq827"], 
                Entity["Concept", "Sandbag::fjkb5"], 
                Entity["Concept", "SandBar::4w689"], 
                Entity["Concept", "Sandbox::4d86z"], 
                Entity["Concept", "SandCat::898g9"], 
                Entity["Concept", "SandDollar::7x427"], 
                Entity["Concept", "SandTrap::dmgn6"], 
                Entity["Concept", "SanitaryLandfill::6chf3"], 
                Entity["Concept", "SansevieriaTrifasciata::ry9nn"], 
                Entity["Concept", "Sarcophagus::686c8"], 
                Entity["Concept", "SarcophilusHariisi::ys6v2"], 
                Entity["Concept", "Sarong::96j5v"], 
                Entity["Concept", "SashFastener::5233p"], 
                Entity["Concept", "SassafrasAlbidum::6853r"], 
                Entity["Concept", "Satchel::6bt49"], 
                Entity["Concept", "SatelliteTelevision::fr68f"], 
                Entity["Concept", "Saturn::t9q26"], 
                Entity["Concept", "Saucepot::482v4"], 
                Entity["Concept", "Sauerkraut::r575g"], 
                Entity["Concept", "SausageDog::23x85"], 
                Entity["Concept", "SauvignonGrape::4k7v6"], 
                Entity["Concept", "SavoyCabbage::xr255"], 
                Entity["Concept", "Saw::272w6"], 
                Entity["Concept", "SawPalmetto::43c49"], 
                Entity["Concept", "Saxhorn::9qq7w"], 
                Entity["Concept", "SaxicolaRubetra::5fq56"], 
                Entity["Concept", "SaxicolaTorquata::42y3g"], 
                Entity["Concept", "SaxifragaAizoides::z8277"], 
                Entity["Concept", "SaxifragaStellaris::jt6tv"], 
                Entity["Concept", "Sax::v45s9"], 
                Entity["Concept", "Scaffolding::8mk63"], 
                Entity["Concept", "ScallopShell::m6vk4"], 
                Entity["Concept", "Scalpel::774jz"], 
                Entity["Concept", "Scarab::2rdd4"], 
                Entity["Concept", "ScarfBandage::7ytc5"], 
                Entity["Concept", "Schipperke::7778z"], 
                Entity["Concept", "Schoolhouse::h57xw"], 
                Entity["Concept", "ScillaVerna::w73xw"], 
                Entity["Concept", "SciurusVulgaris::qyf48"], 
                Entity["Concept", "ScomberColias::smns9"], 
                Entity["Concept", "Sconce::28h78"], 
                Entity["Concept", "Sconce::k4527"], 
                Entity["Concept", "Scoreboard::z76vk"], 
                Entity["Concept", "Scorpion::9rx48"], 
                Entity["Concept", "ScorpionFly::rwjr5"], 
                Entity["Concept", "ScotchEgg::c93wg"], 
                Entity["Concept", "ScotchTerrier::2f2jw"], 
                Entity["Concept", "ScouringPad::w4p2t"], 
                Entity["Concept", "ScrambledEggs::jz4yj"], 
                Entity["Concept", "ScreechOwl::7hd6z"], 
                Entity["Concept", "ScreenBackground::x4dx6"], 
                Entity["Concept", "Screw::9yqq6"], 
                Entity["Concept", "ScrewAugur::5cj7m"], 
                Entity["Concept", "ScrewPropeller::4dmt9"], 
                Entity["Concept", "ScrubbingBrush::2tsp7"], 
                Entity["Concept", "Scrub-bird::33j63"], 
                Entity["Concept", "Scrubs::32v56"], 
                Entity["Concept", "Scull::4mbvk"], 
                Entity["Concept", "Sea-coast::m3d85"], 
                Entity["Concept", "SeaCrawfish::x53g2"], 
                Entity["Concept", "SeaFan::p8h79"], 
                Entity["Concept", "SeaFeather::9645j"], 
                Entity["Concept", "SeaHorse::6xwsh"], 
                Entity["Concept", "SeaPen::75vw3"], 
                Entity["Concept", "Seaport::v6xqq"], 
                Entity["Concept", "Searchlight::djc6x"], 
                Entity["Concept", "Seashell::y28bt"], 
                Entity["Concept", "SeaSnake::s529y"], 
                Entity["Concept", "SeaSquirt::94pv4"], 
                Entity["Concept", "SeaStar::46w97"], 
                Entity["Concept", "SeaSwallow::vns6b"], 
                Entity["Concept", "SeaTrout::735m9"], 
                Entity["Concept", "SecaleCereale::jw667"], 
                Entity["Concept", "Sectional::c2s92"], 
                Entity["Concept", "SedimentaryRock::n8d64"], 
                Entity["Concept", "Seeder::6v6p9"], 
                Entity["Concept", "Segway::tr5j5"], 
                Entity["Concept", "SeiurusAurocapillus::ht8wy"], 
                Entity["Concept", "SenecioGlabellus::2228p"], 
                Entity["Concept", "SentryBox::qbd74"], 
                Entity["Concept", "Serin::2dfny"], 
                Entity["Concept", "SeriolaDorsalis::3478r"], 
                Entity["Concept", "SeriolaGrandis::fp8m7"], 
                Entity["Concept", "Servo::933x9"], 
                Entity["Concept", "Settee::r98kd"], 
                Entity["Concept", "Settle::3gb4q"], 
                Entity["Concept", "Shackle::njjh9"], 
                Entity["Concept", "Sharpie::qf5xj"], 
                Entity["Concept", "ShavingBrush::7sxjd"], 
                Entity["Concept", "ShavingCream::c7f38"], 
                Entity["Concept", "Shawl::p294s"], 
                Entity["Concept", "SheathKnife::k2732"], 
                Entity["Concept", "Shed::dt85y"], 
                Entity["Concept", "SheepskinCoat::gbpd4"], 
                Entity["Concept", "Shelduck::883g7"], 
                Entity["Concept", "ShelfBracket::852t3"], 
                Entity["Concept", "ShetlandPony::59xbs"], 
                Entity["Concept", "ShetlandSheepDog::sffh8"], 
                Entity["Concept", "Shih-Tzu::kc9k8"], 
                Entity["Concept", "ShinGuard::63g98"], 
                Entity["Concept", "ShireHorse::4zm7p"], 
                Entity["Concept", "Shoebox::x9nb2"], 
                Entity["Concept", "Shoehorn::6783n"], 
                Entity["Concept", "Shoe::x5fhn"], 
                Entity["Concept", "Shofar::wy3m3"], 
                Entity["Concept", "Shoji::x95jt"], 
                Entity["Concept", "Shop::6r4y9"], 
                Entity["Concept", "Shopfront::ym8qk"], 
                Entity["Concept", "ShoppingCart::95g62"], 
                Entity["Concept", "ShoppingCenter::q5398"], 
                Entity["Concept", "Shorthorn::8hj25"], 
                Entity["Concept", "ShotGlass::48bv9"], 
                Entity["Concept", "ShotgunShell::8r88j"], 
                Entity["Concept", "ShoulderHolster::339jx"], 
                Entity["Concept", "ShoulderPatch::286cg"], 
                Entity["Concept", "Shovel::tjpz7"], 
                Entity["Concept", "ShowerCap::2787m"], 
                Entity["Concept", "ShowerCurtain::6cs25"], 
                Entity["Concept", "Shower::d7n6z"], 
                Entity["Concept", "Shredder::3398n"], 
                Entity["Concept", "ShrimpCocktail::sdc6t"], 
                Entity["Concept", "Shuttlecock::5v38x"], 
                Entity["Concept", "SiberianHusky::k7pkk"], 
                Entity["Concept", "Side-blotchedLizard::83cdy"], 
                Entity["Concept", "Sidecar::h9twm"], 
                Entity["Concept", "SideDrum::82r54"], 
                Entity["Concept", "SileneCaroliniana::xvd42"], 
                Entity["Concept", "SileneUniflora::d3jw9"], 
                Entity["Concept", "Silk::k39gk"], 
                Entity["Concept", "Silkworm::h988h"], 
                Entity["Concept", "SilkyTerrier::xyfw3"], 
                Entity["Concept", "SilphiumLaciniatum::fc2vy"], 
                Entity["Concept", "SilverLime::57y4w"], 
                Entity["Concept", "SilviaAtricapilla::3zm2s"], 
                Entity["Concept", "Single-breastedJacket::6b769"], 
                Entity["Concept", "Single-breastedSuit::6s555"], 
                Entity["Concept", "Singlet::36k55"], 
                Entity["Concept", "Sitar::28jqv"], 
                Entity["Concept", "SittaCarolinensis::529y7"], 
                Entity["Concept", "Skateboard::wvjx6"], 
                Entity["Concept", "Skein::82g9q"], 
                Entity["Concept", "SkiBinding::5h5qy"], 
                Entity["Concept", "SkiBoot::hmn66"], 
                Entity["Concept", "SkiMask::6hd4m"], 
                Entity["Concept", "Skimmer::v9946"], 
                Entity["Concept", "SkiPole::m4ydq"], 
                Entity["Concept", "Skirt::jmv8x"], 
                Entity["Concept", "SkiSlope::jp33w"], 
                Entity["Concept", "Sky::783jr"], 
                Entity["Concept", "Skyscraper::krrh2"], 
                Entity["Concept", "SleepingBag::549k4"], 
                Entity["Concept", "SlenderSalamander::8957m"], 
                Entity["Concept", "Slender-tailedMeerkat::vt76g"], 
                Entity["Concept", "SlideRule::59p96"], 
                Entity["Concept", "Sloe::4x753"], 
                Entity["Concept", "SloppyJoe::s2phn"], 
                Entity["Concept", "Slug::d4638"], 
                Entity["Concept", "Slum::775f2"], 
                Entity["Concept", "SmallWhite::79m8v"], 
                Entity["Concept", "Smocking::2922d"], 
                Entity["Concept", "SmokeAlarm::h2v73"], 
                Entity["Concept", "SnapPea::5424h"], 
                Entity["Concept", "Snood::g76g8"], 
                Entity["Concept", "Snook::s5nmm"], 
                Entity["Concept", "Snorkel::53ncf"], 
                Entity["Concept", "Snowbell::x2mbf"], 
                Entity["Concept", "SnowBlower::p5662"], 
                Entity["Concept", "Snowboard::25v3y"], 
                Entity["Concept", "SnowChain::q7424"], 
                Entity["Concept", "Snowdrift::d6569"], 
                Entity["Concept", "Snowfield::f6j8k"], 
                Entity["Concept", "SnowGoose::tb7m3"], 
                Entity["Concept", "Snowmobile::y538p"], 
                Entity["Concept", "Snowplough::h36y5"], 
                Entity["Concept", "Snowshoe::7d8p8"], 
                Entity["Concept", "Snuffbox::4rm25"], 
                Entity["Concept", "SoapDish::9qkbt"], 
                Entity["Concept", "SoapDispenser::c2fjc"], 
                Entity["Concept", "Sobralia::6ym2h"], 
                Entity["Concept", "SoccerBall::25w42"], 
                Entity["Concept", "SodaCan::9589t"], 
                Entity["Concept", "Soft-coatedWheatenTerrier::474j2"], 
                Entity["Concept", "SoftDrink::7vyd4"], 
                Entity["Concept", "SoftPretzel::q8273"], 
                Entity["Concept", "Solan::79xr8"], 
                Entity["Concept", "SolanumJasmoides::6384g"], 
                Entity["Concept", "SolarArray::zgv3c"], 
                Entity["Concept", "SolarCollector::pw2xw"], 
                Entity["Concept", "SolderingIron::xzf2c"], 
                Entity["Concept", "Soldier-fish::k4n97"], 
                Entity["Concept", "Sombrero::k9893"], 
                Entity["Concept", "SonchusOleraceus::477k6"], 
                Entity["Concept", "SorbusTorminalis::qcn9q"], 
                Entity["Concept", "Sorrel::b824z"], 
                Entity["Concept", "Sorus::7j269"], 
                Entity["Concept", "Soy::3r224"], 
                Entity["Concept", "SpaceCapsule::83h4n"], 
                Entity["Concept", "SpaceLaboratory::wbp77"], 
                Entity["Concept", "Spaceship::5r9b4"], 
                Entity["Concept", "SpaceShuttle::72jnc"], 
                Entity["Concept", "Spacesuit::6t5mc"], 
                Entity["Concept", "SpaghettiAndMeatballs::w29x4"], 
                Entity["Concept", "Spaghetti::mq249"], 
                Entity["Concept", "SpaghettiSquash::73qn4"], 
                Entity["Concept", "Spam::95sr8"], 
                Entity["Concept", "SparkingPlug::4bq5c"], 
                Entity["Concept", "Spatula::r7876"], 
                Entity["Concept", "SphenodonPunctatum::9h47z"], 
                Entity["Concept", "Sphygmomanometer::4t35q"], 
                Entity["Concept", "SphyrapicusVarius::jvh9j"], 
                Entity["Concept", "SpiceRack::m8825"], 
                Entity["Concept", "SpidersWeb::28fz6"], 
                Entity["Concept", "SpinDrier::4yk5t"], 
                Entity["Concept", "SpinningWheel::wyk7q"], 
                Entity["Concept", "SpizellaArborea::3z7w4"], 
                Entity["Concept", "Spork::f5zbv"], 
                Entity["Concept", "SportUtility::xg6mr"], 
                Entity["Concept", "SpottedOwl::6ds79"], 
                Entity["Concept", "SprayGun::t4jtd"], 
                Entity["Concept", "Sprinkler::358d2"], 
                Entity["Concept", "SprocketWheel::54p24"], 
                Entity["Concept", "Sputnik::nk6bc"], 
                Entity["Concept", "SquashRacket::485hr"], 
                Entity["Concept", "SquawGrass::z64yv"], 
                Entity["Concept", "StachysPalustris::my5yy"], 
                Entity["Concept", "StaffordshireBullTerrier::883y3"], 
                Entity["Concept", "StagBeetle::49pys"], 
                Entity["Concept", "Stage::86r83"], 
                Entity["Concept", "Stagecoach::3579v"], 
                Entity["Concept", "StaghornCoral::6npmy"], 
                Entity["Concept", "Stained-glassWindow::tf8b9"], 
                Entity["Concept", "Stair::24wyn"], 
                Entity["Concept", "Staircase::wqd3c"], 
                Entity["Concept", "Stall::7wq5s"], 
                Entity["Concept", "StandardPoodle::w25c4"], 
                Entity["Concept", "StandardSchnauzer::q9j3y"], 
                Entity["Concept", "StandardTransmission::364j5"], 
                Entity["Concept", "Stanhopea::3857p"], 
                Entity["Concept", "StapleGun::xzbd2"], 
                Entity["Concept", "Stapler::zc2bp"], 
                Entity["Concept", "StarAniseed::j99vv"], 
                Entity["Concept", "StarFruit::8gdv2"], 
                Entity["Concept", "Statue::t4s2q"], 
                Entity["Concept", "SteakKnife::76h73"], 
                Entity["Concept", "StealthBomber::dd5bt"], 
                Entity["Concept", "StealthFighter::54q24"], 
                Entity["Concept", "Steamer::7bncp"], 
                Entity["Concept", "SteamIron::k9sgb"], 
                Entity["Concept", "SteamRoom::jrrr7"], 
                Entity["Concept", "SteelDrum::fqv7s"], 
                Entity["Concept", "SteeringWheel::9ys6m"], 
                Entity["Concept", "SteganopusTricolor::6q454"], 
                Entity["Concept", "Stegosaur::nsd8v"], 
                Entity["Concept", "Stela::239s6"], 
                Entity["Concept", "Stelis::97g38"], 
                Entity["Concept", "Sternwheeler::9v976"], 
                Entity["Concept", "Stevia::9w6x3"], 
                Entity["Concept", "StickCinnamon::hjk2t"], 
                Entity["Concept", "StingingNettle::b2vn4"], 
                Entity["Concept", "StirrupIron::g5r74"], 
                Entity["Concept", "Stoep::nd324"], 
                Entity["Concept", "Stonefish::47y53"], 
                Entity["Concept", "StopWatch::4vk6s"], 
                Entity["Concept", "StorageWarehouse::887g7"], 
                Entity["Concept", "StormCloud::q6gch"], 
                Entity["Concept", "Stovepipe::5k5z6"], 
                Entity["Concept", "Straightjacket::f8946"], 
                Entity["Concept", "StraightRazor::25dfg"], 
                Entity["Concept", "StratocumulusClouds::5h8n6"], 
                Entity["Concept", "Stratus::22r7q"], 
                Entity["Concept", "Strawberry::3csyb"], 
                Entity["Concept", "Strawflower::v2fpk"], 
                Entity["Concept", "StreamerFly::2792h"], 
                Entity["Concept", "Streetcar::vhm65"], 
                Entity["Concept", "StreetLamp::w25s3"], 
                Entity["Concept", "StreptopeliaTurtur::573dw"], 
                Entity["Concept", "StrixAluco::3xzb4"], 
                Entity["Concept", "StruthioCamelus::7fgc2"], 
                Entity["Concept", "StrymonMelinus::6983t"], 
                Entity["Concept", "StudentLodging::5537p"], 
                Entity["Concept", "StuffedPeppers::3b3xf"], 
                Entity["Concept", "Stupa::g64q6"], 
                Entity["Concept", "SturnellaNeglecta::4r37v"], 
                Entity["Concept", "Substation::p2g8z"], 
                Entity["Concept", "SubwayStation::7s827"], 
                Entity["Concept", "SubwayTrain::7trx6"], 
                Entity["Concept", "Subwoofer::mn3g6"], 
                Entity["Concept", "SulfurButterfly::b9263"], 
                Entity["Concept", "Sulky::79myy"], 
                Entity["Concept", "Sun::225g9"], 
                Entity["Concept", "Sundial::7mj6d"], 
                Entity["Concept", "SunflowerSeed::9hk47"], 
                Entity["Concept", "Supermarket::7mw35"], 
                Entity["Concept", "Supernova::zcjn5"], 
                Entity["Concept", "SuricataTetradactyla::d545g"], 
                Entity["Concept", "SurinamCherry::449w5"], 
                Entity["Concept", "Sushi::s4f33"], 
                Entity["Concept", "SussexSpaniel::sbv42"], 
                Entity["Concept", "SwallowShrike::7mybp"], 
                Entity["Concept", "SweetWoodruff::5y989"], 
                Entity["Concept", "SwizzleStick::q94np"], 
                Entity["Concept", "Synagogue::q2x24"], 
                Entity["Concept", "Synthesiser::n5xkz"], 
                Entity["Concept", "TabascoSauce::6t243"], 
                Entity["Concept", "TableLamp::6239m"], 
                Entity["Concept", "TableSaw::z2nw7"], 
                Entity["Concept", "Tacheometer::36t46"], 
                Entity["Concept", "Tailpipe::47w98"], 
                Entity["Concept", "Tamale::6hf6h"], 
                Entity["Concept", "Tamarind::55w59"], 
                Entity["Concept", "TamarindTree::67jkg"], 
                Entity["Concept", "Tambourine::74jng"], 
                Entity["Concept", "Tam-tam::m962t"], 
                Entity["Concept", "Tangerine::s8zqy"], 
                Entity["Concept", "TangerineTree::33q5s"], 
                Entity["Concept", "Tankard::9q6tm"], 
                Entity["Concept", "TankCar::g2428"], 
                Entity["Concept", "TankTop::5d7dd"], 
                Entity["Concept", "Tapeline::389c5"], 
                Entity["Concept", "TapHouse::g2z52"], 
                Entity["Concept", "Tarantula::mc462"], 
                Entity["Concept", "TarrietiaArgyrodendron::c7qv4"], 
                Entity["Concept", "Tautog::275h6"], 
                Entity["Concept", "Taxi::379w3"], 
                Entity["Concept", "Tea::8q576"], 
                Entity["Concept", "TeaBag::7227z"], 
                Entity["Concept", "TeaBag::dvpd8"], 
                Entity["Concept", "TeaCart::y35x6"], 
                Entity["Concept", "Teapot::c54x7"], 
                Entity["Concept", "Tea-strainer::98db6"], 
                Entity["Concept", "TeaUrn::f472h"], 
                Entity["Concept", "TectonaGrandis::75q72"], 
                Entity["Concept", "Telamon::v4dhn"], 
                Entity["Concept", "TelegraphKey::q56zs"], 
                Entity["Concept", "TelescopeSight::64x34"], 
                Entity["Concept", "TelevisionAntenna::8995y"], 
                Entity["Concept", "Telferage::ntqk6"], 
                Entity["Concept", "TelopeaOreades::n984c"], 
                Entity["Concept", "TelopeaSpeciosissima::hpkg8"], 
                Entity["Concept", "Temple::849ph"], 
                Entity["Concept", "Tench::q9r2d"], 
                Entity["Concept", "TennisBall::xk58h"], 
                Entity["Concept", "TennisRacket::zbf7z"], 
                Entity["Concept", "TerrapeneOrnata::b8wjv"], 
                Entity["Concept", "TeslaCoil::sxx79"], 
                Entity["Concept", "Testudo::m2654"], 
                Entity["Concept", "Tether::m75s9"], 
                Entity["Concept", "Tetra::v3pb9"], 
                Entity["Concept", "TextualMatter::m7642"], 
                Entity["Concept", "Theremin::mb34x"], 
                Entity["Concept", "Thermos::489k7"], 
                Entity["Concept", "ThevetiaNeriifolia::8dg62"], 
                Entity["Concept", "Thick-billedMurre::2qpx4"], 
                Entity["Concept", "Thimble::9828b"], 
                Entity["Concept", "Thong::fc37p"], 
                Entity["Concept", "Thong::js7zq"], 
                Entity["Concept", "Thornbill::4r24j"], 
                Entity["Concept", "Three-pieceSuit::jqps6"], 
                Entity["Concept", "ThunnusAlbacares::jg6hz"], 
                Entity["Concept", "ThunnusThynnus::6vqq6"], 
                Entity["Concept", "Thyme::qx7rd"], 
                Entity["Concept", "Tiara::h73j9"], 
                Entity["Concept", "TibetanMastiff::4f68b"], 
                Entity["Concept", "TigerBeetle::8362y"], 
                Entity["Concept", "TileRoof::5p749"], 
                Entity["Concept", "Timberland::c22fn"], 
                Entity["Concept", "Tinamou::4g3mz"], 
                Entity["Concept", "Tiramisu::zd3tw"], 
                Entity["Concept", "TitiMonkey::6rqgy"], 
                Entity["Concept", "ToasterOven::fc9gm"], 
                Entity["Concept", "Toaster::rp6v2"], 
                Entity["Concept", "TobaccoHornworm::g3k2y"], 
                Entity["Concept", "Toe::t8h5n"], 
                Entity["Concept", "TollPlaza::mbrh2"], 
                Entity["Concept", "Tomahawk::7k5w4"], 
                Entity["Concept", "Toolbox::w5732"], 
                Entity["Concept", "Toothpick::44x5j"], 
                Entity["Concept", "Topiary::236d3"], 
                Entity["Concept", "Tornado::74s32"], 
                Entity["Concept", "Torpedo::kxhd8"], 
                Entity["Concept", "TortoiseshellButterfly::hb63c"], 
                Entity["Concept", "TotemPole::gbxn5"], 
                Entity["Concept", "Touraco::r632b"], 
                Entity["Concept", "Towboat::pk57z"], 
                Entity["Concept", "TowCar::ph6vn"], 
                Entity["Concept", "Tower::72xxm"], 
                Entity["Concept", "ToyPoodle::732f6"], 
                Entity["Concept", "Toy::w2366"], 
                Entity["Concept", "TrachinotusFalcatus::35d23"], 
                Entity["Concept", "TrachurusTrachurus::v456y"], 
                Entity["Concept", "Trackball::7q75y"], 
                Entity["Concept", "Tractor::39j62"], 
                Entity["Concept", "Tragopan::rq64n"], 
                Entity["Concept", "TragopogonDubius::d3hwf"], 
                Entity["Concept", "TragopogonPorrifolius::g7259"], 
                Entity["Concept", "Trampoline::hhv8s"], 
                Entity["Concept", "TransomWindow::7qg3p"], 
                Entity["Concept", "Treadmill::3f3zn"], 
                Entity["Concept", "Tree-frog::m988r"], 
                Entity["Concept", "Treehopper::3fp87"], 
                Entity["Concept", "TreeHouse::9758z"], 
                Entity["Concept", "TreeKangaroo::qg4s3"], 
                Entity["Concept", "TreeLizard::wjp5s"], 
                Entity["Concept", "TrenchCoat::rq833"], 
                Entity["Concept", "Triceratops::p997c"], 
                Entity["Concept", "Tricycle::3537s"], 
                Entity["Concept", "TrigonellaOrnithopodioides::9466m"], 
                Entity["Concept", "Trilobite::3qyq3"], 
                Entity["Concept", "Trimaran::2639q"], 
                Entity["Concept", "Triskele::s7g38"], 
                Entity["Concept", "TroglodytesTroglodytes::2k979"], 
                Entity["Concept", "TropicalPitcherPlant::qjvx3"], 
                Entity["Concept", "Trowel::3sd36"], 
                Entity["Concept", "Truckle::z8qfz"], 
                Entity["Concept", "TrueBug::k23rt"], 
                Entity["Concept", "TulipaGesneriana::3wnzt"], 
                Entity["Concept", "Tumbleweed::g9gqf"], 
                Entity["Concept", "TuningFork::g9crh"], 
                Entity["Concept", "TurdusIliacus::qg838"], 
                Entity["Concept", "Tureen::57k6g"], 
                Entity["Concept", "Turmeric::6kng6"], 
                Entity["Concept", "Turnstile::82gr4"], 
                Entity["Concept", "Turntable::v9778"], 
                Entity["Concept", "TussilagoFarfara::2c32j"], 
                Entity["Concept", "TwistBit::2cv37"], 
                Entity["Concept", "TwistWood::9sb62"], 
                Entity["Concept", "Two-eyedViolet::bq79n"], 
                Entity["Concept", "Tyrannosaur::g78b4"], 
                Entity["Concept", "Ugli::433v9"], 
                Entity["Concept", "Uke::57cs3"], 
                Entity["Concept", "UlmusGlabra::kypm5"], 
                Entity["Concept", "Umbrella::3mntq"], 
                Entity["Concept", "UnevenBars::bqn8b"], 
                Entity["Concept", "UprightPiano::286t3"], 
                Entity["Concept", "Uranus::vh533"], 
                Entity["Concept", "UvulariaGrandiflora::m2cn9"], 
                Entity["Concept", "VacuumCleaner::7rg56"], 
                Entity["Concept", "Vale::88wm8"], 
                Entity["Concept", "Van::d977r"], 
                Entity["Concept", "VangueriaInfausta::p47j8"], 
                Entity["Concept", "VanillaBean::5545p"], 
                Entity["Concept", "VanillaOrchid::y97p2"], 
                Entity["Concept", "VCR::72r52"], 
                Entity["Concept", "VelvetAnt::36wyw"], 
                Entity["Concept", "VenetianBlind::d232y"], 
                Entity["Concept", "VennDiagram::c2fh8"], 
                Entity["Concept", "Ventilator::3g9b3"], 
                Entity["Concept", "Venus::rt8g3"], 
                Entity["Concept", "VenusSlipper::3b48n"], 
                Entity["Concept", "Veranda::649d7"], 
                Entity["Concept", "Verbena::y2433"], 
                Entity["Concept", "VeronicaAnagallis-aquatica::rt56z"], 
                Entity["Concept", "VerticalTail::y3rf9"], 
                Entity["Concept", "VespulaMaculifrons::vf259"], 
                Entity["Concept", "Vibes::q8373"], 
                Entity["Concept", "VicugnaVicugna::68y68"], 
                Entity["Concept", "Videocassette::qn243"], 
                Entity["Concept", "VineSnake::9kywz"], 
                Entity["Concept", "Viola::rb597"], 
                Entity["Concept", "Virus::7r5b3"], 
                Entity["Concept", "Vitellus::4s736"], 
                Entity["Concept", "VitisLabrusca::57y4w"], 
                Entity["Concept", "VitisRotundifolia::73v45"], 
                Entity["Concept", "VolcanicCrater::hg56v"], 
                Entity["Concept", "VolleyballNet::kjzs6"], 
                Entity["Concept", "Volleyball::q7bkw"], 
                Entity["Concept", "VulpesFulva::hjn6g"], 
                Entity["Concept", "VulpesMacrotis::jm64h"], 
                Entity["Concept", "WaffleIron::gpqx8"], 
                Entity["Concept", "WagonWheel::vnn85"], 
                Entity["Concept", "Wagtail::d3fh9"], 
                Entity["Concept", "WaitingArea::m5242"], 
                Entity["Concept", "Walkman::543v5"], 
                Entity["Concept", "WallClock::w5687"], 
                Entity["Concept", "Wand::tvf5w"], 
                Entity["Concept", "Warthog::3q477"], 
                Entity["Concept", "WaspsNest::5q2qb"], 
                Entity["Concept", "WatchCap::tx52s"], 
                Entity["Concept", "WaterBottle::5wh67"], 
                Entity["Concept", "Waterfall::w75k5"], 
                Entity["Concept", "Watermelon::3ftrw"], 
                Entity["Concept", "WaterMeter::4fk9z"], 
                Entity["Concept", "WaterMill::32krp"], 
                Entity["Concept", "WaterMoccasin::v4r6j"], 
                Entity["Concept", "WaterThrush::3dsww"], 
                Entity["Concept", "WaterTower::4rr5d"], 
                Entity["Concept", "Wattmeter::t225j"], 
                Entity["Concept", "WaxBean::vh3k8"], 
                Entity["Concept", "WeaponsCarrier::cd4gr"], 
                Entity["Concept", "Weigela::7k3w5"], 
                Entity["Concept", "Weimaraner::476j6"], 
                Entity["Concept", "WelcomeMat::jqb5y"], 
                Entity["Concept", "WelshSpringerSpaniel::qyng2"], 
                Entity["Concept", "Welwitschia::mc2vv"], 
                Entity["Concept", "WestHighlandWhiteTerrier::4h85y"], 
                Entity["Concept", "Wetland::cw472"], 
                Entity["Concept", "WetSuit::cg99h"], 
                Entity["Concept", "Wheatear::57c69"], 
                Entity["Concept", "Whelk::njp55"], 
                Entity["Concept", "Whippet::57r47"], 
                Entity["Concept", "Whisk::3dh4g"], 
                Entity["Concept", "Whistle::6j7m4"], 
                Entity["Concept", "White-crownedSparrow::7y368"], 
                Entity["Concept", "White-throatedSparrow::h6b94"], 
                Entity["Concept", "WhiteWine::9694s"], 
                Entity["Concept", "WhiteZinnia::8w74t"], 
                Entity["Concept", "Wigwam::6jn93"], 
                Entity["Concept", "WildBoar::5wjz4"], 
                Entity["Concept", "WildCherry::xdj3d"], 
                Entity["Concept", "WilsoniaPusilla::rpn3f"], 
                Entity["Concept", "Windmill::r56g9"], 
                Entity["Concept", "WindowBox::2jmch"], 
                Entity["Concept", "WindowSeat::y3k3g"], 
                Entity["Concept", "Windscreen::2fr34"], 
                Entity["Concept", "WindscreenWiper::6g7d6"], 
                Entity["Concept", "WindsorChair::2y5hz"], 
                Entity["Concept", "WindTurbine::s4yt6"], 
                Entity["Concept", "WineBucket::2798p"], 
                Entity["Concept", "WineCellar::8dmhx"], 
                Entity["Concept", "WingChair::3x982"], 
                Entity["Concept", "WireCutter::42d42"], 
                Entity["Concept", "WolfFish::92h52"], 
                Entity["Concept", "WollemiPine::3nppd"], 
                Entity["Concept", "Wombat::m5rqr"], 
                Entity["Concept", "WoodChisel::8twz7"], 
                Entity["Concept", "Wood-creeper::57kx5"], 
                Entity["Concept", "WoodDrake::kcbz2"], 
                Entity["Concept", "WoodenShoe::sg2sj"], 
                Entity["Concept", "Woofer::j3w9m"], 
                Entity["Concept", "WoollyBearMoth::bxt5j"], 
                Entity["Concept", "Work-shirt::k5jbz"], 
                Entity["Concept", "Wort::yv374"], 
                Entity["Concept", "WrenWarbler::7c4s3"], 
                Entity["Concept", "WrestlingRing::bzk4j"], 
                Entity["Concept", "Wringer::ggn4j"], 
                Entity["Concept", "WristWatch::45s84"], 
                Entity["Concept", "Wryneck::gt2c9"], 
                Entity["Concept", "XenicusGilviventris::xcb89"], 
                Entity["Concept", "XerographicCopier::45kbj"], 
                Entity["Concept", "Yagi::b4zfh"], 
                Entity["Concept", "Yam::5byc8"], 
                Entity["Concept", "YamPlant::d9jn2"], 
                Entity["Concept", "Yard::b3r8k"], 
                Entity["Concept", "Yarmelke::dd25p"], 
                Entity["Concept", "YellowSquash::qd52t"], 
                Entity["Concept", "YorkshirePudding::w2kmp"], 
                Entity["Concept", "YorkshireTerrier::bn4jn"], 
                Entity["Concept", "YuccaBaccata::66t78"], 
                Entity["Concept", "YuccaGlauca::jrp8h"], 
                Entity["Concept", "YuccaGloriosa::p8394"], 
                Entity["Concept", "Zamboni::t2s77"], 
                Entity["Concept", "Zebu::4dn49"], 
                Entity["Concept", "Ziggurat::6f5g6"], 
                Entity["Concept", "ZootSuit::5332k"], 
                Entity["FictionalCharacter", "AbrahamSimpson"], 
                Entity["FictionalCharacter", "AdamWarlock"], 
                Entity["FictionalCharacter", "Barbie"], 
                Entity["FictionalCharacter", "BartholomewJoJoSimpson"], 
                Entity["FictionalCharacter", "Batman"], 
                Entity["FictionalCharacter", "Beavis"], 
                Entity["FictionalCharacter", "BobTheBuilder"], 
                Entity["FictionalCharacter", "BugsBunny"], 
                Entity["FictionalCharacter", "Butthead"], 
                Entity["FictionalCharacter", "BuzzLightyear"], 
                Entity["FictionalCharacter", "CharlieBrown"], 
                Entity["FictionalCharacter", "Chewbacca"], 
                Entity["FictionalCharacter", "CookieMonster"], 
                Entity["FictionalCharacter", "DarthVader"], 
                Entity["FictionalCharacter", "DonaldFauntleroyDuck"], 
                Entity["FictionalCharacter", "Doomsday"], 
                Entity["FictionalCharacter", "DoraTheExplorer"], 
                Entity["FictionalCharacter", "Garfield"], 
                Entity["FictionalCharacter", "Goofy"], 
                Entity["FictionalCharacter", "GreenLantern"], 
                Entity["FictionalCharacter", "HelloKitty"], 
                Entity["FictionalCharacter", "Hobbes"], 
                Entity["FictionalCharacter", "HomerSimpson"], 
                Entity["FictionalCharacter", "IronMan"], 
                Entity["FictionalCharacter", "Mario"], 
                Entity["FictionalCharacter", "MarjorieSimpson"], 
                Entity["FictionalCharacter", "MickeyMouse"], 
                Entity["FictionalCharacter", "MinnieMouse"], 
                Entity["FictionalCharacter", "OptimusPrime"], 
                Entity["FictionalCharacter", "Pacman"], 
                Entity["FictionalCharacter", "Pikachu"], 
                Entity["FictionalCharacter", "R2D2"], 
                Entity["FictionalCharacter", "SantaClaus"], 
                Entity["FictionalCharacter", "Snoopy"], 
                Entity["FictionalCharacter", "Spiderman"], 
                Entity["FictionalCharacter", "SpongeBob"], 
                Entity["FictionalCharacter", "StewieGriffin"], 
                Entity["FictionalCharacter", "Superman"], 
                Entity["FictionalCharacter", "TheFlash"], 
                Entity["FictionalCharacter", "TheGrinch"], 
                Entity["FictionalCharacter", "TheIncredibleHulk"], 
                Entity["FictionalCharacter", "ThePinkPanther"], 
                Entity["FictionalCharacter", "Tweety"], 
                Entity["FictionalCharacter", "WileECoyote"], 
                Entity["FictionalCharacter", "WinnieThePooh"], 
                Entity["FictionalCharacter", "WonderWoman"], 
                Entity["FictionalCharacter", "Yoda"]}, "Dimensions" -> 4315], 
             
             NeuralNetworks`TensorT[{4315}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"224\"", 
                    "\"224\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"conv_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv_1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv_1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"112\"", 
                    "\"112\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "conv_1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"bn_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "bn_1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "bn_1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"112\"", 
                    "\"112\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "bn_1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"relu_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "relu_1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "relu_1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"112\"", 
                    "\"112\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "relu_1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"pool_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool_1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool_1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"55\"", "\"55\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "pool_1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"conv_2_red\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv_2_red"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv_2_red"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"55\"", "\"55\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "conv_2_red"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"bn_2_red\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "bn_2_red"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "bn_2_red"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"55\"", "\"55\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "bn_2_red"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"relu_2_red\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "relu_2_red"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "relu_2_red"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"55\"", "\"55\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "relu_2_red"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"conv_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv_2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "conv_2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"55\"", 
                    "\"55\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "conv_2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"bn_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "bn_2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "bn_2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"55\"", 
                    "\"55\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "bn_2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"relu_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "relu_2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "relu_2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"55\"", 
                    "\"55\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "relu_2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"pool_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool_2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "pool_2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"192\"", "\"27\"", 
                    "\"27\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "pool_2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"27\"", 
                    "\"27\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3b\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"320\"", "\"27\"", 
                    "\"27\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3c\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3c"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3c"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"576\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3c"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"576\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4b\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"576\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4c\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4c"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4c"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"608\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4c"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4d\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4d"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4d"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"608\"", "\"14\"", 
                    "\"14\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4d"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4e\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4e"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4e"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1056\"", "\"7\"", "\"7\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4e"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1024\"", "\"7\"", "\"7\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5b\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1024\"", "\"7\"", "\"7\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5b"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"global_pool\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "global_pool"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "global_pool"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1024\"", "\"1\"", "\"1\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "global_pool"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4315\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4315\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{331., {197.4169921875, 202.5830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.707680574122794*^9, 3.707690449327265*^9, 
  3.707690785359294*^9, 3.707691418020084*^9, 3.707692822794153*^9, 
  3.707693052574688*^9, 3.7076945217322683`*^9, 3.70769479642871*^9, 
  3.7076950146582212`*^9, 
  3.707699806674615*^9},ExpressionUUID->"32f4cc80-6873-4d7a-8a90-\
49d16375acf2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"truncatedNetwork", " ", "=", " ", 
    RowBox[{"Take", "[", 
     RowBox[{"deenCNN", ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "3"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.707692285923044*^9, 
  3.7076923305511293`*^9}},ExpressionUUID->"40f561bf-436d-48b0-952f-\
d7619af9a791"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deepCNNInceptionV3", " ", "=", " ", 
  RowBox[{"NetInitialize", " ", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"truncatedNetwork", ",", " ", 
       RowBox[{"LinearLayer", "[", 
        RowBox[{"Length", "[", "emotionTypes", "]"}], "]"}], ",", " ", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", "emotionTypes"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.707601056924779*^9, 3.7076010945139027`*^9}, {
   3.7076012066319237`*^9, 3.7076012332685623`*^9}, {3.7076018940825977`*^9, 
   3.70760189778439*^9}, {3.707601948038694*^9, 3.70760196290336*^9}, {
   3.707602081088512*^9, 3.707602126499414*^9}, {3.707602328825584*^9, 
   3.7076023324862547`*^9}, 3.707609391096349*^9, {3.707676728053857*^9, 
   3.7076767309357767`*^9}, {3.7076908686937027`*^9, 3.707690943367447*^9}, {
   3.707690998247058*^9, 3.707691039972973*^9}, 3.707691083861326*^9, 
   3.7076911225879602`*^9, {3.707691189124885*^9, 3.707691206867934*^9}, {
   3.707691252885602*^9, 3.707691265996839*^9}, {3.7076915321022987`*^9, 
   3.707691533259079*^9}, 3.707692280392086*^9, {3.70769232184953*^9, 
   3.7076923503250637`*^9}, 3.70769238489926*^9, {3.707692548916383*^9, 
   3.707692594832871*^9}},ExpressionUUID->"b1fe91d8-f9fa-43a4-b5f5-\
735b7d2b5612"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Chain", "Nodes" -> 
             Association[
              "conv_1" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 3, 7, 7}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {7, 7}, 
                   "Stride" -> {2, 2}, "PaddingSize" -> {3, 3}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 3, "$GroupNumber" -> 1, 
                   "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "bn_1" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu_1" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 112, 112}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool_1" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 64, 
                   "$InputSize" -> {112, 112}, "$OutputSize" -> {55, 55}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "conv_2_red" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{64, 64, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 64, "$GroupNumber" -> 1, 
                   "$InputSize" -> {55, 55}, "$OutputSize" -> {55, 55}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "bn_2_red" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], "Beta" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingVariance" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   64, "$Shape" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "relu_2_red" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {64, 55, 55}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "conv_2" -> 
               Association[
                "Type" -> "Convolution", "Arrays" -> 
                 Association[
                  "Weights" -> 
                   NeuralNetworks`TensorT[{192, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                   "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                   "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                   "InputChannels" -> 64, "$GroupNumber" -> 1, 
                   "$InputSize" -> {55, 55}, "$OutputSize" -> {55, 55}], 
                 "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]]], "bn_2" -> 
               Association[
                "Type" -> "BatchNormalization", "Arrays" -> 
                 Association[
                  "Gamma" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                   "MovingMean" -> 
                   NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                 "Parameters" -> 
                 Association[
                  "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                   192, "$Shape" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]]], "relu_2" -> 
               Association[
                "Type" -> "Elementwise", "Arrays" -> Association[], 
                 "Parameters" -> 
                 Association[
                  "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                   "$Dimensions" -> {192, 55, 55}], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]]], "pool_2" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Max, 
                   "Dimensionality" -> 2, "Channels" -> 192, 
                   "$InputSize" -> {55, 55}, "$OutputSize" -> {27, 27}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]]], "3a" -> 
               Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 192, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    32, "$Shape" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "3b" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 256, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "3c" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 320, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 320, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 320, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 320, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 320, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 3, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "4a" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 576, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "4b" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 576, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "4c" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 576, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "4d" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 608, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "4e" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    256, "$Shape" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    256, "$Shape" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 608, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 3, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "5a" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{352, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 352, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{352}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    352, "$Shape" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {352, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{320, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 320, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    320, "$Shape" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {320, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 224, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 224, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 1056, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "5b" -> Association[
                "Type" -> "Graph", "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                 Association[
                  "conv1x1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{352, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 352, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{352}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    352, "$Shape" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {352, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{320, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 320, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    320, "$Shape" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {320, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 224, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 224, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
                   Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 1024, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                   Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                   Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                   Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                 "Edges" -> {
                  NeuralNetworks`NetPath["Nodes", "bn1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Inputs", "Input"] -> 
                   NeuralNetworks`NetPath["Inputs", "Input"], 
                   NeuralNetworks`NetPath["Outputs", "Output"] -> 
                   NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
               "global_pool" -> 
               Association[
                "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                 Association[
                  "KernelSize" -> {7, 7}, "Stride" -> {1, 1}, 
                   "PaddingSize" -> {0, 0}, "Function" -> Mean, 
                   "Dimensionality" -> 2, "Channels" -> 1024, 
                   "$InputSize" -> {7, 7}, "$OutputSize" -> {1, 1}, 
                   "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                   False], "Inputs" -> 
                 Association[
                  "Input" -> 
                   NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                 Association[
                  "Output" -> 
                   NeuralNetworks`TensorT[{1024, 1, 1}, 
                    NeuralNetworks`RealT]]]], 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "conv_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "bn_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "conv_1", "Outputs", "Output"],
                NeuralNetworks`NetPath["Nodes", "relu_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn_1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool_1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "relu_1", "Outputs", "Output"],
                NeuralNetworks`NetPath[
                "Nodes", "conv_2_red", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool_1", "Outputs", "Output"],
                NeuralNetworks`NetPath[
                "Nodes", "bn_2_red", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "conv_2_red", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "relu_2_red", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "bn_2_red", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "conv_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "relu_2_red", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "bn_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "conv_2", "Outputs", "Output"],
                NeuralNetworks`NetPath["Nodes", "relu_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "bn_2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "pool_2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "relu_2", "Outputs", "Output"],
                NeuralNetworks`NetPath["Nodes", "3a", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "pool_2", "Outputs", "Output"],
                NeuralNetworks`NetPath["Nodes", "3b", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3a", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3c", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3b", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "4a", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3c", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "4b", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "4a", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "4c", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "4b", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "4d", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "4c", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "4e", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "4d", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5a", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "4e", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5b", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5a", "Outputs", "Output"], 
               NeuralNetworks`NetPath[
                "Nodes", "global_pool", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5b", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath[
                "Nodes", "global_pool", "Outputs", "Output"]}, "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1024, 1, 1}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{5, 1024}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputDimensions" -> {5}, "$OutputSize" -> 5, "$InputSize" -> 
               1024, "$InputDimensions" -> {1024, 1, 1}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1024, 1, 1}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]],
            "3" -> Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
              "ColorChannels" -> 3, "MeanImage" -> {0.48, 0.46, 0.4}], 
             NeuralNetworks`TensorT[{3, 224, 224}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association[
             "Labels" -> {"happy", "neutral", "sad", "angry", "surprise"}, 
              "Dimensions" -> 5], 
             NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"224\"", 
                    "\"224\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "22", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1024\"", "\"1\"", "\"1\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{246., {39.9169921875, 45.0830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.707692553030322*^9, 3.707692597280636*^9, 
  3.707692828315548*^9, 3.707693058330983*^9, 3.707694522814515*^9, 
  3.7076947974047832`*^9, 3.7076950161036463`*^9, 3.707699807878943*^9, 
  3.707699852434746*^9},ExpressionUUID->"d79d011d-084c-49cd-bcb9-\
dfcc437c9391"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"toPreserve", " ", "=", 
   RowBox[{"{", " ", 
    RowBox[{
    "\"\<TrainedNet\>\"", ",", "\n", "\t", "\"\<BatchLossList\>\"", ",", 
     "\[IndentingNewLine]", "    ", "\"\<RoundLossList\>\"", ",", "\n", "\t", 
     "\"\<ValidationLossList\>\"", ",", "\n", "          ", 
     "\"\<LossEvolutionPlot\>\"", ",", "\n", "          ", 
     "\"\<RMSGradientEvolutionPlot\>\"", ",", "\[IndentingNewLine]", 
     "\"\<RMSWeightEvolutionPlot\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.707676695887336*^9, {3.7076998191320066`*^9, 
   3.70769984540392*^9}},ExpressionUUID->"df134258-c818-4554-a217-\
4e58f12cc63d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lossFunction", " ", "=", " ", 
   RowBox[{"CrossEntropyLossLayer", "[", "\"\<Index\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.707609401866435*^9, 
  3.7076923906327543`*^9},ExpressionUUID->"f532ce2a-5a4f-4d40-a89f-\
fb09541f7dbc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "outputDirInception", "=", " ", 
    "\"\</Users/adendek/Documents/Wolfram \
Mathematica/Intern/project/DeepLaetitia/scripts/smileDetector/models/\
InceptionV3\>\""}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.707602263258328*^9, 3.7076022698444757`*^9}, {
  3.7076772217411613`*^9, 
  3.707677224414879*^9}},ExpressionUUID->"6a018796-38e0-47c8-badd-\
95fccf905073"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"trainedDeepCNNInceptionV3", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{
    "deepCNNInceptionV3", ",", "trainData", ",", " ", "lossFunction", ",", 
     "toPreserve", ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", " ", "3"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Directory\>\"", ",", "outputDirInception"}], "}"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", "testData"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LearningRateMultipliers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], "\[Rule]", "1"}], " ", ",", 
        RowBox[{"_", "\[Rule]", "None"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BatchSize", "\[Rule]", "64"}]}], "\[IndentingNewLine]", "]"}]}],
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7076022997563953`*^9, 3.707602344335384*^9}, 
   3.70760641349195*^9, {3.707606911565011*^9, 3.7076069282524977`*^9}, {
   3.707609475550398*^9, 3.707609476221208*^9}, {3.707610903265346*^9, 
   3.7076109120361023`*^9}, 3.707678905171564*^9, {3.7076923635439377`*^9, 
   3.707692370821039*^9}, {3.70769240721436*^9, 3.707692408211882*^9}, {
   3.707692527023897*^9, 3.707692529003231*^9}, {3.707692617400115*^9, 
   3.707692617889647*^9}, {3.707692692003127*^9, 3.707692703109786*^9}, {
   3.7076927392510977`*^9, 3.7076927398798447`*^9}, 3.7076928546110983`*^9, {
   3.707694125973016*^9, 3.7076941569482*^9}, {3.707694231557966*^9, 
   3.7076942459125557`*^9}, {3.707699746003564*^9, 
   3.707699772078702*^9}},ExpressionUUID->"191a967e-f980-4b40-bb06-\
360f9501ff9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox[
    TagBox[
     TagBox[
      RowBox[{"NetChain", 
       RowBox[{"[", 
        PanelBox[
         DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = 
          Association[
          "Type" -> "Chain", "Nodes" -> 
           Association[
            "1" -> Association[
              "Type" -> "Chain", "Nodes" -> 
               Association[
                "conv_1" -> 
                 Association[
                  "Type" -> "Convolution", "Arrays" -> 
                   Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 3, 7, 7}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                   "Parameters" -> 
                   Association[
                    "OutputChannels" -> 64, "KernelSize" -> {7, 7}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {3, 3}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 3, "$GroupNumber" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}], 
                   "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "bn_1" -> 
                 Association[
                  "Type" -> "BatchNormalization", "Arrays" -> 
                   Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                   "Parameters" -> 
                   Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu_1" -> 
                 Association[
                  "Type" -> "Elementwise", "Arrays" -> Association[], 
                   "Parameters" -> 
                   Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 112, 112}], "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool_1" -> 
                 Association[
                  "Type" -> "Pooling", "Arrays" -> Association[], 
                   "Parameters" -> 
                   Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 64, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {55, 55}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "conv_2_red" -> 
                 Association[
                  "Type" -> "Convolution", "Arrays" -> 
                   Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 64, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                   "Parameters" -> 
                   Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {55, 55}, "$OutputSize" -> {55, 55}], 
                   "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "bn_2_red" -> 
                 Association[
                  "Type" -> "BatchNormalization", "Arrays" -> 
                   Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                   "Parameters" -> 
                   Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "relu_2_red" -> 
                 Association[
                  "Type" -> "Elementwise", "Arrays" -> Association[], 
                   "Parameters" -> 
                   Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 55, 55}], "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "conv_2" -> 
                 Association[
                  "Type" -> "Convolution", "Arrays" -> 
                   Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                   "Parameters" -> 
                   Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {55, 55}, "$OutputSize" -> {55, 55}], 
                   "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]]], "bn_2" -> 
                 Association[
                  "Type" -> "BatchNormalization", "Arrays" -> 
                   Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                   "Parameters" -> 
                   Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]]], "relu_2" -> 
                 Association[
                  "Type" -> "Elementwise", "Arrays" -> Association[], 
                   "Parameters" -> 
                   Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 55, 55}], "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]]], "pool_2" -> 
                 Association[
                  "Type" -> "Pooling", "Arrays" -> Association[], 
                   "Parameters" -> 
                   Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 192, 
                    "$InputSize" -> {55, 55}, "$OutputSize" -> {27, 27}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]]], "3a" -> 
                 Association[
                  "Type" -> "Graph", "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                   Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 192, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 192, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    32, "$Shape" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]]]], 
                   "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                 "3b" -> Association[
                  "Type" -> "Graph", "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                   Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 256, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 256, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]]]], 
                   "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                 "3c" -> Association[
                  "Type" -> "Graph", "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                   Association[
                    "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 320, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 320, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 320, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 320, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 320, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 3, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                   "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Outputs", "Output"]}, 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                 "4a" -> Association[
                  "Type" -> "Graph", "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                   Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    64, "$Shape" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 576, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                   "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                 "4b" -> Association[
                  "Type" -> "Graph", "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                   Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 96, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 96, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 576, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                   "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                 "4c" -> Association[
                  "Type" -> "Graph", "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                   Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 576, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 576, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 576, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                   "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                 "4d" -> Association[
                  "Type" -> "Graph", "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                   Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{96}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    96, "$Shape" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 608, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                   "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                 "4e" -> Association[
                  "Type" -> "Graph", "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                   Association[
                    "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 128, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 608, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 608, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    256, "$Shape" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 256, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    256, "$Shape" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 608, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 3, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{192, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                   "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Outputs", "Output"]}, 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                 "5a" -> Association[
                  "Type" -> "Graph", "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                   Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{352, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 352, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{352}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    352, "$Shape" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {352, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{320, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 320, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    320, "$Shape" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {320, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{160, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{160}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    160, "$Shape" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 160, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 160, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 224, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 224, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 1056, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 1056, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1056, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                   "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                 "5b" -> Association[
                  "Type" -> "Graph", "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                   Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{352, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 352, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{352}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{352}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    352, "$Shape" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {352, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{320, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 320, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    320, "$Shape" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {320, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{192, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{192}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{192}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    192, "$Shape" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 192, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 192, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{224, 224, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 224, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{224}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{224}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    224, "$Shape" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 1024, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 1024, 1, 1}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "Beta" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT], "MovingVariance" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT], 
                    "MovingMean" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "Channels" -> 
                    128, "$Shape" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 4, 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{352, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{224, 7, 7}, NeuralNetworks`RealT], 
                    
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                   "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "Input"] -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"]}, 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                 "global_pool" -> 
                 Association[
                  "Type" -> "Pooling", "Arrays" -> Association[], 
                   "Parameters" -> 
                   Association[
                    "KernelSize" -> {7, 7}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "Channels" -> 1024, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {1, 1}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                   Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                   Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 1, 1}, 
                    NeuralNetworks`RealT]]]], 
               "Edges" -> {
                NeuralNetworks`NetPath["Nodes", "conv_1", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath["Inputs", "Input"], 
                 NeuralNetworks`NetPath["Nodes", "bn_1", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath[
                  "Nodes", "conv_1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "relu_1", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath["Nodes", "bn_1", "Outputs", "Output"],
                  NeuralNetworks`NetPath[
                  "Nodes", "pool_1", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath[
                  "Nodes", "relu_1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                  "Nodes", "conv_2_red", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath[
                  "Nodes", "pool_1", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                  "Nodes", "bn_2_red", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath[
                  "Nodes", "conv_2_red", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                  "Nodes", "relu_2_red", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath[
                  "Nodes", "bn_2_red", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "conv_2", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath[
                  "Nodes", "relu_2_red", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "bn_2", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath[
                  "Nodes", "conv_2", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "relu_2", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath["Nodes", "bn_2", "Outputs", "Output"],
                  NeuralNetworks`NetPath[
                  "Nodes", "pool_2", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath[
                  "Nodes", "relu_2", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "3a", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath[
                  "Nodes", "pool_2", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "3b", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath["Nodes", "3a", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "3c", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath["Nodes", "3b", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "4a", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath["Nodes", "3c", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "4b", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath["Nodes", "4a", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "4c", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath["Nodes", "4b", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "4d", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath["Nodes", "4c", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "4e", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath["Nodes", "4d", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "5a", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath["Nodes", "4e", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Nodes", "5b", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath["Nodes", "5a", "Outputs", "Output"], 
                 NeuralNetworks`NetPath[
                  "Nodes", "global_pool", "Inputs", "Input"] -> 
                 NeuralNetworks`NetPath["Nodes", "5b", "Outputs", "Output"], 
                 NeuralNetworks`NetPath["Outputs", "Output"] -> 
                 NeuralNetworks`NetPath[
                  "Nodes", "global_pool", "Outputs", "Output"]}, "Inputs" -> 
               Association[
                "Input" -> 
                 NeuralNetworks`TensorT[{3, 224, 224}, NeuralNetworks`RealT]],
                "Outputs" -> 
               Association[
                "Output" -> 
                 NeuralNetworks`TensorT[{1024, 1, 1}, NeuralNetworks`RealT]]],
              "2" -> Association[
              "Type" -> "Linear", "Arrays" -> 
               Association[
                "Weights" -> 
                 NeuralNetworks`TensorT[{5, 1024}, NeuralNetworks`RealT], 
                 "Biases" -> 
                 NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
               "Parameters" -> 
               Association[
                "OutputDimensions" -> {5}, "$OutputSize" -> 5, "$InputSize" -> 
                 1024, "$InputDimensions" -> {1024, 1, 1}], "Inputs" -> 
               Association[
                "Input" -> 
                 NeuralNetworks`TensorT[{1024, 1, 1}, NeuralNetworks`RealT]], 
               "Outputs" -> 
               Association[
                "Output" -> 
                 NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]], "3" -> 
             Association[
              "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
               Association[], "Inputs" -> 
               Association[
                "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]],
                "Outputs" -> 
               Association[
                "Output" -> 
                 NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]]], 
           "Edges" -> {
            NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
             NeuralNetworks`NetPath["Inputs", "Input"], 
             NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
             NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
             NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
             NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
             NeuralNetworks`NetPath["Outputs", "Output"] -> 
             NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"]}, 
           "Inputs" -> Association["Input" -> NetEncoder["Image", 
               Association[
               "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                "ColorChannels" -> 3, "MeanImage" -> {0.48, 0.46, 0.4}], 
               NeuralNetworks`TensorT[{3, 224, 224}, NeuralNetworks`RealT]]], 
           "Outputs" -> Association["Output" -> NetDecoder["Class", 
               Association[
               "Labels" -> {"happy", "neutral", "sad", "angry", "surprise"}, 
                "Dimensions" -> 5], 
               NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]]], 
          NeuralNetworks`Private`NetChain`opart, 
          NeuralNetworks`Private`NetChain`part, 
          NeuralNetworks`Private`NetChain`selected = Null}, 
          DynamicBox[GridBox[{{
              NeuralNetworks`Private`NetChain`MouseClickBoxes[
               TagBox[
                GridBox[{{
                   TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                   TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                   TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"224\"", 
                    "\"224\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                   TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                   TagBox[
                    TagBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "22", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                   TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1024\"", "\"1\"", "\"1\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                   TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                   TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                   TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                   TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                   TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                   TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                   TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                   TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                   TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
               If[
                ListQ[
                NeuralNetworks`Private`NetChain`part = MouseAnnotation[]], 
                If[NeuralNetworks`Private`NetChain`opart === 
                  NeuralNetworks`Private`NetChain`part, 
                  NeuralNetworks`Private`NetChain`selected = Null; 
                  NeuralNetworks`Private`NetChain`opart = Null, 
                  NeuralNetworks`Private`NetChain`selected = 
                   Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                  NeuralNetworks`Private`NetChain`opart = 
                   NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
             NeuralNetworks`Private`NetChain`fmtSelected[
             NeuralNetworks`Private`NetChain`selected, 
              NeuralNetworks`Private`NetChain`part]}, 
            GridBoxSpacings -> {"Columns" -> {{1}}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}],
           ImageSizeCache->{246., {39.9169921875, 45.0830078125}},
           TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
          Initialization:>{NetChain}],
         BaselinePosition->Automatic], "]"}]}],
      False],
     Deploy],
    LineBreakWithin->False], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.623671293258667`", ",", "1.6788747310638428`", ",", 
     "1.6329371929168701`", ",", "1.6760822534561157`", ",", 
     "1.7557071447372437`", ",", "1.6602751016616821`", ",", 
     "1.614565372467041`", ",", "1.429714322090149`", ",", 
     "1.6333192586898804`", ",", "1.6108289957046509`", ",", 
     "1.537610650062561`", ",", "1.6421489715576172`", ",", 
     "1.7141506671905518`", ",", "1.5750645399093628`", ",", 
     "1.5444326400756836`", ",", "1.5701135396957397`", ",", 
     "1.552233338356018`", ",", "1.5040147304534912`", ",", 
     "1.5240936279296875`", ",", "1.5431716442108154`", ",", 
     "1.5755938291549683`", ",", "1.5053917169570923`", ",", 
     "1.5122841596603394`", ",", "1.5874574184417725`", ",", 
     "1.468688726425171`", ",", "1.508739948272705`", ",", 
     "1.499881386756897`", ",", "1.487403392791748`", ",", 
     "1.511728286743164`", ",", "1.4806348085403442`", ",", 
     "1.408643126487732`", ",", "1.4515199661254883`", ",", 
     "1.5253721475601196`", ",", "1.4628322124481201`", ",", 
     "1.420681357383728`", ",", "1.4877187013626099`", ",", 
     "1.3584738969802856`", ",", "1.4774222373962402`", ",", 
     "1.5654927492141724`", ",", "1.5371155738830566`", ",", 
     "1.5082553625106812`", ",", "1.37429678440094`", ",", 
     "1.4896255731582642`", ",", "1.3774014711380005`", ",", 
     "1.4447216987609863`", ",", "1.396599292755127`", ",", 
     "1.426517367362976`", ",", "1.415674090385437`", ",", 
     "1.354003667831421`", ",", "1.3894858360290527`", ",", 
     "1.3900824785232544`", ",", "1.343868374824524`", ",", 
     "1.4658241271972656`", ",", "1.4096119403839111`", ",", 
     "1.358806848526001`", ",", "1.444330096244812`", ",", 
     "1.3240011930465698`", ",", "1.424021601676941`", ",", 
     "1.4261720180511475`", ",", "1.3309118747711182`", ",", 
     "1.3919456005096436`", ",", "1.3511830568313599`", ",", 
     "1.3405141830444336`", ",", "1.38090181350708`", ",", 
     "1.426801323890686`", ",", "1.4319571256637573`", ",", 
     "1.3358298540115356`", ",", "1.3523979187011719`", ",", 
     "1.3305236101150513`", ",", "1.3150660991668701`", ",", 
     "1.3308100700378418`", ",", "1.40431547164917`", ",", 
     "1.3519715070724487`", ",", "1.3013845682144165`", ",", 
     "1.3657735586166382`", ",", "1.4038411378860474`", ",", 
     "1.3413159847259521`", ",", "1.3195527791976929`", ",", 
     "1.3535363674163818`", ",", "1.4026254415512085`", ",", 
     "1.3726754188537598`", ",", "1.3380810022354126`", ",", 
     "1.3513100147247314`", ",", "1.313112497329712`", ",", 
     "1.4492188692092896`", ",", "1.2024717330932617`", ",", 
     "1.1961920261383057`", ",", "1.4017510414123535`", ",", 
     "1.4938756227493286`", ",", "1.2753304243087769`", ",", 
     "1.40719735622406`", ",", "1.4000171422958374`", ",", 
     "1.3283050060272217`", ",", "1.344104290008545`", ",", 
     "1.2919241189956665`", ",", "1.3956918716430664`", ",", 
     "1.353431224822998`", ",", "1.2276641130447388`", ",", 
     "1.2538810968399048`", ",", "1.3807011842727661`", ",", 
     "1.2420905828475952`", ",", "1.3237968683242798`", ",", 
     "1.3684604167938232`", ",", "1.273443579673767`", ",", 
     "1.2567064762115479`", ",", "1.3841357231140137`", ",", 
     "1.3089700937271118`", ",", "1.3565993309020996`", ",", 
     "1.3494224548339844`", ",", "1.3981857299804688`", ",", 
     "1.1772361993789673`", ",", "1.360036849975586`", ",", 
     "1.374793291091919`", ",", "1.388041377067566`", ",", 
     "1.3781521320343018`", ",", "1.2606652975082397`", ",", 
     "1.419097900390625`", ",", "1.3069888353347778`", ",", 
     "1.3532363176345825`", ",", "1.3809715509414673`", ",", 
     "1.363016128540039`", ",", "1.3096965551376343`", ",", 
     "1.1923469305038452`", ",", "1.2488473653793335`", ",", 
     "1.2448369264602661`", ",", "1.320672631263733`", ",", 
     "1.3150359392166138`", ",", "1.224676251411438`", ",", 
     "1.1816658973693848`", ",", "1.3680002689361572`", ",", 
     "1.3101600408554077`", ",", "1.2802300453186035`", ",", 
     "1.1753898859024048`", ",", "1.2436769008636475`", ",", 
     "1.3222087621688843`", ",", "1.3084450960159302`", ",", 
     "1.0682830810546875`", ",", "1.201732873916626`", ",", 
     "1.2318050861358643`", ",", "1.2206836938858032`", ",", 
     "1.2758444547653198`", ",", "1.302211046218872`", ",", 
     "1.3194270133972168`", ",", "1.4120888710021973`", ",", 
     "1.2960124015808105`", ",", "1.2580989599227905`", ",", 
     "1.2149401903152466`", ",", "1.254655122756958`", ",", 
     "1.355959415435791`", ",", "1.3177645206451416`", ",", 
     "1.274741768836975`", ",", "1.3800934553146362`", ",", 
     "1.2890851497650146`", ",", "1.2759032249450684`", ",", 
     "1.2202093601226807`", ",", "1.288606882095337`", ",", 
     "1.3822587728500366`", ",", "1.1138520240783691`", ",", 
     "1.184348702430725`", ",", "1.3775842189788818`", ",", 
     "1.352325677871704`", ",", "1.2724515199661255`", ",", 
     "1.1081146001815796`", ",", "1.2894536256790161`", ",", 
     "1.236259937286377`", ",", "1.243668794631958`", ",", 
     "1.247365951538086`", ",", "1.352418303489685`", ",", 
     "1.3105107545852661`", ",", "1.195487380027771`", ",", 
     "1.3361350297927856`", ",", "1.2256064414978027`", ",", 
     "1.2104833126068115`", ",", "1.2518984079360962`", ",", 
     "1.1146074533462524`", ",", "1.259982943534851`", ",", 
     "1.1635209321975708`", ",", "1.2597624063491821`", ",", 
     "1.2742466926574707`", ",", "1.1041806936264038`", ",", 
     "1.1429272890090942`", ",", "1.2246628999710083`", ",", 
     "1.2923907041549683`", ",", "1.2350903749465942`", ",", 
     "1.340774655342102`", ",", "1.2806432247161865`", ",", 
     "1.052755355834961`", ",", "1.3389054536819458`", ",", 
     "1.297137975692749`", ",", "1.1779024600982666`", ",", 
     "1.1590780019760132`", ",", "1.4374399185180664`", ",", 
     "1.366014838218689`", ",", "1.157762050628662`", ",", 
     "1.179715633392334`", ",", "1.2780933380126953`", ",", 
     "1.2632830142974854`", ",", "1.2344207763671875`", ",", 
     "1.222142219543457`", ",", "1.2014936208724976`", ",", 
     "1.1580730676651`", ",", "1.2311664819717407`", ",", 
     "1.324513554573059`", ",", "1.2777917385101318`", ",", 
     "1.2323600053787231`", ",", "1.160373568534851`", ",", 
     "1.2164660692214966`", ",", "1.1736671924591064`", ",", 
     "1.1593929529190063`", ",", "1.3010618686676025`", ",", 
     "1.1688554286956787`", ",", "1.2264431715011597`", ",", 
     "1.2598410844802856`", ",", "1.2422136068344116`", ",", 
     "1.156588077545166`", ",", "1.2202773094177246`", ",", 
     "1.3316044807434082`", ",", "1.2333414554595947`", ",", 
     "1.4253597259521484`", ",", "1.110192894935608`", ",", 
     "1.2358355522155762`", ",", "1.2428662776947021`", ",", 
     "1.3685895204544067`", ",", "1.1391137838363647`", ",", 
     "1.137507677078247`", ",", "1.2475917339324951`", ",", 
     "1.1563291549682617`", ",", "1.2677823305130005`", ",", 
     "1.0980020761489868`", ",", "1.1820018291473389`", ",", 
     "1.178282380104065`", ",", "1.1268690824508667`", ",", 
     "1.1553140878677368`", ",", "1.2221312522888184`", ",", 
     "1.2736051082611084`", ",", "1.2386548519134521`", ",", 
     "1.2680569887161255`", ",", "1.2079110145568848`", ",", 
     "1.1884434223175049`", ",", "1.3241771459579468`", ",", 
     "1.1129837036132812`", ",", "1.1612190008163452`", ",", 
     "1.2187607288360596`", ",", "1.1161012649536133`", ",", 
     "1.2619242668151855`", ",", "1.1982321739196777`", ",", 
     "1.201928973197937`", ",", "1.1459404230117798`", ",", 
     "1.3020764589309692`", ",", "1.1392831802368164`", ",", 
     "1.1426711082458496`", ",", "1.2228877544403076`", ",", 
     "1.3089064359664917`", ",", "1.246911883354187`", ",", 
     "1.2849408388137817`", ",", "1.1234192848205566`", ",", 
     "1.1949278116226196`", ",", "1.109138011932373`", ",", 
     "1.2713357210159302`", ",", "1.223384141921997`", ",", 
     "1.2846355438232422`", ",", "1.3143362998962402`", ",", 
     "1.262526035308838`", ",", "1.1262450218200684`", ",", 
     "1.1361300945281982`", ",", "1.2332571744918823`", ",", 
     "1.2048588991165161`", ",", "1.1540180444717407`", ",", 
     "1.137808084487915`", ",", "1.257629632949829`", ",", 
     "1.1449331045150757`", ",", "1.2614622116088867`", ",", 
     "1.1312687397003174`", ",", "1.431235671043396`", ",", 
     "1.2399420738220215`", ",", "1.193157434463501`", ",", 
     "1.1309726238250732`", ",", "1.0832329988479614`", ",", 
     "1.3223514556884766`", ",", "1.2150511741638184`", ",", 
     "1.1763646602630615`", ",", "1.1558570861816406`", ",", 
     "1.307182788848877`", ",", "1.1760467290878296`", ",", 
     "1.3911356925964355`", ",", "1.318036437034607`", ",", 
     "1.0624895095825195`", ",", "1.2353465557098389`", ",", 
     "1.1254276037216187`", ",", "1.317277193069458`", ",", 
     "1.2628120183944702`", ",", "1.0002493858337402`", ",", 
     "1.1195597648620605`", ",", "1.1934610605239868`", ",", 
     "1.237135887145996`", ",", "1.3396008014678955`", ",", 
     "1.3019696474075317`", ",", "1.0075023174285889`", ",", 
     "1.1120448112487793`", ",", "1.0711008310317993`", ",", 
     "1.1312434673309326`", ",", "1.295324444770813`", ",", 
     "1.3303592205047607`", ",", "1.2020752429962158`", ",", 
     "1.1144673824310303`", ",", "1.20236337184906`", ",", 
     "1.311220645904541`", ",", "1.1025190353393555`", ",", 
     "1.1519361734390259`", ",", "1.250417947769165`", ",", 
     "1.0863934755325317`", ",", "1.1807613372802734`", ",", 
     "1.203277826309204`", ",", "1.1528140306472778`", ",", 
     "1.1683989763259888`", ",", "1.0407081842422485`", ",", 
     "1.0659103393554688`", ",", "1.1903572082519531`", ",", 
     "1.1100797653198242`", ",", "1.1257236003875732`", ",", 
     "1.2506757974624634`", ",", "1.2767938375473022`", ",", 
     "1.113180160522461`", ",", "1.0817352533340454`", ",", 
     "1.2311707735061646`", ",", "1.0557955503463745`", ",", 
     "1.1691811084747314`", ",", "1.1071099042892456`", ",", 
     "1.2469953298568726`", ",", "1.038909912109375`", ",", 
     "1.3088672161102295`", ",", "1.066733479499817`", ",", 
     "1.0574241876602173`", ",", "1.1978663206100464`", ",", 
     "1.2353163957595825`", ",", "1.075411319732666`", ",", 
     "1.263635277748108`", ",", "1.0746443271636963`", ",", 
     "1.0879449844360352`", ",", "1.1389282941818237`", ",", 
     "0.9800072312355042`", ",", "1.1930477619171143`", ",", 
     "1.2812554836273193`", ",", "1.2514352798461914`", ",", 
     "1.073423147201538`", ",", "1.4135860204696655`", ",", 
     "1.1338635683059692`", ",", "1.1100025177001953`", ",", 
     "1.349135398864746`", ",", "1.3200677633285522`", ",", 
     "0.9931554794311523`", ",", "1.2820855379104614`", ",", 
     "1.2346327304840088`", ",", "1.1687034368515015`", ",", 
     "1.0291481018066406`", ",", "1.2902898788452148`", ",", 
     "1.195981502532959`", ",", "1.2437602281570435`", ",", 
     "1.18660306930542`", ",", "1.1207832098007202`", ",", 
     "1.120577335357666`", ",", "1.283443808555603`", ",", 
     "1.0143067836761475`", ",", "1.2361594438552856`", ",", 
     "1.053075909614563`", ",", "1.1084426641464233`", ",", 
     "1.0495967864990234`", ",", "1.086087942123413`", ",", 
     "1.063736081123352`", ",", "1.0176161527633667`", ",", 
     "1.2546570301055908`", ",", "1.0629557371139526`", ",", 
     "1.077772617340088`", ",", "1.3100711107254028`", ",", 
     "1.0229796171188354`", ",", "1.0522453784942627`", ",", 
     "1.27335524559021`", ",", "1.1395723819732666`", ",", 
     "1.2743645906448364`", ",", "1.1341145038604736`", ",", 
     "1.0528230667114258`", ",", "1.0498650074005127`", ",", 
     "1.0928981304168701`", ",", "1.0359892845153809`", ",", 
     "1.1123236417770386`", ",", "1.1317256689071655`", ",", 
     "0.9824851751327515`", ",", "1.258971095085144`", ",", 
     "1.2331891059875488`", ",", "1.1197595596313477`", ",", 
     "1.10469388961792`", ",", "1.2326793670654297`", ",", 
     "1.1366561651229858`", ",", "1.183019757270813`", ",", 
     "1.1921992301940918`", ",", "1.0052952766418457`", ",", 
     "1.1056631803512573`", ",", "1.2206909656524658`", ",", 
     "1.0431808233261108`", ",", "1.154861330986023`", ",", 
     "1.1887519359588623`", ",", "1.268893837928772`", ",", 
     "1.0374788045883179`", ",", "1.1026781797409058`", ",", 
     "1.2122488021850586`", ",", "1.2628414630889893`", ",", 
     "1.1196461915969849`", ",", "1.1299543380737305`", ",", 
     "1.1163122653961182`", ",", "1.2003777027130127`", ",", 
     "1.1836676597595215`", ",", "1.2740259170532227`", ",", 
     "1.186317801475525`", ",", "1.1693364381790161`", ",", 
     "1.2594261169433594`", ",", "1.164401650428772`", ",", 
     "1.0567518472671509`", ",", "1.2267440557479858`", ",", 
     "1.1390892267227173`", ",", "1.2140778303146362`", ",", 
     "1.0601941347122192`", ",", "1.2650102376937866`", ",", 
     "1.1503238677978516`", ",", "1.09666109085083`", ",", 
     "1.2801817655563354`", ",", "1.0724115371704102`", ",", 
     "1.0113357305526733`", ",", "1.0560054779052734`", ",", 
     "1.2448010444641113`", ",", "1.0580767393112183`", ",", 
     "1.0459309816360474`", ",", "1.2459264993667603`", ",", 
     "1.0916142463684082`", ",", "1.17303466796875`", ",", 
     "1.1705741882324219`", ",", "1.0285804271697998`", ",", 
     "1.1231894493103027`", ",", "1.1120480298995972`", ",", 
     "1.1370073556900024`", ",", "1.0746726989746094`", ",", 
     "1.1821635961532593`", ",", "1.0818860530853271`", ",", 
     "1.2001945972442627`", ",", "1.1897488832473755`", ",", 
     "0.99271559715271`", ",", "1.0663827657699585`", ",", 
     "1.1255227327346802`", ",", "0.9718720316886902`", ",", 
     "1.1550120115280151`", ",", "1.226118564605713`", ",", 
     "1.153426170349121`", ",", "0.9914991855621338`", ",", 
     "1.0854955911636353`", ",", "0.9332104921340942`", ",", 
     "1.0721869468688965`", ",", "0.9683108925819397`", ",", 
     "1.0927072763442993`", ",", "0.9939911961555481`", ",", 
     "1.1885185241699219`", ",", "1.2361154556274414`", ",", 
     "1.0788041353225708`", ",", "1.1961439847946167`", ",", 
     "1.1512088775634766`", ",", "1.2794427871704102`", ",", 
     "1.1819963455200195`", ",", "1.1067668199539185`", ",", 
     "0.9141945838928223`", ",", "1.1043977737426758`", ",", 
     "1.1726332902908325`", ",", "1.1183772087097168`", ",", 
     "1.236791968345642`", ",", "1.3270277976989746`", ",", 
     "1.1035404205322266`", ",", "1.0401474237442017`", ",", 
     "1.215702772140503`", ",", "1.0636711120605469`", ",", 
     "1.1320624351501465`", ",", "1.2649370431900024`", ",", 
     "1.1891987323760986`", ",", "1.0921550989151`", ",", 
     "1.0772359371185303`", ",", "1.228801965713501`", ",", 
     "1.083987832069397`", ",", "1.1314634084701538`", ",", 
     "1.2694905996322632`", ",", "0.9367958903312683`", ",", 
     "1.0356789827346802`", ",", "1.141318678855896`", ",", 
     "1.0369338989257812`", ",", "1.2915526628494263`", ",", 
     "1.1943529844284058`", ",", "1.2521722316741943`", ",", 
     "1.0655874013900757`", ",", "1.143906831741333`", ",", 
     "0.8958545327186584`", ",", "1.0481301546096802`", ",", 
     "1.0314271450042725`", ",", "1.1046521663665771`", ",", 
     "1.2878570556640625`", ",", "1.06003737449646`", ",", 
     "0.9521497488021851`", ",", "0.9507846236228943`", ",", 
     "1.2617260217666626`", ",", "1.1068578958511353`", ",", 
     "1.1249771118164062`", ",", "1.1729058027267456`", ",", 
     "1.1518280506134033`", ",", "1.0130330324172974`", ",", 
     "1.1434204578399658`", ",", "1.158884048461914`", ",", 
     "1.2288912534713745`", ",", "1.1252312660217285`", ",", 
     "1.1410094499588013`", ",", "0.967750072479248`", ",", 
     "1.4119230508804321`", ",", "1.0804336071014404`", ",", 
     "1.2740222215652466`", ",", "1.017085313796997`", ",", 
     "1.1134518384933472`", ",", "1.2560358047485352`", ",", 
     "1.1364250183105469`", ",", "1.119741678237915`", ",", 
     "1.1754406690597534`", ",", "1.1012879610061646`", ",", 
     "1.0519256591796875`", ",", "1.0644493103027344`", ",", 
     "1.0834254026412964`", ",", "0.9467563033103943`", ",", 
     "1.1805886030197144`", ",", "1.0982462167739868`", ",", 
     "1.127441167831421`", ",", "1.0139203071594238`", ",", 
     "1.152968406677246`", ",", "1.1587095260620117`", ",", 
     "1.0990139245986938`", ",", "1.0170243978500366`", ",", 
     "1.1151583194732666`", ",", "1.1692554950714111`", ",", 
     "0.9415632486343384`", ",", "1.1052160263061523`", ",", 
     "0.9377946257591248`", ",", "1.072823405265808`", ",", 
     "1.0618048906326294`", ",", "1.186858057975769`", ",", 
     "1.2481772899627686`", ",", "1.0538567304611206`", ",", 
     "1.1818897724151611`", ",", "1.2328622341156006`", ",", 
     "1.1940784454345703`", ",", "0.963952898979187`", ",", 
     "1.1364009380340576`", ",", "1.2182326316833496`", ",", 
     "1.021523356437683`", ",", "1.124800682067871`", ",", 
     "1.2366416454315186`", ",", "1.0421876907348633`", ",", 
     "1.1928821802139282`", ",", "1.2354564666748047`", ",", 
     "1.0983878374099731`", ",", "1.2036794424057007`", ",", 
     "1.0674594640731812`", ",", "1.0572856664657593`", ",", 
     "1.1291141510009766`", ",", "1.1007593870162964`", ",", 
     "1.1197364330291748`", ",", "0.9122393727302551`", ",", 
     "1.05352783203125`", ",", "1.021294116973877`", ",", 
     "1.2008646726608276`", ",", "1.2129976749420166`", ",", 
     "1.216644287109375`", ",", "1.095644474029541`", ",", 
     "1.082110047340393`", ",", "0.9614855647087097`", ",", 
     "1.1855820417404175`", ",", "1.1184579133987427`", ",", 
     "1.0884171724319458`", ",", "1.203800082206726`", ",", 
     "1.160679578781128`", ",", "0.9974170327186584`", ",", 
     "1.2917797565460205`", ",", "1.202949047088623`", ",", 
     "0.9683056473731995`", ",", "1.195480227470398`", ",", 
     "1.023773193359375`", ",", "1.0005269050598145`", ",", 
     "1.2047008275985718`", ",", "1.1632899045944214`", ",", 
     "1.1178618669509888`", ",", "1.121046543121338`", ",", 
     "1.2004600763320923`", ",", "0.9404361844062805`", ",", 
     "1.04075026512146`", ",", "1.1944985389709473`", ",", 
     "1.2913618087768555`", ",", "1.2278740406036377`", ",", 
     "1.2388036251068115`", ",", "0.9724634289741516`", ",", 
     "0.9650020003318787`", ",", "1.281238079071045`", ",", 
     "1.095861792564392`", ",", "1.2470003366470337`", ",", 
     "1.383939504623413`", ",", "1.187789797782898`", ",", 
     "1.0057092905044556`", ",", "0.971947431564331`", ",", 
     "1.1286548376083374`", ",", "1.1715905666351318`", ",", 
     "1.1606006622314453`", ",", "1.2905522584915161`", ",", 
     "1.0947741270065308`", ",", "0.9953930377960205`", ",", 
     "1.0187757015228271`", ",", "1.0146337747573853`", ",", 
     "1.1042855978012085`", ",", "1.1390914916992188`", ",", 
     "1.0451722145080566`", ",", "1.188513994216919`", ",", 
     "1.1709977388381958`", ",", "1.0814131498336792`", ",", 
     "1.3195104598999023`", ",", "1.1522717475891113`", ",", 
     "1.126756191253662`", ",", "1.2512892484664917`", ",", 
     "1.142096996307373`", ",", "1.0843662023544312`", ",", 
     "1.1538584232330322`", ",", "1.1555366516113281`", ",", 
     "1.0899066925048828`", ",", "1.123192310333252`", ",", 
     "0.9958058595657349`", ",", "1.1196908950805664`", ",", 
     "1.1734966039657593`", ",", "1.0426652431488037`", ",", 
     "1.0772391557693481`", ",", "1.1031275987625122`", ",", 
     "1.0149959325790405`", ",", "1.1908788681030273`", ",", 
     "1.1708934307098389`", ",", "1.0327380895614624`", ",", 
     "1.1786679029464722`", ",", "1.111236572265625`", ",", 
     "1.1755343675613403`", ",", "1.145660400390625`", ",", 
     "1.1777825355529785`", ",", "1.141070008277893`", ",", 
     "1.2533397674560547`", ",", "1.2534489631652832`", ",", 
     "1.0421206951141357`", ",", "1.0881856679916382`", ",", 
     "1.2848776578903198`", ",", "1.0867836475372314`", ",", 
     "1.106566309928894`", ",", "0.936628520488739`", ",", 
     "1.0672448873519897`", ",", "1.104651927947998`", ",", 
     "1.0907758474349976`", ",", "1.2133640050888062`", ",", 
     "1.1218960285186768`", ",", "1.061943769454956`", ",", 
     "1.0504933595657349`", ",", "1.0469226837158203`", ",", 
     "1.1719931364059448`", ",", "0.9670013189315796`", ",", 
     "1.0944290161132812`", ",", "1.1705832481384277`", ",", 
     "1.0773260593414307`", ",", "1.150652527809143`", ",", 
     "0.9568333625793457`", ",", "1.0788347721099854`", ",", 
     "1.0748807191848755`", ",", "1.112540364265442`", ",", 
     "1.0421289205551147`", ",", "1.2273744344711304`", ",", 
     "1.0599455833435059`", ",", "1.1098343133926392`", ",", 
     "1.1775954961776733`", ",", "1.0042400360107422`", ",", 
     "1.0957468748092651`", ",", "1.020133137702942`", ",", 
     "0.9837071299552917`", ",", "1.0489622354507446`", ",", 
     "1.1164342164993286`", ",", "1.277572512626648`", ",", 
     "1.0111372470855713`", ",", "1.0395675897598267`", ",", 
     "1.061058759689331`", ",", "1.1774494647979736`", ",", 
     "1.0102176666259766`", ",", "1.3422601222991943`", ",", 
     "1.0812664031982422`", ",", "1.1417032480239868`", ",", 
     "1.100334644317627`", ",", "1.16404128074646`", ",", 
     "1.1966347694396973`", ",", "1.0856711864471436`", ",", 
     "1.0032947063446045`", ",", "0.9489944577217102`", ",", 
     "0.9846572279930115`", ",", "1.1271711587905884`", ",", 
     "0.9660569429397583`", ",", "1.1240720748901367`", ",", 
     "1.2325340509414673`", ",", "1.312096118927002`", ",", 
     "0.9899460673332214`", ",", "1.1910549402236938`", ",", 
     "1.127903699874878`", ",", "1.212554693222046`", ",", 
     "1.0940394401550293`", ",", "0.9153510332107544`", ",", 
     "1.1465102434158325`", ",", "1.0410841703414917`", ",", 
     "1.1470025777816772`", ",", "1.1339449882507324`", ",", 
     "1.1674044132232666`", ",", "1.1608686447143555`", ",", 
     "1.1290327310562134`", ",", "1.1462479829788208`", ",", 
     "1.2400503158569336`", ",", "0.9585084319114685`", ",", 
     "1.156846523284912`", ",", "1.0927585363388062`", ",", 
     "1.1555304527282715`", ",", "1.0876150131225586`", ",", 
     "0.9921894669532776`", ",", "1.1416475772857666`", ",", 
     "0.9551854133605957`", ",", "1.069422721862793`", ",", 
     "0.9855107069015503`", ",", "1.1297378540039062`", ",", 
     "0.9310522079467773`", ",", "1.2489335536956787`", ",", 
     "1.0104947090148926`", ",", "1.4119458198547363`", ",", 
     "1.1702711582183838`", ",", "1.1814427375793457`", ",", 
     "0.9805452823638916`", ",", "1.0668083429336548`", ",", 
     "1.180633783340454`", ",", "1.2497822046279907`", ",", 
     "1.0421220064163208`", ",", "1.2592707872390747`", ",", 
     "1.1580321788787842`", ",", "0.9127720594406128`", ",", 
     "0.9735692739486694`", ",", "1.2111178636550903`", ",", 
     "1.0454567670822144`", ",", "1.17396080493927`", ",", 
     "1.3461042642593384`", ",", "1.209574818611145`", ",", 
     "1.0921552181243896`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2783336405754089`", ",", "1.1214056711196898`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"376", ",", "1.8515352023111271`"}], "}"}], "}"}], ",", 
   TemplateBox[{GraphicsBox[{
       AbsoluteThickness[1.25], {
        InsetBox[
         FormBox["1", TraditionalForm], 
         Offset[{-2, 0}, {375, 0.2625}], {1., 1.}], 
        InsetBox[
         FormBox["2", TraditionalForm], 
         Offset[{-2, 0}, {750, 0.2625}], {1., 1.}]}, {
        InsetBox[
         FormBox[
          
          TemplateBox[{"10", "\"0\""}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], 
         Offset[{3, 0}, {0, 0.}], {-1, -1.}]}, {{
         Hue[0.083, 1., 1.], 
         LineBox[CompressedData["
1:eJw1VAs0FPge7qF25basVW1bruHYag+VXsrV6qvQtj2MJER2PEakMWPGc7zm
LYWr7hKL3WmVColVLau8wnr0kGy23ZKiUlGjkpSte+/Z33/OmTPnO9/v+z2+
339+5v7CbfxJEyZMqP7f9/+/9IFNpcsbwbP2NX/DT2EyeVr42LE2wpaQLJ0r
LnJn2BqtkdAbXcDwUszIaui2KPmVsC2Cql1z42xaCP8LRjvPnV9p20zYAVbC
s8KJC5oIrwUvoKW15RDD6+HVabc/dZRhJ3hWPO6RWDUS3oCg02n8t5qLhDdi
Xrf34pDYesKbUFog/T1XyvgtGIp7MW9uPeNd0F7p8uK2B2EZFx4z/cdGrBsI
u2K6Z8as23F1hLfhxJPP3BY/YdgNoQnL9mf9yfB21P31Q6mtgGF3rLilWN1k
V0N4B/pm+OQ7x7D8HkgQDyv1nVi8J4a6vq0wll8g7AWnL2dHTtzB8E4opafc
X4TWEvbGJIFljf1rlt8HKcNnuOYVLN8uTG6YHdy+mc3nCxcL34pV3GrC36D0
0fC+bjPC4MF6jK8fcJdwHQ9r1VFNVQNVxPsh89CRhJHIn4j3g8FEw6r+eOoH
/ki1z7Kscqf4On8Y95oNJN5jfABumP/zzeeiX4gPQPb9K+tzZhFGIAy9NWmT
tjJ9IHQVQ01OBxnPR4uPwaw5W5meD6uXhbvyzM4SH4RtQyX2u1zOEB+ERqXP
vnDJOeJ3o/rxd+vFs1n+3Rjki5QHAlj+YER/ta7EJKiS+GA4FL40azL4mfgQ
6In9FYPfMz4ECalZVeI7FcTvwfMHKXMepVE/dXsgfl6i481g9UOxYsV4UNIU
5m8oOI4bTb+TUz7sxSLVLbfWONb/XtQJ7xe3eZcSL0DRo44xu+2Ur06AcdXw
Q8N0pg/DtCnq0pvK08SHoStfV9QUQfkgRJLrCr+VYSy/EDrfI16SSaTniNA/
Yb7nFAfieSLwl3VrV6cQrxXhSsFBFGbT/ntFsF/ldn0ml+I54fARONganqN4
Xjh8zfP6Oy3JH204vrhmWlOupfjecBjnvLk48orVF+Pcys4ZD4woP0+MH7ef
/TWZzasV46u+HanLrp8kvRgL/6Myb+in/XAk+D6Y45xcyPQSnHEasaxfXk56
CfosPjJPCjhFegnGdX7znS9RPk4ETlxpvL6avW9eBPKsf7q0YRPFayNQ2nip
4OlkytcbgTjjhz1nBcRzIrHmre/tJ/6EeZFoM9ELa2bzaCNxL5xT73OC+ReJ
aetaPEwOsv6jwBlVz8uMZvWjcGbSmGpMn/kXBX2/y3cMbpaRPgpu6TaCmDs/
kD4aI7eN2z6wPEb6aNg7P0/L8D5B+mgUn/+3752LzP9oGB8dKvL6IIf0MTji
98lWvVjygxcDWd1iL/cK5l8MXFWO+RL9YtLH4PW+9C5hIGFOLBZUO1gffk3v
lReLldyFKeZKNn8s/lhiVfukhObpjcWSXUcFm9sJc6SYvSFT0x1K8/Gk6KkU
Xzj8C/NfiiV/tZafX1pIeilqd8aczOmkepw4WDh4Zz8LpHl5cZhSiXlL0o6T
Pg4FIzEWU28w/+IQ8nJbkvXHB0kfD6uG6VxuLM3Di4fju7mvfrOQkj4e4zW7
x36rLSJ9PD5q3xTcb0jzcRLg8Mxvj2GUlvQJiJiuV5O0j+6BNgGb5WEx73ey
/hPwjnO3IW8P+ctJRGHim9U317D6iRhc1Nld53mU9ImYe3WjqKiM+ZeIyfoF
4Zk1GaRPQrXdqmuH+Gx/SeAr91wYXp5P+iQ8dfzMYa8H+dObhKAUG+3DfvLD
SIZ14XmmOeZ0P2xkiHf8dND3HfFcGcafPQtzvEr9iWR4W/uh5PQEqp8hw9qu
041zbGm+Mhls1g8qerIId8hwqPN4+sqyI39jnQy2Fkqp69Ncqi/HKdGLnhg3
8tNGDhezOxHHOshvrhyhB5abPoqkfCI5Xu46fC/lGMVnyJHb9vHx9X0/Un05
NOcGpuYIk6m+HJ16++2HDlC8To7gBREuA8kUb6RAkPjDwsJKei82CsSH1WWf
HGbzK1ApHA3MuUz7EClQ3zQxKdWKcIYCwQ5C7j9saT9lCtyY1jSQaUJ+dyjQ
mtXl9HM/3TOdAgHuV9tf9dB+jJT4vT45cXRVCdVX4pqr87dO9cRzlZhZLbmv
ltF+RUpo9l/qmB9K7ytDifqi8Yqol7SfMiUGLnfNNE4nvzuUKDc9EpWoR/dB
p4RBc+U3ziWEjVR4f+Be/+s8tn8VzqZNHf7zFt0LrgrveqQhqRtpHyIVsgXl
Pu+/Pkz1VQh8f7N7dzb1V6bC+aKrnd4pdF86VEhzVlg/7SZep8ICQ5OqyxbZ
VF+NLZ7vFvlbMf/VkC5eHjJtiO4bV40LfauqE1PY/tWoHfPOzTQgPkMNbVvZ
Fss+uhdlaqQ3Tim0iCc/O9RI9qo/XrsxnuqrcTer+cv5PPb+NThQNMqLZf8/
Gw3uDs/Z38fLpPoaiPjzi5rV5I9Ig8jWDYbN/bTfDA0K7z8ovdfF5tfgccH2
Qa0z3ZcODRbutTPdVEz96jQIKPv8k/Riei9GyeDUKCc2zCS9TTK+flXqmtVS
QPWTUW6SbycLOrbmv124wS8=
          "]]}, {}}, {{
         Hue[0.59, 0.9, 0.9], 
         LineBox[{{376, 1.8515352023111271`}}]}, {
         Hue[0.59, 0.9, 0.6], 
         PointBox[{{376, 1.8515352023111271`}}]}}}, ImageSize -> {500, 200}, 
      Frame -> True, Axes -> None, AspectRatio -> Full, PlotLabel -> 
      FormBox["\"rounds\"", TraditionalForm], ImagePadding -> 1, 
      BaseStyle -> {
       FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
        ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, 
      PlotRange -> {{0, 748}, {0., 0.25}}, GridLines -> {{375, 750}, {{0., 
          GrayLevel[0.3]}, {0.30102999566398114`, 
          GrayLevel[0.85]}, {0.47712125471966244`, 
          GrayLevel[0.85]}, {0.6020599913279623, 
          GrayLevel[0.85]}, {0.6989700043360187, 
          GrayLevel[0.85]}, {0.7781512503836435, 
          GrayLevel[0.85]}, {0.8450980400142567, 
          GrayLevel[0.85]}, {0.9030899869919434, 
          GrayLevel[0.85]}, {0.9542425094393249, 
          GrayLevel[0.85]}}}, PlotRangePadding -> {0, 
        Scaled[0.05]}, PlotRangeClipping -> True, Background -> GrayLevel[1], 
      FrameStyle -> GrayLevel[0.5], FrameTicks -> None],FormBox[
      FormBox[
       TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.9, 0.9]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.9, 0.9]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.9, 0.9], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.59, 0.9000000000000001, 0.6000000000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "Hue[0.59, 0.9, 0.9]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.9, 0.9]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Hue[0.59, 0.9, 0.9], Editable -> False, Selectable -> 
                  False], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "Hue[0.083, 1., 1.]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  Hue[0.083, 1., 1.], Editable -> False, Selectable -> 
                  False]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
       TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   GraphicsBox[{{{}, {{{}, {}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.0055000000000000005`], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.0055000000000000005`], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJw1Vwk01VsXN0XmO/z/MlQylSI9KiS1NwoR6amXkKSUksjwiSaapFAZGlQv
pcyUCimJRvKU4aFCKrN7XXd2Tfnut5bvrHXWWWeds/fZwzm//Ts6fsF/+ktJ
SEiMi/v/xv+3k1LVbn90TsDIqvHftiZ9MDweKFBeLQJF6cLooRQOXGtsCwtI
G59ZF0KnzpcJ/wk+LE8cHrWpGoNt2Vb4SGIUpBYsGVfMn4TzEZUnHuxiwDZP
s6JQ3WlYMlG65UUMB8LyV8PjexKosWHJ2gN8/ox+SVxlMWTJSBKB2taSF8WB
UngsL4URJODDRouTZd0m0hjUONR9b+UwHP+7uULtpzRG0gcYmXwebE4wNZI5
K4MPmCNe1CoOZL9oU/s4dxaaVBlSz2cKQdvRZZVa3izcusE2xoHgztgvi3GH
s4Kf7hRB9Mnx6sA8WfQseUyxTWHCuSuBVke15dBmrL9hrykHjJ/IyJonyWG2
m/FgZCgHrnSHHbUdlcNq44X/9CbwobgoONXEazZSfNQ+SPf2Qs27NZHhz2ej
3Nt0Xbf2UWA/aZw6Tsqjnt7t2KKtPBgzTj6WfVAeM613S8jXjc7ETx5vlDtZ
hu/hQr0meyiVooDXQk1U+cFsuHxG+lnXDgX0z53mZZwdBj2nq62eOQoov3JH
W4ojB7R/19dZshUwJi/1epgeD262Ko5lrVTEoS6BzFQhHzyNrjh+OqKIvKY6
FalfDAiseVbZXK6Ifr//ZqjWsaDxWQv/i0gRv4fXD/L8h0GoXB47uVIJ0/0v
H26fy4F3PFV3z8NKqF7x1kJehTuTXyWcL7181MuCCS8/WLEMu5Xw4htDdYO7
bMixefPuvYYy8vxUbqQsYEOr8vmAMVdlrJI7pUGWCUE51Gx18ylltME+u99u
fHAtSFrvX6KMJv363/oPc2DpGpMtr/qUEX9WdzaZcoHKJNTYairYtXfQlrzF
Bbstk+az7FVQi1ofcK58BO7XZv5HMVwFhbs6vgZvZcFB28svVe6qoJePIv96
jABK2ZeXadaroEuk3uvAcT5EvHCzthSp4F+KuU2tqwZm7qcq3vegtVV+4cBD
rYKyJmdVrO2FtTkOXJiW2DztG66K0xnWLua+bNiQW5RncEsVV0QyHi7az4d8
a90AwzeqeHp4kdDuKBeU6K8jQwZVcX/RygfX1wwC7/fz7afkKBhN/REQVsMG
t4NL6gQaFGTUjKu7mg7A9vTCu6QxBV+nnrBN+coGF/v373rWUNDvxsKDtVX9
ELX4w5j/JgoeulET5k/hw0Uz/46bvhQs6bKwc/bggvJBGuP8YQrG0jaUlhoK
gNGx6MyyUxTM0bfeUOLLBy317oEryRRMKS/9WekmmHl/FOygxBp5HRDHY3Fq
SvJjCvI/iCYLs0YhS8/p24rXFNyZX/dkrJsFS6mGnPRGCi6I0pHcN3sUVn16
kfH+BwU9yIWfkcOFF5qpt8tHKLhGeecvOUMO6Njsi4/4TcEayYB/b51jQ22r
Pn9CiYpmIcWXzA7xAbbxvV21qFjR8fttS2kb9C3TXX5oMRXbGhoKNnPGYV7+
ZKu3BRUjd7s29JAj4C13L11rPRVbC2WPN9/kAG2g6nX+n1TUWr8ijG/OAGuz
jXEqvlT8x3nW/NtaQljsqkesD6Jil9b6u+X5YrwpfhjvFk3FS8UjTBWKENbF
HJkyjaOiM/fSpo0xrBn8oeKrHY3Zwyk88L+dJXU0g4r998ILvmlw4VSPX2JP
ARXDC7PxsboA/vUXyhuWU7HzzJNWHOaBQqbIx/4dFefZ5K11suSB/cvBA9hI
xashgxc6nNjQBMkyczqp+EgqIzg0mQW+h3dMfBygorlfb/NcSxYILxTN2cGn
IvuvTTc0aVygGJtqfZqmYooJ8Z77lAeV3gbV8xVpaCM0LzlL50F4QHblJjUa
sm533mlQG4GQVt7rXTo0NGhLW+vnz4Ybr7IjtxrTsNKMY5/sMgTdFVMxRhY0
3KY08nWgQACi+3Inemxo+MbFUS+qgA0i597ZsRtpqBqx6pBmLR8OhItKJbfR
8Lpzx/vf17lgNE9NY98uGj5PoEo1NY7M4DMNP1XXPvKdYoHpc61FvyJomMY/
0KLziS3Gg7gu0UmxPUfuJMUe5AKTvt1fGE/DXeZrC5LqGPDrpvnK9hQarpLu
TS2u5cIDq+U12bdp6NnZV+GmPQIp/uwU72waBj5tz3cJ7Acvh1cK449ouE+p
TUqtgglv3apuxjwX65ffaJ6a2w2yWyWfsN/QkFby/ZHzVQaY2qeXO9XTcCQ9
tTTamAd379eQl1ppWNgXPGxnw4bEJ/JGlV00dP1ROrfdkAnep5d7fhmgoVN0
2zNlCz5c+5kg+Z1DQ6uQj8F6AhasX9Nz7PM4DedYebp3RrDhYuIDg0JpOnb3
fNy502wIihxG/oxUoqO/qGFUs2MEykKytpuQdLwsfzh1XiYT3FvjE5rm0TF5
4k5e45gQaqPWWe9ZSMd5Te6VdrmsmfpGR4kqBfvzZgxwfsJx2mxBx80bpnd+
GxDA4NVQm0Kg46VzQ9rbTozCYn25nlEHOqYvHbCH+yPQv5gbZepGx0M+Go67
u9iwfedrR08PsXznB/73XDbYmvimhvrSsV2vWb9dhgPFXM070QF0zDs2NyUk
gQd1pSW5oSF0tA/g9TSc5sCTkDCe5xE6/pGo7AXqQvCr0X2+PIaOxukGZeNh
XOg5sNhqKo6OzOMbHph5iesjO6mo7BIdP8rKWmdG8CDQQ27z7mt0PF2YOpm9
gwVpBlPbJe7QUfnur6NSK9kQSd6UuJRFR2JF6lgJwYHbMS3RqkV0bBT9mUPo
jsDYrrCp2BI6nnG+2qfJ4wNNcU5FXwUduWNFFg/uDIPPefvBNW/paLEt/o/9
n7kwvzysNK6Ojr/2+Rl+leSA3HyZLW+b6Pi7ZZXKV7F/n3Z5cHhfxfH6bvlo
URt7hj/QceGRWybtEVzw9vvVbTxAR8dpWlB0MwP0IyVTzEfoeJKxoHfEmgWs
oLeC5UKxfv96zdqPLPDktpsbTNEx+OPaqvtifF3arxWjIEMgI/CimXfEEKS7
xo53KxBYf0gvqMZVCO4Slp+KqQRK1TrsbaoaArdlGbrh6gTG9KcbkbrDYFvt
Pt9Im8A1WV+fJh8XQHSUUX+rAYFnYvL/mPt0CMZFdvcijQmMKl7tvVibD/vS
pMKVlxPo/v4xRTVRbP9szZjrqwiktSlvyX0kzq8oaVAdCTygc0hXykAA6jsr
mpLsCSySHdVZksyHUx+27RjfSOC6h8duborlQ1JIRJ6XO4GNN05R64t54OiU
8O3xdgILV3CfJ3vz4WhLlLKEL4G+827GTQTxIbPnrJ/dXgJ16n61ZWiNQgns
FR07SKDD8cj1TLF8lZHtcEEogXR6bZCjDAN2tpX4NB8h0OenBytFaQRohS37
2ScI9NyTtedq1uAMfyPwp8uJpKxNDeA41FapcpHAo9PfKs80C2BuuwdSrhBY
4fiObtXEhTMytR9nXyPQS2Yox6FWAHHRb4+IbhG4kX++XEHMfyhxh/d03SPw
n1NZbOPhIfhjx+nslzni+QDjYnGq+L49s/ZKKSKw5XZ7qM+BQVh9IPS671MC
q4eQmZL7C1Y0JUYaPCdwZ9SXDbmz+ODheIny6xWBnx54+u/SGwLXMMrRq+8I
ZIsuRj2e5oDRJftPtnUE6vW+dDA6wYLJTBmd/gYCt72pL3jf1QkNBS/jT7eK
86+bXFnePQKPH56br95BoKPpyoVlhQIw+qAuuP+TwO8La7xv9fOgaF6z7pJ+
Ai+46xOjmkLY3V5Rkc0kUD5juT6zlQltsnFt87gEfj73ooQFPfDdIykuYZTA
DFx2iKbNAh2Zzh+8SQKH+Vbn1cIG4XmI8ai7FIl1lklXN9/ggzmzr7NAjkSX
kokhi3E2+LkuzvmtROId3fvrshwEYJ7yNmADjUSD5Yvm/LjLAssDYJY4h8TL
f8pvltBgzPBrEiVNtaXPvh+Bar0zhhK6JH6Lj5E9Fc2G/XsER5YtInEy7SD/
p/cwnKu/puFhLJZfV3q/QCh+D7dStaJNSWS/aMiPFO9nb26+lGZOomq5Xfea
EBEES06cy1tNokJNQvnkzQF4kBZGLUcS86e7v+5azYAJlX1QvV7sj4/ULv2E
Pggvf73gjROJSmciTYOyemGJl+W7yk0kLjRgJ5OnmXDcC6yfbiFRR0JkI+vN
gwXdZFrmdhKrl2Q0PLvHBmtB9fcEHxJXB7V4d7P40B1LMwzZTWJcY22ebhUb
Jg5nnHQJIHGxWo7V/DEBNBZ85ukHkWjs6FD5L5MNCXMakoWHSfxy/nG9XAYf
biT9feD1f8T2rLioJbOGA1u/zoo/f5REp8FzTrVzBCB1/c6EYwyJFVVVFVf+
GgE745bP0mdJ3CGauvfZkgPrbv2glceTWEssURgS88PckPrGgCQSp3KOyqxc
zYXgxCgNegqJJWyjkyoUDvTOuiosu0ain6H92s5cDnQxsiO23SLRUOTUZX5v
GMw15TM5GSQ2Pq1Pr3/JgbrxgQvnHpAYdKm6j5nDmPkfkWgbdSe67jQP0j/S
nmcUifdbUbtLGocgn8pSX/iERH5xJE8rkQ0thgd3ZZWReE9jcp06lQtvHHl/
61SI/b8Qq/Tw7SCcPvOm41oVido5N5Loklz4HTpqIP+OxLTXgaON4npe+++Z
sxG1JJaVKCx1WMqDneZrZDvrSTz9wX/ZNwEPmEmfHkMTiYvK4vdKJnEgp/1N
2u1WEh25P1+mbOGCoOxsufAbiX1hSYt6xeebcz0NnbtINHt0t+tikPh/Nm8/
M71bPJ88OZExyoL0BSWqff0kWgiJAb3zwyBXrXfLmElib3incPQyE04YR988
xCbRP6hAZ33uMFw44TOngE9ikYptnc1eNtTbeWj0ikjsbjdiUZrZED/ekKcx
ReL8xo/Ot1xYEHWZaNkgqYZWGXRWTgUPFn3ffDdilhrKWLxOdA7hwivtm+q3
5dXw0XfvzGt3eLAvsM+uSlkNr8UmTLnacGGdgYpxF1UNN6Sele52F4D+4cav
Y6Qazol50rHyMw/+CwHSZic=
           "]]}}}}, {{}, {}}, {{{{{GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.13144166619671546`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.13144166619671546`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.13144166619671546`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.13144166619671546`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.13144166619671546`}], 
                 Offset[{0, 0}, {5.86435135955354, -0.1314368926961297}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  5.86435135955354, -0.1314368926961297}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  5.86435135955354, -0.1314368926961297}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  5.86435135955354, -0.1314368926961297}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.13144166619671546`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.13144166619671546`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.13144166619671546`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.13144166619671546`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.13144166619671546`}], 
                 Offset[{0, 0}, {5.86435135955354, -0.1314368926961297}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  5.86435135955354, -0.1314368926961297}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  5.86435135955354, -0.1314368926961297}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  5.86435135955354, -0.1314368926961297}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{70., 8.000000000000016}, {
                  5.86435135955354, -0.1314368926961297}], 
                 Offset[{70., -7.999999999999984}, {
                  5.86435135955354, -0.1314368926961297}], 
                 Offset[{10., -7.999999999999998}, {
                  5.86435135955354, -0.1314368926961297}], 
                 Offset[{10., 8.000000000000002}, {
                  5.86435135955354, -0.1314368926961297}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{"2", ",", "\<\"Weights\"\>"}], "}"}], TextForm]], 
                 "InlineText",ExpressionUUID->
                 "11d8e7a8-5dd9-4e1f-82a7-d1d9364e0395"],
                Text[{2, "Weights"}]],
               BoxRotation->0.], 
              Offset[{40., 8.881784197001252*^-15}, \
{5.86435135955354, -0.1314368926961297}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 1.238088476289709}], 
                 Offset[{0, 0}, {5.638887821063309, 1.238088476289709}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.238088476289709}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.238088476289709}], 
                 Offset[{0., 0.}, {5.75161764813633, 1.238088476289709}], 
                 Offset[{0, 0}, {5.86435135955354, 1.2380870140948652`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {5.86435135955354, 
                  1.2380870140948652`}], 
                 Offset[{10., 2.220446049250313*^-15}, {5.86435135955354, 
                  1.2380870140948652`}], 
                 Offset[{10., 2.220446049250313*^-15}, {5.86435135955354, 
                  1.2380870140948652`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 1.238088476289709}], 
                 Offset[{0, 0}, {5.638887821063309, 1.238088476289709}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.238088476289709}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.238088476289709}], 
                 Offset[{0., 0.}, {5.75161764813633, 1.238088476289709}], 
                 Offset[{0, 0}, {5.86435135955354, 1.2380870140948652`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {5.86435135955354, 
                  1.2380870140948652`}], 
                 Offset[{10., 2.220446049250313*^-15}, {5.86435135955354, 
                  1.2380870140948652`}], 
                 Offset[{10., 2.220446049250313*^-15}, {5.86435135955354, 
                  1.2380870140948652`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{64., 8.000000000000014}, {5.86435135955354, 
                  1.2380870140948652`}], 
                 Offset[{64., -7.999999999999986}, {5.86435135955354, 
                  1.2380870140948652`}], 
                 Offset[{10., -7.999999999999997}, {5.86435135955354, 
                  1.2380870140948652`}], 
                 Offset[{10., 8.000000000000002}, {5.86435135955354, 
                  1.2380870140948652`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{"2", ",", "\<\"Biases\"\>"}], "}"}], TextForm]], 
                 "InlineText",ExpressionUUID->
                 "03033675-18ca-41a8-9d7a-d29742f1c7a5"],
                Text[{2, "Biases"}]],
               BoxRotation->0.], 
              Offset[{37., 8.215650382226158*^-15}, \
{5.86435135955354, 1.2380870140948652}], {0, 0}]}]}}}}, {{{}}}}, {{}, {}}, \
{{}, {}}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.20310061318959435`, -0.6046485748824078},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledFrameTicks[{Log, Exp}]}, {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledFrameTicks[{Log, Exp}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->{{All, 92.00031011400092}, {All, All}},
    ImageSize->{564.16796875, Automatic},
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Exp[#]& )[
           Part[#, 1]], 
          (Exp[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Exp[#]& )[
           Part[#, 1]], 
          (Exp[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.1150304357887968, 
     5.521460917862246}, {-0.5674081029743684, 1.741501155324073}},
    PlotRangeClipping->False,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->FrontEndValueCache[{
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, {{{0., 
         FormBox["1", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
         FormBox["5", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {2.302585092994046, 
         FormBox["10", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {3.912023005428146, 
         FormBox["50", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {4.605170185988092, 
         FormBox["100", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {0.6931471805599453, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {1.791759469228055, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {2.995732273553991, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {4.0943445622221, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {4.248495242049359, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {4.382026634673881, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {4.499809670330265, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {5.298317366548036, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {5.703782474656201, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {5.991464547107982, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {6.214608098422191, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {6.396929655216146, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {6.551080335043404, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {6.684611727667927, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {6.802394763324311, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {6.907755278982137, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {7.003065458786462, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {7.090076835776092, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {7.170119543449628, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {7.24422751560335, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {7.313220387090301, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {7.3777589082278725`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}}, {{0., 
         FormBox["1", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {0.6931471805599453, 
         FormBox["2", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
         FormBox["5", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {0.4054651081081644, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {1.791759469228055, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {2.302585092994046, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}}}]], ",", 
   GraphicsBox[{{{}, {{{}, {}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
nDRs5oUPK/CRxwRgeZ/+16vC8L8A39ObdQ==
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
bhaADyoLkkaFYSW//lcrovD/AGcdlpI=
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
UbMAfEhJkDQqDCv69r9aEYX/B3f+z0s=
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
YRM/fEhRgDwiBCv49L1eFoH/BxHUpWI=
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
swB8SEmQNCoMK/r2v1oRhf8HoS9d2Q==
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
bhaADyoJkkaFYUW//lcrovD/AKa3vbc=
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
SaMWPviQIj9pTBBW8B14tSoM/xvd0UZ/
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
pGEzH3xEkZ80Jggr+A68XhWG/wU5m/0z
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmcuOPSSrOtURSidSxC2UITdaxtSBLiitbGksp
hWz9MZJ9DzkUxjWlUpGlTK79upb+/zn3zPs17znPec/nPOd91vd5nt8j53rx
pBsbCwsL4//p7/c/z+OKXkWJSzONM/sZG4Zq4+R/zMdeEvolZZb87/wlwloJ
fy0bNK0QZtu5m8FXtEbY2k6z1E/+O2H/ooPk8gcs+v8un5Ww2OnK2jIvNsLH
9l2tGlVjJ3z57kCd2EfYMl5DlSOag3B+7ZDYix84CcuaHt8vVggz289FOPQq
o9mrEI5J8joQJstNmFTBwaVNgZNG/cMMl+Gy0oupavZbCHe26wUF1MC0ir71
y6I8hFdIyZfyvWHm+ME9UrQvqUK8hG9FsT8bcYQVzG5T7Qpg2Y2ebh0anEnl
W8nby0fYTjXJtDcY9up81jBQDfc9G1z4kw4vCVRHrO3lJ9w+v9XKzhdmzi9c
33Hgm/IoXGDQ2v5cUoAwVeC6x4o5LOCneXAgEjYvphi7VcJ79NRONY7DwtPb
xWhigoSNTq1pc5rAD7tyf+ULgL0Nb9UL3oef0m6pS/XAgbUWujp0mPl/biX8
RLq4qv8o/J3F8rtzAHzkcWmhUhZcpCvvodwK829rCfKZguc3amwjuYUIW3jv
7l6UhG0zSu6LkuDjJs/bx/TgEJWOFbcT8E1Nt7eZzrCAt8jX677w17e7otQj
YWmJ0cmkZJi5/uBAldSU5HI4T8HszU8t8B5h5dmMPnh/b23O8w9wrVRqdvUM
LGfgHhe4AXdRFRdW+YUJk60XHMyl4XF1ea1fVGCZojWqwz7YgftBhrQxLDLZ
1FJ0EtbVPBYr6AyrmCtsN74A+5c9ibMIhQ+FB69rxMLM/Qd2y85jC8uBI8dc
E8aK4T/clniUq2HeXLqTSTtsUj/lqd8H95OTOcTfwc6+jqsvJuGlG6Xijguw
EElDuvc73OCg1LyDT4RwgEd+wwkx2Ic63+IiB//WmB90mgSP1q2Hq+6D6Q+5
r4wZbPLRz1sijsGeAfSnrNawqoyYpLsLzNyfYY0a6V2fAuH6jtgR+lV4eput
21Ic/ClTe+9wCvzogFZnfjac4kZLcciH7Q838jL+C7dZNGWG18Bcp1kraK2b
2mOSUW3WA99/2CmaSIUTKnhUG0Zgh2tadn9Owukf41nfz8LGemOXXjLgmwmP
lErYtxEuPTxzMogfrvLJs1UTha2ocfH9MnBXyCHdcz/CzPMNPloxa2a5D566
7WdQQoZVFLnHlg/DEypzIRoWsO2ZFlM7G9hQzTnVzxkum5O6F+oBdz+tfOzn
A1f4+M/bBcOunfI1WuHwmKfKgfVYmESjlFYlwl423JZn0+E0pXVblntwkGgm
S2IenB0+GLq1FF5x8V+PqIRF+MTrxutgp+smU3pt8I5q/6ex3TD3Do5Tbf1w
r4vN7PxrmBk/wA6un0ZJk7BiEGuK9gz87ULbotYSbDc3rK20Du+ZkA7n5dhO
OMM8gjHKC1ux6PSWCcMW6jnyARKwYbPVDlVZODREdYKqBDPoRg+CSLB7GluA
gBbssEUq/M5+uIxOmZLQhyXO1PVTTODIDmtHxjGY4hNYaG8Fm5rFvym3hcMG
QwRYnOHcsWhXo5/hSvLP9EvecJOq4V/FfvCZoUqngWBYpGTwPO0KzIzfNtX/
ZahB8Cb8w7CNvlASHMXR9WJLOhwb2hZMz4KFYn3PjTyA/+N4Lb++AM5+pmuf
Ugof9PS74/w7/FN/QpBSDWxjmij0qRE29xcKu90Oqyaa9Bp2w2u5HHITr+BX
xfVx16hw+ZOYHRJvN33fIbH48CNcKjMgv3sCPjtcV5c/DQ9xxQ7JzMHvbSix
8cuwHMe7D/NrcI0PadmKTZSw9vT4u2Ju2NVcpWCDf1N+SpvHERFYx5OsmSAO
M+NruFkhSplFHj5/bjFYfRcc05MuaUOCrbJSpUM1YJrlQGKaNnyRdTWm8CD8
KM1fuFofXhV0JzcbwwHVLTtbzeDd9jrtDSfgy/Zk3d9PwTtHRdNybWHdxeb3
8U7waISIss/ZTfX55lw97gH3Fb+cV7wAx4u/Sl7yhX+j3PVs+RU+/Zoz7noY
zHbn3qppOGxEGnzJHg0fyvogUh0HP/bp6fOgbBqfhBDJbSnwZ87bS1Xp8MjX
/EDrrE3zKcWTO5sDdzMmb8Q8gpn3IzjjhUhNTilcJPxN4scKeFDZ2yWvCm41
nb8rVwdfi2p9m94Eb/gtK/G0w11/REUHdsFntPW43vXA05TecnI/XDDcmpZN
hReroquX3mzq35yd8tEROEnm/HTG6Kb+7KzcOj4BczcrZJGm4Suk0MxfaPCN
K07ixQtwj5GN5Gc6HMd4VSi5Dofc2j54hFWM8K73lvcDOeFG2UyJbB7Y3Wvc
qEkAPqQkSBoRhhV9+16viML/A95Wtsw=
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
cbMAfFBZkDQqDCv59b9aEYP/ByDfCOM=
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
CaNmAfiwkiBpVBhW9O1/syoK/wtcXLyq
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
mgTgQ0qCpFFhWNG37/WKKPw/oFuBAQ==
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
3CwAH1QWJI0Kw0p+/a9WROH/AQP1HY8=
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/T6Xl10fePrubv+1jbBipT5D/MR97adjn1Fnyv/OXCGsn
/rVs2LxCmG3HLgZf8RphG3utMn+F74QDig+QK+6zGPy7fFbCYqeq6sq92Qgf
3XulekydnfClO4P1Yh9gqwRNNY4YDsIFdcNiz3/gJCxndmyfWBHMbD8X4bAr
jBbvIjg22Xt/uBw3YVIlB5cOBU4eCwg3WobLyy6kqTtsIdzVoR8cWAvTKvvX
L4nyEF4hpVws8IGZ4wf3StE+pwnxEr4Zzf501AlWNL9FtS+E5TZ6e3RpcBaV
byV/Dx9he7Vks74Q2LvraeNgDdz/dGjhTzq8JFATubaHn3DH/FZrez+YOb9w
Q+f+rypjcKFhW8czSQHCVIFrnisWsIC/1oHBKNiihGLiXgXv1lc/2TQBC89s
F6OJCRI2Prmmw2kKP+jO+5UvEPYxutkgeA9+QrupIdULB9VZ6unSYeb/uZXw
Y+mS6oEj8HcWq+8ugfDhR2VFytlwsZ6Cp0obzL+tNdh3Gp7fqLWL4hYibOmz
q2dRErbLLL0nSoKPmT7rGNeHQ1U7V9yPwze03N9kucACPiJfrvnBX97sjNaI
gqUlxqaSU2Dm+oODVNNSUyrgfEXz1z+1wruFVWYz++F9fXW5z97DdVJpOTXf
YHlDj/igDbibqrSwyi9MmGyz4GghDU9oKGj/ogrLFK9RHffCjtz3M6VNYJGp
5tbiE7Ce1tE4QRdY1UJxu8l5OKD8cbxlGHwwImRdMw5m7j+we04+W3guHDXu
ljheAv/hvsSjUgPz5tGdTTtg04ZpL4N+eICcwiH+Fnbxc1p9PgUvXS8Td1qA
hUia0n3f4UZH5RZZPhHCgZ4FjcfFYF/qfKurPPxbU0HwKRI8Vr8eobYXpj/g
vjxuuMlHPm2JPAp7BdKfsNrAajJikh6uMHN/hjVrpXd+DIIbOuNG6VfgmW12
7kvx8McsnT0jqfDD/dpdBTlwqjst1bEAdjjUxMv4L9xu2ZwVUQtznWKtpLVt
ao9pZo15L3zvQZdoEhVOrORRaxyFHa9q2/85BWd8SGB9Nwub6I9ffMGAbyQ+
VC5l30a47NC3E8H8cLVvvp26KGxNjU8YkIG7Qw/qnf0RZp5v8JHKWXOrvfD0
LX/DUjKsqsQ9vnwInlSdC9W0hO1Ot5rZ28JG6i5p/i5w+ZzU3TBPuOdJ1SN/
X7jSN2DePgR261Ko1Y6Ax71U96/HwSQapaw6Cfa25bY6kwGnK6/bsdyFg0Wz
WJLy4ZyIobCtZfCKa8B6ZBUswideP1EPO18zndZvh2VrAp7E9cDcshwn2wfg
Plfb2flXMDN+gB3dPo6RpmClYNZUnW/w1/Pti9pLsP3ciI7yOrx7UjqCl2M7
4UyLSMYYL2zNottXLgxbauQqBErARi3WsmpycFio2iRVGWbQje8Hk2CPdLZA
AW3YcYtUxO19cDmdMi1hAEucrh+gmMJRnTZOjKMwxTeoyMEaNjNPeF1hB4cP
hQqwuMB54zFuxj/DVeSf6Rd94GY1o79K/OHTw1XOgyGwSOnQOdplmBm/bar/
83Cj4A34hxFbA6FkOJqj+/mWDDgurD2Eng0LxfmdHb0P/8fpakFDIZzzVM8h
tQw+4OV/2+V3+KeBxGDlWtjWLEnoYxNsESAUfqsDVksy7TPqgdfyOOQnX8Iv
Sxrir1LhisexshJvNn3fKbH44ANcJjOosGsSPjNSX18wAw9zxQ3LzMHvbClx
CcuwPMfb9/NrcK0vadmaTZSwzszE2xJu2M1CtXCDf1N+arvnYRFY14uslSgO
M+NruEUxWoVFAT53djFEYycc25shaUuCrbPTpMM0YZrVYFK6DnyBdTW26AD8
MD1AuMYAXhX0ILeYwIE1rTvazOFdDrodjcfhSw5kvd9PwjvGRNPz7GC9xZZ3
Cc7wWKSIiu+ZTfX55V455gn3l7yYVzoPJ4i/TFnyg3+j3PFq/RU+9Yoz/lo4
zHb77qpZBGxMGnrBHgMfzH4vUhMPP/Lt7fekbBqfxFDJbanwJ85bS9UZ8OiX
giCb7E3zKcWTN5sL9zCmrsc+hJn3IzjzuUhtbhlcLPxV4sdKeEjFxzW/Gm4z
m78jXw9fjW57k9EMb/gvK/N0wN1/RMcEdcOndfS53vbCM5S+CvIAXDjSlp5D
hRerY2qWXm/q35y9ypFROFnm3Ezm2Kb+7KjaOjEJc7coZpNm4MuksKxfaPD1
y87iJQtwr7Gt5Cc6HM94WSS5Dofe3D50mFWM8M53VveCOOEmuSyJHB7Yw3vC
uFkAPqgsSBoVhpX8+l+tiML/A2Azhfg=
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
zXzwIUV+0qggrODb/3pVGP4fXA4E+w==
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
J41bBOCDyoKkMWFYyW/g1aoo/G+yOxmU
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
cbMAfFBJkDQqDCv69b9aEYX/B8JGJFA=
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
o2YB+JCSIGlUGFb07X+1Igr/D1Q1e08=
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
pFGzAHxISZA0Kgwr+va/XhWF/wt6qsKZ
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmcuOPSSrOtUSSROrYhTKEJuvYWpAlxZUtjaWU
QrYGI9n3kENhXFMqFVnK1LVf19L//z/3zPs17znPec/nPOd91vd5nt8j53bh
hDsbCwsL43/p/+9/nmA/7srfzSOavu1nbBiqTZD/MR97adjn1Fnyv/OXCGsl
/r1s0LxCmG3nbgZf8RphG3vNMn/574QDig+SK+6z6P+7fFbCYqeq6sq92Qib
77tSPabGTvjSncF6sQ+wVYKGKkcMB+GCumGx5z9wEpY1PbZfrAhmtp+LcNgV
Rot3ERyb7H0gXJabMKmSg0ubAiePBYQbLsPlZRfS1By2EO7q0AsOrIVplf3r
l0R5CK+QUi4W+MDM8YN7pWif04R4Cd+MZn866gQrmN2i2hfCshu9PTo0OIvK
t5K/l4+wvWqyaV8I7N31tHGwBu5/OrTwFx1eEqiJXNvLT7hjfqu1vR/MnF+4
ofPAV+UxuNCgreOZpABhqsA1zxULWMBf8+BgFGxRQjF2r4L36KmdbJqAhWe2
i9HEBAkbnVzT5jSBH3Tn/coXCPsY3mwQvAc/od1Ul+qFg+osdXXoMPP/3Er4
sXRJ9cBR+DuL1XeXQPjIo7IipWy4WFfeU7kN5t/WGuw7Dc9v1NpFcQsRtvTZ
3bMoCdtllt4TJcHHTJ51jOvBoSqdK+7H4Rua7m+yXGABH5Ev1/zgL292RatH
wdISY1PJKTBz/cFBKmmpKRVwvoLZ659a4T3CyrOZ/fD+vrrcZ+/hOqm0nJpv
sJyBR3zQBtxNVVxY5RcmTLZZcLSQhifU5bV+UYFliteojvtgR+77mdLGsMhU
c2vxCVhX0zxO0AVWsVDYbnweDih/HG8ZBh+KCFnXiIOZ+w/snpPPFp4LR427
JY6XwH+6L/Eo18C8eXRnkw7YpGHaS78fHiCncIi/hV38nFafT8FL18vEnRZg
IZKGdN93uNFRqWUHnwjhQM+CxuNisC91vtVVDv6tqSD4FAkeq1+PUN0H0x9w
Xx432OSjn7ZEmsNegfQnrDawqoyYpIcrzNyfYY1a6V0fg+CGzrhR+hV4Zpud
+1I8/DFLe+9IKvzwgFZXQQ6c6k5LdSyAHQ438TJ+h9stm7MiamGuU6yVtLZN
7THJrDHrhe896BJNosKJlTyqjaOw41Ut+7+m4IwPCazvZmFjvfGLLxjwjcSH
SqXs2wiXHf52IpgfrvbNt1MTha2p8QkDMnB36CHdsz/CzPMNPlo5a2a1D56+
5W9QSoZVFLnHlw/DkypzoRqWsN3pVlN7W9hQzSXN3wUun5O6G+YJ9zypeuTv
C1f6Bszbh8BuXfK1WhHwuJfKgfU4mESjlFUnwd623FZnMuB0pXU7lrtwsGgW
S1I+nBMxFLa1DF5xDViPrIJF+MTrJ+ph52sm03rt8I6agCdxPTD3Do6T7QNw
n6vt7PwrmBk/wI5uH8dIU7BiMGuq9jf46/n2Ra0l2H5uRFtpHd4zKR3By7Gd
cKZFJGOMF7Zm0ekrF4Yt1XPlAyVgwxbrHaqycFio6iRVCWbQje4Hk2CPdLZA
AS3YcYtUxO39cDmdMi2hD0ucrh+gmMBRnTZODHOY4htU5GANm5olvK6wg8OH
QgVYXOC88Rg3o5/hKvLP9Is+cLOq4d8l/vDp4SrnwRBYpHToHO0yzIzfNtX/
ebhR8Ab8w4itvlAyHM3R/XxLBhwX1h5Cz4aF4vzOjt6H/+N0taChEM55quuQ
WgYf9PK/7fIH/NNAYrBSLWxrmiT0sQm2CBAKv9UBqyaZ9Bn2wGt5HHKTL+GX
JQ3xV6lwxePYHRJvNn3fKbH44ANcJjMov3sSPjNSX18wAw9zxQ3LzMHvbClx
CcuwHMfb9/NrcK0vadmaTZSw9szE2xJu2M1CpXCDf1N+arvnERFYx4usmSgO
M+NruEUhWplFHj53djFEfRcc25shaUuCrbPTpMM0YJrVYFK6NnyBdTW26CD8
MD1AuEYfXhX0ILcYw4E1rTvbzODdDjodjcfhSw5k3T9OwjvHRNPz7GDdxZZ3
Cc7wWKSIsu+ZTfX55V455gn3l7yYVzwPJ4i/TFnyg3+j3PFq/RU+9Yoz/lo4
zHb77qppBGxEGnrBHgMfyn4vUhMPP/Lt7fekbBqfxFDJbanwJ85bS9UZ8OiX
giCb7E3zKcWTN5sL9zCmrsc+hJn3IzjzuUhtbhlcLPxV4sdKeEjZxzW/Gm4z
nb8jVw9fjW57k9EMb/gvK/F0wN1/RscEdcOntfW43vbCM5S+CvIAXDjSlp5D
hRerY2qWXm/q35y98tFROFnm3Ezm2Kb+7KzaOjEJc7coZJNm4MuksKxfaPD1
y87iJQtwr5Gt5Cc6HM94WSS5Dofe3D50hFWM8K53VveCOOEm2SyJHB7Yw3vC
qFkAPqQkSBoVhhX9+l+tiML/BSo8B/4=
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
njBu5ocPKgmQR4VgRb/+Vysi8L8BjBv0UQ==
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
5oMPKfKTRgVhBd/+VyvC8P8ALZWlTQ==
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
tfDBhxT5SWOCsILvwKtVYfh/k7IqFw==
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk01dseB3CzjKHMVzLdyImLm1QsUySVSC2zUC6hm/GaGpCxDJnSNZRS
yNTFlY55DFkUruOWSkWGcuuYj2PovbfOe//vef+19vqvz9rrv8f/3vu35dwu
nnRnY2Fhof87/ef9v2daNTF+YITc/G0/fdNIbVJ/7r/mYy8P+5w+R5iRv0xY
K+mfFcOWVcJsO3fT+UrXCdvYa1b4y38nHFB6UL/qPovB/5fPSljsdE19pTcb
4WP7rtaOq7ETvnxnqEHsA2yVqKHKEcNBuKh+ROz5D5yEZc2O7xcrgRnt5yIc
dpXe6l0Cx6Z6HwiX5SZMqubg0k6GU8cDwo1W4MqKixlqDlsId3fqBQfWwdTq
gY3LojyEV0lpl4p8YMb4wX1S1M8ZQryEb0azPx1zghXMb1Hsi2HZzb5eHSqc
Q+FbLdzLR9heNdWsPwT27n7aNESGB54OL/5Ng5cFyJHre/kJdy5stbb3gxnz
Czd2HfiqPA4XG7Z3PpMUIEwRiPdctYAF/DUPDkXBFmXJJu418B49tVPNk7Dw
7HYxqpggYeNT69qcpvCDnoLf+AJhH6ObjYL34CfUm+pSfXBQvaWuDg1m/J9b
CT+WLqsdPAp/Z7H67hIIH3lUUaKUC5fqynsqt8P829qCfWfghc06uyhuIcKW
Prt7lyRhu+zye6Ik+Ljps84JPThUpWvV/QR8Q9P9TY4LLOAj8iXeD/7yZle0
ehQsLTE+nZoGM9YfHKSSkZ5WBRcqmL/+uQ3eI6w8lz0A7++vz3/2Hq6Xysgj
f4PlDD0SgjbhHori4hq/MGF9m0VHC2l4Ul1e61cVWKZ0neK4D3bkvp8tbQKL
TLe0lZ6EdTWPxQm6wCoWCttNLsABlY8TLMPgQxEhGxpxMGP/gd3zCtnC8+Go
CbekiTL4L/dlHmUyzFtAczbthE0bZ7wMBuBB/TQO8bewi5/T2vNpePl6hbjT
IixE0pDu/w43OSq17uATIRzoWdR0Qgz2pSy0ucrBvzcXBZ8mweMNGxGq+2Da
A+4rE4ZMPvppS+Qx2CuQ9oTVBlaVEZP0cIUZ+zOsUSe962MQ3NgVN0a7Cs9u
s3NfToA/5mjvHU2HHx7Q6i7Kg9PdqemORbDD4WZe+h9wh2VLTkQdzHWatZra
ztQe02yyeR9870G3aAoFTqrmUW0agx2vadn/PQ1nfUhkfTcHm+hNXHpBh28k
PVQqZ99GuOLwt5PB/HCtb6GdmihsTUlIHJSBe0IP6Z77EWacb/DR6jlzq33w
zC1/w3J9WEWRe2LlMDylMh+qYQnbnWkzs7eFjdRcMvxd4Mp5qbthnnDvk5pH
/r5wtW/Agn0I7NYtX6cVAU94qRzYiINJ1OSK2hTY25bb6mwWnKm0YcdyFw4W
zWFJKYTzIobDtlbAq64BG5E1sAifeMNkA+wcbzqj1wHvIAc8ieuFuXdwnOoY
hPtdbecWXsGM+AF2dPs4TpqGFYNZ07W/wV8vdCxpLcP286PaShvwninpCF6O
7YSzLSLp47ywNYtOf6UwbKmeLx8oARu1Wu9QlYXDQlWnKEownWZ8P5gEe2Sy
BQpowY5bpCJu74crackzEgawxJmGwWRTOKrLxol+DE72DSpxsIbNzBNfV9nB
4cOhAiwucMFEjJvxL3CN/i+0Sz5wi6rRP2X+8JmRGuehEFikfPg89QrMiN+Y
6v880iR4A/5h1NZAKBWO5uh5viULjgvrCKHlwkJxfufG7sM/OV0raiyG857q
OqRXwAe9/G+7/An/PJgUrFQH25qlCH1shi0ChMJvdcKqKab9Rr3wegGH3NRL
+GVZY8I1Clz1OHaHxBum77sklh58gCtkhuR3T8FnRxsaimbhEa64EZl5+J1t
clziCizH8fb9wjpc50tasWYTJaw9O/m2jBt2s1Ap3uRnyk/v8DwiAut46Wsm
icOM+BpuVYhWZpGHz59bClHfBcf2ZUnakmDr3AzpMA2YajWUkqkNX2Rdiy05
CD/MDBAmG8Brgh76rSZwILltZ7s5vNtBp7PpBHzZQV/3z1PwznHRzAI7WHep
9V2iMzweKaLse5apPr/8q8c94YGyFwuKF+BE8Zdpy37w78l3vNp+g0+/4kyI
D4fZbt9dM4uAjUnDL9hj4EO570XICfAj374Bz2Sm8UkKldyWDn/ivLVcmwWP
fSkKssllmk8pnoK5fLiXPn099iHMuB/B2c9F6vIr4FLhrxI/VsPDyj6uhbVw
u9nCHbkG+Fp0+5usFnjTf0WJpxPu+Ss6JqgHPqOtx/W2D55N7q/SH4SLR9sz
8yjwUm0Mefk1U//m7ZWPjsGpMudns8eZ+rOzZuvkFMzdqpBLmoWvkMJyfqXC
1684i5ctwn3GtpKfaHAC/WWJ5AYcenP78BFWMcK73lndC+KEm2VzJPJ4YA/v
SeMWAfiQkiBpTBhW9Bt4tSoK/wsN0nJS
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
SeMWPviQEj9pTAhW9Bt4vSYC/wu3sior
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
ahKADykJkkaEYUXfvtfLovD/ADYs/Rw=
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/j3ybZ+MruVHyt32MDSP1CfI/5mMvDfucOkv+d/4SYe3E
v5YNm1cIs+3YxeArXiNsY69V5q/wnXBA8QFyxX0Wg3+Xz0pY7FRVXbk3G+Gj
e69Uj6mzE750Z7Be7ANslaCpxhHDQbigbljs+Q+chOXMju0TK4KZ7eciHHaF
0eJdBMcme+8Pl+MmTKrk4NKhwMljAeFGy3B52YU0dYcthLs69IMDa2FaZf/6
JVEewiuklIsFPjBz/OBeKdrnNCFewjej2Z+OOsGK5reo9oWw3EZvjy4NzqLy
reTv4SNsr5Zs1hcCe3c9bRysgfufDi38SYeXBGoi1/bwE+6Y32pt7wcz5xdu
6Nz/VWUMLjRs63gmKUCYKnDNc8UCFvDXOjAYBVuUUEzcq+Dd+uonmyZg4Znt
YjQxQcLGJ9d0OE3hB915v/IFwj5GNxsE78FPaDc1pHrhoDpLPV06zPw/txJ+
LF1SPXAE/s5i9d0lED78qKxIORsu1lPwVGmD+be1BvtOw/MbtXZR3EKELX12
9SxKwnaZpfdESfAx02cd4/pwqGrnivtx+IaW+5ssF1jAR+TLNT/4y5ud0RpR
sLTE2FRyCsxcf3CQalpqSgWcr2j++qdWeLewymxmP7yvry732Xu4Tiotp+Yb
LG/oER+0AXdTlRZW+YUJk20WHC2k4QkNBe1fVGGZ4jWq417Ykft+prQJLDLV
3Fp8AtbTOhon6AKrWihuNzkPB5Q/jrcMgw9GhKxrxsHM/Qd2z8lnC8+Fo8bd
EsdL4D/cl3hUamDePLqzaQds2jDtZdAPD5BTOMTfwi5+TqvPp+Cl62XiTguw
EElTuu873Oio3CLLJ0I40LOg8bgY7Eudb3WVh39rKgg+RYLH6tcj1PbC9Afc
l8cNN/nIpy2RR2GvQPoTVhtYTUZM0sMVZu7PsGat9M6PQXBDZ9wo/Qo8s83O
fSke/pils2ckFX64X7urIAdOdaelOhbADoeaeBn/hdstm7MiamGuU6yVtLZN
7THNrDHvhe896BJNosKJlTxqjaOw41Vt+z+n4IwPCazvZmET/fGLLxjwjcSH
yqXs2wiXHfp2IpgfrvbNt1MXha2p8QkDMnB36EG9sz/CzPMNPlI5a261F56+
5W9YSoZVlbjHlw/Bk6pzoZqWsN3pVjN7W9hI3SXN3wUun5O6G+YJ9zypeuTv
C1f6Bszbh8BuXQq12hHwuJfq/vU4mESjlFUnwd623FZnMuB05XU7lrtwsGgW
S1I+nBMxFLa1DF5xDViPrIJF+MTrJ+ph52um0/rtsGxNwJO4HphbluNk+wDc
52o7O/8KZsYPsKPbxzHSFKwUzJqq8w3+er59UXsJtp8b0VFeh3dPSkfwcmwn
nGkRyRjjha1ZdPvKhWFLjVyFQAnYqMVaVk0ODgtVm6Qqwwy68f1gEuyRzhYo
oA07bpGKuL0PLqdTpiUMYInT9QMUUziq08aJcRSm+AYVOVjDZuYJryvs4PCh
UAEWFzhvPMbN+Ge4ivwz/aIP3Kxm9FeJP3x6uMp5MAQWKR06R7sMM+O3TfV/
Hm4UvAH/MGJrIJQMR3N0P9+SAceFtYfQs2GhOL+zo/fh/zhdLWgohHOe6jmk
lsEHvPxvu/wO/zSQGKxcC9uaJQl9bIItAoTCb3XAakmmfUY98Foeh/zkS/hl
SUP8VSpc8ThWVuLNpu87JRYffIDLZAYVdk3CZ0bq6wtm4GGuuGGZOfidLSUu
YRmW53j7fn4NrvUlLVuziRLWmZl4W8INu1moFm7wb8pPbfc8LALrepG1EsVh
ZnwNtyhGq7AowOfOLoZo7IRjezMkbUmwdXaadJgmTLMaTErXgS+wrsYWHYAf
pgcI1xjAq4Ie5BYTOLCmdUebObzLQbej8Th8yYGs9/tJeMeYaHqeHay32PIu
wRkeixRR8T2zqT6/3CvHPOH+khfzSufhBPGXKUt+8G+UO16tv8KnXnHGXwuH
2W7fXTWLgI1JQy/YY+CD2e9FauLhR769/Z6UTeOTGCq5LRX+xHlrqToDHv1S
EGSTvWk+pXjyZnPhHsbU9diHMPN+BGc+F6nNLYOLhb9K/FgJD6n4uOZXw21m
83fk6+Gr0W1vMprhDf9lZZ4OuPuP6Jigbvi0jj7X2154htJXQR6AC0fa0nOo
8GJ1TM3S6039m7NXOTIKJ8ucm8kc29SfHVVbJyZh7hbFbNIMfJkUlvULDb5+
2Vm8ZAHuNbaV/ESH4xkviyTX4dCb24cOs4oR3vnO6l4QJ9wklyWRwwN7eE8Y
NwvAB5UFSaPCsJJf/6sVUfh/v7lJbA==
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3BrsoayD7JN5MZgkopzLZFUInXsQhlCk3VsLciS4sqWxlJK
IVuDkex7yKEwrimViiyluvbrWvr/59wz79e85zznPZ/znPdZ3+d5fo+c6/nj
bmwsLCyM/6d/3v8+fV8uyGh/bCJ/28tYN1QbJ/9rXvaS0E8pM+T/5i8S1kr4
smTQtEyYbftOBm/RKmFrO81SP/nvhP2L9pPL77Ho/7d8VsKiJytry7zYCB/Z
c7lqVI2d8MXbA3Wi72HLeA1VjmgOwvm1Q6LPfuAkLGt6dK9oIcxs/ybCoZcZ
zV6FcEyS174wWS7CpAqOTdoUOGnUP8xwCS4rPZ+qZr+ZcGe7XlBADUyr6Fu7
KMJNeJmUfCHfG2aOH9wjSfuUKshD+EYU+5MRR1jB7CbVrgCWXe/p1qHBmVTe
5bzdvITtVJNMe4Nhr84nDQPVcN+Twfm/6fAif3XE6m4+wu1zW6zsfGHm/ML1
Hfu+Ko/CBQat7U8l+AlT+a96LJvD/H6a+wciYfNiirFbJbxLT+1E4zgsNL1N
lCYqQNjoxKo2pwl8vyv3N94A2NvwRr3AXfgx7Ya6ZA8cWGuhq0OHmf/nFsKP
pIqr+g/D31ksvzsHwIcelhYqZcFFuvIeyq0w39aWIJ8peG69xjaSS5CwhffO
7gUJ2Daj5K4ICT5q8rR9TA8OUelYdjsGX9d0e53pDPN7C3++6gt/fr0jSj0S
lhIfnUxKhpnrDw5USU1JLofzFMxe/dwC7xJSnsnog/f21uY8fQfXSqZmV3+D
5Qzc4wLX4S6q4vwKnxBhsvW8g7kUPK4ur/WrCixdtEp12AM7cN3LkDKGhSeb
WoqOw7qaR2IFnGEVc4Vtxudg/7JHcRah8IHw4DWNWJi5/8Bu2XlsYTlw5Jhr
wlgx/JfbIrdyNcyTS3cyaYdN6qc89fvgfnIyh9gb2NnXceXZJLx4rVTMcR4W
JGlI9X6HGxyUmmV4hQkHeOQ3HBOFfahzLS5y8O+N+UEnSfBo3Vq46h6Yfp/r
0pjBBh/+uDniCOwZQH/Mag2rSotKuLvAzP0Z1qiR2vEhEK7viB2hX4ant9q6
LcbBHzK1dw+nwA/2aXXmZ8MpbrQUh3zY/mAjD+MPuM2iKTO8Bt50krWC1rqh
PSYZ1WY98N37nSKJVDihglu1YQR2uKJl9/cknP4+nvXtDGysN3bhOQO+nvBA
qYR9K+HSg9+OB/HBVT55tmoisBU1Lr5fGu4KOaB75keYeb7BhytmzCz3wFM3
/QxKyLCKItfY0kF4QmU2RMMCtj3VYmpnAxuqOaf6OcNls5J3Qj3g7seVD/18
4Aof/zm7YNi1U75GKxwe81TZtxYLk2iU0qpE2MuGy/J0OpymtGbLcgcOEslk
ScyDs8MHQ7eUwssu/msRlbAwr1jdeB3sdNVkSq8Nlqn2fxzbDXPJcJxo64d7
XWxm5l7CzPgBdnD9MEqahBWDWFO0v8Ffz7UtaC3CdrPD2kpr8K4JqXAejm2E
M8wjGKM8sBWLTm+ZEGyhniMfIA4bNlvJqMrCoSGqE1QlmEE3uhdEgt3T2AL4
tWCHzZLht/bCZXTKlLg+LH6qrp9iAkd2WDsyjsAUn8BCeyvY1Cz+VbktHDYY
ws/iDOeORbsa/QJXkn+hX/CGm1QNvxT7waeGKp0GgmHhksGztEswM37bUP+n
oQaB6/APwzb6gklwFEfXs83pcGxoWzA9CxaM9T0zcg/+yfFKfn0BnP1E1z6l
FN7v6XfL+U/45/6EIKUa2MY0UfBDI2zuLxh2sx1WTTTpNeyGV3M55CZewC+K
6+OuUOHyRzEy4q83fN8hvnD/PVwqPSC/cwI+PVxXlz8ND22KHZKehd/aUGLj
l2A5jjfv5lbhGh/SkhWbCGHt6fE3xVywq7lKwTrfhvyUNo9DwrCOJ1kzQQxm
xtdws0KUMos8fPbMQrD6DjimJ13ChgRbZaVKhWrANMuBxDRt+DzrSkzhfvhB
mr9QtT68IuBObjaGA6pbtreawTvtddobjsEX7cm6f56At4+KpOXawroLzW/j
neDRCGFln9Mb6vPNuXzUA+4rfj6neA6OF3uRvOgL/0657dnyG3zyJWfc1TCY
7dadFdNw2Ig0+Jw9Gj6Q9U64Og5+6NPT50HZMD4JIRJbU+CPnDcXq9Lhkc/5
gdZZG+ZTkjt3JgfuZkxei3kAM+9HcMYz4ZqcUrhI6Kv4jxXwoLK3S14V3Go6
d1uuDr4S1fo6vQle91tS4m6Hu/6Kig7sgk9p62160wNPU3rLyf1wwXBrWjYV
XqiKrl58taF/s3bKh0fgJOmz0xmjG/qzvXLL+ATM1ayQRZqGL5FCM3+lwdcu
OYkVz8M9RjYSH+lwHONFocQaHHJj2+AhVlHCO95a3g3khBtlM8WzuWF3r3Gj
Jn74gJIAaUQIVvTte7ksAv8PcPKZgA==
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk01dseB3CzjKHMVzLdyImLm1SsY4ikEqllFsoldDNeUwMypAyZ0jWU
UsjUxZXMc8iicB23VAoZyq1jPo6h99467/2/5/3X2uu/Pmuv/x7/e+/flnO9
eNKNjYWFhf7v9J/3/56PDs2F0gErTd/20zcN1SbJY/81H3tp6OfUOcKM/GXC
Wgn/rBg0rxJm27mbzle8TtjaTrPMT/47Yf/ig+SKByz6/18+K2Gx01V15V5s
hI/tu1o9rsZO+PLdwXqxj7BlvIYqRzQH4YK6YbEXP3ASljU9vl+sCGa0n4tw
6FV6i1cRHJPsdSBMlpswqZKDSzsRTh73DzNcgcvLLqap2W8h3NWhFxRQC1Mr
+zcui/IQXiWlXCrwhhnjB/dKUT+nCfESvhXF/mzUEVYwu02xK4RlN3t7dKhw
FoVvNX8vH2E71WTTvmDYq+tZ42AN3P9saPFvGrwsUBOxvpefcMfCVis7X5gx
v3BD54GvyuNwoUFbx3NJAcIUgeseq+awgJ/mwcFI2Lwk0ditCt6jp3aqaRIW
nt0uRhUTJGx0al2b0wR+2J33G18A7G14q0HwPvyUektdqhcOrLPQ1aHBjP9z
K+En0iXVA0fh7yyW350D4COPy4qUsuFiXXkP5TaYf1trkM8MvLBZaxvJLUTY
wnt3z5IkbJtZel+UBB83ed4xoQeHqHSuup2Ab2q6vc1yhgW8Rb5c94W/vN0V
pR4JS0uMTyenwIz1BweqpKWmVMD5CmZvfm6F9wgrz2X2w/v76nKff4DrpNJy
ar7BcgbucYGbcDdFcXGNX5gw2XrRwVwanlSX1/pVBZYpXqc47IMduB9kShvD
ItPNrcUnYV3NY7GCzrCKucJ24wuwf/mTOItQ+FB48IZGLMzYf2C3nHy2sFw4
csI1YaIE/sttmUe5BubNozmZdMAmDTOe+v3wADmFQ/wd7OzruPZiGl6+USbu
uAgLkTSk+77DjQ5KLTv4RAgHeBQ0nhCDfSgLrS5y8O9NBUGnSfB4/Ua46j6Y
9pD7yoQBk49+2hJxDPYMoD1ltYZVZcQk3V1gxv4Ma9RK7xoLhBs6Y0dpV+HZ
bbZuy3HwWJb23pFU+NEBra6CHDjVjZrqUADbH27ipf8Bt1s0Z4XXwlynWSup
bUztMcmsMeuF7z/sEk2iwAmVPKqNo7DDNS27v6fhjI/xrO/nYGO9iUsv6fDN
hEdKpezbCJcd/nYyiB+u9sm3VROFrShx8QMycHfIId1zP8KM8w0+WjlnZrkP
nrntZ1BKhlUUuSdWDsNTKvMhGhaw7ZlWUzsb2FDNOc3PGS6fl7oX6gH3PK16
7OcDV/r4L9gFw65d8rVa4fCEp8qBjViYRE0sq06CvWy4Lc9mwOlKG7Ys9+Ag
0SyWpHw4J3wodGsZvOrivxFRBYvwiddP1sNO101m9NrhHTX+T2N7YO4dHKfa
B+A+F5u5hdcwI36AHVzHxknTsGIQa6r2N/jrhfYlrWXYbn5EW2kD3jMlHc7L
sZ1wpnkEfZwXtmLR6SsXhi3Uc+UDJGDDFqsdqrJwaIjqFEUJptOMHgSRYPd0
tgABLdhhi1T4nf1wOS1xRkIfljhTP5BoAkd2WjvSj8GJPoFF9lawqVn8mwpb
OGwoRIDFGc6biHY1+gWuIv9Cu+QNN6sa/lPiB58ZrnIaDIZFSofOU6/AjPiN
qf7Pw42CN+EfRmz0hZLhKI7uF1sy4NjQ9mBaNiwU63tu9AH8k+O1goZCOOeZ
rn1qGXzQ0++O85/wzwMJQUq1sI1pktBYE2zuLxR2uwNWTTLpM+yB1/M45KZe
wa9KGuKuUeCKJzE7JN4yfd8psfTwI1wmMyi/ewo+O1JfXzALD3PFDsvMw+9t
EmPjV2A5jncfFtbhWh/SihWbKGHt2cl3Jdywq7lK4SY/U35qu8cREVjHk6yZ
IA4z4mu4RSFKmUUePn9uKVh9FxzTmyFpQ4KtstOkQzVgquVgUro2fJF1Labo
IPwo3V+4Rh9eE3QntxjDATWtO9vM4N32Oh2NJ+DL9mTdP0/BO8dF0/NsYd2l
lvfxTvB4hIiyz1mm+nxzrx73gPtLXi4oXoDjxV+lLPvCvyfe9Wz9DT79mjPu
ehjMdufemmk4bEQaeskeDR/K/iBSEwc/9unt90hkGp+EEMltqfAnztvL1Rnw
6JeCQOtspvmU4smby4V76NM3Yh7BjPsRnPlCpDa3DC4W/irxYyU8pOztkl8N
t5ku3JWrh69Ftb3NaIY3/VaUeDrg7r+iogO74TPaelzveuHZxL4K8gBcONKW
nkOBl6qja5bfMPVv3k756CicLHN+NnOcqT87q7ZOTsHcLQrZpFn4Cik061cq
fOOKk3jJItxrZCP5iQbH0V8VSW7AIbe2Dx1hFSO8673l/UBOuEk2SyKHB3b3
mjRqFoAPKQmSRoVhRd/+16ui8L8AF9YPuA==
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
bhaADyoLkkaFYSW//lcrovD/AFMlLDU=
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
40ZNAvAhJUHSiDCs6Nv3ekUU/hdEEoQG
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
hHGzAHxASZA0Kgwr+vW/WhGF/wX3lIYK
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
mwXgg0qCpFFhWNGv/9WKKPw/XRy10g==
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEpmsbWwuypCzZ0lhK
KWTrj5Hse8ihMK4plYosZerar2vp/59zz7xf857znPd8znPeZ32f5/k98m4X
TrizsbCwMP6f/n7/81CijONUXdWbv+1jbBipT5D/MR97aejn1Fnyv/OXCGsn
/LVs2LxCmG3HLgZf8RphG3utMj+F74T9iw+QK+6zGPy7fFbCYqeq6sq92Qgf
3XulekydnfClO4P1Yh9gq3hNNY5oDsIFdcNiz3/gJCxndmyfWBHMbD8X4dAr
jBbvIjgm2Xt/mBw3YVIlB5dOIpw85h9mtAyXl11IU3fYQrirQz8ooBamVfav
XxLlIbxCSrlY4AMzxw/ulaJ9ThPiJXwziv3pqBOsaH6Lal8Iy2309ujS4Cwq
30r+Hj7C9mrJZn3BsHfX08bBGrj/6dDCn3R4SaAmYm0PP+GO+a3W9r4wc37h
hs79X1XG4ELDto5nkgKEqQLXPFcsYAE/rQODkbBFSaKJexW8W1/9ZNMELDyz
XYwmJkjY+OSaDqcp/KA771e+ANjH6GaD4D34Ce2mhlQvHFhnqadLh5n/51bC
j6VLqgeOwN9ZrL67BMCHH5UVKWfDxXoKniptMP+21iDKNDy/UWsXyS1E2NJn
V8+iJGyXWXpPlAQfM33WMa4Ph6h2rrgfh29oub/JcoEFfES+XPOFv7zZGaUR
CUtLjE0lp8DM9QcHqqalplTA+Yrmr39qhXcLq8xm9sP7+upyn72H66TScmq+
wfKGHnGBG3A3VWlhlV+YMNlmwdFCGp7QUND+RRWWKV6jOu6FHbnvZ0qbwCJT
za3FJ2A9raOxgi6wqoXidpPzsH/54zjLUPhgePC6ZizM3H9g95x8trBcOHLc
LWG8BP7DfYlHpQbmzaM7m3bApg3TXgb98AA5hUP8Lezi67T6fApeul4m7rQA
C5E0pfu+w42Oyi2yfCKEAzwLGo+LwRTqfKurPPxbU0HQKRI8Vr8errYXpj/g
vjxuuMlHPm2JOAp7BdCfsNrAajJikh6uMHN/hjVrpXd+DIQbOmNH6VfgmW12
7ktx8McsnT0jqfDD/dpdBTlwqjst1bEAdjjUxMv4L9xu2ZwVXgtznWKtpLVt
ao9pZo15L3zvQZdoEhVOqORRaxyFHa9q2/85BWd8iGd9Nwub6I9ffMGAbyQ8
VC5l30a47NC3E0H8cDUl305dFLamxsUPyMDdIQf1zv4IM883+EjlrLnVXnj6
lp9hKRlWVeIeXz4ET6rOhWhawnanW83sbWEjdZc0Pxe4fE7qbqgn3POk6pEf
Ba6k+M/bB8NuXQq12uHwuJfq/vVYmERLLKtOgr1tua3OZMDpyut2LHfhINEs
lqR8OCd8KHRrGbzi6r8eUQWL8InXT9TDztdMp/XbYdka/yexPTC3LMfJ9gG4
z9V2dv4VzIwfYEe3j2OkKVgpiDVV5xv89Xz7ovYSbD83oqO8Du+elA7n5dhO
ONMigjHGC1uz6PaVC8OWGrkKARKwUYu1rJocHBqiNklVhhl04/tBJNgjnS1A
QBt23CIVfnsfXE5PnJYwgCVO1w8kmsKRnTZOjKNwIiWwyMEaNjOPf11hB4cN
hQiwuMB549Fuxj/DVeSf6Rd94GY1o79K/ODTw1XOg8GwSOnQOdplmBm/bar/
83Cj4A34hxFbA6FkOIqj+/mWDDg2tD2Yng0LxfqeHb0P/8fpakFDIZzzVM8h
tQw+4OV32+V3+KeBhCDlWtjWLEnoYxNs4S8UdqsDVksy7TPqgdfyOOQnX8Iv
SxrirlLhiscxshJvNn3fKbH44ANcJjOosGsSPjNSX18wAw9zxQ7LzMHvbBNj
45dheY637+fX4FoKadmaTZSwzszE2xJu2M1CtXCDf1N+arvnYRFY14uslSAO
M+NruEUxSoVFAT53djFYYycc05shaUuCrbPTpEM1YZrVYFK6DnyBdTWm6AD8
MN1fuMYAXhX0ILeYwAE1rTvazOFdDrodjcfhSw5kvd9PwjvGRNPz7GC9xZZ3
8c7wWISICuXMpvp8c68c84T7S17MK52H48Vfpiz5wr8l3vFq/RU+9Yoz7loY
zHb77qpZOGxMGnrBHg0fzH4vUhMHP6L09nsmbhqfhBDJbanwJ85bS9UZ8OiX
gkCb7E3zKcWTN5sL9zCmrsc8hJn3IzjzuUhtbhlcLPxV4sdKeEjFxzW/Gm4z
m78jXw9fjWp7k9EMb/gtK/N0wN1/REUHdsOndfS53vbCM4l9FeQBuHCkLT2H
Ci9WR9csvd7Uvzl7lSOjcLLMuZnMsU392VG1dWIS5m5RzCbNwJdJoVm/0ODr
l53FSxbgXmNbyU90OI7xskhyHQ65uX3oMKsY4Z3vrO4FcsJNclkSOTywh/eE
cbMAfFBZkDQqDCv59r9aEYX/B3zCZs0=
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
YdQsAB9SEiSNCsOKvv2vVkTh/wL1JFMw
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
GrXwwgcV+EhjArC878CrVSH432SuY9o=
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmcmMwScW5lkgqkTp2oQyhyTq2FmRJcWVLWUop
ZGswkn0PORTGNaVSkaVMXft1Lf3/c+6Z92vec57zns95zvus7/M8v0fO9fxx
NzYWFhbG/9M/73+fs3pFVtO3aY3f9jLWDdXGyf+aj70k9HPKDPm/+YuEtRL+
XjJoWibMtn0ng69olbC1nWapn/x3wv5F+8nl91n0/1s+K2Gxk5W1ZV5shI/s
uVw1qsZO+OKdgTqxD7BlvIYqRzQH4fzaIbHnP3ASljU9ulesEGa2n4tw6GVG
s1chHJPktS9MlpswqYKDS5sCJ436hxkuwWWl51PV7DcR7mzXCwqogWkVfWsX
RXkIL5OSL+R7w8zxg3ukaJ9ThXgJ34hifzriCCuY3aTaFcCy6z3dOjQ4k8q3
nLebj7CdapJpbzDs1fm0YaAa7ns6OP8XHV4UqI5Y3c1PuH1us5WdL8ycX7i+
Y99X5VG4wKC1/ZmkAGGqwFWPZXNYwE9z/0AkbF5MMXarhHfpqZ1oHIeFp7eK
0cQECRudWNXmNIEfdOX+xhcAexveqBe8Bz+h3VCX6oEDay10degw8//cTPix
dHFV/2H4O4vld+cA+NCj0kKlLLhIV95DuRXm39IS5DMFz63X2EZyCxG28N7Z
vSAJ22aU3BMlwUdNnrWP6cEhKh3Lbsfg65pubzKdYQFvkS9XfeEvb3ZEqUfC
0hKjk0nJMHP9wYEqqSnJ5XCegtnrn1vgXcLKMxl98N7e2pxn7+FaqdTs6m+w
nIF7XOA63EVVnF/hFyZMtp53MJeGx9XltX5VgWWKVqkOe2AH7vsZ0sawyGRT
S9FxWFfzSKygM6xirrDV+BzsX/Y4ziIUPhAevKYRCzP3H9gtO48tLAeOHHNN
GCuG/3Rb5FGuhnlz6U4m7bBJ/ZSnfh/cT07mEH8LO/s6rjyfhBevlYo7zsNC
JA3p3u9wg4NS8zY+EcIBHvkNx8RgH+pci4scfLsxP+gkCR6tWwtX3QPTH3Bf
GjPY4MOfNkUcgT0D6E9YrWFVGTFJdxeYuT/DGjXSOz4GwvUdsSP0y/D0Flu3
xTj4Y6b27uEU+OE+rc78bDjFjZbikA/bH2zkZfwOt1k0ZYbXwFwnWStorRva
Y5JRbdYD33vQKZpIhRMqeFQbRmCHK1p2f03C6R/iWd/NwMZ6YxdeMODrCQ+V
Sti3EC49+O14ED9c5ZNnqyYKW1Hj4vtl4K6QA7pnfoSZ5xt8uGLGzHIPPHXT
z6CEDKsoco8tHYQnVGZDNCxg21MtpnY2sKGac6qfM1w2K3U31APuflL5yM8H
rvDxn7MLhl075Wu0wuExT5V9a7EwiUYprUqEvWy4LU+nw2lKa7Ysd+Eg0UyW
xDw4O3wwdHMpvOzivxZRCYvwideN18FOV02m9NrgbdX+T2K7Ye5tHCfa+uFe
F5uZuVcwM36AHVw/jpImYcUg1hTtb/DXc20LWouw3eywttIavGtCOpyXYyvh
DPMIxigvbMWi01smDFuo58gHSMCGzVbbVGXh0BDVCaoSzKAb3Q8iwe5pbAEC
WrDDJqnwW3vhMjplSkIfljhV108xgSM7rB0ZR2CKT2ChvRVsahb/utwWDhsM
EWBxhnPHol2NfoEryb/QL3jDTaqGfxf7waeGKp0GgmGRksGztEswM37bUP/n
oQbB6/APwzb6QklwFEfX803pcGxoWzA9CxaK9T0zch/+yfFKfn0BnP1U1z6l
FN7v6XfL+Q/45/6EIKUa2MY0UehjI2zuLxR2sx1WTTTpNeyGV3M55CZewi+L
6+OuUOHyxzHbJN5s+L5DYuHBB7hUZkB+5wR8eriuLn8aHuKKHZKZhd/ZUGLj
l2A5jrfv51bhGh/SkhWbKGHt6fG3xdywq7lKwTr/hvyUNo9DIrCOJ1kzQRxm
xtdws0KUMos8fPbMQrD6DjimJ13ShgRbZaVKh2rANMuBxDRt+DzrSkzhfvhh
mr9wtT68IuhObjaGA6pbtreawTvtddobjsEX7cm6f5yAt4+KpuXawroLze/i
neDRCBFln9Mb6vPNuXzUA+4rfjGneA6OF3+ZvOgL36bc8Wz5DT75ijPuahjM
duvuimk4bEQafMEeDR/Iei9SHQc/8unp86BsGJ+EEMktKfAnzpuLVenwyJf8
QOusDfMpxZM7kwN3MyavxTyEmfcjOOO5SE1OKVwk/FXixwp4UNnbJa8KbjWd
uyNXB1+Jan2T3gSv+y0p8bTDXX9GRQd2wae09bje9sDTlN5ycj9cMNyalk2F
F6qiqxdfb+jfrJ3y4RE4SebsdMbohv5sr9w8PgFzNytkkabhS6TQzF9p8LVL
TuLF83CPkY3kJzocx3hZKLkGh9zYOniIVYzwjneW9wI54UbZTIlsHtjda9yo
SQA+oCRIGhGGFX37Xi2Lwv8DraT9HA==
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
Jo1aBOBDSoKkMWFY0Xfg1aoo/F8v77b2
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
hFGTAHxISZA0Igwr+va9XhGF/wWMsAUR
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
ahaADykJkkaFYUW//lcrovD/AJRqHIA=
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
JgH4oJIgaUQYVvTte7UsCv8PwqkoOA==
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/j6OC6az5WfXmb/sYG0bqE+R/zMdeGvY5dZb87/wlwtqJ
fy0bNq8QZtuxi8FXvEbYxl6rzF/hO+GA4gPkivssBv8un5Ww2KmqunJvNsJH
916pHlNnJ3zpzmC92AfYKkFTjSOGg3BB3bDY8x84CcuZHdsnVgQz289FOOwK
o8W7CI5N9t4fLsdNmFTJwaVDgZPHAsKNluHysgtp6g5bCHd16AcH1sK0yv71
S6I8hFdIKRcLfGDm+MG9UrTPaUK8hG9Gsz8ddYIVzW9R7QthuY3eHl0anEXl
W8nfw0fYXi3ZrC8E9u562jhYA/c/HVr4kw4vCdREru3hJ9wxv9Xa3g9mzi/c
0Ln/q8oYXGjY1vFMUoAwVeCa54oFLOCvdWAwCrYooZi4V8G79dVPNk3AwjPb
xWhigoSNT67pcJrCD7rzfuULhH2MbjYI3oOf0G5qSPXCQXWWerp0mPl/biX8
WLqkeuAI/J3F6rtLIHz4UVmRcjZcrKfgqdIG829rDfadhuc3au2iuIUIW/rs
6lmUhO0yS++JkuBjps86xvXhUNXOFffj8A0t9zdZLrCAj8iXa37wlzc7ozWi
YGmJsankFJi5/uAg1bTUlAo4X9H89U+t8G5hldnMfnhfX13us/dwnVRaTs03
WN7QIz5oA+6mKi2s8gsTJtssOFpIwxMaCtq/qMIyxWtUx72wI/f9TGkTWGSq
ubX4BKyndTRO0AVWtVDcbnIeDih/HG8ZBh+MCFnXjIOZ+w/snpPPFp4LR427
JY6XwH+4L/Go1MC8eXRn0w7YtGHay6AfHiCncIi/hV38nFafT8FL18vEnRZg
IZKmdN93uNFRuUWWT4RwoGdB43Ex2Jc63+oqD//WVBB8igSP1a9HqO2F6Q+4
L48bbvKRT1sij8JegfQnrDawmoyYpIcrzNyfYc1a6Z0fg+CGzrhR+hV4Zpud
+1I8/DFLZ89IKvxwv3ZXQQ6c6k5LdSyAHQ418TL+C7dbNmdF1MJcp1graW2b
2mOaWWPeC9970CWaRIUTK3nUGkdhx6va9n9OwRkfEljfzcIm+uMXXzDgG4kP
lUvZtxEuO/TtRDA/XO2bb6cuCltT4xMGZODu0IN6Z3+EmecbfKRy1txqLzx9
y9+wlAyrKnGPLx+CJ1XnQjUtYbvTrWb2trCRukuavwtcPid1N8wT7nlS9cjf
F670DZi3D4HduhRqtSPgcS/V/etxMIlGKatOgr1tua3OZMDpyut2LHfhYNEs
lqR8OCdiKGxrGbziGrAeWQWL8InXT9TDztdMp/XbYdmagCdxPTC3LMfJ9gG4
z9V2dv4VzIwfYEe3j2OkKVgpmDVV5xv89Xz7ovYSbD83oqO8Du+elI7g5dhO
ONMikjHGC1uz6PaVC8OWGrkKgRKwUYu1rJocHBaqNklVhhl04/vBJNgjnS1Q
QBt23CIVcXsfXE6nTEsYwBKn6wcopnBUp40T4yhM8Q0qcrCGzcwTXlfYweFD
oQIsLnDeeIyb8c9wFfln+kUfuFnN6K8Sf/j0cJXzYAgsUjp0jnYZZsZvm+r/
PNwoeAP+YcTWQCgZjubofr4lA44Law+hZ8NCcX5nR+/D/3G6WtBQCOc81XNI
LYMPePnfdvkd/mkgMVi5FrY1SxL62ARbBAiF3+qA1ZJM+4x64LU8DvnJl/DL
kob4q1S44nGsrMSbTd93Siw++ACXyQwq7JqEz4zU1xfMwMNcccMyc/A7W0pc
wjIsz/H2/fwaXOtLWrZmEyWsMzPxtoQbdrNQLdzg35Sf2u55WATW9SJrJYrD
zPgablGMVmFRgM+dXQzR2AnH9mZI2pJg6+w06TBNmGY1mJSuA19gXY0tOgA/
TA8QrjGAVwU9yC0mcGBN6442c3iXg25H43H4kgNZ7/eT8I4x0fQ8O1hvseVd
gjM8Fimi4ntmU31+uVeOecL9JS/mlc7DCeIvU5b84N8od7xaf4VPveKMvxYO
s92+u2oWARuThl6wx8AHs9+L1MTDj3x7+z0pm8YnMVRyWyr8ifPWUnUGPPql
IMgme9N8SvHkzebCPYyp67EPYeb9CM58LlKbWwYXC3+V+LESHlLxcc2vhtvM
5u/I18NXo9veZDTDG/7LyjwdcPcf0TFB3fBpHX2ut73wDKWvgjwAF460pedQ
4cXqmJql15v6N2evcmQUTpY5N5M5tqk/O6q2TkzC3C2K2aQZ+DIpLOsXGnz9
srN4yQLca2wr+YkOxzNeFkmuw6E3tw8dZhUjvPOd1b0gTrhJLksihwf28J4w
bhaADyoLkkaFYSW//lcrovD/AN2Pfzc=
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
bOKDDyvwk0YEYXmfvjcrwvD/ALixj7w=
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
0rCFFz6swEceE4TlfQZerQrD/wJ7cpG0
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
3MIHH1TiJ40Jwop+A69WReD/AQo9Sns=
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
cQsffFCRnzQmCCv4DbxaFYb/B3KgrxE=
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
YTMffFiRnzQmCCv49L9eE4b/Cwv6JFA=
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmcuOPSSrOtUSiROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j53bh
hDsbCwsL4//p7/c/T+ylqgBr86Gmb/sZG4ZqE+R/zMdeGvY5dZb87/wlwlqJ
fy0bNK8QZtu5m8FXvEbYxl6zzF/+O+GA4oPkivss+v8un5Ww2KmqunJvNsJH
912pHlNjJ3zpzmC92AfYKkFDlSOGg3BB3bDY8x84CcuaHtsvVgQz289FOOwK
o8W7CI5N9j4QLstNmFTJwaVNgZPHAsINl+Hysgtpag5bCHd16AUH1sK0yv71
S6I8hFdIKRcLfGDm+MG9UrTPaUK8hG9Gsz8ddYIVzG5R7Qth2Y3eHh0anEXl
W8nfy0fYXjXZtC8E9u562jhYA/c/HVr4kw4vCdREru3lJ9wxv9Xa3g9mzi/c
0Hngq/IYXGjQ1vFMUoAwVeCa54oFLOCveXAwCrYooRi7V8F79NRONk3AwjPb
xWhigoSNTq5pc5rAD7rzfuULhH0MbzYI3oOf0G6qS/XCQXWWujp0mPl/biX8
WLqkesAc/s5i9d0lED7yqKxIKRsu1pX3VG6D+be1BvtOw/MbtXZR3EKELX12
9yxKwnaZpfdESfAxk2cd43pwqErnivtx+Iam+5ssF1jAR+TLNT/4y5td0epR
sLTE2FRyCsxcf3CQSlpqSgWcr2D2+qdWeI+w8mxmP7y/ry732Xu4Tiotp+Yb
LGfgER+0AXdTFRdW+YUJk20WHC2k4Ql1ea1fVGCZ4jWq4z7Ykft+prQxLDLV
3Fp8AtbVPBon6AKrWChsNz4PB5Q/jrcMgw9FhKxrxMHM/Qd2z8lnC8+Fo8bd
EsdL4D/cl3iUa2DePLqzSQds0jDtpd8PD5BTOMTfwi5+TqvPp+Cl62XiTguw
EElDuu873Oio1LKDT4RwoGdB43Ex2Jc63+oqB//WVBB8igSP1a9HqO6D6Q+4
L48bbLL5py2RR2GvQPoTVhtYVUZM0sMVZu7PsEat9K6PQXBDZ9wo/Qo8s83O
fSke/pilvXckFX54QKurIAdOdaelOhbADoebeBn/hdstm7MiamGuU6yVtLZN
7THJrDHrhe896BJNosKJlTyqjaOw41Ut+z+n4IwPCazvZmFjvfGLLxjwjcSH
SqXs2wiXHf52IpgfrvbNt1MTha2p8QkDMnB36CHdsz/CzPMNNq+cNbPaB0/f
8jcoJcMqitzjy4fhSZW5UA1L2O50q6m9LWyo5pLm7wKXz0ndDfOEe55UPfL3
hSt9A+btQ2C3LvlarQh43EvlwHocTKJRyqqTYG9bbqszGXC60rody104WDSL
JSkfzokYCttaBq+4BqxHVsEifOL1E/Ww8zWTab12eEdNwJO4Hph7B8fJ9gG4
z9V2dv4VzIwfYEe3j2OkKVgxmDVV+xv89Xz7otYSbD83oq20Du+ZlI7g5dhO
ONMikjHGC1uz6PSVC8OW6rnygRKwYYv1DlVZOCxUdZKqBDPoRveDSbBHOlug
gBbsuEUq4vZ+uJxOmZbQhyVO1w9QTOCoThsnxlGY4htU5GANm5olvK6wg8OH
QgVYXOC88Rg3o5/hKvLP9Is+cLOq4V8l/vDp4SrnwRBYpHToHO0yzIzfNtX/
ebhR8Ab8w4itvlAyHM3R/XxLBhwX1h5Cz4aF4vzOjt6H/+N0taChEM55quuQ
WgYf9PK/7fI7/NNAYrBSLWxrmiT0sQm2CBAKv9UBqyaZ9Bn2wGt5HHKTL+GX
JQ3xV6lwxePYHRJvNn3fKbH44ANcJjMov3sSPjNSX18wAw9zxQ3LzMHvbClx
CcuwHMfb9/NrcK0vadmaTZSw9szE2xJu2M1CpXCDf1N+arvnERFYx4usmSgO
M+NruEUhWplFHj53djFEfRcc25shaUuCrbPTpMM0YJrVYFK6NnyBdTW26CD8
MD1AuEYfXhX0ILcYw4E1rTvbzODdDjodjcfhSw5k3d9PwjvHRNPz7GDdxZZ3
Cc7wWKSIsu+ZTfX55V455gn3l7yYVzwPJ4i/TFnyg3+j3PFq/RU+9Yoz/lo4
zHb77qppBGxEGnrBHgMfyn4vUhMPP/Lt7fekbBqfxFDJbanwJ85bS9UZ8OiX
giCb7E3zKcWTN5sL9zCmrsc+hJn3IzjzuUhtbhlcLPxV4sdKeEjZxzW/Gm4z
nb8jVw9fjW57k9EMb/gvK/F0wN1/RMcEdcOntfW43vbCM5S+CvIAXDjSlp5D
hRerY2qWXm/q35y9svkonCxzbiZzbFN/dlZtnZiEuVsUskkz8GVSWNYvNPj6
ZWfxkgW418hW8hMdjme8LJJch0Nvbh86wipGeNc7q3tBnHCTbJZEDg/s4T1h
1CwAH1ISJI0Kw4p+/a9WROH/Ac1rhP4=
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/j5+6rR5//FLTt32MDSP1CfI/5mMvDfucOkv+d/4SYe3E
v5YNm1cIs+3YxeArXiNsY69V5q/wnXBA8QFyxX0Wg3+Xz0pY7FRVXbk3G+Gj
e69Uj6mzE750Z7Be7ANslaCpxhHDQbigbljs+Q+chOXMju0TK4KZ7eciHHaF
0eJdBMcme+8Pl+MmTKrk4NKhwMljAeFGy3B52YU0dYcthLs69IMDa2FaZf/6
JVEewiuklIsFPjBz/OBeKdrnNCFewjej2Z+OOsGK5reo9oWw3EZvjy4NzqLy
reTv4SNsr5Zs1hcCe3c9bRysgfufDi38SYeXBGoi1/bwE+6Y32pt7wcz5xdu
6Nz/VWUMLjRs63gmKUCYKnDNc8UCFvDXOjAYBVuUUEzcq+Dd+uonmyZg4Znt
YjQxQcLGJ9d0OE3hB915v/IFwj5GNxsE78FPaDc1pHrhoDpLPV06zPw/txJ+
LF1SPXAE/s5i9d0lED78qKxIORsu1lPwVGmD+be1BvtOw/MbtXZR3EKELX12
9SxKwnaZpfdESfAx02cd4/pwqGrnivtx+IaW+5ssF1jAR+TLNT/4y5ud0RpR
sLTE2FRyCsxcf3CQalpqSgWcr2j++qdWeLewymxmP7yvry732Xu4Tiotp+Yb
LG/oER+0AXdTlRZW+YUJk20WHC2k4QkNBe1fVGGZ4jWq417Ykft+prQJLDLV
3Fp8AtbTOhon6AKrWihuNzkPB5Q/jrcMgw9GhKxrxsHM/Qd2z8lnC8+Fo8bd
EsdL4D/cl3hUamDePLqzaQds2jDtZdAPD5BTOMTfwi5+TqvPp+Cl62XiTguw
EElTuu873Oio3CLLJ0I40LOg8bgY7Eudb3WVh39rKgg+RYLH6tcj1PbC9Afc
l8cNN/nIpy2RR2GvQPoTVhtYTUZM0sMVZu7PsGat9M6PQXBDZ9wo/Qo8s83O
fSke/pils2ckFX64X7urIAdOdaelOhbADoeaeBn/hdstm7MiamGuU6yVtLZN
7THNrDHvhe896BJNosKJlTxqjaOw41Vt+z+n4IwPCazvZmET/fGLLxjwjcSH
yqXs2wiXHfp2IpgfrvbNt1MXha2p8QkDMnB36EG9sz/CzPMNPlI5a261F56+
5W9YSoZVlbjHlw/Bk6pzoZqWsN3pVjN7W9hI3SXN3wUun5O6G+YJ9zypeuTv
C1f6Bszbh8BuXQq12hHwuJfq/vU4mESjlFUnwd623FZnMuB05XU7lrtwsGgW
S1I+nBMxFLa1DF5xDViPrIJF+MTrJ+ph52um0/rtsGxNwJO4HphbluNk+wDc
52o7O/8KZsYPsKPbxzHSFKwUzJqq8w3+er59UXsJtp8b0VFeh3dPSkfwcmwn
nGkRyRjjha1ZdPvKhWFLjVyFQAnYqMVaVk0ODgtVm6Qqwwy68f1gEuyRzhYo
oA07bpGKuL0PLqdTpiUMYInT9QMUUziq08aJcRSm+AYVOVjDZuYJryvs4PCh
UAEWFzhvPMbN+Ge4ivwz/aIP3Kxm9FeJP3x6uMp5MAQWKR06R7sMM+O3TfV/
Hm4UvAH/MGJrIJQMR3N0P9+SAceFtYfQs2GhOL+zo/fh/zhdLWgohHOe6jmk
lsEHvPxvu/wO/zSQGKxcC9uaJQl9bIItAoTCb3XAakmmfUY98Foeh/zkS/hl
SUP8VSpc8ThWVuLNpu87JRYffIDLZAYVdk3CZ0bq6wtm4GGuuGGZOfidLSUu
YRmW53j7fn4NrvUlLVuziRLWmZl4W8INu1moFm7wb8pPbfc8LALrepG1EsVh
ZnwNtyhGq7AowOfOLoZo7IRjezMkbUmwdXaadJgmTLMaTErXgS+wrsYWHYAf
pgcI1xjAq4Ie5BYTOLCmdUebObzLQbej8Th8yYGs9/tJeMeYaHqeHay32PIu
wRkeixRR8T2zqT6/3CvHPOH+khfzSufhBPGXKUt+8G+UO16tv8KnXnHGXwuH
2W7fXTWLgI1JQy/YY+CD2e9FauLhR769/Z6UTeOTGCq5LRX+xHlrqToDHv1S
EGSTvWk+pXjyZnPhHsbU9diHMPN+BGc+F6nNLYOLhb9K/FgJD6n4uOZXw21m
83fk6+Gr0W1vMprhDf9lZZ4OuPuP6Jigbvi0jj7X2154htJXQR6AC0fa0nOo
8GJ1TM3S6039m7NXOTIKJ8ucm8kc29SfHVVbJyZh7hbFbNIMfJkUlvULDb5+
2Vm8ZAHuNbaV/ESH4xkviyTX4dCb24cOs4oR3vnO6l4QJ9wklyWRwwN7eE8Y
NwvAB5UFSaPCsJJf/6sVUfh/NoOqLw==
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
QrYGI9n3kENhXFMqFVnK1LVf19L//z/3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL43/p/+9/nt9jFvbIrqk3f9vH2DBSnyD/Yz720rDPqbPkf+cvEdZO
/HvZsHmFMNuOXQy+4jXCNvZaZf4K3wkHFB8gV9xnMfh3+ayExU5V1ZV7sxE+
uvdK9Zg6O+FLdwbrxT7AVgmaahwxHIQL6obFnv/ASVjO7Ng+sSKY2X4uwmFX
GC3eRXBssvf+cDluwqRKDi4dCpw8FhButAyXl11IU3fYQrirQz84sBamVfav
XxLlIbxCSrlY4AMzxw/ulaJ9ThPiJXwzmv3pqBOsaH6Lal8Iy2309ujS4Cwq
30r+Hj7C9mrJZn0hsHfX08bBGrj/6dDCX3R4SaAmcm0PP+GO+a3W9n4wc37h
hs79X1XG4ELDto5nkgKEqQLXPFcsYAF/rQODUbBFCcXEvQrera9+smkCFp7Z
LkYTEyRsfHJNh9MUftCd9ytfIOxjdLNB8B78hHZTQ6oXDqqz1NOlw8z/cyvh
x9Il1QNH4O8sVt9dAuHDj8qKlLPhYj0FT5U2mH9ba7DvNDy/UWsXxS1E2NJn
V8+iJGyXWXpPlAQfM33WMa4Ph6p2rrgfh29oub/JcoEFfES+XPODv7zZGa0R
BUtLjE0lp8DM9QcHqaalplTA+Yrmr39qhXcLq8xm9sP7+upyn72H66TScmq+
wfKGHvFBG3A3VWlhlV+YMNlmwdFCGp7QUND+RRWWKV6jOu6FHbnvZ0qbwCJT
za3FJ2A9raNxgi6wqoXidpPzcED543jLMPhgRMi6ZhzM3H9g95x8tvBcOGrc
LXG8BP7TfYlHpQbmzaM7m3bApg3TXgb98AA5hUP8Lezi57T6fApeul4m7rQA
C5E0pfu+w42Oyi2yfCKEAz0LGo+Lwb7U+VZXefi3poLgUyR4rH49Qm0vTH/A
fXnccJOPfNoSeRT2CqQ/YbWB1WTEJD1cYeb+DGvWSu/8GAQ3dMaN0q/AM9vs
3Jfi4Y9ZOntGUuGH+7W7CnLgVHdaqmMB7HCoiZfxO9xu2ZwVUQtznWKtpLVt
ao9pZo15L3zvQZdoEhVOrORRaxyFHa9q2/81BWd8SGB9Nwub6I9ffMGAbyQ+
VC5l30a47NC3E8H8cLVvvp26KGxNjU8YkIG7Qw/qnf0RZp5v8JHKWXOrvfD0
LX/DUjKsqsQ9vnwInlSdC9W0hO1Ot5rZ28JG6i5p/i5w+ZzU3TBPuOdJ1SN/
X7jSN2DePgR261Ko1Y6Ax71U96/HwSQapaw6Cfa25bY6kwGnK6/bsdyFg0Wz
WJLy4ZyIobCtZfCKa8B6ZBUswideP1EPO18zndZvh2VrAp7E9cDcshwn2wfg
Plfb2flXMDN+gB3dPo6RpmClYNZUnW/w1/Pti9pLsP3ciI7yOrx7UjqCl2M7
4UyLSMYYL2zNottXLgxbauQqBErARi3WsmpycFio2iRVGWbQje8Hk2CPdLZA
AW3YcYtUxO19cDmdMi1hAEucrh+gmMJRnTZOjKMwxTeoyMEaNjNPeF1hB4cP
hQqwuMB54zFuxj/DVeSf6Rd94GY1o79L/OHTw1XOgyGwSOnQOdplmBm/bar/
83Cj4A34hxFbA6FkOJqj+/mWDDgurD2Eng0LxfmdHb0P/8fpakFDIZzzVM8h
tQw+4OV/2+UP+KeBxGDlWtjWLEnoYxNsESAUfqsDVksy7TPqgdfyOOQnX8Iv
Sxrir1LhisexshJvNn3fKbH44ANcJjOosGsSPjNSX18wAw9zxQ3LzMHvbClx
CcuwPMfb9/NrcK0vadmaTZSwzszE2xJu2M1CtXCDf1N+arvnYRFY14uslSgO
M+NruEUxWoVFAT53djFEYycc25shaUuCrbPTpMM0YZrVYFK6DnyBdTW26AD8
MD1AuMYAXhX0ILeYwIE1rTvazOFdDrodjcfhSw5kvT9OwjvGRNPz7GC9xZZ3
Cc7wWKSIiu+ZTfX55V455gn3l7yYVzoPJ4i/TFnyg3+j3PFq/RU+9Yoz/lo4
zHb77qpZBGxMGnrBHgMfzH4vUhMPP/Lt7fekbBqfxFDJbanwJ85bS9UZ8OiX
giCb7E3zKcWTN5sL9zCmrsc+hJn3IzjzuUhtbhlcLPxV4sdKeEjFxzW/Gm4z
m78jXw9fjW57k9EMb/gvK/N0wN1/RscEdcOndfS53vbCM5S+CvIAXDjSlp5D
hRerY2qWXm/q35y9ypFROFnm3Ezm2Kb+7KjaOjEJc7coZpNm4MuksKxfaPD1
y87iJQtwr7Gt5Cc6HM94WSS5Dofe3D50mFWM8M53VveCOOEmuSyJHB7Yw3vC
uFkAPqgsSBoVhpX8+l+tiML/Bejhjcg=
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Txq1CMCHlARJY8Kwot/Aq1VR+F9L+yFP
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
JgH4gJIgaUQYVvTte7UsCv8PutFuiA==
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk0ltkfB3C7rFmyD7JN5I0/Jqk4ryWSSqSOXShDaLKOrQVZUpZsaSyl
ZMnWHyPZ95BDYbymVCqylKnX/not/f9z3jPP1zzn3POcz7nnuetz7/1dOdeL
J91YmJiY6P9Pf7//eb7mTygJe1Obv+2nbxqqTZL/MQ9rWejn1Dnyv/OXCWsl
/LVi0LJKmGXnbjpPyTphazvNcj/574T9Sw6SKx8w6f+7fGbCoqer6yu8WAgf
23e1ZlyNlfDlu0MNoh9gy3gNVbZoNsKF9SOiz39gJyxreny/aDHMaD8H4dCr
9FavYjgm2etAmCwnYVIVG4d2Ipw87h9muAJXlF9MU7PfRri7Uy8ooA6mVg1s
XBbhIrxKSrlU6A0zxg/uk6R+ThPgJnwrivXpmCOsYHabYlcEy2729epQ4SwK
z2rBXh7CdqrJpv3BsFf306ahWnjg6fDinzR4ma82Yn0vL+HOhe1Wdr4wY37h
xq4DX5XH4SKD9s5nEnyEKXzXPVbNYT4/zYNDkbB5aaKxWzW8R0/tVPMkLDi7
Q5Qqyk/Y6NS6NrsJ/LAn71eeANjb8FYj/334CfWWumQfHFhvoatDgxn/53bC
j6VKawaPwt+ZLL87B8BHHpUXK2XDJbryHsrtMK9wW5DPDLywWWcbySlA2MJ7
d++SBGybWXZfhAQfN3nWOaEHh6h0rbqdgG9qur3Jcob5vIW+XPeFv7zZFaUe
CUuJj08np8CM9QcHqqSlplTCBQpmr39qg/cIKs9lDsD7++tzn72H6yXTcmq/
wXIG7nGBm3APRXFxjVeQMNl60cFcCp5Ul9f6RQWWLlmnOOyDHTgfZEoZw0LT
LW0lJ2FdzWOx/M6wirnCDuMLsH/F4ziLUPhQePCGRizM2H9gt5wClrBcOHLC
NWGiFP7DbZlLuRbmzqM5mXTCJo0znvoD8CA5hU3sLezs67j2fBpevlEu5rgI
C5A0pPq/w00OSq0yPEKEAzwKm06Iwj6UhTYXOfi35sKg0yR4vGEjXHUfTHvI
eWXCYIuPftoWcQz2DKA9YbaGVaVFJdxdYMb+DGvUSe36GAg3dsWO0a7Cs8K2
bstx8Mcs7b2jqXD+Aa3uwhw41Y2a6lAI2x9u5qb/F+6waMkKr4M5TjNXUdu3
tMcks9asD77/sFskiQInVHGpNo3BDte07P6chjM+xDO/m4ON9SYuvaDDNxPy
lcpYhQmXH/52MogXrvEpsFUTga0ocfGD0nBPyCHdcz/CjPMNPlo1Z2a5D565
7WdQRoZVFDknVg7DUyrzIRoWsO2ZNlM7G9hQzTnNzxmumJe8F+oB9z6pfuTn
A1f5+C/YBcOu3fJ1WuHwhKfKgY1YmERNLK9Jgr1sOC3PZsDpShu2TPfgIJEs
pqQCOCd8OHR7Obzq4r8RUQ0L8Yg1TDbATtdNZvQ6YJla/yexvTCnDNupjkG4
38VmbuEVzIgfYAfXj+OkaVgxiDlV+xv89ULHktYybDc/qq20Ae+ZkgrnZttB
ONM8gj7ODVsx6fRXCMIW6rnyAeKwYauVjKosHBqiOkVRguk0owdBJNg9nSWA
Twt22CYZfmc/XEFLnBHXh8XPNAwmmsCRXdaO9GNwok9gsb0VbGoW/7rSFg4b
DuFjcobzJqJdjX6Gq8k/0y55wy2qhn+V+sFnRqqdhoJhobLh89QrMCN+21L/
55Em/pvwD6M2+gLJcBRbz/NtGXBsaEcwLRsWiPU9N/YA/o/jtcLGIjjnqa59
ajl80NPvjvPv8E+DCUFKdbCNaZLAx2bY3F8g7HYnrJpk0m/YC6/nsclNvYRf
ljbGXaPAlY9jZMTfbPm+S3zp4Qe4XHpIfvcUfHa0oaFwFh7hiB2Rnoff2STG
xq/Acmxv3y+sw3U+pBUrFhHC2rOTb0s5YVdzlaJN3i35qR0eR4RgHU+yZoIY
zIiv4VaFKGUmefj8uaVg9V1wTF+GhA0JtspOkwrVgKmWQ0np2vBF5rWY4oNw
frq/YK0+vMbvTm41hgNq23a2m8G77XU6m07Al+3Jur+fgneOi6Tn2cK6S63v
4p3g8QghZZ+zW+rzzb163AMeKH2xoHgBjhd7mbLsC/+WeNez7Vf49Cv2uOth
MMude2um4bARafgFazR8KPu9UG0c/Minb8Ajccv4JIRICKfCn9hvL9dkwGNf
CgOts7fMpyRX3lwu3EufvhGTDzPuR3Dmc6G63HK4RPCr+I9V8LCyt0tBDdxu
unBXrgG+FtX+JqMF3vRbUeLqhHv+iIoO7IHPaOtxvO2DZxP7K8mDcNFoe3oO
BV6qia5dfr2lf/N2ykfH4GTp87OZ41v6s7N6++QUzNmqkE2aha+QQrN+ocI3
rjiJlS7CfUY2Ep9ocBz9ZbHEBhxya8fwEWZRwrveWd4PZIebZbPEc7hgd69J
oxY++JASP2lMEFb0HXi1KgL/D7Ud73A=
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
3CwAH1QSJI0Kw4p+/a9WROH/Ac2DEqc=
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
Ez98QFGAPCIEK/j0vVoWgf8HYXXuiw==
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
LXzwEQV+0pggLO8z8GpVGP4fGtMN2g==
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
14RRswB8SEmQNCoMK/r2v1oRhf8F+Hc7vw==
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
b8KiVQzeoylOGpWENQL7Xy5Lw/8Dc1E3ww==
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
ZgH4kJIgaVQYVvTtf7UiCv8PtW4BKA==
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/D7+5WeVIXQv52z7GhpH6BPkf87GXhn1OnSX/O3+JsHbi
X8uGzSuE2XbsYvAVrxG2sdcq81f4Tjig+AC54j6Lwb/LZyUsdqqqrtybjfDR
vVeqx9TZCV+6M1gv9gG2StBU44jhIFxQNyz2/AdOwnJmx/aJFcHM9nMRDrvC
aPEugmOTvfeHy3ETJlVycOlQ4OSxgHCjZbi87EKausMWwl0d+sGBtTCtsn/9
kigP4RVSysUCH5g5fnCvFO1zmhAv4ZvR7E9HnWBF81tU+0JYbqO3R5cGZ1H5
VvL38BG2V0s26wuBvbueNg7WwP1Phxb+pMNLAjWRa3v4CXfMb7W294OZ8ws3
dO7/qjIGFxq2dTyTFCBMFbjmuWIBC/hrHRiMgi1KKCbuVfBuffWTTROw8Mx2
MZqYIGHjk2s6nKbwg+68X/kCYR+jmw2C9+AntJsaUr1wUJ2lni4dZv6fWwk/
li6pHjgCf2ex+u4SCB9+VFaknA0X6yl4qrTB/Ntag32n4fmNWrsobiHClj67
ehYlYbvM0nuiJPiY6bOOcX04VLVzxf04fEPL/U2WCyzgI/Llmh/85c3OaI0o
WFpibCo5BWauPzhINS01pQLOVzR//VMrvFtYZTazH97XV5f77D1cJ5WWU/MN
ljf0iA/agLupSgur/MKEyTYLjhbS8ISGgvYvqrBM8RrVcS/syH0/U9oEFplq
bi0+AetpHY0TdIFVLRS3m5yHA8ofx1uGwQcjQtY142Dm/gO75+SzhefCUeNu
ieMl8B/uSzwqNTBvHt3ZtAM2bZj2MuiHB8gpHOJvYRc/p9XnU/DS9TJxpwVY
iKQp3fcdbnRUbpHlEyEc6FnQeFwM9qXOt7rKw781FQSfIsFj9esRanth+gPu
y+OGm3zk05bIo7BXIP0Jqw2sJiMm6eEKM/dnWLNWeufHILihM26UfgWe2Wbn
vhQPf8zS2TOSCj/cr91VkAOnutNSHQtgh0NNvIz/wu2WzVkRtTDXKdZKWtum
9phm1pj3wvcedIkmUeHESh61xlHY8aq2/Z9TcMaHBNZ3s7CJ/vjFFwz4RuJD
5VL2bYTLDn07EcwPV/vm26mLwtbU+IQBGbg79KDe2R9h5vkGH6mcNbfaC0/f
8jcsJcOqStzjy4fgSdW5UE1L2O50q5m9LWyk7pLm7wKXz0ndDfOEe55UPfL3
hSt9A+btQ2C3LoVa7Qh43Et1/3ocTKJRyqqTYG9bbqszGXC68rody104WDSL
JSkfzokYCttaBq+4BqxHVsEifOL1E/Ww8zXTaf12WLYm4ElcD8wty3GyfQDu
c7WdnX8FM+MH2NHt4xhpClYKZk3V+QZ/Pd++qL0E28+N6Civw7snpSN4ObYT
zrSIZIzxwtYsun3lwrClRq5CoARs1GItqyYHh4WqTVKVYQbd+H4wCfZIZwsU
0IYdt0hF3N4Hl9Mp0xIGsMTp+gGKKRzVaePEOApTfIOKHKxhM/OE1xV2cPhQ
qACLC5w3HuNm/DNcRf6ZftEHblYz+qvEHz49XOU8GAKLlA6do12GmfHbpvo/
DzcK3oB/GLE1EEqGozm6n2/JgOPC2kPo2bBQnN/Z0fvwf5yuFjQUwjlP9RxS
y+ADXv63XX6HfxpIDFauhW3NkoQ+NsEWAULhtzpgtSTTPqMeeC2PQ37yJfyy
pCH+KhWueBwrK/Fm0/edEosPPsBlMoMKuybhMyP19QUz8DBX3LDMHPzOlhKX
sAzLc7x9P78G1/qSlq3ZRAnrzEy8LeGG3SxUCzf4N+WntnseFoF1vchaieIw
M76GWxSjVVgU4HNnF0M0dsKxvRmStiTYOjtNOkwTplkNJqXrwBdYV2OLDsAP
0wOEawzgVUEPcosJHFjTuqPNHN7loNvReBy+5EDW+/0kvGNMND3PDtZbbHmX
4AyPRYqo+J7ZVJ9f7pVjnnB/yYt5pfNwgvjLlCU/+DfKHa/WX+FTrzjjr4XD
bLfvrppFwMakoRfsMfDB7PciNfHwI9/efk/KpvFJDJXclgp/4ry1VJ0Bj34p
CLLJ3jSfUjx5s7lwD2PqeuxDmHk/gjOfi9TmlsHFwl8lfqyEh1R8XPOr4Taz
+Tvy9fDV6LY3Gc3whv+yMk8H3P1HdExQN3xaR5/rbS88Q+mrIA/AhSNt6TlU
eLE6pmbp9ab+zdmrHBmFk2XOzWSOberPjqqtE5Mwd4tiNmkGvkwKy/qFBl+/
7CxesgD3GttKfqLD8YyXRZLrcOjN7UOHWcUI73xndS+IE26Sy5LI4YE9vCeM
mwXgg8qCpFFhWMmv/9WKKPw/STERwg==
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
bhaADyoLkkaFYSW//lcrYvD/AKqTZ7I=
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
NwvAB5UESaPCsKJf/6sVUfh/chlHYw==
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEpmsbWwuypCzZ0lhK
KWTrj5Hse8ihMK4plYosZerar2vp/59zz7xf857znPd8znPeZ32f5/k98m4X
TrizsbCwMP6f/n7/81B4JxwUuj6Qv+1jbBipT5D/MR97aejn1Fnyv/OXCGsn
/LVs2LxCmG3HLgZf8RphG3utMj+F74T9iw+QK+6zGPy7fFbCYqeq6sq92Qgf
3XulekydnfClO4P1Yh9gq3hNNY5oDsIFdcNiz3/gJCxndmyfWBHMbD8X4dAr
jBbvIjgm2Xt/mBw3YVIlB5dOIpw85h9mtAyXl11IU3fYQrirQz8ooBamVfav
XxLlIbxCSrlY4AMzxw/ulaJ9ThPiJXwziv3pqBOsaH6Lal8Iy2309ujS4Cwq
30r+Hj7C9mrJZn3BsHfX08bBGrj/6dDCn3R4SaAmYm0PP+GO+a3W9r4wc37h
hs79X1XG4ELDto5nkgKEqQLXPFcsYAE/rQODkbBFSaKJexW8W1/9ZNMELDyz
XYwmJkjY+OSaDqcp/KA771e+ANjH6GaD4D34Ce2mhlQvHFhnqadLh5n/51bC
j6VLqgeOwN9ZrL67BMCHH5UVKWfDxXoKniptMP+21iDKNDy/UWsXyS1E2NJn
V8+iJGyXWXpPlAQfM33WMa4Ph6h2rrgfh29oub/JcoEFfES+XPOFv7zZGaUR
CUtLjE0lp8DM9QcHqqalplTA+Yrmr39qhXcLq8xm9sP7+upyn72H66TScmq+
wfKGHnGBG3A3VWlhlV+YMNlmwdFCGp7QUND+RRWWKV6jOu6FHbnvZ0qbwCJT
za3FJ2A9raOxgi6wqoXidpPzsH/54zjLUPhgePC6ZizM3H9g95x8trBcOHLc
LWG8BP7DfYlHpQbmzaM7m3bApg3TXgb98AA5hUP8Lezi67T6fApeul4m7rQA
C5E0pfu+w42Oyi2yfCKEAzwLGo+LwRTqfKurPPxbU0HQKRI8Vr8errYXpj/g
vjxuuMlHPm2JOAp7BdCfsNrAajJikh6uMHN/hjVrpXd+DIQbOmNH6VfgmW12
7ktx8McsnT0jqfDD/dpdBTlwqjst1bEAdjjUxMv4L9xu2ZwVXgtznWKtpLVt
ao9pZo15L3zvQZdoEhVOqORRaxyFHa9q2/85BWd8iGd9Nwub6I9ffMGAbyQ8
VC5l30a47NC3E0H8cDUl305dFLamxsUPyMDdIQf1zv4IM883+EjlrLnVXnj6
lp9hKRlWVeIeXz4ET6rOhWhawnanW83sbWEjdZc0Pxe4fE7qbqgn3POk6pEf
Ba6k+M/bB8NuXQq12uHwuJfq/vVYmERLLKtOgr1tua3OZMDpyut2LHfhINEs
lqR8OCd8KHRrGbzi6r8eUQWL8InXT9TDztdMp/XbYdka/yexPTC3LMfJ9gG4
z9V2dv4VzIwfYEe3j2OkKVgpiDVV5xv89Xz7ovYSbD83oqO8Du+elA7n5dhO
ONMigjHGC1uz6PaVC8OWGrkKARKwUYu1rJocHBqiNklVhhl04/tBJNgjnS1A
QBt23CIVfnsfXE5PnJYwgCVO1w8kmsKRnTZOjKNwIiWwyMEaNjOPf11hB4cN
hQiwuMB549Fuxj/DVeSf6Rd94GY1o79K/ODTw1XOg8GwSOnQOdplmBm/bar/
83Cj4A34hxFbA6FkOIqj+/mWDDg2tD2Yng0LxfqeHb0P/8fpakFDIZzzVM8h
tQw+4OV32+V3+KeBhCDlWtjWLEnoYxNs4S8UdqsDVksy7TPqgdfyOOQnX8Iv
SxrirlLhiscxshJvNn3fKbH44ANcJjOosGsSPjNSX18wAw9zxQ7LzMHvbBNj
45dheY637+fX4FoKadmaTZSwzszE2xJu2M1CtXCDf1N+arvnYRFY14uslSAO
M+NruEUxSoVFAT53djFYYycc05shaUuCrbPTpEM1YZrVYFK6DnyBdTWm6AD8
MN1fuMYAXhX0ILeYwAE1rTvazOFdDrodjcfhSw5kvd9PwjvGRNPz7GC9xZZ3
8c7wWISICuXMpvp8c68c84T7S17MK52H48Vfpiz5wr8l3vFq/RU+9Yoz7loY
zHb77qpZOGxMGnrBHg0fzH4vUhMHP6L09nsmbhqfhBDJbanwJ85bS9UZ8OiX
gkCb7E3zKcWTN5sL9zCmrsc8hJn3IzjzuUhtbhlcLPxV4sdKeEjFxzW/Gm4z
m78jXw9fjWp7k9EMb/gtK/N0wN1/REUHdsOndfS53vbCM4l9FeQBuHCkLT2H
Ci9WR9csvd7Uvzl7lSOjcLLMuZnMsU392VG1dWIS5m5RzCbNwJdJoVm/0ODr
l53FSxbgXmNbyU90OI7xskhyHQ65uX3oMKsY4Z3vrO4FcsJNclkSOTywh/eE
cbMAfFBZkDQqDCv59r9aEYX/B7c58H8=
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmcuOPSSrOtURSieTYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j53bh
pDsbCwsL4//p7/c/j7V3w8AHhRdN3/YzNgzVJsj/mI+9NOxz6iz53/lLhLUS
/1o2aF4hzLZzN4OveI2wjb1mmb/8d8IBxQfJFfdZ9P9dPithMeuqunJvNsLH
9l2pHlNjJ3zpzmC92AfYMkFDlSOGg3BB3bDY8x84CcuaHt8vVgQz289FOOwK
o8W7CI5N9j4QLstNmFTJwaVNgZPHAsINl+Hysgtpag5bCHd16AUH1sK0yv71
S6I8hFdIKRcLfGDm+MG9UrTPaUK8hG9Gsz8ddYIVzG5R7Qth2Y3eHh0anEXl
W8nfy0fYXjXZtC8E9u562jhYA/c/HVr4kw4vCdREru3lJ9wxv9XK3g9mzi/c
0Hngq/IYXGjQ1vFMUoAwVeCa54o5LOCveXAwCjYvoRi7V8F79NRONU3AwjPb
xWhigoSNTq1pc5rAD7rzfuULhH0MbzYI3oOf0G6qS/XCQXUWujp0mPl/biX8
WLqkeuAo/J3F8rtLIHzkUVmRUjZcrCvvqdwG829rDfadhuc3au2iuIUIW/js
7lmUhO0yS++JkuDjJs86xvXgUJXOFfcT8A1N9zdZLrCAj8iXa37wlze7otWj
YGmJsankFJi5/uAglbTUlAo4X8Hs9U+t8B5h5dnMfnh/X13us/dwnVRaTs03
WM7AIz5oA+6mKi6s8gsTJtssOJpLwxPq8lq/qMAyxWtUx32wI/f9TGljWGSq
ubX4JKyreSxO0AVWMVfYbnweDih/HG8RBh+KCFnXiIOZ+w/snpPPFp4LR427
JY6XwH+4L/Eo18C8eXRnkw7YpGHaS78fHiCncIi/hV38nFafT8FL18vEnRZg
IZKGdN93uNFRqWUHnwjhQM+CxhNisC91vtVVDv6tqSDYmgSP1a9HqO6D6Q+4
L48bbPLRT1sij8FegfQnrDawqoyYpIcrzNyfYY1a6V0fg+CGzrhR+hV4Zpud
+1I8/DFLe+9IKvzwgFZXQQ6c6k5LdSyAHQ438TL+C7dbNGdF1MJc1qyVtLZN
7THJrDHrhe896BJNosKJlTyqjaOw41Ut+z+n4IwPCazvZmFjvfGLLxjwjcSH
SqXs2wiXHf52MpgfrvbNt1MTha2o8QkDMnB36CHdsz/CzPMNPlo5a2a5D56+
5W9QSoZVFLnHlw/DkypzoRoWsN3pVlN7W9hQzSXN3wUun5O6G+YJ9zypeuTv
C1f6Bszbh8BuXfK1WhHwuJfKgfU4mESjlFUnwd623JZnMuB0pXU7lrtwsGgW
S1I+nBMxFLa1DF5xDViPrIJF+MTrJ+ph52sm03rt8I6agCdxPTD3Do5T7QNw
n6vt7PwrmBk/wI5uH8dIU7BiMGuq9jf46/n2Ra0l2H5uRFtpHd4zKR3By7Gd
cKZ5JGOMF7Zi0ekrF4Yt1HPlAyVgwxarHaqycFio6iRVCWbQje4Hk2CPdLZA
AS3YcYtUxO39cDmdMi2hD0ucrh+gmMBRnTZOjGMwxTeoyMEKNjVLeF1hB4cP
hQqwuMB54zFuRj/DVeSf6Rd94GZVw79K/OHTw1XOgyGwSOnQOdplmBm/bar/
83Cj4A34hxFbfaFkOJqj+/mWDDgurD2Eng0LxfmdHb0P/8fpakFDIZzzVNch
tQw+6OV/2+V3+KeBxGClWtjWNEnoYxNsHiAUfqsDVk0y6TPsgdfyOOQmX8Iv
Sxrir1LhisexOyTebPq+U2LxwQe4TGZQfvckfGakvr5gBh7mihuWmYPf2VLi
EpZhOY637+fX4Fpf0rIVmyhh7ZmJtyXcsJu5SuEG/6b81HbPIyKwjhdZM1Ec
ZsbXcItCtDKLPHzu7GKI+i44tjdD0pYEW2WnSYdpwDTLwaR0bfgC62ps0UH4
YXqAcI0+vCroQW4xhgNrWne2mcG7HXQ6Gk/AlxzIur+fgneOiabn2cG6iy3v
EpzhsUgRZd8zm+rzy71y3BPuL3kxr3geThB/mbLkB/9GuePV+its/Yoz/lo4
zHb77qppBGxEGnrBHgMfyn4vUhMPP/Lt7fekbBqfxFDJbanwJ85bS9UZ8OiX
giCb7E3zKcWTN5sL9zCmrsc+hJn3IzjzuUhtbhlcLPxV4sdKeEjZxzW/Gm4z
nb8jVw9fjW57k9EMb/gvK/F0wN1/RMcEdcOntfW43vbCM5S+CvIAXDjSlp5D
hRerY2qWXm/q35y98tFROFnm3Ezm2Kb+7KzaOjEJc7coZJNm4MuksKxfaPD1
y87iJQtwr5Gt5Cc6HM94WSS5Dofe3D50hFWM8K53lveCOOEm2SyJHB7Yw3vC
qFkAPqQkSBoVhhX9+l+tiML/A8Q4BfU=
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
hs288EEFPvKoACzv0/9qRQj+DxVFWOE=
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
ahaADykJkkaFYUW//lcrovD/AO9mm4k=
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0VdsfB3CzjKHMD5le5MYfL6lY1xBJJVLLLJRH6GV8pgZkSBkypWco
pZCpPx4yzyGLwnNVKhUZSnXN1zX0/7911ztf76y111mftdfZ49l7/7asy4UT
rixMTEz0/6e/3/88ZwJcql5+/UD+vo++YaA6Qf7HPKwlIZ9TZsn/zl8irBn/
dVm/eYUwy45ddJ6iNcJWthqlvnI/CPsVHSCX32fS+3f5zIRFTlXWlXmyED66
90r1mCor4Ut3ButFPsAWceoqbFFshPPrhkWe/cROWMbk2D6RQpjRfg7CIVfo
LZ6FcHSS5/5QGU7CpAo2Dq0EOGnML9RgGS4rvZCqareFcFeHbqB/LUyt6F+/
JMxFeIWUfDHfC2aMH9wrQf2cKsBN+GYk65NRB1je9BbFtgCW2ejt0abCmRSe
lbw9PIRtVZJM+oJgz64njYM1cP+ToYWXNHiJryZ8bQ8v4Y75rZa2PjBjfuGG
zv3flMbgAv22jqfifIQpfNfcV8xgPl+NA4MRsFlxgpFrJbxbV/Vk0wQsOLNd
hCrCT9jw5JoWuzH8oDv3dx5/2MvgZgP/PbiKelNNohcOqDPX0abBjP9zK+HH
ksXVA0fgH0wWP5z84cOPSgsVs+AiHTl3pTaYd1troPc0PL9RaxPBKUDY3GtX
z6I4bJNRck+YBB8zftoxrgsHK3euuB6Hb2i4vsl0gvm8hL5c84G/vNkZqRYB
S4qNTSUlw4z1Bwcop6Ykl8N58qavf2mFdwsqzWb0w/v66nKevofrJFKza77D
svpusQEbcDdFYWGVV5Aw2WrB3kwSnlCT0/xNGZYqWqPY74XtOe9nSBrBQlPN
rUUnYB2NozH8TrCymfx2o/OwX9njWPMQ+GBY0Lp6DMzYf2DX7DyW0Bw4Ytwl
frwY/st1iUupBubOpTkad8DGDdMeev3wADmZTfQt7OTjsPpsCl66XirqsAAL
kNQl+37AjfaKLdI8QoT93fMbj4vA3pT5VmdZ+I+m/MBTJHisfj1MZS9Me8B5
eVx/k4982hJ+FPbwp1UxW8EqUiLibs4wY3+G1Wsld34MgBs6Y0ZpV+CZbTau
S7Hwx0ytPSMp8MP9ml352XCKKzXFPh+2O9TETf8v3G7enBlWC3OcYq6gtm1q
j3FGjWkvfO9Bl3AiBY6v4FJpHIXtr2ravpyC0z/EMb+bhY10xy8+p8M34h8q
lrBuI1x66PuJQF642jvPRlUYtqTExg1Iwd3BB3XO/gwzzjf4SMWsqcVeePqW
r34JGVZW4BxfPgRPKs8Fq5vDNqdbTWytYQNVp1RfJ7hsTuJuiDvcU1X5yNcb
rvD2m7cNgl265Go1w+BxD+X96zEwiZpQWp0Ie1pzWpxJh9MU122Y7sKBwplM
iXlwdthQyNZSeMXZbz28EhbiEa2fqIcdrxlP67bD0jV+VTE9MKc028n2AbjP
2Xp2/hXMiB9ge5ePY6QpWCGQOUXrO/ztfPui5hJsOzeipbgO756UDONm2044
wyycPsYNWzJp95UJwuZqOXL+YrBBi6W0igwcEqwySVGE6TTD+4Ek2C2NxZ9P
E7bfIhF2ex9cRkuYFtODxU7XDyQYwxGdVg70o3CCd0ChnSVsYhr3utwGDh0K
5mNygnPHo1wMf4Uryb/SLnrBzSoGX4t94dPDlY6DQbBQydA56mWYEb9tqv/z
cCP/DfinEWs9gSQ4kq372ZZ0OCakPYiWBQvE+JwdvQ//x+FqfkMBnP1Exy6l
FD7g4Xvb6U/4l4H4QMVa2NokUeBjE2zmJxB6qwNWSTTuM+iB13LZZCdfwC+K
G2KvUuDyx9HSYm82fd8ptvjgA1wqNSi3axI+M1Jfnz8DD3PEDEvNwe+sE2Li
lmFZtrfv59fgWm/SsiWLMGGtmYm3xZywi5lywQbvpvyUdvfDQrC2B1kjXhRm
xNdwi3ykEpMcfO7sYpDaTji6N13cmgRbZqVKhqjDVIvBxDQt+ALzanThAfhh
mp9gjR68yu9GbjGC/Wtad7SZwrvstDsaj8OX7Mg6f56Ed4wJp+XawDqLLe/i
HOGxcCEl7zOb6vPJuXLMHe4vfj6vcB6OE32RvOQD/5Fwx6P1d/jUK/bYa6Ew
y+27qyZhsCFp6DlrFHww671QTSz8yLu33z1h0/jEB4tvS4E/sd9aqk6HR7/k
B1hlbZpPCa7c2Ry4hz51PfohzLgfwRnPhGpzSuEiwW9iP1fAQ0peznnVcJvJ
/B3ZevhqZNub9GZ4w3dZkasD7v4rMiqgGz6tpcvxtheeSegrJw/ABSNtadkU
eLE6qmbp9ab+zdkqHRmFk6TOzWSMberPjsqtE5MwZ4t8FmkGvkwKyfyNCl+/
7ChavAD3GlqLf6LBsfQXheLrcPDN7UOHmUUI73xncS+AHW6SyRTL5oLdPCcM
m/ngg4r8pFFBWMGn/9WKMPw/db/6Lg==
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk01dseB3CzjKHMVzLdyImLm1QsUySViJZZKJfQzXhNDciQMmRK11BK
IcPp4krHPIYsCtdxS6UiQ7l1zMcx9N5b573/1/uvtdd/fdZe/z3+996/Led+
4aQHGwsLC+Pf6T/v/z0nyjsH7tp1Nn3bz9gwUpvQt/mv+djLwz+nzxJm5i8R
1kr6Z9mweYUw287dDL7SNcK2DprkAPnvhANLD+pX3mcx+P/yWQmLnaquq/Bh
I3xs35WaMTV2wpfuDNaLfYCtEjVUOWI5CBfVDYs9/4GTsKzZ8f1iJTCz/VyE
w68wWnxK4LhUnwMRstyESVUcXNrJcOpYYITRMlxBvpCh5riFcFeHXkhQLUyr
6l+/JMpDeIWUdrHIF2aOH9wrRfucIcRL+GYM+9NRZ1jB/BbVoRiW3ejt0aHB
OVS+lcK9fIQdVFPN+kJhn66njYMUuP/p0MLfdHhJgBK1tpefcMf8VmsHf5g5
v3BD54GvymNwsWFbxzNJAcJUgWteKxawQIDmwcFo2KIs2cSjGt6jp2bTNAEL
z2wXo4kJEja2WdPmNIUfdBf8xhcE+xrdbBC8Bz+h3VSX6oWD6yx1degw8//c
SvixdFnNwFH4O4vVd9cg+MgjcolSLlyqK++l3Abzb2sN8ZuG5zdq7aO5hQhb
+u7uWZSE7bPL74mS4OOmzzrG9eAwlc4VjxPwDU2PNzmusICvyJdr/vCXN7ti
1KNhaYmxqdQ0mLn+4GCVjPS0SrhQwfz1z63wHmHl2ex+eH9fXf6z93CdVEYe
5RssZ+iZELwBd1MVF1b5hQnr2y44WUjDE+ryWr+qwDKla1SnfbAT9/1saRNY
ZKq5tfQkrKt5LF7QFVaxUNhuch4OrHicYBkOH4oMXdeIh5n7D+yRV8gWkQ9H
j7snjZfBf3ks8ShTYN4CuotpB2zaMO1t0A8P6KdxiL+FXf2dV59PwUvXyeLO
C7AQSUO67zvc6KTUsoNPhHCQV1HjCTHYjzrf6iYH/95UFHKKBI/Vr0eq7oPp
D7gvjxtu8tFPW6KOwd5B9CestrCqjJikpxvM3J9hjVrpXR+D4YbO+FH6FXhm
m73HUgL8MUd770g6/PCAVldRHpzuQUt3KoIdDzfxMv6A2y2bcyJrYa5TrFW0
tk3tMc2mmPfC9x50iaZQ4aQqHtXGUdjpqpbD31Nw1odE1nezsIne+MUXDPhG
0kOlcvZthMmHv50M4Ydr/Art1URha2pC4oAM3B12SPfsjzDzfIOPVs2aW+2D
p28FGJbrwyqK3OPLh+FJlbkwDUvY/nSrmYMdbKTmmhHgClfMSd0N94J7nlQ/
CvCDq/wC5x1CYfcu+VqtSHjcW+XAejxMoiWTa1JgHztuqzNZcKbSuj3LXThE
NIclpRDOixwK30qGV9wC16OqYRE+8fqJetjlmum0Xju8gxL4JL4H5t7BYdM+
APe52c3Ov4KZ8QPs5P5xjDQFK4awpmt/g7+eb1/UWoId5ka0ldbhPZPSkbwc
2wlnW0Qxxnhhaxadvgph2FI9Xz5IAjZqsd6hKguHh6lOUpVgBt34fggJ9sxk
CxLQgp22SEXe3g9X0JOnJQxgidP1A8mmcHSnrTPjGJzsF1ziaA2bmSe+rrSH
I4bCBFhc4YLxWHfjX+Bq/V/oF33hZlWjf8oC4NPD1S6DobBI+dA52mWYGb9t
qv/zcKPgDfiHETsDoVQ4hqP7+ZYsOD68PZSeCwvF+58dvQ//5Hy1qKEYznuq
65hOhg96B9x2/RP+eSApRKkWtjNLEfrYBFsECkXc6oBVU0z7jHrgtQIOucmX
8MuyhoSrVLjycdwOiTebvu+UWHzwASbLDMrvnoTPjNTXF83Aw1zxwzJz8Du7
5PjEZViO4+37+TW41o+0bM0mSlh7ZuJtGTfsbqFSvMG/KT+93euICKzjra+Z
JA4z42u4RSFGmUUePnd2MVR9FxzXmyVpR4KtczOkwzVgmtVgSqY2fIF1Na7k
IPwwM1CYYgCvCnrqt5jAQZTWnW3m8G5HnY7GE/AlR33dP23gnWOimQX2sO5i
y7tEF3gsSkTZ78ym+vzzrxz3gvvLXswrnocTxV+mLfnDvyff8W79DT71ijPh
WgTMdvvuqlkkbEwaesEeCx/KfS9CSYAf+fX2eyVvGp+kMMlt6fAnzltLNVnw
6JeiYNvcTfMpxVMwmw/3MKauxz2EmfcjOPu5SG0+GS4V/irxYxU8pOzrVlgD
t5nN35Grh6/GtL3JaoY3ApaVeDrg7r9iYoO74dPaelxve+GZ5L5K/QG4eKQt
M48KL9bEUpZeb+rfnIPy0VE4VebcTPbYpv7srN46MQlztyjkkmbgy6TwnF9p
8PXLLuJlC3CvsZ3kJzqcwHhZIrkOh93cPnSEVYzwrndW94I54SbZHIk8HtjT
Z8K4WQA+pCRIGhWGFf37X62Iwv8CZQ46rA==
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmcuOPCRXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j53bh
hDsbCwsL4//p7/c/z4UUndo7uotN3/YxNozUJsj/mI+9NOxz6iz53/lLhLUS
/1o2bF4hzLZzN4OveI2wjb1mmb/8d8IBxQfIFfdZDP5dPithsVNVdeXebISP
6lypHlNjJ3zpzmC92AfYKkFDlSOGg3BB3bDY8x84CcuaHdsnVgQz289FOOwK
o8W7CI5N9t4fLstNmFTJwaVNgZPHAsKNluHysgtpag5bCHd16AcH1sK0yv71
S6I8hFdIKRcLfGDm+MG9UrTPaUK8hG9Gsz8ddYIVzG9R7Qth2Y3eHl0anEXl
W8nfy0fYXjXZrC8E9u562jhYA/c/HVr4kw4vCdREru3lJ9wxv9Xa3g9mzi/c
0Ln/q/IYXGjY1vFMUoAwVeCa54oFLOCveWAwCrYooZi4V8F79NVONk3AwjPb
xWhigoSNT65pc5rCD7rzfuULhH2MbjYI3oOf0G6qS/XCQXWWerp0mPl/biX8
WLqkeuAI/J3F6rtLIHz4UVmRUjZcrCfvqdwG829rDfadhuc3au2iuIUIW/rs
7lmUhO0yS++JkuBjps86xvXhUJXOFffj8A1N9zdZLrCAj8iXa37wlze7otWj
YGmJsankFJi5/uAglbTUlAo4X8H89U+t8B5h5dnMfnhfX13us/dwnVRaTs03
WM7QIz5oA+6mKi6s8gsTJtssOFpIwxPq8lq/qMAyxWtURx3Ykft+prQJLDLV
3Fp8AtbTPBon6AKrWChsNzkPB5Q/jrcMgw9GhKxrxMHM/Qd2z8lnC8+Fo8bd
EsdL4D/cl3iUa2DePLqzaQds2jDtZdAPD5BTOMTfwi5+TqvPp+Cl62XiTguw
EElDuu873Oio1LKDT4RwoGdB43Ex2Jc63+oqB//WVBB8igSP1a9HqOrA9Afc
l8cNN/nIpy2RR2GvQPoTVhtYVUZM0sMVZu7PsEat9K6PQXBDZ9wo/Qo8s83O
fSke/pilvXckFX64X6urIAdOdaelOhbADoeaeBn/hdstm7MiamGuU6yVtLZN
7THNrDHvhe896BJNosKJlTyqjaOw41Ut+z+n4IwPCazvZmET/fGLLxjwjcSH
SqXs2wiXHfp2IpgfrvbNt1MTha2p8QkDMnB36EG9sz/CzPMNPlI5a26lA0/f
8jcsJcMqitzjy4fgSZW5UA1L2O50q5m9LWyk5pLm7wKXz0ndDfOEe55UPfL3
hSt9A+btQ2C3LvlarQh43Etl/3ocTKJRyqqTYG9bbqszGXC60rody104WDSL
JSkfzokYCttaBq+4BqxHVsEifOL1E/Ww8zXTaf12eEdNwJO4Hph7B8fJ9gG4
z9V2dv4VzIwfYEe3j2OkKVgxmDVV+xv89Xz7otYSbD83oq20Du+ZlI7g5dhO
ONMikjHGC1uz6PaVC8OW6rnygRKwUYv1DlVZOCxUdZKqBDPoxveDSbBHOlug
gBbsuEUq4vY+uJxOmZYwgCVO1w9QTOGoThsnxlGY4htU5GANm5knvK6wg8OH
QgVYXOC88Rg345/hKvLP9Is+cLOq0V8l/vDp4SrnwRBYpHToHO0yzIzfNtX/
ebhR8Ab8w4itgVAyHM3R/XxLBhwX1h5Cz4aF4vzOjt6H/+N0taChEM55queQ
WgYf8PK/7fI7/NNAYrBSLWxrliT0sQm2CBAKv9UBqyaZ9hn1wGt5HHKTL+GX
JQ3xV6lwxePYHRJvNn3fKbH44ANcJjMov3sSPjNSX18wAw9zxQ3LzMHvbClx
CcuwHMfb9/NrcK0vadmaTZSw9szE2xJu2M1CpXCDf1N+arvnYRFY14usmSgO
M+NruEUhWplFHj53djFEfRcc25shaUuCrbPTpMM0YJrVYFK6NnyBdTW26AD8
MD1AuMYAXhX0ILeYwIE1rTvbzOHdDrodjcfhSw5kvd9PwjvHRNPz7GC9xZZ3
Cc7wWKSIsu+ZTfX55V455gn3l7yYVzwPJ4i/TFnyg3+j3PFq/RU+9Yoz/lo4
zHb77qpZBGxMGnrBHgMfzH4vUhMPP/Lt7fekbBqfxFDJbanwJ85bS9UZ8OiX
giCb7E3zKcWTN5sL9zCmrsc+hJn3IzjzuUhtbhlcLPxV4sdKeEjZxzW/Gm4z
m78jVw9fjW57k9EMb/gvK/F0wN1/RMcEdcOntfW53vbCM5S+CvIAXDjSlp5D
hRerY2qWXm/q35y98pFROFnm3Ezm2Kb+7KzaOjEJc7coZJNm4MuksKxfaPD1
y87iJQtwr7Gt5Cc6HM94WSS5Dofe3D50mFWM8K53VveCOOEm2SyJHB7Yw3vC
uFkAPqgkSBoVhhX9+l+tiML/A+vyo0Q=
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
NwvAB5UFSaPCsJJf/6sVUfh/n4iSqg==
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
a8KoSQA+pCRIGhWGFX37Xq+Iwv8C1pUO1g==
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
adDCBx9R4CeNCcLy3gOvVoXhfwEKp7zM
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
qEkAPqQkSBoRhhV9+14vi8L/AwG7dE8=
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0ltkfB3C7rKHsI9km8sZgkorzWiKpROrY1zKEJuvYWpAlZcmWxlKk
kK1Bkn0PORTGa0qlIkuZeu2v19L/P+c983zNc849z/mce567Pvfe35VxuXDS
lYWJiYn+//TP+98n99ljR8ks1eZv++kb+ioT5H/Nw1oa8jlllvzf/CXCGvF/
L+s1rxBm2bmbzlO8RtjSRr3MV/Y7Yb/ig+SKe0y6/y2fmbDI6aq6ck8Wwsf2
XakeU2ElfOnOYL3IB9g8Tk2ZLYqNcEHdsMjzH9gJSxsf3y9SBDPaz0E45Aq9
xbMIjk7yPBAqzUmYVMnGoZkAJ435heovw+VlF1JVbLcQ7urQCfSvhamV/euX
hLkIr5CSLxZ4wYzxg3slqJ9TBbgJ34xkfTpqD8uZ3KLYFMLSG709WlQ4k8Kz
kr+Xh7CNcpJxXxDs2fW0cbAG7n86tPAXDV7iqwlf28tLuGN+q4WND8yYX7ih
88BXxTG4UK+t45k4H2EK3zX3FVOYz1f94GAEbFqSYOhaBe/RUTnVNAELzmwX
oYrwEzY4tabJbgTf7877jccf9tK/2cCfCz+h3lSV6IUD6sy0tWgw4//cSviR
ZEn1wFH4O5P5dyd/+MjDsiKFLLhYW9ZdsQ3m3dYa6D0Nz2/UWkdwChA289rd
sygOW2eU5gqT4ONGzzrGdeBgpc4V1xPwDXXXN5lOMJ+X0JdrPvCXN7siVSNg
SbGxqaRkmLH+4ACl1JTkCjhfzuT1z63wHkHF2Yx+eH9fXc6z93CdRGp2zTdY
Rs8tNmAD7qbIL6zyChImWy7YmUrCE6qyGr8qwVLFaxS7fbAd570MSUNYaKq5
tfgkrK1+LIbfCVYyldtueB72K38UaxYCHwoLWleLgRn7D+yanc8SmgNHjLvE
j5fAf7oucSnWwNx5NAejDtioYdpDtx8eICezib6FnXzsV59PwUvXy0TtF2AB
kppk33e40U6hZQePEGF/94LGEyKwN2W+1VkG/r2pIPA0CR6rXw9T3gfT7nNe
Htfb5KOftoQfgz38aU+YLWFlKRFxN2eYsT/DarWSuz4GwA2dMaO0K/DMNmvX
pVj4Y6bm3pEU+MEBja6CbDjFlZpiVwDbHm7ipv8Bt5s1Z4bVwhynmSupbZva
Y5RRY9IL597vEk6kwPGVXMqNo7DdVQ2bv6bg9A9xzO9mYUOd8Ysv6PCN+AcK
pazbCJcd/nYykBeu9s63VhGGLSixcQNScHfwIe2zP8KM8w0+WjlrYr4Pnr7l
q1dKhpXkOceXD8OTSnPBamawtWOrsY0VrK/ilOrrBJfPSdwNcYd7nlQ99PWG
K7395m2CYJcu2VqNMHjcQ+nAegxMoiaUVSfCnlac5mfS4TSFdWumu3CgcCZT
Yj6cHTYUsrUMXnH2Ww+vgoV4ROsn6mGHa0bTOu3wjhq/JzE9MOcOtlPtA3Cf
s9Xs/CuYET/Adi4fx0hTsHwgc4rmN/jr+fZFjSXYZm5EU2Ed3jMpGcbNtp1w
hmk4fYwbtmDS6isXhM1Uc2T9xWD9FosdytJwSLDyJEUBptMM7gWSYLc0Fn8+
Ddhui0TY7f1wOS1hWkwXFnOsH0gwgiM6Le3px+AE74AiWwvY2CTudYU1HDoU
zMfkBOeNR7kY/AJXkX+hXfSCm5X1/y7xhR2HqxwGg2Ch0qFz1MswI37bVP/n
4Ub+G/API1a6AklwJFv38y3pcExIexAtCxaI8Tk7eg/+yf5qQUMhnP1U2zal
DD7o4Xvb6TH880B8oEItbGWcKPCxCTb1Ewi91QErJxr16ffAa3lsMpMv4Zcl
DbFXKXDFo+gdYm82fd8ptnj/A1wmNSi7exI+M1JfXzADD3PEDEvNwe+sEmLi
lmEZtrfv59fgWm/SsgWLMGHNmYm3JZywi6lS4QbvpvyUdvcjQrCWB1k9XhRm
xNdwi1ykIpMsfO7sYpDqLji6N13cigRbZKVKhqjBVPPBxDRN+ALzanTRQfhB
mp9gjS68yu9GbjGE/Wtad7aZwLtttToaT8CXbMnaj0/BO8eE0/KsYe3Flndx
DvBYuJCi95lN9fnkXDnuDveXvJiXPw/Hib5MXvKBf0+449H6G3z6FXvstVCY
5fbdVeMw2IA09II1Cj6U9V6oJhZ+6N3b756waXzig8W3pcCf2G8tVafDo18K
AiyzNs2nBFfebA7cQ5+6Hv0AZtyP4IznQrU5ZXCx4FexHyvhIUUv5/xquM14
/o5MPXw1su1NejO84buswNUBd/8ZGRXQDTtq6nC87YVnEvoqyANw4UhbWjYF
XqyOqll6val/czaKR0fhJKlzMxljm/qzs2rrxCTM2SKXRZqBL5NCMn+lwtcv
O4iWLMC9Blbin2hwLP1lkfg6HHxz+9ARZhHCu96Z5waww03SmWLZXLCb54RB
Mx98SIGfNCoIy/v0v1oRhv8HWAtJbA==
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmcmMwScW5lkgqkTp2oQyhyTq2FmRJWbKlsZRS
yNYfI9n3kENhXFMq1ZWlTF37dW3////cM+/XvOc85z2f85z3Wd/neX6PnOvF
k25sLCwsjP+l/7//eX5q2JhmO0klf9/PWDdUGyf/Yz720tAvqTPkf+cvEtZK
+HvJoHmZMNvO3Qy+4lXC1naaZX7yG4T9iw+SKx6w6P+7fFbCYqer6sq92Agf
23e1mqrGTvjy3cF6sY+wZbyGKkc0B+GCumGxFz9wEpY1Pb5frAhmtp+LcOhV
RotXERyT7HUgTJabMKmSg0s7EU6m+ocZLsHlZRfT1Oy3EO7q0AsKqIVplf1r
l0V5CC+TUi4VeMPM8YN7pWhf0oR4Cd+KYn826ggrmN2m2BXCsuu9PTo0OIvC
t5y/l4+wnWqyaV8w7NX1rHGwBu5/NjT/Fx1eFKiJWN3LT7hjbquVnS/MnF+4
ofPAN2UqXGjQ1vFcUoAwReC6x7I5LOCneXAwEjYvSTR2q4L36KmdahqHhae3
i9HEBAkbnVrV5jSBH3bn/cYXAHsb3moQvA8/pd1Sl+qFA+ssdHXoMPP/3Er4
iXRJ9cBReIPFcsM5AD7yuKxIKRsu1pX3UG6D+be1BvlMwXPrtbaR3EKELbx3
9yxIwraZpfdFSfBxk+cdY3pwiErnstsJ+Kam29ssZ1jAW+TrdV/469tdUeqR
sLQEdTI5BWauPzhQJS01pQLOVzB783MrvEdYeSazH97fV5f7/ANcJ5WWU/Md
ljNwjwtch7spivMr/MKEydbzDubS8Li6vNavKrBM8SrFYR/swP0gU9oYFpls
bi0+CetqHosVdIZVzBW2G1+A/cufxFmEwofCg9c0YmHm/gO75eSzheXCkWOu
CWMl8J9uizzKNTBvHt3JpAM2aZjy1O+HB8gpHOLvYGdfx5UXk/DijTJxx3lY
iKQh3bcBNzootezgEyEc4FHQeEIM9qHMtbrIwb83FQSdJsHU+rVw1X0w/SH3
lTGDTT76eUvEMdgzgP6U1RpWlRGTdHeBmfszrFErvetTINzQGTtKvwpPb7N1
W4yDP2Vp7x1JhR8d0OoqyIFT3WipDgWw/eEmXsZ/4HaL5qzwWpjrNGslrW1T
e0wya8x64fsPu0STKHBCJY9q4yjscE3L7q9JOONjPOv7GdhYb+zSSwZ8M+GR
Uin7NsJlh7+fDOKHq33ybdVEYStKXPyADNwdckj33I8w83yDj1bOmFnug6du
+xmUkmEVRe6xpcPwhMpsiIYFbHum1dTOBjZUc07zc4bLZ6XuhXrAPU+rHvv5
wJU+/nN2wbBrl3ytVjg85qlyYC0WJtESy6qTYC8bbsuzGXC60potyz04SDSL
JSkfzgkfCt1aBi+7+K9FVMEifOL14/Ww03WTKb12eEeN/9PYHph7B8ep9gG4
z8VmZu41zIwfYAfXT1TSJKwYxJqq/R3+dqF9QWsRtpsd0VZag/dMSIfzcmwn
nGkewaDywlYsOn3lwrCFeq58gARs2GK1Q1UWDg1RnaAowQy60YMgEuyezhYg
oAU7bJEKv7MfLqcnTknowxJn6gcSTeDITmtHxjE40SewyN4KNjWLf1NhC4cN
hQiwOMN5Y9GuRr/AVeRf6Je84WZVw79L/OAzw1VOg8GwSOnQedoVmBm/bar/
y3Cj4E34hxEbfaFkOIqj+8WWDDg2tD2Yng0LxfqeG30A/+R4raChEM55pmuf
WgYf9PS74/wH/PNAQpBSLWxjmiT0qQk29xcKu90BqyaZ9Bn2wKt5HHITr+BX
JQ1x1yhwxZOYHRJvN33fKbHw8CNcJjMov3sCPjtSX18wDQ9zxQ7LzMLvbRJj
45dgOY53H+ZW4Vof0pIVmyhh7enxdyXcsKu5SuE6/6b81HaPIyKwjidZM0Ec
ZsbXcItClDKLPHz+3EKw+i44pjdD0oYEW2WnSYdqwDTLwaR0bfgi60pM0UH4
Ubq/cI0+vCLoTm4xhgNqWne2mcG77XU6Gk/Al+3Jun+cgndSRdPzbGHdhZb3
8U4wNUJE2efspvp8c68e94D7S17OKV6A48VfpSz6wr8n3vVs/Q0+/Zoz7noY
zHbn3oppOGxEGnrJHg0fyv4gUhMHP/bp7fdI3DQ+CSGS21Lhz5y3F6sz4NGv
BYHW2ZvmU4onbyYX7mFM3oh5BDPvR3DmC5Ha3DK4WPibxI+V8JCyt0t+Ndxm
OndXrh6+FtX2NqMZXvdbUuLpgLv/jIoO7IbPaOtxveuFpxP7KsgDcOFIW3oO
BV6ojq5ZfLOpf7N2ykdH4WSZ89OZ1E392Vm1dXwC5m5RyCZNw1dIoVm/0uAb
V5zES+bhXiMbyc90OI7xqkhyDQ65tX3oCKsY4V3vLe8HcsJNslkSOTywu9e4
UbMAfEhJkDQqDCv69r9eFoX/C1endlg=
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
qFkAPqQkSBoVhhV9+l+tiML/AwWeh9c=
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
mTRpEYAPKguSxoRhJf+BV6ui8L8ApQuNsg==
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/j91rnmpTN/Xmb/sYG0bqE+R/zMdeGvY5dZb87/wlwtqJ
fy0bNq8QZtuxi8FXvEbYxl6rzF/hO+GA4gPkivssBv8un5Ww2KmqunJvNsJH
916pHlNnJ3zpzmC92AfYKkFTjSOGg3BB3bDY8x84CcuZHdsnVgQz289FOOwK
o8W7CI5N9t4fLsdNmFTJwaVDgZPHAsKNluHysgtp6g5bCHd16AcH1sK0yv71
S6I8hFdIKRcLfGDm+MG9UrTPaUK8hG9Gsz8ddYIVzW9R7QthuY3eHl0anEXl
W8nfw0fYXi3ZrC8E9u562jhYA/c/HVr4kw4vCdREru3hJ9wxv9Xa3g9mzi/c
0Ln/q8oYXGjY1vFMUoAwVeCa54oFLOCvdWAwCrYooZi4V8G79dVPNk3AwjPb
xWhigoSNT67pcJrCD7rzfuULhH2MbjYI3oOf0G5qSPXCQXWWerp0mPl/biX8
WLqkeuAI/J3F6rtLIHz4UVmRcjZcrKfgqdIG829rDfadhuc3au2iuIUIW/rs
6lmUhO0yS++JkuBjps86xvXhUNXOFffj8A0t9zdZLrCAj8iXa37wlzc7ozWi
YGmJsankFJi5/uAg1bTUlAo4X9H89U+t8G5hldnMfnhfX13us/dwnVRaTs03
WN7QIz5oA+6mKi2s8gsTJtssOFpIwxMaCtq/qMIyxWtUx72wI/f9TGkTWGSq
ubX4BKyndTRO0AVWtVDcbnIeDih/HG8ZBh+MCFnXjIOZ+w/snpPPFp4LR427
JY6XwH+4L/Go1MC8eXRn0w7YtGHay6AfHiCncIi/hV38nFafT8FL18vEnRZg
IZKmdN93uNFRuUWWT4RwoGdB43Ex2Jc63+oqD//WVBB8igSP1a9HqO2F6Q+4
L48bbvKRT1sij8JegfQnrDawmoyYpIcrzNyfYc1a6Z0fg+CGzrhR+hV4Zpud
+1I8/DFLZ89IKvxwv3ZXQQ6c6k5LdSyAHQ418TL+C7dbNmdF1MJcp1graW2b
2mOaWWPeC9970CWaRIUTK3nUGkdhx6va9n9OwRkfEljfzcIm+uMXXzDgG4kP
lUvZtxEuO/TtRDA/XO2bb6cuCltT4xMGZODu0IN6Z3+EmecbfKRy1txqLzx9
y9+wlAyrKnGPLx+CJ1XnQjUtYbvTrWb2trCRukuavwtcPid1N8wT7nlS9cjf
F670DZi3D4HduhRqtSPgcS/V/etxMIlGKatOgr1tua3OZMDpyut2LHfhYNEs
lqR8OCdiKGxrGbziGrAeWQWL8InXT9TDztdMp/XbYdmagCdxPTC3LMfJ9gG4
z9V2dv4VzIwfYEe3j2OkKVgpmDVV5xv89Xz7ovYSbD83oqO8Du+elI7g5dhO
ONMikjHGC1uz6PaVC8OWGrkKgRKwUYu1rJocHBaqNklVhhl04/vBJNgjnS1Q
QBt23CIVcXsfXE6nTEsYwBKn6wcopnBUp40T4yhM8Q0qcrCGzcwTXlfYweFD
oQIsLnDeeIyb8c9wFfln+kUfuFnN6K8Sf/j0cJXzYAgsUjp0jnYZZsZvm+r/
PNwoeAP+YcTWQCgZjubofr4lA44Law+hZ8NCcX5nR+/D/3G6WtBQCOc81XNI
LYMPePnfdvkd/mkgMVi5FrY1SxL62ARbBAiF3+qA1ZJM+4x64LU8DvnJl/DL
kob4q1S44nGsrMSbTd93Siw++ACXyQwq7JqEz4zU1xfMwMNcccMyc/A7W0pc
wjIsz/H2/fwaXOtLWrZmEyWsMzPxtoQbdrNQLdzg35Sf2u55WATW9SJrJYrD
zPgablGMVmFRgM+dXQzR2AnH9mZI2pJg6+w06TBNmGY1mJSuA19gXY0tOgA/
TA8QrjGAVwU9yC0mcGBN6442c3iXg25H43H4kgNZ7/eT8I4x0fQ8O1hvseVd
gjM8Fimi4ntmU31+uVeOecL9JS/mlc7DCeIvU5b84N8od7xaf4VPveKMvxYO
s92+u2oWARuThl6wx8AHs9+L1MTDj3x7+z0pm8YnMVRyWyr8ifPWUnUGPPql
IMgme9N8SvHkzebCPYyp67EPYeb9CM58LlKbWwYXC3+V+LESHlLxcc2vhtvM
5u/I18NXo9veZDTDG/7LyjwdcPcf0TFB3fBpHX2ut73wDKWvgjwAF460pedQ
4cXqmJql15v6N2evcmQUTpY5N5M5tqk/O6q2TkzC3C2K2aQZ+DIpLOsXGnz9
srN4yQLca2wr+YkOxzNeFkmuw6E3tw8dZhUjvPOd1b0gTrhJLksihwf28J4w
bhaADyoLkkaFYSW//lcrovD/ALxntec=
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Mx9spMhPGhOEFXz7X68Kw/8DXeEN2g==
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/Dy1mLtvMcaDp2z7GhpH6BPkf87GXhn1OnSX/O3+JsHbi
X8uGzSuE2XbsYvAVrxG2sdcq81f4Tjig+AC54j6Lwb/LZyUsdqqqrtybjfDR
vVeqx9TZCV+6M1gv9gG2StBU44jhIFxQNyz2/AdOwnJmx/aJFcHM9nMRDrvC
aPEugmOTvfeHy3ETJlVycOlQ4OSxgHCjZbi87EKausMWwl0d+sGBtTCtsn/9
kigP4RVSysUCH5g5fnCvFO1zmhAv4ZvR7E9HnWBF81tU+0JYbqO3R5cGZ1H5
VvL38BG2V0s26wuBvbueNg7WwP1Phxb+pMNLAjWRa3v4CXfMb7W294OZ8ws3
dO7/qjIGFxq2dTyTFCBMFbjmuWIBC/hrHRiMgi1KKCbuVfBuffWTTROw8Mx2
MZqYIGHjk2s6nKbwg+68X/kCYR+jmw2C9+AntJsaUr1wUJ2lni4dZv6fWwk/
li6pHjgCf2ex+u4SCB9+VFaknA0X6yl4qrTB/Ntag32n4fmNWrsobiHClj67
ehYlYbvM0nuiJPiY6bOOcX04VLVzxf04fEPL/U2WCyzgI/Llmh/85c3OaI0o
WFpibCo5BWauPzhINS01pQLOVzR//VMrvFtYZTazH97XV5f77D1cJ5WWU/MN
ljf0iA/agLupSgur/MKEyTYLjhbS8ISGgvYvqrBM8RrVcS/syH0/U9oEFplq
bi0+AetpHY0TdIFVLRS3m5yHA8ofx1uGwQcjQtY142Dm/gO75+SzhefCUeNu
ieMl8B/uSzwqNTBvHt3ZtAM2bZj2MuiHB8gpHOJvYRc/p9XnU/DS9TJxpwVY
iKQp3fcdbnRUbpHlEyEc6FnQeFwM9qXOt7rKw781FQSfIsFj9esRanth+gPu
y+OGm3zk05bIo7BXIP0Jqw2sJiMm6eEKM/dnWLNWeufHILihM26UfgWe2Wbn
vhQPf8zS2TOSCj/cr91VkAOnutNSHQtgh0NNvIz/wu2WzVkRtTDXKdZKWtum
9phm1pj3wvcedIkmUeHESh61xlHY8aq2/Z9TcMaHBNZ3s7CJ/vjFFwz4RuJD
5VL2bYTLDn07EcwPV/vm26mLwtbU+IQBGbg79KDe2R9h5vkGH6mcNbfaC0/f
8jcsJcOqStzjy4fgSdW5UE1L2O50q5m9LWyk7pLm7wKXz0ndDfOEe55UPfL3
hSt9A+btQ2C3LoVa7Qh43Et1/3ocTKJRyqqTYG9bbqszGXC68rody104WDSL
JSkfzokYCttaBq+4BqxHVsEifOL1E/Ww8zXTaf12WLYm4ElcD8wty3GyfQDu
c7WdnX8FM+MH2NHt4xhpClYKZk3V+QZ/Pd++qL0E28+N6Civw7snpSN4ObYT
zrSIZIzxwtYsun3lwrClRq5CoARs1GItqyYHh4WqTVKVYQbd+H4wCfZIZwsU
0IYdt0hF3N4Hl9Mp0xIGsMTp+gGKKRzVaePEOApTfIOKHKxhM/OE1xV2cPhQ
qACLC5w3HuNm/DNcRf6ZftEHblYz+qvEHz49XOU8GAKLlA6do12GmfHbpvo/
DzcK3oB/GLE1EEqGozm6n2/JgOPC2kPo2bBQnN/Z0fvwf5yuFjQUwjlP9RxS
y+ADXv63XX6HfxpIDFauhW3NkoQ+NsEWAULhtzpgtSTTPqMeeC2PQ37yJfyy
pCH+KhWueBwrK/Fm0/edEosPPsBlMoMKuybhMyP19QUz8DBX3LDMHPzOlhKX
sAzLc7x9P78G1/qSlq3ZRAnrzEy8LeGG3SxUCzf4N+WntnseFoF1vchaieIw
M76GWxSjVVgU4HNnF0M0dsKxvRmStiTYOjtNOkwTplkNJqXrwBdYV2OLDsAP
0wOEawzgVUEPcosJHFjTuqPNHN7loNvReBy+5EDW+/0kvGNMND3PDtZbbHmX
4AyPRYqo+J7ZVJ9f7pVjnnB/yYt5pfNwgvjLlCU/+DfKHa/WX+FTrzjjr4XD
bLfvrppFwMakoRfsMfDB7PciNfHwI9/efk/KpvFJDJXclgp/4ry1VJ0Bj34p
CLLJ3jSfUjx5s7lwD2PqeuxDmHk/gjOfi9TmlsHFwl8lfqyEh1R8XPOr4Taz
+Tvy9fDV6LY3Gc3whv+yMk8H3P1HdExQN3xaR5/rbS88Q+mrIA/AhSNt6TlU
eLE6pmbp9ab+zdmrHBmFk2XOzWSOberPjqqtE5Mwd4tiNmkGvkwKy/qFBl+/
7CxesgD3GttKfqLD8YyXRZLrcOjN7UOHWcUI73xndS+IE26Sy5LI4YE9vCeM
mwXgg8qCpFFhWMmv/9WKKPw/+B1a6w==
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
J4xb+OGDigLkMSFYwW/g1YoI/C8jrheI
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Zj74oBI/aVQIVvTtf7UiAv8PV9YCIg==
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk01dseB3CzjKHMVzLdyImLm1SsY4ikEskyC+USuhmvqQEZUoZM6RpK
KWTq4krmOdOicB23KBUZyq1jPo6h99467/2/3n+tvf7rs/b67/G/9/5tGZdL
p11ZmJiY6P9O/3n/7+n1ZwvvtBwlfztI39RXmSR3/9c8rCUhn1PmCDPylwlr
xP+zote0Sphl9146T9E6YStb9VJf2e+E/YoOk8sfMun+f/nMhEUsK2vLPFkI
nzhwrWpchZXwlXuDdSIfYPM4NWW2KDbC+bXDIt0/sBOWNj55UKQQZrSfg3DI
NXqzZyEcneR5KFSakzCpgo1DMwFOGvcL1V+By0ovparYbSPc2a4T6F8DUyv6
N64IcxFeJSVfzveCGeMH90pQP6cKcBO+Hcn6fMwBljO5Q7EtgKU3e3u0qHAm
hWc1bz8PYVvlJOO+INiz83nDYDXc/3xo8W8avMxXHb6+n5dw+8J2C1sfmDG/
cH3Hoa+K43CBXmv7C3E+whS+G+6rpjCfr/rhwQjYtDjB0LUS3qejcqZxEhac
3SlCFeEnbHBmXZPdCH7Ulfsbjz/spX+7nv8B/Ix6W1WiFw6oNdPWosGM/3M7
4aeSxVUDx+HvTObfnfzhY09KCxWy4CJtWXfFVph3R0ug9wy8sFljE8EpQNjM
a2/Pkjhsk1HyQJgEnzR60T6hAwcrday6noJvqbuOZjrBfF5CX274wF9G90Sq
RsCSYuPTSckwY/3BAUqpKcnlcJ6cyZufW+B9gopzGf3wwb7anBfv4VqJ1Ozq
b7CMnltswCbcRZFfXOMVJEy2WrQ3lYQnVWU1flWCpYrWKfYHYHvOhxmShrDQ
dFNL0WlYW/1EDL8TrGQqt9PwIuxX9jTWLAQ+Eha0oRYDM/Yf2DU7jyU0B46Y
cImfKIb/cl3mUqyGuXNpjkbtsFH9jIduPzxATmYTfQs7+TisdU/DyzdLRR0W
YQGSmmTfd7jBXqF5F48QYX/3/IZTIrA3ZaHFWQb+vTE/0JIEj9dthCkfgGmP
OK9O6G3x8U/bwk/AHv60Z8xWsLKUiLibM8zYn2G1Gsk9HwPg+o6YMdo1eHaH
jetyLPwxU3P/SAr8+JBGZ342nOJKTbHPh+2ONnLT/4DbzJoyw2pgDkvmCmrr
lvYYZVSb9MIPHnUKJ1Lg+Aou5YYx2P66hu3f03D6hzjmd3Owoc7E5Zd0+Fb8
Y4US1h2ES49+Ox3IC1d559moCMMWlNi4ASm4K/iI9vkfYcb5Bh+vmDMxPwDP
3PHVKyHDSvKcEytH4Sml+WA1M9jmbIuxrTWsr+KU6usEl81L3A9xh3ueVT7x
9YYrvP0WbINgl07ZGo0weMJD6dBGDEyiJpRWJcKe1pzm59LhNIUNG6b7cKBw
JlNiHpwdNhSyvRRedfbbCK+EhXhE6ybrYMcbRjM6bfCuar9nMT0w5y62M20D
cJ+z9dzCa5gRP8D2Lh/HSdOwfCBziuY3+OvFtiWNZdh2fkRTYQPeNyUZxs22
k3CGaTh9nBu2YNLqKxOEzVRzZP3FYP1mi13K0nBIsPIURQGm0wweBpJgtzQW
fz4N2H6bRNjdg3AZLWFGTBcWO1s3kGAER3RYOdBPwAneAYV2FrCxSdybchs4
dCiYj8kJzp2IcjH4Ba4k/0K77AU3Kev/U+wLnx2udBwMgoVKhi5Qr8KM+G1L
/Z+HG/hvwT+MWOsKJMGRbF3d29LhmJC2IFoWLBDjc37sIfyTw/X8+gI4+7m2
XUopfNjD967Tn/DPA/GBCjWwtXGiwMdG2NRPIPROO6ycaNSn3wOv57LJTL2C
XxXXx16nwOVPo3eJjW75vkNs6dEHuFRqUHbvFHxupK4ufxYe5ogZlpqH31kn
xMStwDJsb98vrMM13qQVCxZhwpqzk2+LOWEXU6WCTd4t+Slt7seEYC0Psnq8
KMyIr+FmuUhFJln4wvmlINU9cHRvurg1CbbISpUMUYOp5oOJaZrwJea16MLD
8OM0P8FqXXiN343cbAj7V7fsbjWB99pptTecgq/YkbX/PAPvHhdOy7WBtZea
38U5wuPhQore57bU55Nz7aQ73F/8ckH+Ihwn+ip52Qf+PeGeR8tvsOVr9tgb
oTDL3ftrxmGwAWnoJWsUfCTrvVB1LPzEu7ffPWHL+MQHi+9IgT+x31muSofH
vuQHWGVtmU8Jrty5HLiHPn0z+jHMuB/BGd1CNTmlcJHgV7EfK+AhRS/nvCq4
1XjhnkwdfD2ydTS9Cd70XVHgaoe7/oqMCuiCz2rqcLzthWcT+srJA3DBSGta
NgVeqoqqXn6zpX/ztorHx+AkqQuzGeNb+rO7cvvkFMzZLJdFmoWvkkIyf6XC
N686ihYvwr0G1uKfaHAs/VWh+AYcfHvn0DFmEcJ73pk/CGCHG6UzxbK5YDfP
SYMmPviIAj9pTBCW9+l/vSoM/wuj5iVN
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmcmMwScW5lkgqkTp2oQyhyTq2FmRJcWVLYyml
kK1Bkn0PORTGNaVSkaVMXft1Lf3/c+6Z92vec57zns95zvus7/M8v0fO9fxx
NzYWFhbG/9M/73+fpcei0b1cz8jf9jLWDdXGyf+aj70k9HPKDPm/+YuEtRL+
XjJoWibMtn0ng69olbC1nWapn/x3wv5F+8nl91j0/1s+K2Gxk5W1ZV5shI/s
uVw1qsZO+OLtgTqxD7BlvIYqRzQH4fzaIbHnP3ASljU9ulesEGa2n4tw6GVG
s1chHJPktS9MlpswqYKDS5sCJ436hxkuwWWl51PV7DcR7mzXCwqogWkVfWsX
RXkIL5OSL+R7w8zxg3ukaJ9ThXgJ34hifzriCCuY3aTaFcCy6z3dOjQ4k8q3
nLebj7CdapJpbzDs1fm0YaAa7ns6OP8XHV4UqI5Y3c1PuH1us5WdL8ycX7i+
Y99X5VG4wKC1/ZmkAGGqwFWPZXNYwE9z/0AkbF5MMXarhHfpqZ1oHIeFp7eK
0cQECRudWNXmNIHvd+X+xhcAexveqBe8Cz+h3VCX6oEDay10degw8//cTPiR
dHFV/2H4O4vld+cA+NDD0kKlLLhIV95DuRXm39IS5DMFz63X2EZyCxG28N7Z
vSAJ22aU3BUlwUdNnrWP6cEhKh3Lbsfg65pubzKdYQFvkS9XfeEvb3ZEqUfC
0hKjk0nJMHP9wYEqqSnJ5XCegtnrn1vgXcLKMxl98N7e2pxn7+FaqdTs6m+w
nIF7XOA63EVVnF/hFyZMtp53MJeGx9XltX5VgWWKVqkOe2AH7nsZ0sawyGRT
S9FxWFfzSKygM6xirrDV+BzsX/YoziIUPhAevKYRCzP3H9gtO48tLAeOHHNN
GCuG/3Rb5FGuhnlz6U4m7bBJ/ZSnfh/cT07mEH8LO/s6rjyfhBevlYo7zsNC
JA3p3u9wg4NS8zY+EcIBHvkNx8RgH+pci4sc/HtjftBJEjxatxauugem3+e+
NGawwYc/bYo4AnsG0J+wWsOqMmKS7i4wc3+GNWqkd3wMhOs7Ykfol+HpLbZu
i3Hwx0zt3cMp8IN9Wp352XCKGy3FIR+2P9jIy/gDbrNoygyvgblOslbQWje0
xySj2qwHvnu/UzSRCidU8Kg2jMAOV7Ts/pqE0z/Es76bgY31xi68YMDXEx4o
lbBvIVx68NvxIH64yifPVk0UtqLGxffLwF0hB3TP/Agzzzf4cMWMmeUeeOqm
n0EJGVZR5B5bOghPqMyGaFjAtqdaTO1sYEM151Q/Z7hsVupOqAfc/aTyoZ8P
XOHjP2cXDLt2ytdohcNjnir71mJhEo1SWpUIe9lwW55Oh9OU1mxZ7sBBopks
iXlwdvhg6OZSeNnFfy2iEhbhE68br4OdrppM6bXB26r9n8R2w9zbOE609cO9
LjYzc69gZvwAO7h+HCVNwopBrCna3+Cv59oWtBZhu9lhbaU1eNeEdDgvx1bC
GeYRjFFe2IpFp7dMGLZQz5EPkIANm622qcrCoSGqE1QlmEE3uhdEgt3T2AIE
tGCHTVLht/bCZXTKlIQ+LHGqrp9iAkd2WDsyjsAUn8BCeyvY1Cz+dbktHDYY
IsDiDOeORbsa/QJXkn+hX/CGm1QN/y72g08NVToNBMMiJYNnaZdgZvy2of7P
Qw2C1+Efhm30hZLgKI6u55vS4djQtmB6FiwU63tm5B78k+OV/PoCOPuprn1K
Kbzf0++W82P45/6EIKUa2MY0UehjI2zuLxR2sx1WTTTpNeyGV3M55CZewi+L
6+OuUOHyRzHbJN5s+L5DYuH+B7hUZkB+5wR8eriuLn8aHuKKHZKZhd/ZUGLj
l2A5jrfv51bhGh/SkhWbKGHt6fG3xdywq7lKwTr/hvyUNo9DIrCOJ1kzQRxm
xtdws0KUMos8fPbMQrD6DjimJ13ShgRbZaVKh2rANMuBxDRt+DzrSkzhfvhB
mr9wtT68IuhObjaGA6pbtreawTvtddobjsEX7cm6j0/A20dF03JtYd2F5nfx
TvBohIiyz+kN9fnmXD7qAfcVv5hTPAfHi79MXvSFf6fc9mz5DT75ijPuahjM
duvOimk4bEQafMEeDR/Iei9SHQc/9Onp86BsGJ+EEMktKfAnzpuLVenwyJf8
QOusDfMpxZM7kwN3MyavxTyAmfcjOOO5SE1OKVwk/FXixwp4UNnbJa8KbjWd
uy1XB1+Jan2T3gSv+y0p8bTDXX9GRQd2wae09bje9sDTlN5ycj9cMNyalk2F
F6qiqxdfb+jfrJ3y4RE4SebsdMbohv5sr9w8PgFzNytkkabhS6TQzF9p8LVL
TuLF83CPkY3kJzocx3hZKLkGh9zYOniIVYzwjneWdwM54UbZTIlsHtjda9yo
SQA+oCRIGhGGFX37Xi2Lwv8DDAtHeA==
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
TBg3C8CHlARJo8Kwon//qxVR+F+9259G
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk0ltkfB3C7rKHsg2wTeWMwScV5LZFUIjl2oQyhyTq2FmRJWbKlsZRS
yNZgJPsecijkNaVSkaVMvfbXa+n/n/Oeeb7mOeee53zOPc9dn3vv78q6nj/h
xsLExET/f/rn/e9j9tJKR0BXrfnbPvqGgeoE+V/zsJaGfk6dJf83f4mwZsLf
y/rNK4RZduyi8xSvEba20yjzk/tO2L/4ALniHpPef8tnJixiVVVX7sVC+Oje
y9VjqqyEL94erBf5AFvEq6uwRbMRLqgbFnn2AzthGZNj+0SKYEb7OQiHXqa3
eBXBMcle+8NkOAmTKtk4tBLh5DH/MINluLzsfJqq/RbCXR26QQG1MLWyf/2i
MBfhFVLKhQJvmDF+cK8E9XOaADfhG1GsT0YdYXnTmxS7Qlhmo7dHmwpnUXhW
8vfwELZTSTbpC4a9up40DtbA/U+GFv6iwUt8NRFre3gJd8xvtbTzhRnzCzd0
7v+qNAYX6rd1PBXnI0zhu+qxYgbz+WkcGIyEzUoSjdyq4N26qiebJmDBme0i
VBF+woYn17TYjeH73Xm/8QTA3gY3Gvjvwo+pN9QkeuHAOnMdbRrM+D+3En4k
WVI9cAT+zmTx3TkAPvywrEgxGy7WkfNQaoN5t7UG+UzD8xu1tpGcAoTNvXf1
LIrDtpmld4VJ8DHjpx3junCIcueK23H4uobbmyxnmM9b6MtVX/jLm51RapGw
pNjYVHIKzFh/cKByWmpKBZwvb/r651Z4t6DSbGY/vK+vLvfpe7hOIi2n5hss
q+8eF7gBd1MUFlZ5BQmTrRcczCThCTU5zV+VYaniNYrDXtiB816mpBEsNNXc
WnwC1tE4GsvvDCubyW83Ogf7lz+KMw+FD4YHr6vHwoz9B3bLyWcJy4Ujx10T
xkvgl25LXEo1MHcezcm4AzZumPbU64cHyClsom9hZ1/H1WdT8NK1MlHHBViA
pC7Z9x1udFBskeYRIhzgUdB4XAT2ocy3usjCvzcVBFmR4LH69XCVvTDtPuel
cf1NPvJpS8RR2DOA9pjZGlaREhF3d4EZ+zOsXiu582Mg3NAZO0q7DM9ss3Vb
ioM/ZmntGUmFH+zX7CrIgVPdqKkOBbD9oSZu+h9wu3lzVngtzGHFXElt29Qe
48wa01747v0u4SQKnFDJpdI4Cjtc0bT7awrO+BDP/G4WNtIdv/CcDl9PeKBY
yrqNcNmhbyeCeOFqn3xbVWHYkhIXPyAFd4cc1DnzI8w43+AjlbOmFnvh6Zt+
+qVkWFmBc3z5EDypPBeibg7bnmo1sbOBDVSd0/yc4fI5iTuhHnDP46qHfj5w
pY//vF0w7NolV6sZDo97Ku9fj4VJ1MSy6iTYy4bT4nQGnK64bst0Bw4SzmJK
yodzwodCt5bBKy7+6xFVsBCPaP1EPex01Xhatx2WrvF/HNsDc0qznWwfgPtc
bGbnX8GM+AF2cP04RpqCFYKYU7W+wV/PtS9qLsF2cyNaiuvw7knJcG627YQz
zSLoY9ywJZN2X7kgbK6WKxcgBhu0WEqryMChISqTFEWYTjO8F0SC3dNZAvg0
YYctEuG39sHltMRpMT1Y7FT9QKIxHNlp7Ug/Cif6BBbZW8ImpvGvK2zhsKEQ
PiZnOG882tXwF7iK/AvtgjfcrGLwd4kffGq4ymkwGBYqHTpLvQQz4rdN9X8e
buS/Dv8wYqMnkAxHsXU/25IBx4a2B9OyYYFY3zOj9+CfHK8UNBTCOU907FPL
4AOefrec/4R/HkgIUqyFbUySBD42wWb+AmE3O2CVJOM+gx54LY9NdvIF/KKk
Ie4KBa54FCMt9mbT951ii/c/wGVSg3K7JuHTI/X1BTPwMEfssNQc/M4mMTZ+
GZZle/t+fg2u9SEtW7IIE9aamXhbwgm7mikXbvBuyk9t9zgsBGt7kjUSRGFG
fA23yEcpMcnBZ88sBqvthGN6M8RtSLBldppkqDpMtRhMSteCzzOvxhQdgB+k
+wvW6MGr/O7kFiM4oKZ1R5spvMteu6PxOHzRnqzz50l4x5hwep4trLPY8i7e
CR6LEFLyOb2pPt/cy8c84P6S5/MK5+B40RcpS77w74m3PVt/g61escddDYNZ
bt1ZNQmHDUlDz1mj4YPZ74Vq4uCHPr39HombxichRHxbKvyJ/eZSdQY8+qUg
0Dp703xKcOXN5sI99KlrMQ9gxv0IznwmVJtbBhcLfhX7sRIeUvJ2ya+G20zm
b8vWw1ei2t5kNMMbfsuKXB1w98uo6MBu+JSWLsfbXngmsa+CPAAXjrSl51Dg
xeromqXXm/o3Z6d0ZBROljo7kzm2qT87qrZOTMKcLfLZpBn4Eik061cqfO2S
k2jJAtxraCP+iQbH0V8Uia/DITe2Dx1mFiG8853F3UB2uEkmSyyHC3b3mjBs
5oMPKvKTRgVhBd/+VyvC8P8A5fAfgw==
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmcuOPSSrOtUSiROrYhTKEJuvYWpAlZcmWxlJK
Icvtj5Hse8ihMK4plYosZerar2vp/59zz7xf857znPd8znPeZ32f5/k9cm4X
TrizsbCwMP6f/n7/8wh1vKdVmH8if9vP2DBUmyD/Yz72srDPabPkf+cvEdZK
/GvZoHmFMNvO3Qy+kjXCNvaaFH/574QDSg6SK+6z6P+7fFbCYqeq6sq92Qgf
3XelekyNnfClO4P1Yh9gqwQNVY4YDsKFdcNiz3/gJCxremy/WDHMbD8X4bAr
jBbvYjg2xftAuCw3YVIlB5d2EpwyFhBuuAyXUy6kqzlsIdzVoRccWAvTKvvX
L4nyEF4hpV4s9IGZ4wf3StE+pwvxEr4Zzf501AlWMLtFtS+CZTd6e3RocDaV
b6VgLx9he9UU074Q2LvraeNgDdz/dGjhTzq8JFATubaXn3DH/FZrez+YOb9w
Q+eBr8pjcJFBW8czSQHCVIFrnisWsIC/5sHBKNiiNMnYvQreo6d2smkCFp7Z
LkYTEyRsdHJNm9MEftCd/ytfIOxjeLNB8B78hHZTXaoXDqqz1NWhw8z/cyvh
x9Kl1QPm8HcWq+8ugfCRR5RipRy4RFfeU7kN5t/WGuw7Dc9v1NpFcQsRtvTZ
3bMoCdtlld0TJcHHTJ51jOvBoSqdK+7H4Rua7m+yXWABH5Ev1/zgL292RatH
wdISY1MpqTBz/cFBKulpqRVwgYLZ659a4T3CyrNZ/fD+vrq8Z+/hOqn03Jpv
sJyBR3zQBtxNVVxY5RcmTLZZcLSQhifU5bV+UYFlStaojvtgR+77WdLGsMhU
c2vJCVhX82icoAusYqGw3fg8HFD+ON4yDD4UEbKuEQcz9x/YPbeALTwPjhp3
Sxwvhf9wX+JRroF58+nOJh2wScO0l34/PEBO5RB/C7v4Oa0+n4KXrlPEnRZg
IZKGdN93uNFRqWUHnwjhQM/CxuNisC91vtVVDv6tqTD4FAkeq1+PUN0H0x9w
Xx432GTzT1sij8JegfQnrDawqoyYpIcrzNyfYY1a6V0fg+CGzrhR+hV4Zpud
+1I8/DFbe+9IGvzwgFZXYS6c5k5LcyyEHQ438TL+C7dbNmdH1MJcp1graW2b
2mOSVWPWC9970CWaTIUTK3lUG0dhx6ta9n9OwZkfEljfzcLGeuMXXzDgG4kP
lcrYtxGmHP52IpgfrvYtsFMTha2p8QkDMnB36CHdsz/CzPMNNq+cNbPaB0/f
8jcoI8Mqitzjy4fhSZW5UA1L2O50q6m9LWyo5pLu7wKXz0ndDfOEe55UPfL3
hSt9A+btQ2C3LvlarQh43EvlwHocTKIlUaqTYW9bbqszmXCG0rody104WDSb
JbkAzo0YCttKgVdcA9Yjq2ARPvH6iXrY+ZrJtF47vKMm4ElcD8y9g+Nk+wDc
52o7O/8KZsYPsKPbxzHSFKwYzJqm/Q3+er59UWsJtp8b0VZah/dMSkfwcmwn
nGURyRjjha1ZdPrKhWFL9Tz5QAnYsMV6h6osHBaqOklVghl0o/vBJNgjgy1Q
QAt23CIVcXs/XE5PmpbQhyVO1w8kmcBRnTZOjKNwkm9QsYM1bGqW8LrCDg4f
ChVgcYHzx2PcjH6Gq8g/0y/6wM2qhn+V+sOnh6ucB0NgkbKhc7TLMDN+21T/
5+FGwRvwDyO2+kIpcDRH9/MtmXBcWHsIPQcWivM7O3of/o/T1cKGIjj3qa5D
GgU+6OV/2+V3+KeBxGClWtjWNFnoYxNsESAUfqsDVk026TPsgdfyOeQmX8Iv
Sxvir1LhisexOyTebPq+U2LxwQeYIjMov3sSPjNSX184Aw9zxQ3LzMHvbJPi
EpZhOY637+fX4Fpf0rI1myhh7ZmJt6XcsJuFStEG/6b8tHbPIyKwjhdZM1Ec
ZsbXcItCtDKLPHzu7GKI+i44tjdT0pYEW+ekS4dpwDSrweQMbfgC62ps8UH4
YUaAcI0+vCroQW4xhgNrWne2mcG7HXQ6Go/DlxzIur+fhHeOiWbk28G6iy3v
EpzhsUgRZd8zm+rzy7tyzBPuL30xr3geThB/mbrkB/+WdMer9Vf41CvO+Gvh
MNvtu6umEbARaegFewx8KOe9SE08/Mi3t98zadP4JIZKbkuDP3HeWqrOhEe/
FAbZ5GyaTyme/Nk8uIcxdT32Icy8H8FZz0Vq8yhwifBXiR8r4SFlH9eCarjN
dP6OXD18NbrtTWYzvOG/rMTTAXf/ER0T1A2f1tbjetsLzyT1VZAH4KKRtoxc
KrxYHVOz9HpT/+bslc1H4RSZczNZY5v6s7Nq68QkzN2ikEOagS+TwrJ/ocHX
LzuLly7AvUa2kp/ocDzjZbHkOhx6c/vQEVYxwrveWd0L4oSbZLMlcnlgD+8J
o2YB+JCSIGlUGFb063+1Igr/D6Qg64g=
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
zAcfVOQnjQrCCj79r1aE4f8BSJtFbw==
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk01dseB3CzjKHMVzLdyImLm1QsUySVSC2zUC6hm/GaGpAhxZEpXUMp
hUw9XMk8hywK13GLUpGh3Drm4xh6767z3v973n+tvf7rs/b67/G/9/5tObeL
J93ZWFhY6P9J/7z/95BHdX4657jU9G0/fdNIbVI/6b/mYy8N+5w6R5iRv0xY
K/HvFcPmVcJsO3fT+YrXCdvYa5b5y38nHFB8UL/iAYvB/5fPSljsdFVduTcb
4WP7rlaPq7ETvnx3sF7sA2yVoKHKEcNBuKBuWOzFD5yEZc2O7xcrghnt5yIc
dpXe4l0ExyZ7HwiX5SZMquTg0ibDyeMB4UYrcHnZxTQ1hy2Euzr0ggNrYWpl
/8ZlUR7Cq6SUSwU+MGP84F4p6uc0IV7Ct6LZn405wQrmtyn2hbDsZm+PDhXO
ovCt5u/lI2yvmmzWFwJ7dz1rHKyB+58NLf5Fg5cFaiLX9/IT7ljYam3vBzPm
F27oPPBVeRwuNGzreC4pQJgicN1z1QIW8Nc8OBgFW5SQTdyr4D16aqeaJmHh
2e1iVDFBwsan1rU5TeGH3Xm/8QXCPka3GgTvw0+pt9SleuGgOktdHRrM+D+3
En4iXVI9cBT+zmL13SUQPvK4rEgpGy7WlfdUboP5t7UG+87AC5u1dlHcQoQt
fXb3LEnCdpml90VJ8HHT5x0TenCoSueq+wn4pqb7aJYLLOAj8uW6H/xldFe0
ehQsLTE+nZwCM9YfHKSSlppSAecrmL/5uRXeI6w8l9kP7++ry33+Hq6TSsup
+QbLGXrEB23C3RTFxTV+YcL6NouOFtLwpLq81q8qsEzxOsVxH+zI/SBT2gQW
mW5uLT4J62oeixN0gVUsFLabXIADyp/EW4bBhyJCNjTiYMb+A7vn5LOF58JR
E26JEyXwn+7LPMo1MG8ezdm0AzZtmPEy6IcH9FM4xN/CLn5Oay+m4eUbZeJO
i7AQSUO67zvc6KjUsoNPhHCgZ0HjCTHYl7LQ6ioH/95UEHyaBI/Xb0So7oNp
D7mvTBgy+einLZHHYK9A2lNWG1hVRkzSwxVm7M+wRq30ro9BcENn3BjtKjy7
zc59OR7+mKW9dyQVfnRAq6sgB051p6Y6FsAOh5t46f+C2y2bsyJqYa7TrJXU
Nqb2mGbWmPfC9x92iSZR4MRKHtXGMdjxmpb9X9NwxocE1ndzsInexKWXdPhm
4iOlUvZthMsOfzsZzA9X++bbqYnC1pT4hAEZuDv0kO65H2HG+QYfrZwzt9oH
z9z2NyzVh1UUuSdWDsNTKvOhGpaw3ZlWM3tb2EjNJc3fBS6fl7oX5gn3PK16
7O8LV/oGLNiHwG5d8rVaEfCEl8qBjTiYRCWXVSfB3rbcVmcz4HSlDTuWe3Cw
aBZLUj6cEzEUtrUMXnUN2IisgkX4xOsn62Hn66Yzeu3wjpqAp3E9MPcOjlPt
A3Cfq+3cwmuYET/Ajm4fx0nTsGIwa6r2N/jrhfYlrWXYfn5EW2kD3jMlHcHL
sZ1wpkUkfZwXtmbR6SsXhi3Vc+UDJWCjFusdqrJwWKjqFEUJptOMHwSTYI90
tkABLdhxi1TEnf1wOY08I2EAS5ypHyCbwlGdNk70YzDZN6jIwRo2M094U2EH
hw+FCrC4wHkTMW7Gv8BV+r/QLvnAzapGf5f4w2eGq5wHQ2CR0qHz1CswI35j
qv/zcKPgTfiHEVsDoWQ4mqP7xZYMOC6sPYSWDQvF+Z0bewD/5HStoKEQznmm
65BaBh/08r/j8gf880BisFItbGuWJPSxCbYIEAq/3QGrJpn2GfXA63kcclOv
4FclDfHXKHDFk9gdEqNM33dKLD38AJfJDMrvnoLPjtTXF8zCw1xxwzLz8Dtb
clzCCizH8fb9wjpc60tasWYTJaw9O/m2hBt2s1Ap3ORnyk9t9zwiAut46Wsm
isOM+BpuUYhWZpGHz59bClHfBcf2ZkjakmDr7DTpMA2YajWYlK4NX2Rdiy06
CD9KDxCuMYDXBD30W0zgwJrWnW3m8G4HnY7GE/BlB33dP07BO8dF0/PsYN2l
lncJzvB4pIiy71mm+vxyrx73hPtLXi4oXoATxF+lLPvBv5PverX+Bp9+zRl/
PRxmu3NvzSwCNiYNvWSPgQ9lvxepiYcf+/b2e5KZxicxVHJbKvyJ8/ZydQY8
9qUgyCabaT6lePLmcuEe+vSN2Ecw434EZ74Qqc0tg4uFv0r8WAkPKfu45lfD
bWYLd+Xq4WvRbaMZzfCm/4oSTwfc/Wd0TFA3fEZbj+ttLzxL7qvQH4ALR9rS
cyjwUnVMzfIbpv7N2ysfHYOTZc7PZo4z9Wdn1dbJKZi7RSGbNAtfIYVl/UqF
b1xxFi9ZhHuNbSU/0eB4+qsiyQ049Nb2oSOsYoR3vbO6H8QJN8lmSeTwwB7e
k8bNAvAhJUHSmDCs6Nf/elUU/jfl+W+B
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
bhaADyoLkkaFYSW//lcrovB/Af2n+Uk=
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
0rCFDz6syE8aE4QV/AZerQrD/wKLdWbO
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
E0ZN/PAhJQHSiBCs6Nv3ekUE/i/VS5ib
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
uFkAPqgsSBoVhpX8+l+tiML/A3yIdE8=
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
bOGDDyvyk8YEYQWfgVerwvD/AM2vMO0=
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmcmMwScW5lkgqkTp2oQyhso6tBVlSXNnSWEop
ZGswkn0PORTGNaVSkaVMXft1Lf3/c+6Z92vec57zns95zvus7/M8v0fO9cJx
NzYWFhbG/9M/73+fGl6NV/znh8nf9jLWDdXGyf+aj70k9HPKDPm/+YuEtRL+
XjJoWibMtn0ng69olbC1nWapn/x3wv5F+8nl91n0/1s+K2Gxk5W1ZV5shI/s
uVI1qsZO+NKdgTqxD7BlvIYqRzQH4fzaIbHnP3ASljU9ulesEGa2n4tw6BVG
s1chHJPktS9MlpswqYKDS5sCJ436hxkuwWWlF1LV7DcR7mzXCwqogWkVfWuX
RHkIL5OSL+Z7w8zxg3ukaJ9ThXgJ34xifzriCCuY3aLaFcCy6z3dOjQ4k8q3
nLebj7CdapJpbzDs1fm0YaAa7ns6OP8XHV4UqI5Y3c1PuH1us5WdL8ycX7i+
Y99X5VG4wKC1/ZmkAGGqwDWPZXNYwE9z/0AkbF5MMXarhHfpqZ1oHIeFp7eK
0cQECRudWNXmNIEfdOX+yhcAexverBe8Bz+h3VSX6oEDay10degw8//cTPix
dHFV/2H4O4vld+cA+NCj0kKlLLhIV95DuRXm39IS5DMFz63X2EZyCxG28N7Z
vSAJ22aU3BMlwUdNnrWP6cEhKh3LbsfgG5pubzKdYQFvkS/XfOEvb3ZEqUfC
0hKjk0nJMHP9wYEqqSnJ5XCegtnrn1vgXcLKMxl98N7e2pxn7+FaqdTs6m+w
nIF7XOA63EVVnF/hFyZMtp53MJeGx9Xltc6rwDJFq1SHPbAD9/0MaWNYZLKp
peg4rKt5JFbQGVYxV9hqfA72L3scZxEKHwgPXtOIhZn7D+yWnccWlgNHjrkm
jBXDf7ot8ihXw7y5dCeTdtikfspTvw/uJydziL+FnX0dV55PwovXS8Ud52Eh
koZ073e4wUGpeRufCOEAj/yGY2KwD3WuxUUO/q0xP+gkCR6tWwtX3QPTH3Bf
HjPY4MOfNkUcgT0D6E9YrWFVGTFJdxeYuT/DGjXSOz4GwvUdsSP0K/D0Flu3
xTj4Y6b27uEU+OE+rc78bDjFjZbikA/bH2zkZfwOt1k0ZYbXwFwnWStorRva
Y5JRbdYD33vQKZpIhRMqeFQbRmCHq1p2f03C6R/iWd/NwMZ6YxdfMOAbCQ+V
Sti3EC49+O14ED9c5ZNnqyYKW1Hj4vtl4K6QA7pnfoSZ5xt8uGLGzHIPPHXL
z6CEDKsoco8tHYQnVGZDNCxg21MtpnY2sKGac6qfM1w2K3U31APuflL5yM8H
rvDxn7MLhl075Wu0wuExT5V9a7EwiUYprUqEvWy4LU+nw2lKa7Ysd+Eg0UyW
xDw4O3wwdHMpvOzivxZRCYvwideN18FO10ym9NrgbdX+T2K7Ye5tHCfa+uFe
F5uZuVcwM36AHVw/jpImYcUg1hTtb/DXc20LWouw3eywttIavGtCOpyXYyvh
DPMIxigvbMWi01smDFuo58gHSMCGzVbbVGXh0BDVCaoSzKAb3Q8iwe5pbAEC
WrDDJqnw23vhMjplSkIfljhV108xgSM7rB0ZR2CKT2ChvRVsahb/utwWDhsM
EWBxhnPHol2NfoEryb/QL3rDTaqGfxf7waeGKp0GgmGRksGztMswM37bUP/n
oQbBG/APwzb6QklwFEfX803pcGxoWzA9CxaK9T0zch/+yfFqfn0BnP1U1z6l
FN7v6Xfb+Q/45/6EIKUa2MY0UehjI2zuLxR2qx1WTTTpNeyGV3M55CZewi+L
6+OuUuHyxzHbJN5s+L5DYuHBB7hUZkB+5wR8eriuLn8aHuKKHZKZhd/ZUGLj
l2A5jrfv51bhGh/SkhWbKGHt6fG3xdywq7lKwTr/hvyUNo9DIrCOJ1kzQRxm
xtdws0KUMos8fPbMQrD6DjimJ13ShgRbZaVKh2rANMuBxDRt+ALrSkzhfvhh
mr9wtT68IuhObjaGA6pbtreawTvtddobjsGX7Mm6f5yAt4+KpuXawroLze/i
neDRCBFln9Mb6vPNuXLUA+4rfjGneA6OF3+ZvOgL/0a549nyK3zyFWfctTCY
7fbdFdNw2Ig0+II9Gj6Q9V6kOg5+5NPT50HZMD4JIZJbUuBPnLcWq9LhkS/5
gdZZG+ZTiid3JgfuZkxej3kIM+9HcMZzkZqcUrhI+KvEjxXwoLK3S14V3Go6
d0euDr4a1fomvQle91tS4mmHu/6Mig7sgk9p63G97YGnKb3l5H64YLg1LZsK
L1RFVy++3tC/WTvlwyNwkszZ6YzRDf3ZXrl5fALmblbIIk3Dl0mhmedp8PXL
TuLF83CPkY3kJzocx3hZKLkGh9zcOniIVYzwjneW9wI54UbZTIlsHtjda9yo
SQA+oCRIGhGGFX37Xi2Lwv8DXKaP0Q==
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
zQLwQWVB0qgwrOTX/2pFFP4flA7jow==
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
WvjgQ4r8pDFBWMFv4NWqMPw/DA415A==
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/z6jD4O6UFxrN3/YxNozUJ8j/mI+9NOxz6iz53/lLhLUT
/1o2bF4hzLZjF4OveI2wjb1Wmb/Cd8IBxQfIFfdZDP5dPithsVNVdeXebISP
7r1SPabOTvjSncF6sQ+wVYKmGkcMB+GCumGx5z9wEpYzO7ZPrAhmtp+LcNgV
Rot3ERyb7L0/XI6bMKmSg0uHAiePBYQbLcPlZRfS1B22EO7q0A8OrIVplf3r
l0R5CK+QUi4W+MDM8YN7pWif04R4Cd+MZn866gQrmt+i2hfCchu9Pbo0OIvK
t5K/h4+wvVqyWV8I7N31tHGwBu5/OrTwJx1eEqiJXNvDT7hjfqu1vR/MnF+4
oXP/V5UxuNCwreOZpABhqsA1zxULWMBf68BgFGxRQjFxr4J366ufbJqAhWe2
i9HEBAkbn1zT4TSFH3Tn/coXCPsY3WwQvAc/od3UkOqFg+os9XTpMPP/3Er4
sXRJ9cAR+DuL1XeXQPjwo7Ii5Wy4WE/BU6UN5t/WGuw7Dc9v1NpFcQsRtvTZ
1bMoCdtllt4TJcHHTJ91jOvDoaqdK+7H4Rta7m+yXGABH5Ev1/zgL292RmtE
wdISY1PJKTBz/cFBqmmpKRVwvqL5659a4d3CKrOZ/fC+vrrcZ+/hOqm0nJpv
sLyhR3zQBtxNVVpY5RcmTLZZcLSQhic0FLR/UYVliteojnthR+77mdImsMhU
c2vxCVhP62icoAusaqG43eQ8HFD+ON4yDD4YEbKuGQcz9x/YPSefLTwXjhp3
Sxwvgf9wX+JRqYF58+jOph2wacO0l0E/PEBO4RB/C7v4Oa0+n4KXrpeJOy3A
QiRN6b7vcKOjcossnwjhQM+CxuNisC91vtVVHv6tqSD4FAkeq1+PUNsL0x9w
Xx433OQjn7ZEHoW9AulPWG1gNRkxSQ9XmLk/w5q10js/BsENnXGj9CvwzDY7
96V4+GOWzp6RVPjhfu2ughw41Z2W6lgAOxxq4mX8F263bM6KqIW5TrFW0to2
tcc0s8a8F773oEs0iQonVvKoNY7Cjle17f+cgjM+JLC+m4VN9McvvmDANxIf
KpeybyNcdujbiWB+uNo3305dFLamxicMyMDdoQf1zv4IM883+EjlrLnVXnj6
lr9hKRlWVeIeXz4ET6rOhWpawnanW83sbWEjdZc0fxe4fE7qbpgn3POk6pG/
L1zpGzBvHwK7dSnUakfA416q+9fjYBKNUladBHvbcludyYDTldftWO7CwaJZ
LEn5cE7EUNjWMnjFNWA9sgoW4ROvn6iHna+ZTuu3w7I1AU/iemBuWY6T7QNw
n6vt7PwrmBk/wI5uH8dIU7BSMGuqzjf46/n2Re0l2H5uREd5Hd49KR3By7Gd
cKZFJGOMF7Zm0e0rF4YtNXIVAiVgoxZrWTU5OCxUbZKqDDPoxveDSbBHOlug
gDbsuEUq4vY+uJxOmZYwgCVO1w9QTOGoThsnxlGY4htU5GANm5knvK6wg8OH
QgVYXOC88Rg345/hKvLP9Is+cLOa0V8l/vDp4SrnwRBYpHToHO0yzIzfNtX/
ebhR8Ab8w4itgVAyHM3R/XxLBhwX1h5Cz4aF4vzOjt6H/+N0taChEM55queQ
WgYf8PK/7fI7/NNAYrByLWxrliT0sQm2CBAKv9UBqyWZ9hn1wGt5HPKTL+GX
JQ3xV6lwxeNYWYk3m77vlFh88AEukxlU2DUJnxmpry+YgYe54oZl5uB3tpS4
hGVYnuPt+/k1uNaXtGzNJkpYZ2bibQk37GahWrjBvyk/td3zsAis60XWShSH
mfE13KIYrcKiAJ87uxiisROO7c2QtCXB1tlp0mGaMM1qMCldB77AuhpbdAB+
mB4gXGMArwp6kFtM4MCa1h1t5vAuB92OxuPwJQey3u8n4R1joul5drDeYsu7
BGd4LFJExffMpvr8cq8c84T7S17MK52HE8Rfpiz5wb9R7ni1/gqfesUZfy0c
Zrt9d9UsAjYmDb1gj4EPZr8XqYmHH/n29ntSNo1PYqjktlT4E+etpeoMePRL
QZBN9qb5lOLJm82FexhT12Mfwsz7EZz5XKQ2twwuFv4q8WMlPKTi45pfDbeZ
zd+Rr4evRre9yWiGN/yXlXk64O4/omOCuuHTOvpcb3vhGUpfBXkALhxpS8+h
wovVMTVLrzf1b85e5cgonCxzbiZzbFN/dlRtnZiEuVsUs0kz8GVSWNYvNPj6
ZWfxkgW419hW8hMdjme8LJJch0Nvbh86zCpGeOc7q3tBnHCTXJZEDg/s4T1h
3CwAH1QWJI0Kw0p+/a9WROH/ATMksPA=
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
sIkfPqQoQB4RghV8+l6viMD/Aw8uLw4=
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
bhaADyoLkkaFYSW//lcrovD/AJcNBgo=
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
xAcfUuAnjQjC8t59r1eE4f8BUx+x1Q==
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
9B0zbxaDd2uIU0YkYfWAvheLUvD/AHzLsAs=
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
E0ZNAvAhJUHSqDCs6Nv3ZkUU/hcVrAAx
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Zj74oAI/aVQQlvfpf7UiDP8POetslA==
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Fj74iAI/aUwQlvcZeLUqDP8PUZe+nA==
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk01VkcB3C7rKHsg2yDvBhMUnGeJZJKpI5dKENoso6tBVlSlmxpLKUU
sjUYyb6HHArjmVKpyFKmnv15lmbmvDP/r/mfc8//fM49/7v+772/K+t6/rgb
CxMTE/2f9O/7v2ftt1ylbpUfmr/upW8Yqk2Q/zMPa2nop9RZ8v/zlwhrJfy1
bNC8Qphlx046T/EaYWs7zTI/uW+E/Yv3kyvuMen/v3xmwiInq+rKvVgIH9lz
uXpMjZXwxduD9SLvYct4DVW2aDbCBXXDIs++YycsY3p0r0gRzGg/B+HQy/QW
ryI4JtlrX5gMJ2FSJRuHdiKcPOYfZrgMl5edT1Oz30K4q0MvKKAWplb2r18U
5iK8Qkq5UOANM8YP7pWgfkoT4CZ8I4r1yagjLG92k2JXCMts9PboUOEsCs9K
/m4ewnaqyaZ9wbBX15PGwRq4/8nQwp80eImvJmJtNy/hjvmtVna+MGN+4YbO
fV+Ux+BCg7aOp+J8hCl8Vz1WzGE+P839g5GweUmisVsVvEtP7UTTBCw4s12E
KsJP2OjEmja7CXy/O+8XngDY2/BGA/9d+DH1hrpELxxYZ6GrQ4MZ/+dWwo8k
S6oHDsPfmCy/OQfAhx6WFSlmw8W6ch7KbTDvttYgn2l4fqPWNpJTgLCF986e
RXHYNrP0rjAJPmrytGNcDw5R6VxxOwZf13R7neUM83kLfb7qC39+rRSlHglL
io1NJafAjPUHB6qkpaZUwPnyZq9+bIV3CSrPZvbDe/vqcp++g+sk0nJqvsKy
Bu5xgRtwN0VhYZVXkDDZesHBXBKeUJfT+lkFlipeozjsgR0472VKGsNCU82t
xcdhXc0jsfzOsIq5/Hbjc7B/+aM4i1D4QHjwukYszNh/YLecfJawXDhy3DVh
vAT+w22JS7kG5s6jOZl0wCYN0576/fAAOYVN9A3s7Ou4+mwKXrpWJuq4AAuQ
NCT7vsGNDoot0jxChAM8ChqPicA+lPlWF1n416aCoJMkeKx+PVx1D0y7z3lp
3GCTD3/cEnEE9gygPWa2hlWlRMTdXWDG/gxr1EoqfQiEGzpjR2mX4Zlttm5L
cfCHLO3dI6nwg31aXQU5cKobNdWhALY/2MRN/w1ut2jOCq+FOU4yV1LbNrXH
JLPGrBe+e79LOIkCJ1RyqTaOwg5XtOz+nIIz3sczv52FjfXGLzynw9cTHiiW
sm4jXHbw6/EgXrjaJ99WTRi2osTFD0jB3SEHdM98DzPON/hw5ayZ5R54+qaf
QSkZVlHgHF8+CE+qzIVoWMC2p1pN7WxgQzXnND9nuHxO4k6oB9zzuOqhnw9c
6eM/bxcMu3bJ1WqFw+OeKvvWY2ESNbGsOgn2suG0PJ0Bpyuu2zLdgYOEs5iS
8uGc8KHQrWXwiov/ekQVLMQjWj9RDztdNZnWa4ela/wfx/bAnNJsJ9oH4D4X
m9n5lzAjfoAdXD+MkaZghSDmVO2v8Jdz7YtaS7Dd3Ii24jq8a1IynJttO+FM
8wj6GDdsxaTTVy4IW6jnygWIwYYtVtKqMnBoiOokRRGm04zuBZFg93SWAD4t
2GGLRPitvXA5LXFaTB8WO1U/kGgCR3ZaO9KPwIk+gUX2VrCpWfyrCls4bCiE
j8kZzhuPdjX6Ca4i/0S74A03qxr+VeIHnxquchoMhoVKh85SL8GM+G1T/Z+G
G/mvw9+N2OgLJMNRbN3PtmTAsaHtwbRsWCDW98zoPfgHxysFDYVwzhNd+9Qy
eL+n3y3n3+EfBxKCFGthG9MkgQ9NsLm/QNjNDlg1yaTPsAdey2OTnXwBvyhp
iLtCgSsexUiLvd70fafY4v33cJnUoNzOSfj0SH19wQw8zBE7LDUHv7VJjI1f
hmXZ3rybX4NrfUjLVizChLVnJt6UcMKu5iqFG7yb8lPbPQ4JwTqeZM0EUZgR
X8Mt8lHKTHLw2TOLwepKcExvhrgNCbbKTpMM1YCploNJ6drweebVmKL98IN0
f8EafXiV353cYgwH1LTuaDODd9rrdDQegy/ak3V/PwHvGBNOz7OFdRdb3sY7
wWMRQso+pzfV55t7+agH3F/yfF7hHBwv+iJlyRf+NfG2Z+sv8MmX7HFXw2CW
W3dWTcNhI9LQc9Zo+ED2O6GaOPihT2+/R+Km8UkIEd+WCn9kv7lUnQGPfi4I
tM7eNJ8SXHmzuXAPfepazAOYcT+CM58J1eaWwcWCX8S+r4SHlL1d8qvhNtP5
27L18JWottcZzfCG37IiVwfc/UdUdGA3fEpbj+NNLzyT2FdBHoALR9rScyjw
YnV0zdKrTf2bs1M+PAonS52dyRzb1J8dVVsnJmHOFvls0gx8iRSa9TMVvnbJ
SbRkAe41shH/SIPj6C+KxNfhkBvbhw4xixBWemt5N5AdbpLJEsvhgt29Joya
+eADivykUUFYwbf/5Yow/Dcv/H0u
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
GTNtFIH3q4qSRsThbf69b5Yl4f8BOqd8Hw==
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
qFkAPqQkSBoVhhV9+1+tiML/A/aNTjk=
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
uFkAPqgsSBoVgZX8+l+tiMH/A8bRVxg=
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Zj74oCI/aVQQVvDpf7UiDP8NfqbzbQ==
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/zyHRZCNP/XHyt32MDSP1CfI/5mMvDfucOkv+d/4SYe3E
v5YNm1cIs+3YxeArXiNsY69V5q/wnXBA8QFyxX0Wg3+Xz0pY7FRVXbk3G+Gj
e69Uj6mzE750Z7Be7ANslaCpxhHDQbigbljs+Q+chOXMju0TK4KZ7eciHHaF
0eJdBMcme+8Pl+MmTKrk4NKhwMljAeFGy3B52YU0dYcthLs69IMDa2FaZf/6
JVEewiuklIsFPjBz/OBeKdrnNCFewjej2Z+OOsGK5reo9oWw3EZvjy4NzqLy
reTv4SNsr5Zs1hcCe3c9bRysgfufDi38SYeXBGoi1/bwE+6Y32pt7wcz5xdu
6Nz/VWUMLjRs63gmKUCYKnDNc8UCFvDXOjAYBVuUUEzcq+Dd+uonmyZg4Znt
YjQxQcLGJ9d0OE3hB915v/IFwj5GNxsE78FPaDc1pHrhoDpLPV06zPw/txJ+
LF1SPXAE/s5i9d0lED78qKxIORsu1lPwVGmD+be1BvtOw/MbtXZR3EKELX12
9SxKwnaZpfdESfAx02cd4/pwqGrnivtx+IaW+5ssF1jAR+TLNT/4y5ud0RpR
sLTE2FRyCsxcf3CQalpqSgWcr2j++qdWeLewymxmP7yvry732Xu4Tiotp+Yb
LG/oER+0AXdTlRZW+YUJk20WHC2k4QkNBe1fVGGZ4jWq417Ykft+prQJLDLV
3Fp8AtbTOhon6AKrWihuNzkPB5Q/jrcMgw9GhKxrxsHM/Qd2z8lnC8+Fo8bd
EsdL4D/cl3hUamDePLqzaQds2jDtZdAPD5BTOMTfwi5+TqvPp+Cl62XiTguw
EElTuu873Oio3CLLJ0I40LOg8bgY7Eudb3WVh39rKgg+RYLH6tcj1PbC9Afc
l8cNN/nIpy2RR2GvQPoTVhtYTUZM0sMVZu7PsGat9M6PQXBDZ9wo/Qo8s83O
fSke/pils2ckFX64X7urIAdOdaelOhbADoeaeBn/hdstm7MiamGuU6yVtLZN
7THNrDHvhe896BJNosKJlTxqjaOw41Vt+z+n4IwPCazvZmET/fGLLxjwjcSH
yqXs2wiXHfp2IpgfrvbNt1MXha2p8QkDMnB36EG9sz/CzPMNPlI5a261F56+
5W9YSoZVlbjHlw/Bk6pzoZqWsN3pVjN7W9hI3SXN3wUun5O6G+YJ9zypeuTv
C1f6Bszbh8BuXQq12hHwuJfq/vU4mESjlFUnwd623FZnMuB05XU7lrtwsGgW
S1I+nBMxFLa1DF5xDViPrIJF+MTrJ+ph52um0/rtsGxNwJO4HphbluNk+wDc
52o7O/8KZsYPsKPbxzHSFKwUzJqq8w3+er59UXsJtp8b0VFeh3dPSkfwcmwn
nGkRyRjjha1ZdPvKhWFLjVyFQAnYqMVaVk0ODgtVm6Qqwwy68f1gEuyRzhYo
oA07bpGKuL0PLqdTpiUMYInT9QMUUziq08aJcRSm+AYVOVjDZuYJryvs4PCh
UAEWFzhvPMbN+Ge4ivwz/aIP3Kxm9FeJP3x6uMp5MAQWKR06R7sMM+O3TfV/
Hm4UvAH/MGJrIJQMR3N0P9+SAceFtYfQs2GhOL+zo/fh/zhdLWgohHOe6jmk
lsEHvPxvu/wO/zSQGKxcC9uaJQl9bIItAoTCb3XAakmmfUY98Foeh/zkS/hl
SUP8VSpc8ThWVuLNpu87JRYffIDLZAYVdk3CZ0bq6wtm4GGuuGGZOfidLSUu
YRmW53j7fn4NrvUlLVuziRLWmZl4W8INu1moFm7wb8pPbfc8LALrepG1EsVh
ZnwNtyhGq7AowOfOLoZo7IRjezMkbUmwdXaadJgmTLMaTErXgS+wrsYWHYAf
pgcI1xjAq4Ie5BYTOLCmdUebObzLQbej8Th8yYGs9/tJeMeYaHqeHay32PIu
wRkeixRR8T2zqT6/3CvHPOH+khfzSufhBPGXKUt+8G+UO16tv8KnXnHGXwuH
2W7fXTWLgI1JQy/YY+CD2e9FauLhR769/Z6UTeOTGCq5LRX+xHlrqToDHv1S
EGSTvWk+pXjyZnPhHsbU9diHMPN+BGc+F6nNLYOLhb9K/FgJD6n4uOZXw21m
83fk6+Gr0W1vMprhDf9lZZ4OuPuP6Jigbvi0jj7X2154htJXQR6AC0fa0nOo
8GJ1TM3S6039m7NXOTIKJ8ucm8kc29SfHVVbJyZh7hbFbNIMfJkUlvULDb5+
2Vm8ZAHuNbaV/ESH4xkviyTX4dCb24cOs4oR3vnO6l4QJ9wklyWRwwN7eE8Y
NwvAB5UFSaPCsJJf/6sVUfh/G8AnUw==
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
3hPGLfzwQSUB0pgQrOg38GpFBP43ROfb4w==
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
QrYGI9n3kENhXFMqFVnK1LVf19L//z/3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL43/p/+9/HlXPD78bJ9Gbvu1jbBipT5D/MR97adjn1Fnyv/OXCGsn
/r1s2LxCmG3HLgZf8RphG3utMn+F74QDig+QK+6zGPy7fFbCYqeq6sq92Qgf
3XulekydnfClO4P1Yh9gqwRNNY4YDsIFdcNiz3/gJCxndmyfWBHMbD8X4bAr
jBbvIjg22Xt/uBw3YVIlB5cOBU4eCwg3WobLyy6kqTtsIdzVoR8cWAvTKvvX
L4nyEF4hpVws8IGZ4wf3StE+pwnxEr4Zzf501AlWNL9FtS+E5TZ6e3RpcBaV
byV/Dx9he7Vks74Q2LvraeNgDdz/dGjhLzq8JFATubaHn3DH/FZrez+YOb9w
Q+f+rypjcKFhW8czSQHCVIFrnisWsIC/1oHBKNiihGLiXgXv1lc/2TQBC89s
F6OJCRI2Prmmw2kKP+jO+5UvEPYxutkgeA9+QrupIdULB9VZ6unSYeb/uZXw
Y+mS6oEj8HcWq+8ugfDhR2VFytlwsZ6Cp0obzL+tNdh3Gp7fqLWL4hYibOmz
q2dRErbLLL0nSoKPmT7rGNeHQ1U7V9yPwze03N9kucACPiJfrvnBX97sjNaI
gqUlxqaSU2Dm+oODVNNSUyrgfEXz1z+1wruFVWYz++F9fXW5z97DdVJpOTXf
YHlDj/igDbibqrSwyi9MmGyz4GghDU9oKGj/ogrLFK9RHffCjtz3M6VNYJGp
5tbiE7Ce1tE4QRdY1UJxu8l5OKD8cbxlGHwwImRdMw5m7j+we04+W3guHDXu
ljheAv/pvsSjUgPz5tGdTTtg04ZpL4N+eICcwiH+Fnbxc1p9PgUvXS8Td1qA
hUia0n3f4UZH5RZZPhHCgZ4FjcfFYF/qfKurPPxbU0HwKRI8Vr8eobYXpj/g
vjxuuMlHPm2JPAp7BdKfsNrAajJikh6uMHN/hjVrpXd+DIIbOuNG6VfgmW12
7kvx8McsnT0jqfDD/dpdBTlwqjst1bEAdjjUxMv4HW63bM6KqIW5TrFW0to2
tcc0s8a8F773oEs0iQonVvKoNY7Cjle17f+agjM+JLC+m4VN9McvvmDANxIf
KpeybyNcdujbiWB+uNo3305dFLamxicMyMDdoQf1zv4IM883+EjlrLnVXnj6
lr9hKRlWVeIeXz4ET6rOhWpawnanW83sbWEjdZc0fxe4fE7qbpgn3POk6pG/
L1zpGzBvHwK7dSnUakfA416q+9fjYBKNUladBHvbcludyYDTldftWO7CwaJZ
LEn5cE7EUNjWMnjFNWA9sgoW4ROvn6iHna+ZTuu3w7I1AU/iemBuWY6T7QNw
n6vt7PwrmBk/wI5uH8dIU7BSMGuqzjf46/n2Re0l2H5uREd5Hd49KR3By7Gd
cKZFJGOMF7Zm0e0rF4YtNXIVAiVgoxZrWTU5OCxUbZKqDDPoxveDSbBHOlug
gDbsuEUq4vY+uJxOmZYwgCVO1w9QTOGoThsnxlGY4htU5GANm5knvK6wg8OH
QgVYXOC88Rg345/hKvLP9Is+cLOa0d8l/vDp4SrnwRBYpHToHO0yzIzfNtX/
ebhR8Ab8w4itgVAyHM3R/XxLBhwX1h5Cz4aF4vzOjt6H/+N0taChEM55queQ
WgYf8PK/7fIH/NNAYrByLWxrliT0sQm2CBAKv9UBqyWZ9hn1wGt5HPKTL+GX
JQ3xV6lwxeNYWYk3m77vlFh88AEukxlU2DUJnxmpry+YgYe54oZl5uB3tpS4
hGVYnuPt+/k1uNaXtGzNJkpYZ2bibQk37GahWrjBvyk/td3zsAis60XWShSH
mfE13KIYrcKiAJ87uxiisROO7c2QtCXB1tlp0mGaMM1qMCldB77AuhpbdAB+
mB4gXGMArwp6kFtM4MCa1h1t5vAuB92OxuPwJQey3h8n4R1joul5drDeYsu7
BGd4LFJExffMpvr8cq8c84T7S17MK52HE8Rfpiz5wb9R7ni1/gqfesUZfy0c
Zrt9d9UsAjYmDb1gj4EPZr8XqYmHH/n29ntSNo1PYqjktlT4E+etpeoMePRL
QZBN9qb5lOLJm82FexhT12Mfwsz7EZz5XKQ2twwuFv4q8WMlPKTi45pfDbeZ
zd+Rr4evRre9yWiGN/yXlXk64O4/o2OCuuHTOvpcb3vhGUpfBXkALhxpS8+h
wovVMTVLrzf1b85e5cgonCxzbiZzbFN/dlRtnZiEuVsUs0kz8GVSWNYvNPj6
ZWfxkgW419hW8hMdjme8LJJch0Nvbh86zCpGeOc7q3tBnHCTXJZEDg/s4T1h
3CwAH1QWJI0Kw0p+/a9WROH/Ajkq0So=
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
LfzwQWUB0pgQrOQ38GpVFP4fKb045w==
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
NwvAB5UFSaPCsJJf/6sVUfh/1B4Pzg==
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
wyZ++JCiAHlUCFbw6Xu9IgL/D3xFl3c=
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Rk0C8EElQdKIMKzo2/dqWRT+H7RAyVo=
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Cx98WJGfNCYIK/gMvFoVhv8HctX2Ww==
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
02fctEkE3qcmSh4Rh1X9+14tScL/Atk3T0k=
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB/BrzxrKPpJtIjcGk1Sca4mkEqljF8oQmqxja0GWlCVbGksp
hWwNRrLvIYdCrimViixl6tqva+n/n3PPvF/znvOc93zOc95nfZ/n+T2yLueP
u7KSSCTG/9M/73+fRKmel6klY43f9jLWDVTHKf+al60k5HPKDOW/+YuENeP/
XtJvWibMun0ng7dolbCVrUapr9x3wn5F+ynl90h6/y2fhbDoycraMk9Wwkf2
XK4aVWUjfPH2QJ3oB9giTl2FPYqdcH7tkOizHzgIy5gc3StaCDPbz0k45DKj
2bMQjk7y3Bcqw0WYXMHOqZUAJ436hRoswWWl51NV7TYR7mzXDfSvgWkVfWsX
RbgJL5OTL+R7wczxg3skaZ9TBXkI34hkezLiAMub3qTaFsAy6z3d2jQ4k8q7
nLebl7CtSpJJbxDs2fmkYaAa7nsyOP8XHV7krw5f3c1HuH1us6WtD8ycX7i+
Y99XpVG4QL+1/akEP2Eq/1X3ZTOY31dj/0AEbFacYORaCe/SVT3ROA4LTW8V
pYkKEDY8sarFYQzf78r9jdcf9jK4US9wF35Mu6Em2QMH1JrraNNh5v+5mfAj
qeKq/sPwd5LFdyd/+NDD0kLFLLhIR85dqRXm29IS6D0Fz63X2ERwCRI299rZ
vSAB22SU3BUhw0eNn7aP6cLByh3Lrsfg6xqubzKdYH4v4S9XfeAvb3ZEqkXA
UuKjk0nJMHP9wQHKqSnJ5XCevOnrn1vgXUJKMxl98N7e2pyn7+FaydTs6m+w
rL5bbMA63EVVmF/hEyJMsZq3N5OCx9XkNH9VhqWLVqn2e2B7rnsZUkaw8GRT
S9FxWEfjSIyAE6xsJr/V6BzsV/Yo1jwEPhAWtKYeAzP3H9g1O481NAeOGHOJ
HyuGX7oucitVwzy5dEfjdti4fspDrw/upySzi72FnXwcVp5NwovXSsUc5mFB
srpU73e4wV6xeRuvMGF/9/yGY6KwN3WuxVkW/r0xP/AkGR6tWwtT2QPT73Nd
GtPf4MOfNoUfgT386Y9ZrGAVaVEJN2eYuT/D6jVSOz4GwPUdMSP0y/D0FhvX
xVj4Y6bW7uEU+ME+zc78bDjFlZZinw/bHWzkYfwBt5k3ZYbVwJwnWSporRva
Y5xRbdoD373fKZJIheMruFUaRmD7K5q2f03C6R/iWN7NwEa6YxeeM+Dr8Q8U
S9i2EC49+O14IB9c5Z1noyoCW1Jj4/ql4a7gAzpnfoSZ5xt8uGLG1GIPPHXT
V7+EAisrcI0tHYQnlGeD1c1hm1MtJrbWsIGqU6qvE1w2K3knxB3uflz50Ncb
rvD2m7MNgl065Wo0w+AxD+V9azEwmZZQWpUIe1pzWZxOh9MU12xId+BAkUxS
Yh6cHTYYsrkUXnb2WwuvhIV5xerG62DHq8ZTum3wtmq/xzHdMNc29hNt/XCv
s/XM3CuYGT/A9i4fR8mTsEIgS4rWN/jrubYFzUXYdnZYS3EN3jUhFcbDvpVw
hlk4Y5QHtiRp95YJweZqOXL+4rBBs+U2FRk4JFhlgqoIM+iG9wLJsFsaqz+/
Jmy/STLs1l64jJ4wJa4Hi5+q608whiM6rBwYR+AE74BCO0vYxDTudbkNHDoY
zE9ygnPHolwMf4ErKb/QL3jBTSoGfxf7wqeGKh0HgmDhksGztEswM37bUP/n
oQaB6/APw9Z6gklwJHvXs03pcExIWxA9CxaM8Tkzcg/+yeFKfn0BnP1Exy6l
FN7v4XvL6U/45/74QMUa2NokUfBjI2zmJxh6sx1WSTTuNeiGV3PZZSdewC+K
62OvUOHyR9HbxN9s+L5DfOH+B7hUekBu5wR8eriuLn8aHuKMGZKehd9ZJ8TE
LcGy7G/fz63CNd7kJUtWEcJa0+Nvi7lgFzPlgnW+Dfkpbe6HhGFtD4pGvBjM
jK/hZvlIJZIcfPbMQpDaDji6J13CmgxbZqVKhajDNIuBxDQt+DzLSnThfvhB
mp9QtR68IuBGaTaC/atbtreawjvttNsbjsEX7Sg6f56At4+KpOXawDoLze/i
HOHRcGEl79Mb6vPJuXzUHe4rfj6ncA6OE3uRvOgD/55w26PlN/jkK47Yq6Ew
6607KyZhsCF58DlbFHwg671wdSz80Lunzz1hw/jEB0tsSYE/cdxcrEqHR77k
B1hlbZhPSe7cmRy4mzF5LfoBzLwfwRnPhGtySuEioa/iP1bAg0peznlVcKvJ
3G3ZOvhKZOub9CZ43XdJkbsd7noZGRXQBZ/S0uV82wNPJ/SWU/rhguHWtGwq
vFAVVb34ekP/Zm2VDo/ASdJnpzNGN/Rne+Xm8QmYq1k+izwNXyKHZP5Kg69d
chQrnod7DK0lPtHhWMaLQok1OPjG1sFDLKKEd7yzuBvAATfKZIpnc8NunuOG
TfzwAUUB8ogQrODT92pZBP4fN7JSIQ==
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
WvjgQ4r8pDFBWMF34NWqMPw/flUiRw==
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
bhaADyoLkkaFYSW//lcrovD/AOqw2gk=
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
nDBs4ocPKQqQR4VgBZ++1ysi8L8ACKArKA==
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0ltkfB3C7rKHsg2wTeWMwScV5LZFUInXsQhlCZR1bC7KkLNnSWEop
ZGswkn3PdiiM15RKRZYy9dpfr6X/f8575vma55x7nvM59zx3fe69vyvrcvGE
KwsTExP9/+mf97/P4IVu7jM+vY3f9tE3DFQnyP+ah7Uk5HPKLPm/+UuENeP/
XtZvWiHMsmMXnadojbCVrUapr9x3wn5FB8jlD5j0/ls+M2GRU5W1ZZ4shI/u
vVo1pspK+PLdwTqRD7BFnLoKWxQb4fzaYZHuH9gJy5gc2ydSCDPaz0E45Cq9
2bMQjk7y3B8qw0mYVMHGoZUAJ435hRosw2WlF1NV7bYQ7mzXDfSvgakV/euX
hbkIr5CSL+V7wYzxg3slqJ9TBbgJ34pkfTbqAMub3qbYFsAyG7092lQ4k8Kz
kreHh7CtSpJJXxDs2fmsYbAa7n82tPAXDV7iqw5f28NLuH1+q6WtD8yYX7i+
Y/9XpTG4QL+1/bk4H2EK33X3FTOYz1fjwGAEbFacYORaCe/WVT3ZOAELzmwX
oYrwEzY8uabFbgw/7Mr9lccf9jK4Vc9/H35KvaUm0QsH1JrraNNgxv+5lfAT
yeKqgSPwdyaL707+8OHHpYWKWXCRjpy7UivMu60l0Hsant+osYngFCBs7rWr
Z1EctskouS9Mgo8ZP28f14WDlTtWXI/DNzVc32Q6wXxeQl+u+8Bf3uyMVIuA
JcXGppKSYcb6gwOUU1OSy+E8edPXP7fAuwWVZjP64X19tTnP38O1EqnZ1d9g
WX232IANuIuisLDKK0iYbLVgbyYJT6jJaV5QhqWK1ij2e2F7zgcZkkaw0FRT
S9EJWEfjaAy/E6xsJr/d6DzsV/Yk1jwEPhgWtK4eAzP2H9g1O48lNAeOGHeJ
Hy+G/3Rd4lKqhrlzaY7G7bBx/bSHXj88QE5mE30LO/k4rHZPwUs3SkUdFmAB
krpk33e4wV6xWZpHiLC/e37DcRHYmzLf4iwL/9aYH3iKBI/VrYep7IVpDzmv
jOtv8pFPW8KPwh7+tKfMVrCKlIi4mzPM2J9h9RrJnR8D4PqOmFHaVXhmm43r
Uiz8MVNrz0gK/Gi/Zmd+NpziSk2xz4ftDjVy03+H28ybMsNqYI5TzBXU1k3t
Mc6oNu2F7z/sFE6kwPEVXCoNo7D9NU3bv6bg9A9xzO9mYSPd8Usv6PDN+EeK
JazbCJce+nYikBeu8s6zURWGLSmxcQNScFfwQZ2zP8KM8w0+UjFrarEXnr7t
q19ChpUVOMeXD8GTynPB6uawzekWE1tr2EDVKdXXCS6bk7gX4g73PK187OsN
V3j7zdsGwS6dcjWaYfC4h/L+9RiYRE0orUqEPa05Lc6kw2mK6zZM9+BA4Uym
xDw4O2woZGspvOLstx5eCQvxiNZN1MGO142nddtg6Wq/pzE9MKc028m2AbjP
2Xp2/hXMiB9ge5ePY6QpWCGQOUXrG/z1fNui5hJsOzeipbgO756UDONm2044
wyycPsYNWzJp95UJwuZqOXL+YrBBs6W0igwcEqwySVGE6TTDB4Ek2C2NxZ9P
E7bfIhF2Zx9cRkuYFtODxU7XDSQYwxEdVg70o3CCd0ChnSVsYhr3utwGDh0K
5mNygnPHo1wMf4Eryb/QLnnBTSoGfxf7wqeHKx0Hg2ChkqFz1CswI37bVP/n
4Qb+m/API9Z6AklwJFtX95Z0OCakLYiWBQvE+JwdfQD/5HAtv74Azn6mY5dS
Ch/w8L3j9Af880B8oGINbG2SKPCxETbzEwi93Q6rJBr3GfTAa7lsspMv4ZfF
9bHXKHD5k2hpsTebvu8QW3z4AS6VGpTbNQmfGamry5+BhzlihqXm4HfWCTFx
y7As29v382twjTdp2ZJFmLDWzMTbYk7YxUy5YIN3U35Km/thIVjbg6wRLwoz
4mu4WT5SiUkOPnd2MUhtJxzdmy5uTYIts1IlQ9RhqsVgYpoWfJF5NbrwAPwo
zU+wWg9e5XcjNxvB/tUtO1pN4V122u0Nx+HLdmSdP07CO8aE03JtYJ3F5ndx
jvBYuJCS95lN9fnkXD3mDvcXv5hXOA/Hib5MXvKBf0u469HyK3zqFXvs9VCY
5c69VZMw2JA09II1Cj6Y9V6oOhZ+7N3b756waXzig8W3pcCf2G8vVaXDo1/y
A6yyNs2nBFfubA7cQ5+6Ef0IZtyP4IxuoZqcUrhI8KvYjxXwkJKXc14V3Goy
f1e2Dr4W2fomvQne8F1W5GqHu/6MjArogk9r6XK87YVnEvrKyQNwwUhrWjYF
XqyKql56val/c7ZKR0bhJKlzMxljm/qzo3LrxCTM2SyfRZqBr5BCMi9Q4RtX
HEWLF+BeQ2vxTzQ4lv6yUHwdDr61fegwswjhne8s7geww40ymWLZXLCb54Rh
Ex98UJGfNCoIK/j0v1oRhv8HQ0ecbg==
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
J4ybBeCDyoKkURFYya//1YoY/C9tMsF0
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
qFkAPqQkSBoVhhX9+l+tiML/A2OturQ=
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
nDRs5oMPK/KTxgRhBZ+BV6vC8L8Br9Oy5g==
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
UZMAfEhJkDQqDCv69r9aEYX/BwY9nWg=
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
mgTgQ0qCpBFhWNG37/WyKPw/JcC5zw==
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
mgXgQ0qCpFFhWNG3/9WKKPw/6zbTMw==
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
zQLwQWVB0qgwrOTX/2pFFP4f06gJ8g==
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTuTEoqfhfSySVSB27UIbQZB1bC7KkLNnSWEop
ZGswkn0PORTGNaVSkaVMXft1Q////9wz7/fOe85z3vM5z3mf9X2e5/fIu50/
7s7GwsJC/1/6//uf5yHP6V3x/+lv/rqXvmGkPkn+x3zsZWGf0ubI/85fJqyd
+PeKYcsqYbZtO+h8JWuEbey1yv0VvhMOKNlPrrzHYvDv8lkJi52srq/wZiN8
ZM/lmnF1dsIXbw81iL2HrRI01ThiOAgX1o+IPfuBk7Cc2dG9YsUwo/1chMMu
01u9i+HYFO994XLchElVHFw6SXDKeEC40QpcUX4+Xd1hE+HuTv3gwDqYWjWw
flGUh/AqKfVCoQ/MGD+4T4r6KV2Il/CNaPYnY06wovlNin0RLLfR16tLhbMp
fKsFu/kI26ulmPWHwN7dT5qGauGBJ8OLf9HgZYHayLXd/IQ7FzZb2/vBjPmF
G7v2fVEZh4sM2zufSgoQpghc9Vy1gAX8tfYPRcEWpUkm7tXwTn31E82TsPDs
VjGqmCBh4xNrOpym8P2e/F/5AmEfoxuNgnfhx9QbGlJ9cFC9pZ4uDWb8n5sJ
P5IurRk8DH9nsfruEggfelherJwDl+gpeKq0w/xb2oJ9Z+CFjTq7KG4hwpY+
O3qXJGG7rLK7oiT4qOnTzgl9OFS1a9X9GHxdy/11tgss4CPy+aof/Pn19miN
KFhaYnw6JRVmrD84SDU9LbUSLlA0f7WrDd4prDKXNQDv7a/Pe/oOrpdKz639
CssbesQHbcA9FKXFb/zChMk2i44W0vCkhoL2L6qwTMkaxXEP7Mh9L0vaBBaZ
bmkrOQ7raR2JE3SBVS0Ut5qcgwMqHsVbhsEHIkLWNeNgxv4Du+cWsIXnwVET
bokTpfCf7ss8KrUwbz7N2bQTNm2c8TIYgAfJqRzib2AXP6dvz6bh5Wvl4k6L
sBBJU7r/O9zkqNwqyydCONCzsOmYGOxLWWhzlYd/ay4MPkmCxxvWI9T2wLT7
3JcmDJl8+OOmyCOwVyDtMasNrCYjJunhCjP2Z1izTnr7hyC4sStujHYZnt1i
574cD3/I1tk9mgY/2KfdXZgLp7lT0xwLYYeDzbz03+EOy5bsiDqY6yRrFbWd
qT2mWbXmffDd+92iyRQ4sYpHrWkMdryibf/XNJz5PoH17Rxsoj9x4Tkdvp74
QLmMfQvh8oNfjwfzwzW+BXbqorA1JT5hUAbuCT2gd+ZHmHG+wYer5syt9sAz
N/0Ny8iwqhL3xMpBeEp1PlTTErY71WZmbwsbqbuk+7vAFfNSd8I84d7H1Q/9
feEq34AF+xDYrVuhTjsCnvBS3bceB5OoSeU1ybC3LbfV6Uw4Q3ndjuUOHCya
zZJcAOdGDIdtLodXXQPWI6thET7xhskG2Pmq6Yx+ByxbG/A4rhfmluU40TEI
97vazi28hBnxA+zo9mGcNA0rBbOm6XyFv5zrWNJehu3nR3WU1+GdU9IRvBxb
CWdZRNLHeWFrFt3+CmHYUiNPIVACNmq1llWTg8NC1aYoyjCdZnwvmAR7ZLAF
CmjDjpukIm7thStoSTMSBrDEqYbBJFM4qsvGiX4ETvINKnawhs3ME15V2sHh
w6ECLC5w/kSMm/HPcDX5Z9oFH7hFzejvUn/41Ei181AILFI2fJZ6CWbEb0z1
fxppErwO/zBqayCUAkdz9DzblAnHhXWE0HJgoTi/M2P34J+crhQ2FsG5T/Qc
0srh/V7+t1z+gHcNJgYr18G2ZslCH5phiwCh8JudsFqyab9RL7yWzyE/9QJ+
UdoYf4UCVz6KlZV4zfR9l8TS/fdwucyQwo4p+PRoQ0PhLDzCFTciMw+/tU2K
S1iB5TnevFtYg+t8SSvWbKKEdWYn35Ryw24WqkUb/Ez5aR2eh0RgXS+yVqI4
zIiv4VbFaBUWBfjsmaUQje1wbF+mpC0Jts5Jlw7ThKlWQ8kZOvB51m+xxfvh
BxkBwrUG8DdBD3KrCRxY27at3Rze4aDb2XQMvuhA1vvjBLxtXDQj3w7WW2p9
m+AMj0eKqPieZqrPL+/yUU94oPT5gtI5OEH8ReqyH/xb0m2vtl/hky8546+G
w2y37nwzi4CNScPP2WPgAznvRGrj4Ye+fQOeSUzjkxgquSUN/sh5c7kmEx77
XBhkk8M0n1I8+XN5cC99+lrsA5hxP4KznonU5ZXDJcJfJH6sgodVfFwLauB2
s4Xb8g3wlej215kt8Ib/ijJPJ9zzZ3RMUA98Skef600fPJvUX0kehItG2zNy
KfBSTUzt8ium/s3bqxweg1Nkzs5mjTP1Z1v15skpmLtVMYc0C18ihWX/QoWv
XXIWL12E+4xtJT/S4Hj6i2LJdTj0xtbhQ6xihLe/tbobxAk3y2VL5PLAHt6T
xi0C8AFlQdKYMKzkN/ByVRT+L/8zyW8=
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
bhaADyoJkkaFYUW//lcrovD/AOXpNeQ=
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
1CwAH1ISJI0Kw4q+/a9WROH/Ae9xw5M=
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
mvjgIwr8pDFBWN67782qMPw/9k8deg==
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
NQvAxkqCpFFhWNGv/9WKKPw/KdZ2WA==
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
2MIHH1bkJ40Jwgo+A69WheH/AcKqd1I=
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
YTM/fEhRgDwqBCv49L9aEYH/B73Ms/M=
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
2MQHH1bkJ40Kwgo+/a9XheH/AZydIFM=
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
1CwAH1ISJI0Kw4q+/a9WROH/AslI4dk=
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
JoyaBeADSoKkUWFY0bf/1Yoo/BdtaBHC
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlZcmWxlJK
Icvtj5Hse8ihMK4plYosZerar2vp/59zz7xf857znPd8znPeZ32f5/k98m4X
TrizsbCwMP6f/n7/8wjENsfOU9Sbv+1jbBipT5D/MR97WdjntFnyv/OXCGsn
/rVs2LxCmG3HLgZfyRphG3stir/Cd8IBJQfIFfdZDP5dPithsVNVdeXebISP
7r1SPabOTvjSncF6sQ+wVYKmGkcMB+HCumGx5z9wEpYzO7ZPrBhmtp+LcNgV
Rot3MRyb4r0/XI6bMKmSg0snCU4ZCwg3WobLKRfS1R22EO7q0A8OrIVplf3r
l0R5CK+QUi8W+sDM8YN7pWif04V4Cd+MZn866gQrmt+i2hfBchu9Pbo0OJvK
t1Kwh4+wvVqKWV8I7N31tHGwBu5/OrTwJx1eEqiJXNvDT7hjfqu1vR/MnF+4
oXP/V5UxuMiwreOZpABhqsA1zxULWMBf68BgFGxRmmTiXgXv1lc/2TQBC89s
F6OJCRI2Prmmw2kKP+jO/5UvEPYxutkgeA9+QrupIdULB9VZ6unSYeb/uZXw
Y+nS6oEj8HcWq+8ugfDhR5Ri5Ry4RE/BU6UN5t/WGuw7Dc9v1NpFcQsRtvTZ
1bMoCdtlld0TJcHHTJ91jOvDoaqdK+7H4Rta7m+yXWABH5Ev1/zgL292RmtE
wdISY1MpqTBz/cFBqulpqRVwgaL5659a4d3CKrNZ/fC+vrq8Z+/hOqn03Jpv
sLyhR3zQBtxNVVpY5RcmTLZZcLSQhic0FLR/UYVlStaojnthR+77WdImsMhU
c2vJCVhP62icoAusaqG43eQ8HFD+ON4yDD4YEbKuGQcz9x/YPbeALTwPjhp3
Sxwvhf9wX+JRqYF58+nOph2wacO0l0E/PEBO5RB/C7v4Oa0+n4KXrlPEnRZg
IZKmdN93uNFRuUWWT4RwoGdh43Ex2Jc63+oqD//WVBh8igSP1a9HqO2F6Q+4
L48bbvKRT1sij8JegfQnrDawmoyYpIcrzNyfYc1a6Z0fg+CGzrhR+hV4Zpud
+1I8/DFbZ89IGvxwv3ZXYS6c5k5LcyyEHQ418TL+C7dbNmdH1MJcp1graW2b
2mOaVWPeC9970CWaTIUTK3nUGkdhx6va9n9OwZkfEljfzcIm+uMXXzDgG4kP
lcvYtxGmHPp2IpgfrvYtsFMXha2p8QkDMnB36EG9sz/CzPMNPlI5a261F56+
5W9YRoZVlbjHlw/Bk6pzoZqWsN3pVjN7W9hI3SXd3wUun5O6G+YJ9zypeuTv
C1f6Bszbh8BuXQq12hHwuJfq/vU4mERLolQnw9623FZnMuEM5XU7lrtwsGg2
S3IBnBsxFLaVAq+4BqxHVsEifOL1E/Ww8zXTaf12WLYm4ElcD8wty3GyfQDu
c7WdnX8FM+MH2NHt4xhpClYKZk3T+QZ/Pd++qL0E28+N6Civw7snpSN4ObYT
zrKIZIzxwtYsun3lwrClRp5CoARs1GItqyYHh4WqTVKVYQbd+H4wCfbIYAsU
0IYdt0hF3N4Hl9OTpiUMYInT9QNJpnBUp40T4yic5BtU7GANm5knvK6wg8OH
QgVYXOD88Rg345/hKvLP9Is+cLOa0V+l/vDp4SrnwRBYpGzoHO0yzIzfNtX/
ebhR8Ab8w4itgVAKHM3R/XxLJhwX1h5Cz4GF4vzOjt6H/+N0tbChCM59queQ
RoEPePnfdvkd/mkgMVi5FrY1Sxb62ARbBAiF3+qA1ZJN+4x64LV8DvnJl/DL
0ob4q1S44nGsrMSbTd93Siw++ABTZAYVdk3CZ0bq6wtn4GGuuGGZOfidbVJc
wjIsz/H2/fwaXOtLWrZmEyWsMzPxtpQbdrNQLdrg35Sf1u55WATW9SJrJYrD
zPgablGMVmFRgM+dXQzR2AnH9mZK2pJg65x06TBNmGY1mJyhA19gXY0tPgA/
zAgQrjGAVwU9yC0mcGBN6442c3iXg25H43H4kgNZ7/eT8I4x0Yx8O1hvseVd
gjM8Fimi4ntmU31+eVeOecL9pS/mlc7DCeIvU5f84N+S7ni1/gqfesUZfy0c
Zrt9d9UsAjYmDb1gj4EP5rwXqYmHH/n29nsmbRqfxFDJbWnwJ85bS9WZ8OiX
wiCbnE3zKcWTP5sH9zCmrsc+hJn3IzjruUhtHgUuEf4q8WMlPKTi41pQDbeZ
zd+Rr4evRre9yWyGN/yXlXk64O4/omOCuuHTOvpcb3vhmaS+CvIAXDTSlpFL
hRerY2qWXm/q35y9ypFROEXm3EzW2Kb+7KjaOjEJc7co5pBm4MuksOxfaPD1
y87ipQtwr7Gt5Cc6HM94WSy5Dofe3D50mFWM8M53VveCOOEmuWyJXB7Yw3vC
uFkAPqgsSBoVhpX8+l+tiML/A+AAj7w=
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
zXzwIUV+0qggrODb/3pFGP4faI7quA==
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
jFr54MOK/KRxQVjBd/D1mjD8L72X3ek=
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk0ltkfB3C7rKHsg2wTeWMwSeK8lkgqkTp2oQyhyZqtBVlSlmxpLKUU
svXHSPY95FAYrymViixl6rW/Xksz//Oeeb7mOeee53zOPc9dn3vv78q6nj/u
xsLExET/J/3//e9zgaJz/SeVhaZv++gbhqoT5H/Nw1oa+jl1lvzf/CXCmgl/
LRs0rxBm2bGLzlO8RtjaTqPMT+47Yf/i/eSK+0z6/y2fmbDIyaq6ci8Wwkf2
XqkeU2UlfOnOYL3IB9gyXl2FLZqNcEHdsMjzH9gJy5ge3SdSBDPaz0E49Aq9
xasIjkn20gmT4SRMqmTj0EqEk8f8wwyX4fKy82mq9lsId3XoBQXUwtTK/vVL
wlyEV0gpFwu8Ycb4wb0S1M9pAtyEb0axPh11hOXNblHsCmGZjd4ebSqcReFZ
yd/DQ9hOJdm0Lxj26nraOFgD9z8dWviTBi/x1USs7eEl3DG/1crOF2bML9zQ
qfNVaQwuNGjreCbOR5jCd81jxRzm89PYPxgJm5ckGrtVwbv1VE80TcCCM9tF
qCL8hI1OrGmxm8APuvMu8ATA3oY3G/jvwU+oN9UkeuHAOgtdbRrM+D+3En4s
WVI9cBj+zmT53TkAPvSorEgxGy7WlfNQaoN5t7UG+UzD8xu1tpGcAoQtvHf1
LIrDtpml94RJ8FGTZx3jenCIcueK2zH4hobbmyxnmM9b6Ms1X/jLm51RapGw
pNjYVHIKzFh/cKByWmpKBZwvb/b651Z4t6DSbGY/vK+vLvfZe7hOIi2n5hss
a+AeF7gBd1MUFlZ5BQmTrRcczCXhCTU5zV+VYaniNYrDXtiB836mpDEsNNXc
Wnwc1tU4EsvvDCuby283Pgf7lz+OswiFD4QHr6vHwoz9B3bLyWcJy4Ujx10T
xkvgP9yWuJRqYO48mpNJB2zSMO2p3w8PkFPYRN/Czr6Oq8+n4KXrZaKOC7AA
SV2y7zvc6KDYIs0jRDjAo6DxmAjsQ5lvdZGFf2sqCDpJgsfq18NV9sK0B5yX
xw02+fCnLRFHYM8A2hNma1hFSkTc3QVm7M+weq3kzo+BcENn7CjtCjyzzdZt
KQ7+mKW1ZyQVfqij2VWQA6e6UVMdCmD7g03c9P/B7RbNWeG1MMdJ5kpq26b2
mGTWmPXC9x50CSdR4IRKLpXGUdjhqqbdn1Nwxod45nezsLHe+MUXdPhGwkPF
UtZthMsOfjsexAtX++TbqgrDVpS4+AEpuDvkgO6ZH2HG+QYfrpw1s9wLT9/y
Myglw8oKnOPLB+FJ5bkQdQvY9lSrqZ0NbKjqnObnDJfPSdwN9YB7nlQ98vOB
K3385+2CYdcuuVrNcHjcU1lnPRYmURPLqpNgLxtOy9MZcLriui3TXThIOIsp
KR/OCR8K3VoGr7j4r0dUwUI8ovUT9bDTNZNpvXZYusb/SWwPzCnNdqJ9AO5z
sZmdfwUz4gfYwfXjGGkKVghiTtX6Bn89176ouQTbzY1oKa7Duyclw7nZthPO
NI+gj3HDVkzafeWCsIVarlyAGGzYYiWtIgOHhqhMUhRhOs3ofhAJdk9nCeDT
hB22SITf3geX0xKnxfRhsVP1A4kmcGSntSP9CJzoE1hkbwWbmsW/rrCFw4ZC
+Jic4bzxaFejX+Aq8i+0i95ws4rhXyV+8KnhKqfBYFiodOgs9TLMiN821f95
uJH/BvzDiI2+QDIcxdb9fEsGHBvaHkzLhgVifc+M3od/crxa0FAI5zzVtU8t
g/d7+t12/h3+eSAhSLEWtjFNEvjYBJv7C4Td6oBVkkz6DHvgtTw22cmX8MuS
hrirFLjicYy02JtN33eKLT74AJdJDcrtmoRPj9TXF8zAwxyxw1Jz8DubxNj4
ZViW7e37+TW41oe0bMUiTFhrZuJtCSfsaq5cuMG7KT+13eOQEKztSdZIEIUZ
8TXcIh+lxCQHnz2zGKy2E47pzRC3IcFW2WmSoeow1XIwKV0LPs+8GlO0H36Y
7i9Yow+v8ruTW4zhgJrWHW1m8C577Y7GY/Ale7Lu7yfgHWPC6Xm2sO5iy7t4
J3gsQkjJ5/Sm+nxzrxz1gPtLXswrnIPjRV+mLPnCvyXe8Wy9AJ98xR53LQxm
uX131TQcNiINvWCNhg9kvxeqiYMf+fT2eyRuGp+EEPFtqfAn9ltL1Rnw6JeC
QOvsTfMpwZU3mwv30KeuxzyEGfcjOPO5UG1uGVws+FXsx0p4SMnbJb8abjOd
vyNbD1+NanuT0Qxv+C0rcnXA3X9ERQd2w6e09Dje9sIziX0V5AG4cKQtPYcC
L1ZH1yy93tS/OTulw6NwstTZmcyxTf3ZUbV1YhLmbJHPJs3Al0mhWb9S4euX
nURLFuBeIxvxTzQ4jv6ySHwdDrm5fegQswjhne8s7wWyw00yWWI5XLC714RR
Mx98QJGfNCoIK/j2v1oRhv8Gz69HeA==
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmcmMwScW5lkgqkTp2oQyhyTq2FoSbsmRLYyml
kK3BSPY95FAYV6VSkaVMXft1Lf3/c+6Z92vec57zns95zvus7/M8v0fO9fxx
NzYWFhbG/9M/738fI8pLwxIX9aZvexnrhmrj5H/Nx14S+jllhvzf/EXCWvF/
Lxk0LRNm276TwVe0StjaTrPUT/47Yf+i/eTyeyz6/y2flbDYycraMi82wkf2
XK4aVWMnfPH2QJ3YB9gyTkOVI5qDcH7tkNizHzgJy5oe3StWCDPbz0U49DKj
2asQjkny2hcmy02YVMHBpZ0AJ436hxkuwWWl51PV7DcR7mzXCwqogWkVfWsX
RXkIL5OSL+R7w8zxg3ukaJ9ThXgJ34hifzLiCCuY3aTaFcCy6z3dOjQ4k8q3
nLebj7CdapJpbzDs1fmkYaAa7nsyOP+SDi8KVEes7uYn3D632crOF2bOL1zf
se+r8ihcYNDa/lRSgDBV4KrHsjks4Ke5fyASNi9OMHarhHfpqZ1oHIeFp7eK
0cQECRudWNXmNIHvd+X+xhcAexveqBe8Cz+m3VCX6oEDay10degw8//cTPiR
dHFV/2H4O4vld+cA+NDD0kKlLLhIV95DuRXm39IS5DMFz63X2EZyCxG28N7Z
vSAJ22aU3BUlwUdNnraP6cEhKh3Lbsfg65pubzKdYQFvkS9XfeEvb3ZEqUfC
0hKjk0nJMHP9wYEqqSnJ5XCegtnrn1vgXcLKMxl98N7e2pyn7+FaqdTs6m+w
nIF7bOA63EVVnF/hFyZMtp53MJeGx9XltX5VgWWKVqkOe2AH7nsZ0sawyGRT
S9FxWFfzCEXQGVYxV9hqfA72L3sUaxEKHwgPXtOgwMz9B3bLzmMLy4Ejx1zj
x4rhv9wWeZSrYd5cupNJO2xSP+Wp3wf3k5M5xN/Czr6OK88m4cVrpeKO87AQ
SUO69zvc4KDUvI1PhHCAR37DMTHYhzrX4iIH/96YH3SSBI/WrYWr7oHp97kv
jRls8OFPmyKOwJ4B9Mes1rCqjJikuwvM3J9hjRrpHR8D4foOygj9Mjy9xdZt
MRb+mKm9ezgFfrBPqzM/G05xo6U45MP2Bxt5GX/AbRZNmeE1MNdJ1gpa64b2
mGRUm/XAd+93iiZS4fgKHtWGEdjhipbdy0k4/UMc67sZ2Fhv7MJzBnw9/oFS
CfsWwqUHvx0P4oerfPJs1URhK2psXL8M3BVyQPfMjzDzfIMPV8yYWe6Bp276
GZSQYRVF7rGlg/CEymyIhgVse6rF1M4GNlRzTvVzhstmpe6EesDdjysf+vnA
FT7+c3bBsGunfI1WODzmqbJvjQKTaAmlVYmwlw235el0OE1pzZblDhwkmsmS
mAdnhw+Gbi6Fl1381yIqYRE+8brxOtjpqsmUXhu8rdr/MaUb5t7GcaKtH+51
sZmZewUz4wfYwfXjKGkSVgxiTdH+Bn8917agtQjbzQ5rK63Buyakw3k5thLO
MI9gjPLCViw6vWXCsIV6jnyABGzYbLVNVRYODVGdoCrBDLrRvSAS7J7GFiCg
BTtskgq/tRcuoydMSejDEqfq+hNM4MgOa0fGETjBJ7DQ3go2NYt7XW4Lhw2G
CLA4w7lj0a5Gv8CV5F/oF7zhJlXDv4v94FNDlU4DwbBIyeBZ2iWYGb9tqP/z
UIPgdfiHYRt9oSQ4iqPr2aZ0mBLaFkzPgoUovmdG7sE/OV7Jry+As5/o2qeU
wvs9/W45/wn/3B8fpFQD25gmCn1shM39hcJutsOqiSa9ht3wai6H3MQL+EVx
fewVKlz+KGabxJsN33dILNz/AJfKDMjvnIBPD9fV5U/DQ1yUIZlZ+J1NAiVu
CZbjePt+bhWu8SEtWbGJEtaeHn9bzA27mqsUrPNvyE9p8zgkAut4kjXjxWFm
fA03K0Qps8jDZ88sBKvvgGN60iVtSLBVVqp0qAZMsxxITNOGz7OuxBTuhx+k
+QtX68Mrgu7kZmM4oLple6sZvNNep73hGHzRnqz75wl4+6hoWq4trLvQ/C7O
CR6NEFH2Ob2hPt+cy0c94L7i53OK5+A48RfJi77w7wm3PVt+g0++4oy9Ggaz
3bqzYhoOG5EGn7NHwwey3otUx8IPfXr6PBI2jE98iOSWFPgT583FqnR45Et+
oHXWhvmU4smdyYG7GZPXYh7AzPsRnPFMpCanFC4S/irxYwU8qOztklcFt5rO
3Zarg69Etb5Jb4LX/ZaUeNrhrr+iogO74FPaelxve+DphN5ycj9cMNyalk2F
F6qiqxdfb+jfrJ3y4RE4SebsdMbohv5sr9w8PgFzNytkkabhS6TQzF9p8LVL
TuLF83CPkY3kJzocy3hRKLkGh9zYOniIVYzwjneWdwM54UbZTIlsHtjda9yo
SQA+oCRIGhGGFX37Xi2Lwv8Dxt8L5g==
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
1CIAH1ISJI0Jw4p+A69WROH/AcyV6K8=
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk01dseB3CzjKHMVzLdyImLm1SsY4ikEskyC+USuhmvqQEZUoZM6RpK
KWQ4XVzJPIcsCtdxS6UiQ7l1zMcx9N5b573/1/uvtdd/fdZe/z3+996/Led2
4aQ7GwsLC+Pf6T/v/z0SHtYSpv2TTd/2MzYM1SbIkv81H3tZ2Oe0WcLM/CXC
Won/LBs0rxBm27mbwVeyRtjGXpPiL/+dcEDJQXLFfRb9/y+flbCYdVVduTcb
4WP7rlSPqbETvnRnsF7sA2yZoKHKEcNBuLBuWOz5D5yEZU2P7xcrhpnt5yIc
doXR4l0Mx6Z4HwiX5SZMquTg0k6CU8YCwg2X4XLKhXQ1hy2Euzr0ggNrYVpl
//olUR7CK6TUi4U+MHP84F4p2ud0IV7CN6PZn446wQpmt6j2RbDsRm+PDg3O
pvKtFOzlI2yvmmLaFwJ7dz1tHKyB+58OLfxNh5cEaiLX9vIT7pjfamXvBzPn
F27oPPBVeQwuMmjreCYpQJgqcM1zxRwW8Nc8OBgFm5cmGbtXwXv01E41TcDC
M9vFaGKChI1OrWlzmsAPuvN/4wuEfQxvNgjeg5/QbqpL9cJBdRa6OnSY+X9u
JfxYurR64Cj8ncXyu0sgfOQRpVgpBy7RlfdUboP5t7UG+07D8xu1dlHcQoQt
fHb3LErCdlll90RJ8HGTZx3jenCoSueK+wn4hqb7m2wXWMBH5Ms1P/jLm13R
6lGwtMTYVEoqzFx/cJBKelpqBVygYPb651Z4j7DybFY/vL+vLu/Ze7hOKj23
5hssZ+ARH7QBd1MVF1b5hQmTbRYczaXhCXV5rV9VYJmSNarjPtiR+36WtDEs
MtXcWnIS1tU8FifoAquYK2w3Pg8HlD+OtwiDD0WErGvEwcz9B3bPLWALz4Oj
xt0Sx0vhv9yXeJRrYN58urNJB2zSMO2l3w8PkFM5xN/CLn5Oq8+n4KXrFHGn
BViIpCHd9x1udFRq2cEnQjjQs7DxhBjsS51vdZWDf28qDLYmwWP16xGq+2D6
A+7L4wabfPTTlshjsFcg/QmrDawqIybp4Qoz92dYo1Z618cguKEzbpR+BZ7Z
Zue+FA9/zNbeO5IGPzyg1VWYC6e509IcC2GHw028jD/gdovm7IhamMuatZLW
tqk9Jlk1Zr3wvQddoslUOLGSR7VxFHa8qmX/9xSc+SGB9d0sbKw3fvEFA76R
+FCpjH0bYcrhbyeD+eFq3wI7NVHYihqfMCADd4ce0j37I8w83+CjlbNmlvvg
6Vv+BmVkWEWRe3z5MDypMheqYQHbnW41tbeFDdVc0v1d4PI5qbthnnDPk6pH
/r5wpW/AvH0I7NYlX6sVAY97qRxYj4NJtCRKdTLsbctteSYTzlBat2O5CweL
ZrMkF8C5EUNhWynwimvAemQVLMInXj9RDztfM5nWa4d31AQ8ieuBuXdwnGof
gPtcbWfnX8HM+AF2dPs4RpqCFYNZ07S/wV/Pty9qLcH2cyPaSuvwnknpCF6O
7YSzzCMZY7ywFYtOX7kwbKGeJx8oARu2WO1QlYXDQlUnqUowg250P5gEe2Sw
BQpowY5bpCJu74fL6UnTEvqwxOn6gSQTOKrTxolxDE7yDSp2sIJNzRJeV9jB
4UOhAiwucP54jJvRL3AV+Rf6RR+4WdXwn1J/+PRwlfNgCCxSNnSOdhlmxm+b
6v883Ch4A/5hxFZfKAWO5uh+viUTjgtrD6HnwEJxfmdH78M/OV0tbCiCc5/q
OqRR4INe/rdd/oR/HkgMVqqFbU2ThT42weYBQuG3OmDVZJM+wx54LZ9DbvIl
/LK0If4qFa54HLtD4s2m7zslFh98gCkyg/K7J+EzI/X1hTPwMFfcsMwc/M42
KS5hGZbjePt+fg2u9SUtW7GJEtaemXhbyg27masUbfBvyk9r9zwiAut4kTUT
xWFmfA23KEQrs8jD584uhqjvgmN7MyVtSbBVTrp0mAZMsxxMztCGL7CuxhYf
hB9mBAjX6MOrgh7kFmM4sKZ1Z5sZvNtBp6PxBHzJgaz75yl455hoRr4drLvY
8i7BGR6LFFH2PbOpPr+8K8c94f7SF/OK5+EE8ZepS37w70l3vFp/g61fccZf
C4fZbt9dNY2AjUhDL9hj4EM570Vq4uFHvr39nkmbxicxVHJbGvyJ89ZSdSY8
+qUwyCZn03xK8eTP5sE9jKnrsQ9h5v0IznouUptHgUuEv0r8WAkPKfu4FlTD
babzd+Tq4avRbW8ym+EN/2Ulng64+6/omKBu+LS2HtfbXngmqa+CPAAXjbRl
5FLhxeqYmqXXm/o3Z698dBROkTk3kzW2qT87q7ZOTMLcLQo5pBn4Miks+1ca
fP2ys3jpAtxrZCv5iQ7HM14WS67DoTe3Dx1hFSO8653lvSBOuEk2WyKXB/bw
njBqFoAPKQmSRoVhRb/+Vyui8L8AFlTYFA==
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
cbMAfFBZkDQqDCv59b9aEYX/B+UrB+k=
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rCG7kWwTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/z4Jo55zJJ43mb/sYG0bqE+R/zMdeGvY5dZb87/wlwtqJ
fy0bNq8QZtuxi8FXvEbYxl6rzF/hO+GA4gPkivssBv8un5Ww+KmqunJvNsJH
916pHlNnJ3zpzmC9+AfYKkFTjSOGg3BB3bD48x84CcuZHdsnXgQz289FOOwK
o8W7CI5N9t4fLsdNmFTJwaVDgZPHAsKNluHysgtp6g5bCHd16AcH1sK0yv71
S2I8hFdIKRcLfGDm+MG90rTPaUK8hG9Gsz8ddYIVzW9R7QthuY3eHl0anEXl
W8nfw0fYXi3ZrC8E9u562jhYA/c/HVr4kw4vCdREru3hJ9wxv9Xa3g9mzi/c
0Ln/q8oYXGjY1vFMSoAwVeCa54oFLOCvdWAwCrYooZi4V8G79dVPNk3AwjOi
4jRxQcLGJ9d0OE3hB915v/IFwj5GNxsE78FPaDc1pHvhoDpLPV06zPw/txJ+
LFNSPXAE/s5i9d0lED78qKxIORsu1lPwVGmD+be1BvtOw/MbtXZR3EKELX12
9SxKwXaZpffESPAx02cd4/pwqGrnivtx+IaW+5ssF1jAR+TLNT/4y5ud0RpR
sIzk2FRyCsxcf3CQalpqSgWcr2j++qdWeLewymxmP7yvry732Xu4Tjotp+Yb
LG/oER+0AXdTlRZW+YUJk20WHC1k4AkNBe1fVGHZ4jWq417Ykft+powJLDLV
3Fp8AtbTOhon6AKrWiiKmpyHA8ofx1uGwQcjQtY142Dm/gO75+SzhefCUeNu
ieMl8B/uSzwqNTBvHt3ZtAM2bZj2MuiHB8gpHBJvYRc/p9XnU/DS9TIJpwVY
iKQp0/cdbnRUbtnOJ0I40LOg8bg47Eudb3WVh39rKgg+RYLH6tcj1PbC9Afc
l8cNN/nIpy2RR2GvQPoTVhtYTVZcysMVZu7PsGatzM6PQXBDZ9wo/Qo8s83O
fSke/pils2ckFX64X7urIAdOdaelOhbADoeaeBn/hdstm7MiamGuU6yVtLZN
7THNrDHvhe896BJLosKJlTxqjaOw41Vt+z+n4IwPCazvZmET/fGLLxjwjcSH
yqXs2wiXHfp2IpgfrvbNt1MXg62p8QkDsnB36EG9sz/CzPMNPlI5a261F56+
5W9YSoZVlbjHlw/Bk6pzoZqWsN3pVjN7W9hI3SXN3wUun5O+G+YJ9zypeuTv
C1f6Bszbh8BuXQq12hHwuJfq/vU4mESjlFUnwd623FZnMuB05XU7lrtwsFgW
S1I+nBMxFLa1DF5xDViPrIJF+CTqJ+ph52um0/rt8PaagCdxPTD3do6T7QNw
n6vt7PwrmBk/wI5uH8dIU7BSMGuqzjf46/n2Re0l2H5uREd5Hd49KRPByyFK
ONMikjHGC1uz6PaVC8OWGrkKgZKwUYv1djU5OCxUbZKqDDPoxveDSbBHOlug
gDbsuEU64vY+uJxOmZY0gCVP1w9QTOGoThsnxlGY4htU5GANm5knvK6wg8OH
QgVYXOC88Rg345/hKvLP9Is+cLOa0V8l/vDp4SrnwRBYpHToHO0yzIzfNtX/
ebhR8Ab8w4itgVAyHM3R/XxLBhwX1h5Cz4aF4vzOjt6H/+N0taChEM55queQ
WgYf8PK/7fI7/NNAYrByLWxrliT0sQm2CBAKv9UBqyWZ9hn1wGt5HPKTL+GX
JQ3xV6lwxePY7ZJvNn3fKbn44ANcJjuosGsSPjNSX18wAw9zxQ3LzsHvbClx
CcuwPMfb9/NrcK0vadmaTYywzszE2xJu2M1CtXCDf1N+arvnYRFY14uslSgB
M+NruEUxWoVFAT53djFEYycc25shZUuCrbPTZMI0YZrVYFK6DnyBdTW26AD8
MD1AuMYAXhX0ILeYwIE1rTvazOFdDrodjcfhSw5kvd9PwjvGxNLz7GC9xZZ3
Cc7wWKSIiu+ZTfX55V455gn3l7yYVzoPJ0i8TFnyg3+j3PFq/RU+9Yoz/lo4
zHb77qpZBGxMGnrBHgMfzH4vUhMPP/Lt7fekbBqfxFCpbanwJ85bS9UZ8OiX
giCb7E3zKc2TN5sL9zCmrsc+hJn3IzjzuUhtbhlcLPxV8sdKeEjFxzW/Gm4z
m78jXw9fjW57k9EMb/gvK/N0wN1/RMcEdcOndfS53vbCM5S+CvIAXDjSlp5D
hRerY2qWXm/q35y9ypFROFn23Ezm2Kb+7KjaOjEJc7coZpNm4MuksKxfaPD1
y84SJQtwr7Gt1Cc6HM94WSS1DofeFB06zCpOeOc7q3tBnHCTXJZkDg/s4T1h
3CwAH1QWJI0Kw0p+/a9WxOD/AY3P/xA=
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
JoyaBeBDSoKkUWFY0bf/zYoo/C93wng4
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
e8KoWQA+pCRIGhWGFf36X62Iwv8BzCLuiQ==
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
bhaADyoLkkaFYSW//lcrovD/ACy97G0=
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
qEkAPqQkSBoVhhV9+16viML/BbgdIWI=
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
xi2C8EEVIdK4CKzsN/ByRQz+H3s3Bu8=
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
TXzwQUV+0qggrODT/2pFGP4fdmFd2Q==
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/jxOtILjNYbnp2z7GhpH6BPkf87GXhn1OnSX/O3+JsHbi
X8uGzSuE2XbsYvAVrxG2sdcq81f4Tjig+AC54j6Lwb/LZyUsdqqqrtybjfDR
vVeqx9TZCV+6M1gv9gG2StBU44jhIFxQNyz2/AdOwnJmx/aJFcHM9nMRDrvC
aPEugmOTvfeHy3ETJlVycOlQ4OSxgHCjZbi87EKausMWwl0d+sGBtTCtsn/9
kigP4RVSysUCH5g5fnCvFO1zmhAv4ZvR7E9HnWBF81tU+0JYbqO3R5cGZ1H5
VvL38BG2V0s26wuBvbueNg7WwP1Phxb+pMNLAjWRa3v4CXfMb7W294OZ8ws3
dO7/qjIGFxq2dTyTFCBMFbjmuWIBC/hrHRiMgi1KKCbuVfBuffWTTROw8Mx2
MZqYIGHjk2s6nKbwg+68X/kCYR+jmw2C9+AntJsaUr1wUJ2lni4dZv6fWwk/
li6pHjgCf2ex+u4SCB9+VFaknA0X6yl4qrTB/Ntag32n4fmNWrsobiHClj67
ehYlYbvM0nuiJPiY6bOOcX04VLVzxf04fEPL/U2WCyzgI/Llmh/85c3OaI0o
WFpibCo5BWauPzhINS01pQLOVzR//VMrvFtYZTazH97XV5f77D1cJ5WWU/MN
ljf0iA/agLupSgur/MKEyTYLjhbS8ISGgvYvqrBM8RrVcS/syH0/U9oEFplq
bi0+AetpHY0TdIFVLRS3m5yHA8ofx1uGwQcjQtY142Dm/gO75+SzhefCUeNu
ieMl8B/uSzwqNTBvHt3ZtAM2bZj2MuiHB8gpHOJvYRc/p9XnU/DS9TJxpwVY
iKQp3fcdbnRUbpHlEyEc6FnQeFwM9qXOt7rKw781FQSfIsFj9esRanth+gPu
y+OGm3zk05bIo7BXIP0Jqw2sJiMm6eEKM/dnWLNWeufHILihM26UfgWe2Wbn
vhQPf8zS2TOSCj/cr91VkAOnutNSHQtgh0NNvIz/wu2WzVkRtTDXKdZKWtum
9phm1pj3wvcedIkmUeHESh61xlHY8aq2/Z9TcMaHBNZ3s7CJ/vjFFwz4RuJD
5VL2bYTLDn07EcwPV/vm26mLwtbU+IQBGbg79KDe2R9h5vkGH6mcNbfaC0/f
8jcsJcOqStzjy4fgSdW5UE1L2O50q5m9LWyk7pLm7wKXz0ndDfOEe55UPfL3
hSt9A+btQ2C3LoVa7Qh43Et1/3ocTKJRyqqTYG9bbqszGXC68rody104WDSL
JSkfzokYCttaBq+4BqxHVsEifOL1E/Ww8zXTaf12WLYm4ElcD8wty3GyfQDu
c7WdnX8FM+MH2NHt4xhpClYKZk3V+QZ/Pd++qL0E28+N6Civw7snpSN4ObYT
zrSIZIzxwtYsun3lwrClRq5CoARs1GItqyYHh4WqTVKVYQbd+H4wCfZIZwsU
0IYdt0hF3N4Hl9Mp0xIGsMTp+gGKKRzVaePEOApTfIOKHKxhM/OE1xV2cPhQ
qACLC5w3HuNm/DNcRf6ZftEHblYz+qvEHz49XOU8GAKLlA6do12GmfHbpvo/
DzcK3oB/GLE1EEqGozm6n2/JgOPC2kPo2bBQnN/Z0fvwf5yuFjQUwjlP9RxS
y+ADXv63XX6HfxpIDFauhW3NkoQ+NsEWAULhtzpgtSTTPqMeeC2PQ37yJfyy
pCH+KhWueBwrK/Fm0/edEosPPsBlMoMKuybhMyP19QUz8DBX3LDMHPzOlhKX
sAzLc7x9P78G1/qSlq3ZRAnrzEy8LeGG3SxUCzf4N+WntnseFoF1vchaieIw
M76GWxSjVVgU4HNnF0M0dsKxvRmStiTYOjtNOkwTplkNJqXrwBdYV2OLDsAP
0wOEawzgVUEPcosJHFjTuqPNHN7loNvReBy+5EDW+/0kvGNMND3PDtZbbHmX
4AyPRYqo+J7ZVJ9f7pVjnnB/yYt5pfNwgvjLlCU/+DfKHa/WX+FTrzjjr4XD
bLfvrppFwMakoRfsMfDB7PciNfHwI9/efk/KpvFJDJXclgp/4ry1VJ0Bj34p
CLLJ3jSfUjx5s7lwD2PqeuxDmHk/gjOfi9TmlsHFwl8lfqyEh1R8XPOr4Taz
+Tvy9fDV6LY3Gc3whv+yMk8H3P1HdExQN3xaR5/rbS88Q+mrIA/AhSNt6TlU
eLE6pmbp9ab+zdmrHBmFk2XOzWSOberPjqqtE5Mwd4tiNmkGvkwKy/qFBl+/
7CxesgD3GttKfqLD8YyXRZLrcOjN7UOHWcUI73xndS+IE26Sy5LI4YE9vCeM
mwXgg8qCpFFhWMmv/9WKKPw/RQthwQ==
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
UbMAfEhJkDQqDCv69r9aEYX/B8e9wYo=
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
14RRkwB8SEmQNCoMK/r2v1oRhf8FeykrJw==
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
E8YtAvBhJUHSmDCs6DfwekUU/hd5VeGz
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
m/ngw4r8pDFBWMGn//WqMPw/CgJIXQ==
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
3CwAH1QWJI0Kw0p+/a9WROH/AcezKTI=
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
bOKDDyryk0YEYQWfvtcrwvB/AcGBy04=
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/z1CigqJieBP52z7GhpH6BPkf87GXhn1OnSX/O3+JsHbi
X8uGzSuE2XbsYvAVrxG2sdcq81f4Tjig+AC54j6Lwb/LZyUsdqqqrtybjfDR
vVeqx9TZCV+6M1gv9gG2StBU44jhIFxQNyz2/AdOwnJmx/aJFcHM9nMRDrvC
aPEugmOTvfeHy3ETJlVycOlQ4OSxgHCjZbi87EKausMWwl0d+sGBtTCtsn/9
kigP4RVSysUCH5g5fnCvFO1zmhAv4ZvR7E9HnWBF81tU+0JYbqO3R5cGZ1H5
VvL38BG2V0s26wuBvbueNg7WwP1Phxb+pMNLAjWRa3v4CXfMb7W294OZ8ws3
dO7/qjIGFxq2dTyTFCBMFbjmuWIBC/hrHRiMgi1KKCbuVfBuffWTTROw8Mx2
MZqYIGHjk2s6nKbwg+68X/kCYR+jmw2C9+AntJsaUr1wUJ2lni4dZv6fWwk/
li6pHjgCf2ex+u4SCB9+VFaknA0X6yl4qrTB/Ntag32n4fmNWrsobiHClj67
ehYlYbvM0nuiJPiY6bOOcX04VLVzxf04fEPL/U2WCyzgI/Llmh/85c3OaI0o
WFpibCo5BWauPzhINS01pQLOVzR//VMrvFtYZTazH97XV5f77D1cJ5WWU/MN
ljf0iA/agLupSgur/MKEyTYLjhbS8ISGgvYvqrBM8RrVcS/syH0/U9oEFplq
bi0+AetpHY0TdIFVLRS3m5yHA8ofx1uGwQcjQtY142Dm/gO75+SzhefCUeNu
ieMl8B/uSzwqNTBvHt3ZtAM2bZj2MuiHB8gpHOJvYRc/p9XnU/DS9TJxpwVY
iKQp3fcdbnRUbpHlEyEc6FnQeFwM9qXOt7rKw781FQSfIsFj9esRanth+gPu
y+OGm3zk05bIo7BXIP0Jqw2sJiMm6eEKM/dnWLNWeufHILihM26UfgWe2Wbn
vhQPf8zS2TOSCj/cr91VkAOnutNSHQtgh0NNvIz/wu2WzVkRtTDXKdZKWtum
9phm1pj3wvcedIkmUeHESh61xlHY8aq2/Z9TcMaHBNZ3s7CJ/vjFFwz4RuJD
5VL2bYTLDn07EcwPV/vm26mLwtbU+IQBGbg79KDe2R9h5vkGH6mcNbfaC0/f
8jcsJcOqStzjy4fgSdW5UE1L2O50q5m9LWyk7pLm7wKXz0ndDfOEe55UPfL3
hSt9A+btQ2C3LoVa7Qh43Et1/3ocTKJRyqqTYG9bbqszGXC68rody104WDSL
JSkfzokYCttaBq+4BqxHVsEifOL1E/Ww8zXTaf12WLYm4ElcD8wty3GyfQDu
c7WdnX8FM+MH2NHt4xhpClYKZk3V+QZ/Pd++qL0E28+N6Civw7snpSN4ObYT
zrSIZIzxwtYsun3lwrClRq5CoARs1GItqyYHh4WqTVKVYQbd+H4wCfZIZwsU
0IYdt0hF3N4Hl9Mp0xIGsMTp+gGKKRzVaePEOApTfIOKHKxhM/OE1xV2cPhQ
qACLC5w3HuNm/DNcRf6ZftEHblYz+qvEHz49XOU8GAKLlA6do12GmfHbpvo/
DzcK3oB/GLE1EEqGozm6n2/JgOPC2kPo2bBQnN/Z0fvwf5yuFjQUwjlP9RxS
y+ADXv63XX6HfxpIDFauhW3NkoQ+NsEWAULhtzpgtSTTPqMeeC2PQ37yJfyy
pCH+KhWueBwrK/Fm0/edEosPPsBlMoMKuybhMyP19QUz8DBX3LDMHPzOlhKX
sAzLc7x9P78G1/qSlq3ZRAnrzEy8LeGG3SxUCzf4N+WntnseFoF1vchaieIw
M76GWxSjVVgU4HNnF0M0dsKxvRmStiTYOjtNOkwTplkNJqXrwBdYV2OLDsAP
0wOEawzgVUEPcosJHFjTuqPNHN7loNvReBy+5EDW+/0kvGNMND3PDtZbbHmX
4AyPRYqo+J7ZVJ9f7pVjnnB/yYt5pfNwgvjLlCU/+DfKHa/WX+FTrzjjr4XD
bLfvrppFwMakoRfsMfDB7PciNfHwI9/efk/KpvFJDJXclgp/4ry1VJ0Bj34p
CLLJ3jSfUjx5s7lwD2PqeuxDmHk/gjOfi9TmlsHFwl8lfqyEh1R8XPOr4Taz
+Tvy9fDV6LY3Gc3whv+yMk8H3P1HdExQN3xaR5/rbS88Q+mrIA/AhSNt6TlU
eLE6pmbp9ab+zdmrHBmFk2XOzWSOberPjqqtE5Mwd4tiNmkGvkwKy/qFBl+/
7CxesgD3GttKfqLD8YyXRZLrcOjN7UOHWcUI73xndS+IE26Sy5LI4YE9vCeM
mwXgg8qCpFFhWMmv/9WKKPw/iVFxiw==
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
bOGDDyvyk8YEYQXfgVerwvD/AJbrIFM=
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
3CwAH1QWJI0Kw0p+/a9WROH/ASYCpyw=
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
qEUAPqQkSBoThhX9Bl6tiML/A0tz9WE=
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/D+2TOTWzra3p2z7GhpH6BPkf87GXhn1OnSX/O3+JsHbi
X8uGzSuE2XbsYvAVrxG2sdcq81f4Tjig+AC54j6Lwb/LZyUsdqqqrtybjfDR
vVeqx9TZCV+6M1gv9gG2StBU44jhIFxQNyz2/AdOwnJmx/aJFcHM9nMRDrvC
aPEugmOTvfeHy3ETJlVycOlQ4OSxgHCjZbi87EKausMWwl0d+sGBtTCtsn/9
kigP4RVSysUCH5g5fnCvFO1zmhAv4ZvR7E9HnWBF81tU+0JYbqO3R5cGZ1H5
VvL38BG2V0s26wuBvbueNg7WwP1Phxb+pMNLAjWRa3v4CXfMb7W294OZ8ws3
dO7/qjIGFxq2dTyTFCBMFbjmuWIBC/hrHRiMgi1KKCbuVfBuffWTTROw8Mx2
MZqYIGHjk2s6nKbwg+68X/kCYR+jmw2C9+AntJsaUr1wUJ2lni4dZv6fWwk/
li6pHjgCf2ex+u4SCB9+VFaknA0X6yl4qrTB/Ntag32n4fmNWrsobiHClj67
ehYlYbvM0nuiJPiY6bOOcX04VLVzxf04fEPL/U2WCyzgI/Llmh/85c3OaI0o
WFpibCo5BWauPzhINS01pQLOVzR//VMrvFtYZTazH97XV5f77D1cJ5WWU/MN
ljf0iA/agLupSgur/MKEyTYLjhbS8ISGgvYvqrBM8RrVcS/syH0/U9oEFplq
bi0+AetpHY0TdIFVLRS3m5yHA8ofx1uGwQcjQtY142Dm/gO75+SzhefCUeNu
ieMl8B/uSzwqNTBvHt3ZtAM2bZj2MuiHB8gpHOJvYRc/p9XnU/DS9TJxpwVY
iKQp3fcdbnRUbpHlEyEc6FnQeFwM9qXOt7rKw781FQSfIsFj9esRanth+gPu
y+OGm3zk05bIo7BXIP0Jqw2sJiMm6eEKM/dnWLNWeufHILihM26UfgWe2Wbn
vhQPf8zS2TOSCj/cr91VkAOnutNSHQtgh0NNvIz/wu2WzVkRtTDXKdZKWtum
9phm1pj3wvcedIkmUeHESh61xlHY8aq2/Z9TcMaHBNZ3s7CJ/vjFFwz4RuJD
5VL2bYTLDn07EcwPV/vm26mLwtbU+IQBGbg79KDe2R9h5vkGH6mcNbfaC0/f
8jcsJcOqStzjy4fgSdW5UE1L2O50q5m9LWyk7pLm7wKXz0ndDfOEe55UPfL3
hSt9A+btQ2C3LoVa7Qh43Et1/3ocTKJRyqqTYG9bbqszGXC68rody104WDSL
JSkfzokYCttaBq+4BqxHVsEifOL1E/Ww8zXTaf12WLYm4ElcD8wty3GyfQDu
c7WdnX8FM+MH2NHt4xhpClYKZk3V+QZ/Pd++qL0E28+N6Civw7snpSN4ObYT
zrSIZIzxwtYsun3lwrClRq5CoARs1GItqyYHh4WqTVKVYQbd+H4wCfZIZwsU
0IYdt0hF3N4Hl9Mp0xIGsMTp+gGKKRzVaePEOApTfIOKHKxhM/OE1xV2cPhQ
qACLC5w3HuNm/DNcRf6ZftEHblYz+qvEHz49XOU8GAKLlA6do12GmfHbpvo/
DzcK3oB/GLE1EEqGozm6n2/JgOPC2kPo2bBQnN/Z0fvwf5yuFjQUwjlP9RxS
y+ADXv63XX6HfxpIDFauhW3NkoQ+NsEWAULhtzpgtSTTPqMeeC2PQ37yJfyy
pCH+KhWueBwrK/Fm0/edEosPPsBlMoMKuybhMyP19QUz8DBX3LDMHPzOlhKX
sAzLc7x9P78G1/qSlq3ZRAnrzEy8LeGG3SxUCzf4N+WntnseFoF1vchaieIw
M76GWxSjVVgU4HNnF0M0dsKxvRmStiTYOjtNOkwTplkNJqXrwBdYV2OLDsAP
0wOEawzgVUEPcosJHFjTuqPNHN7loNvReBy+5EDW+/0kvGNMND3PDtZbbHmX
4AyPRYqo+J7ZVJ9f7pVjnnB/yYt5pfNwgvjLlCU/+DfKHa/WX+FTrzjjr4XD
bLfvrppFwMakoRfsMfDB7PciNfHwI9/efk/KpvFJDJXclgp/4ry1VJ0Bj34p
CLLJ3jSfUjx5s7lwD2PqeuxDmHk/gjOfi9TmlsHFwl8lfqyEh1R8XPOr4Taz
+Tvy9fDV6LY3Gc3whv+yMk8H3P1HdExQN3xaR5/rbS88Q+mrIA/AhSNt6TlU
eLE6pmbp9ab+zdmrHBmFk2XOzWSOberPjqqtE5Mwd4tiNmkGvkwKy/qFBl+/
7CxesgD3GttKfqLD8YyXRZLrcOjN7UOHWcUI73xndS+IE26Sy5LI4YE9vCeM
mwXgg8qCpFFhWMmv/9WKKPw/zlPzQw==
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
qFkAPqQkSBoVhhV9+1+tiML/A8aiy04=
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
NwvAB5UFSaPCsJJf/6sVUfh/Vw/qow==
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
hGETH3xYkZ80KgQr+PS9WRGB/wMlzgrq
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
4xYBeL+yIGlMGFbyG3i5Kgr/FzHpMvY=
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk0ltkfB3C7rKHsg2wTeeOPSSrOa08qkTp2oQyhyTq2FmRJ2Zc0llIK
2fpjJPseciiM15RKRZYy9dpfr6X/f8575vma55x7nvM59zx3fe69vyvrevGk
GwsTExP9/+nv9z/P3v7kzSSjxeZvB+ibBqqT5H/Mw1oW+jltjvzv/GXCmgl/
rei3rBJm2bWHzlOyTtjaTqPcT+47Yf+SQ+TK+0x6/y6fmbDI6er6Ci8Wwsf2
X60ZV2UlfPnOUIPIB9gyXl2FLZqNcGH9iMjzH9gJy5gePyBSDDPaz0E49Cq9
1asYjknxOhgmw0mYVMXGoZUIp4z7hxmswBXlF9NV7bcR7u7UDQqog6lVAxuX
hbkIr5JSLxV6w4zxg/skqJ/TBbgJJ0exPh1zhOXNblHsimCZzb5ebSqcTeFZ
LdjHQ9hOJcW0Pxj26n7aNFQLDzwdXvyTBi/z1Uas7+Ml3Lmw3crOF2bML9zY
dfCr0jhcpN/e+UycjzCF77rHqjnM56dxaCgSNi9NNHarhvfqqp5qnoQFZ3eK
UEX4CRueWtdiN4Ef9OT/yhMAexskN/Lfg59Qk9Uk+uDAegsdbRrM+D+3E34s
WVozeBT+zmT53TkAPvKovFgxBy7RkfNQaod5d7QF+czAC5t1tpGcAoQtvPf0
LonDtlll94RJ8HGTZ50TunCIcteq2wn4pobbm2xnmM9b6Mt1X/jLm91RapGw
pNj4dEoqzFh/cKByelpqJVwgb/b6pzZ4r6DSXNYAfKC/Pu/Ze7heIj239hss
q+8eF7gJ91AUFtd4BQmTrRcdzCXhSTU5zV+UYamSdYrDftiB836WpDEsNN3S
VnIS1tE4FsvvDCuby+80vgD7VzyOswiFjcKDN9RjYcb+A7vlFrCE5cGRE64J
E6XwH27LXEq1MHc+zcmkEzZpnPHUG4AHyalsom9hZ1/HtefT8PKNclHHRViA
pC7Z/x1uclBsleYRIhzgUdh0QgT2oSy0ucjCvzUXBp0mweMNG+Eq+2HaA84r
E/pbfPTTtohjsGcA7QmzNawiJSLu7gIz9mdYvU5y98dAuLErdox2FZ7dYeu2
HAd/zNbaN5oGPzyo2V2YC6e5UdMcCmH7w83c9P/CHRYt2eF1MMdp5ipq+5b2
mGTVmvXB9x50CydR4IQqLpWmMdjhmqbdn9Nw5od45ndzsLHuxKUXdPhmwkPF
MtYdhMsPfzsZxAvX+BTYqgrDVpS4+EEpuCfESOfcjzDjfIOPVs2ZWe6HZ275
6ZeRYWUFzomVw/CU8nyIugVse6bN1M4GNlB1TvdzhivmJe6GesC9T6of+fnA
VT7+C3bBsGu3XJ1mODzhqXxwIxYmURPLa5JgLxtOy7OZcIbihi3TXThIOJsp
qQDODR8O3V4Or7r4b0RUw0I8og2TDbDTdZMZ3Q5Yutb/SWwvzCnNdqpjEO53
sZlbeAUz4gfYwfXjOGkaVghiTtP6Bn+90LGkuQzbzY9qKW7Ae6ckw7nZdhLO
Mo+gj3PDVkza/RWCsIVanlyAGGzQaiWtIgOHhqhMURRhOs3wfhAJds9gCeDT
hB22SYTfPgBX0BJnxPRgsTMNg4kmcGSXtSP9GJzoE1hsbwWbmsW/rrSFw4ZD
+Jic4fyJaFfDn+Fq8s+0S95wi4rBX6V+8JmRaqehYFiobPg89QrMiN+21P95
pIn/JvzDqI2eQAocxdbzfFsmHBvaEUzLgQVifc+N3Yf/43itsLEIzn2qY59W
Dh/y9Lvt/Dv802BCkGIdbGOaJPCxGTb3Fwi71QmrJJn0G/TC6/lsslMv4Zel
jXHXKHDl4xhpsTdbvu8SW3rwAS6XGpLbMwWfHW1oKJyFRzhiR6Tm4Xc2ibHx
K7As29v3C+twnQ9pxYpFmLDW7OTbUk7Y1Vy5aJN3S35ah8cRIVjbk6yRIAoz
4mu4VT5KiUkOPn9uKVhtNxzTlyluQ4KtctIlQ9VhquVQUoYWfJF5Lab4EPww
w1+wVg9e43cntxrDAbVtu9rN4D322p1NJ+DL9mSd30/Bu8aFM/JtYZ2l1nfx
TvB4hJCSz9kt9fnmXT3uAQ+UvlhQuADHi75MXfaFf0u849n2K3z6FXvc9TCY
5fbdNdNw2JA0/II1GjbKeS9UGwc/8ukb8EjcMj4JIeI70uBP7LeWazLhsS+F
gdY5W+ZTgit/Lg/upU/fiHkIM+5HcNZzobq8crhE8KvYj1XwsJK3S0EN3G66
cEe2Ab4W1f4mswXe9FtR5OqEe/6Iig7sgc9o6XK87YNnE/sryYNw0Wh7Ri4F
XqqJrl1+vaV/83ZKR8fgFKnzs1njW/qzq3r75BTM2SqfQ5qFr5BCs3+hwjeu
OImWLsJ9hjbin2hwHP1lsfgGHJK8c/gIswjh3e8s7wWyw80y2WK5XLC716Rh
Cx9spMhPGhOEFXwHXq0Kw/8DCTky4Q==
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
LXzwYUV+0pggrOAz8GpVGP4fwbgQyA==
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk01dseB/BjzhjKfCXTjZy4uEnFOoZIKpFaZqFcQjfjNTWYpQyZ0jWU
UsjUxZXMc8iicB23VCoylFvHfBxD77113vt/vf9ae/3XZ+313+N/7/3bsi4X
T7qykkgkxr/Tf97/e8QjhVIVHEYp3/YzNgxUJyii/zUvW2nI59RZwsz8JcKa
Cf8s6zevEGbduZvBW7xG2MpWo8xX7jthv+KDlIr7JL3/L5+FsOjpqrpyT1bC
x/ZdrR5TZSN8+c5gvegH2CJeXYU9mp1wQd2w6PMfOAjLmBzfL1oEM9vPSTjk
KqPFswiOSfY8ECrDRZhcyc6plQgnj/mFGizD5WUX01TtthDu6tAN9K+FaZX9
65dFuAmvkFMuFXjBzPGDeyVpn9MEeQjfjGJ7OuoAy5veotoWwjIbvT3aNDiL
yruSv5eXsK1KsklfEOzZ9bRxsAbufzq08DcdXuKvCV/by0e4Y36rpa0PzJxf
uKHzwFelMbhQv63jmQQ/YSr/NfcVM5jfV+PgYARsVpJo5FoF79FVPdU0AQvN
bBeliQoQNjy1psVhDD/ozvuN1x/2MrjZIHAPfkK7qSbZCwfUmeto02Hm/7mV
8GOpkuqBo/B3ksV3J3/4yKOyIsVsuFhHzl2pDebb1hroPQ3Pb9TaRHAJEjb3
2t2zKAHbZJbeEyHDx42fdYzrwsHKnSuuJ+AbGq5vspxgfi/hL9d84C9vdkWp
RcBS4mNTySkwc/3BAcppqSkVcL686eufW+E9Qkqzmf3w/r663Gfv4TrJtJya
b7CsvltcwAbcTVVYWOUTIkyxWrA3k4In1OQ0f1WGpYvXqPb7YHuu+5lSRrDw
VHNr8UlYR+NYrIATrGwmv93oAuxX/jjOPAQ+FBa0rh4LM/cf2DUnnzU0F44Y
d0kYL4H/cl3iVqqBefLojsYdsHHDtIdePzxASWEXews7+TisPp+Cl66XiTks
wIJkdam+73CjvWLLDl5hwv7uBY0nRGFv6nyrsyz8e1NB4GkyPFa/HqayD6Y/
4Loyrr/JRz9tCT8Ge/jTn7BYwSrSohJuzjBzf4bVa6V2fQyAGzpjR+lX4Zlt
Nq5LcfDHLK29I6nwwwOaXQU5cKorLdW+ALY73MTD+ANuN2/OCquFOU+zVNLa
NrXHOLPGtBe+96BLJIkKJ1RyqzSOwvaRmrZ/T8EZH+JZ3s3CRrrjl14w4BsJ
DxVL2bYRLjv87WQgH1ztnW+jKgJbUuPiB6Th7uBDOud+hJnnG3y0ctbUYh88
fctXv5QCKytwjS8fhieV54LVzWGbM60mttawgapTmq8TXD4neTfEHe55UvXI
1xuu9Pabtw2CXbrkajXD4HEP5QPrsTCZllhWnQR7WnNZnM2A0xXXbUh34UCR
LFJSPpwTNhSytQxecfZbD6+ChXnF6ifqYcdrxtO67fCOGr8nsT0w1w72U+0D
cJ+z9ez8K5gZP8D2Lh/HyFOwQiBLqtY3+OuF9kXNJdh2bkRLcR3eMykVxsO+
nXCmWThjjAe2JGn3lQvB5mq5cv7isEGL5Q4VGTgkWGWSqggz6Ib3A8mwWzqr
P78mbL9FMuz2fricnjgtrgeLn6kfSDSGIzqtHBjH4ETvgCI7S9jENP51hQ0c
OhTMT3KC88ajXQx/gasov9AvecHNKgb/lPjCZ4arHAeDYOHSofO0KzAzfttU
/+fhRoEb8A8j1nqCyXAUe/fzLRlwbEh7ED0bFoz1OTd6H/7JIbKgoRDOeapj
l1oGH/Twve30J/zzQEKgYi1sbZIk+LEJNvMTDL3VAaskGfcZ9MBreeyyky/h
lyUNcZFUuOJxzA7xN5u+7xRffPABLpMelNs9CZ8dqa8vmIGHOWOHpefgd9aJ
sfHLsCz72/fza3CtN3nZklWEsNbMxNsSLtjFTLlwg29Tfmq7+xFhWNuDopEg
BjPja7hFPkqJJAefP7cYpLYLjunNkLAmw5bZaVIh6jDNYjApXQu+yLIaU3QQ
fpjuJ1SjB68KuFFajGD/mtadbabwbjvtjsYT8GU7is6fp+CdYyLpeTawzmLL
u3hHeCxcWMn77Kb6fHKvHneH+0tezCtcgOPFXqYs+cC/J97xaP0NPv2KI+5a
KMx6++6qSRhsSB56wRYNH8p+L1wTBz/y7u13T9w0PgnBEttS4U8ct5aqM+DR
LwUBVtmb5lOSO282F+5hTF2PeQgz70dw5nPh2twyuFjoq/iPlfCQkpdzfjXc
ZjJ/R7Yejoxqe5PRDG/4Lityd8Ddf0VFB3TDZ7R0Od/2wjOJfRWUAbhwpC09
hwovVkfXLL3e1L85W6Wjo3Cy9PmZzLFN/dlZtXViEuZqkc8mz8BXyCFZv9Lg
61ccxUoW4F5Da4lPdDiO8bJIYh0Ovrl96AiLKOFd7yzuBXDATTJZ4jncsJvn
hGEzP3xIUYA8KgQr+PS/WhGB/wVccAz3
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
wyZ++JCiAHlUCFbw6Xu9IgL/D9iaHnQ=
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
+eBDivykUUFYwaf/1Yow/D8GyuDf
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Fj74sCI/aUwQVvAZeLUqDP8PCvzHew==
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
PWncIgAfVBYkjQnDSn4Dr1ZF4X8Bpyt/Iw==
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
JAAfUBIkjQjDir59r5ZF4f8BKuH5NA==
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Mmrhgw8r8pPGBWEF34HXa8LwvwB+7ATl
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Ex98WIGfNCIIy3v3vV4Rhv8GONRycA==
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
SQA+qCRIGhGGFX37Xi2Lwv8DWL8fbg==
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
qJkfPqgoQB4VghV8+1+tiMD/A+6hI1Y=
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/z7w0I/fM5HLTt32MDSP1CfI/5mMvDfucOkv+d/4SYe3E
v5YNm1cIs+3YxeArXiNsY69V5q/wnXBA8QFyxX0Wg3+Xz0pY7FRVXbk3G+Gj
e69Uj6mzE750Z7Be7ANslaCpxhHDQbigbljs+Q+chOXMju0TK4KZ7eciHHaF
0eJdBMcme+8Pl+MmTKrk4NKhwMljAeFGy3B52YU0dYcthLs69IMDa2FaZf/6
JVEewiuklIsFPjBz/OBeKdrnNCFewjej2Z+OOsGK5reo9oWw3EZvjy4NzqLy
reTv4SNsr5Zs1hcCe3c9bRysgfufDi38SYeXBGoi1/bwE+6Y32pt7wcz5xdu
6Nz/VWUMLjRs63gmKUCYKnDNc8UCFvDXOjAYBVuUUEzcq+Dd+uonmyZg4Znt
YjQxQcLGJ9d0OE3hB915v/IFwj5GNxsE78FPaDc1pHrhoDpLPV06zPw/txJ+
LF1SPXAE/s5i9d0lED78qKxIORsu1lPwVGmD+be1BvtOw/MbtXZR3EKELX12
9SxKwnaZpfdESfAx02cd4/pwqGrnivtx+IaW+5ssF1jAR+TLNT/4y5ud0RpR
sLTE2FRyCsxcf3CQalpqSgWcr2j++qdWeLewymxmP7yvry732Xu4Tiotp+Yb
LG/oER+0AXdTlRZW+YUJk20WHC2k4QkNBe1fVGGZ4jWq417Ykft+prQJLDLV
3Fp8AtbTOhon6AKrWihuNzkPB5Q/jrcMgw9GhKxrxsHM/Qd2z8lnC8+Fo8bd
EsdL4D/cl3hUamDePLqzaQds2jDtZdAPD5BTOMTfwi5+TqvPp+Cl62XiTguw
EElTuu873Oio3CLLJ0I40LOg8bgY7Eudb3WVh39rKgg+RYLH6tcj1PbC9Afc
l8cNN/nIpy2RR2GvQPoTVhtYTUZM0sMVZu7PsGat9M6PQXBDZ9wo/Qo8s83O
fSke/pils2ckFX64X7urIAdOdaelOhbADoeaeBn/hdstm7MiamGuU6yVtLZN
7THNrDHvhe896BJNosKJlTxqjaOw41Vt+z+n4IwPCazvZmET/fGLLxjwjcSH
yqXs2wiXHfp2IpgfrvbNt1MXha2p8QkDMnB36EG9sz/CzPMNPlI5a261F56+
5W9YSoZVlbjHlw/Bk6pzoZqWsN3pVjN7W9hI3SXN3wUun5O6G+YJ9zypeuTv
C1f6Bszbh8BuXQq12hHwuJfq/vU4mESjlFUnwd623FZnMuB05XU7lrtwsGgW
S1I+nBMxFLa1DF5xDViPrIJF+MTrJ+ph52um0/rtsGxNwJO4HphbluNk+wDc
52o7O/8KZsYPsKPbxzHSFKwUzJqq8w3+er59UXsJtp8b0VFeh3dPSkfwcmwn
nGkRyRjjha1ZdPvKhWFLjVyFQAnYqMVaVk0ODgtVm6Qqwwy68f1gEuyRzhYo
oA07bpGKuL0PLqdTpiUMYInT9QMUUziq08aJcRSm+AYVOVjDZuYJryvs4PCh
UAEWFzhvPMbN+Ge4ivwz/aIP3Kxm9FeJP3x6uMp5MAQWKR06R7sMM+O3TfV/
Hm4UvAH/MGJrIJQMR3N0P9+SAceFtYfQs2GhOL+zo/fh/zhdLWgohHOe6jmk
lsEHvPxvu/wO/zSQGKxcC9uaJQl9bIItAoTCb3XAakmmfUY98Foeh/zkS/hl
SUP8VSpc8ThWVuLNpu87JRYffIDLZAYVdk3CZ0bq6wtm4GGuuGGZOfidLSUu
YRmW53j7fn4NrvUlLVuziRLWmZl4W8INu1moFm7wb8pPbfc8LALrepG1EsVh
ZnwNtyhGq7AowOfOLoZo7IRjezMkbUmwdXaadJgmTLMaTErXgS+wrsYWHYAf
pgcI1xjAq4Ie5BYTOLCmdUebObzLQbej8Th8yYGs9/tJeMeYaHqeHay32PIu
wRkeixRR8T2zqT6/3CvHPOH+khfzSufhBPGXKUt+8G+UO16tv8KnXnHGXwuH
2W7fXTWLgI1JQy/YY+CD2e9FauLhR769/Z6UTeOTGCq5LRX+xHlrqToDHv1S
EGSTvWk+pXjyZnPhHsbU9diHMPN+BGc+F6nNLYOLhb9K/FgJD6n4uOZXw21m
83fk6+Gr0W1vMprhDf9lZZ4OuPuP6Jigbvi0jj7X2154htJXQR6AC0fa0nOo
8GJ1TM3S6039m7NXOTIKJ8ucm8kc29SfHVVbJyZh7hbFbNIMfJkUlvULDb5+
2Vm8ZAHuNbaV/ESH4xkviyTX4dCb24cOs4oR3vnO6l4QJ9wklyWRwwN7eE8Y
NwvAB5UFSaPCsJJf/6sVUfh/CzvISw==
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmcmMwScW5lkgqkTp2oQyhyTq2FmRJcWVLYyml
kK1Bkn0PORTGNaVSkaVMXft1Lf3/c+6Z92vec57zns95zvus7/M8v0fO9fxx
NzYWFhbG/9M/73+fhccNM1wd6k3f9jLWDdXGyf+aj70k9HPKDPm/+YuEtRL+
XjJoWibMtn0ng69olbC1nWapn/x3wv5F+8nl91j0/1s+K2Gxk5W1ZV5shI/s
uVw1qsZO+OLtgTqxD7BlvIYqRzQH4fzaIbHnP3ASljU9ulesEGa2n4tw6GVG
s1chHJPktS9MlpswqYKDS5sCJ436hxkuwWWl51PV7DcR7mzXCwqogWkVfWsX
RXkIL5OSL+R7w8zxg3ukaJ9ThXgJ34hifzriCCuY3aTaFcCy6z3dOjQ4k8q3
nLebj7CdapJpbzDs1fm0YaAa7ns6OP8XHV4UqI5Y3c1PuH1us5WdL8ycX7i+
Y99X5VG4wKC1/ZmkAGGqwFWPZXNYwE9z/0AkbF5MMXarhHfpqZ1oHIeFp7eK
0cQECRudWNXmNIHvd+X+xhcAexveqBe8Cz+h3VCX6oEDay10degw8//cTPiR
dHFV/2H4O4vld+cA+NDD0kKlLLhIV95DuRXm39IS5DMFz63X2EZyCxG28N7Z
vSAJ22aU3BUlwUdNnrWP6cEhKh3Lbsfg65pubzKdYQFvkS9XfeEvb3ZEqUfC
0hKjk0nJMHP9wYEqqSnJ5XCegtnrn1vgXcLKMxl98N7e2pxn7+FaqdTs6m+w
nIF7XOA63EVVnF/hFyZMtp53MJeGx9XltX5VgWWKVqkOe2AH7nsZ0sawyGRT
S9FxWFfzSKygM6xirrDV+BzsX/YoziIUPhAevKYRCzP3H9gtO48tLAeOHHNN
GCuG/3Rb5FGuhnlz6U4m7bBJ/ZSnfh/cT07mEH8LO/s6rjyfhBevlYo7zsNC
JA3p3u9wg4NS8zY+EcIBHvkNx8RgH+pci4sc/HtjftBJEjxatxauugem3+e+
NGawwYc/bYo4AnsG0J+wWsOqMmKS7i4wc3+GNWqkd3wMhOs7Ykfol+HpLbZu
i3Hwx0zt3cMp8IN9Wp352XCKGy3FIR+2P9jIy/gDbrNoygyvgblOslbQWje0
xySj2qwHvnu/UzSRCidU8Kg2jMAOV7Ts/pqE0z/Es76bgY31xi68YMDXEx4o
lbBvIVx68NvxIH64yifPVk0UtqLGxffLwF0hB3TP/Agzzzf4cMWMmeUeeOqm
n0EJGVZR5B5bOghPqMyGaFjAtqdaTO1sYEM151Q/Z7hsVupOqAfc/aTyoZ8P
XOHjP2cXDLt2ytdohcNjnir71mJhEo1SWpUIe9lwW55Oh9OU1mxZ7sBBopks
iXlwdvhg6OZSeNnFfy2iEhbhE68br4OdrppM6bXB26r9n8R2w9zbOE609cO9
LjYzc69gZvwAO7h+HCVNwopBrCna3+Cv59oWtBZhu9lhbaU1eNeEdDgvx1bC
GeYRjFFe2IpFp7dMGLZQz5EPkIANm622qcrCoSGqE1QlmEE3uhdEgt3T2AIE
tGCHTVLht/bCZXTKlIQ+LHGqrp9iAkd2WDsyjsAUn8BCeyvY1Cz+dbktHDYY
IsDiDOeORbsa/QJXkn+hX/CGm1QN/y72g08NVToNBMMiJYNnaZdgZvy2of7P
Qw2C1+Efhm30hZLgKI6u55vS4djQtmB6FiwU63tm5B78k+OV/PoCOPuprn1K
Kbzf0++W82P45/6EIKUa2MY0UehjI2zuLxR2sx1WTTTpNeyGV3M55CZewi+L
6+OuUOHyRzHbJN5s+L5DYuH+B7hUZkB+5wR8eriuLn8aHuKKHZKZhd/ZUGLj
l2A5jrfv51bhGh/SkhWbKGHt6fG3xdywq7lKwTr/hvyUNo9DIrCOJ1kzQRxm
xtdws0KUMos8fPbMQrD6DjimJ13ShgRbZaVKh2rANMuBxDRt+DzrSkzhfvhB
mr9wtT68IuhObjaGA6pbtreawTvtddobjsEX7cm6j0/A20dF03JtYd2F5nfx
TvBohIiyz+kN9fnmXD7qAfcVv5hTPAfHi79MXvSFf6fc9mz5DT75ijPuahjM
duvOimk4bEQafMEeDR/Iei9SHQc/9Onp86BsGJ+EEMktKfAnzpuLVenwyJf8
QOusDfMpxZM7kwN3MyavxTyAmfcjOOO5SE1OKVwk/FXixwp4UNnbJa8KbjWd
uy1XB1+Jan2T3gSv+y0p8bTDXX9GRQd2wae09bje9sDTlN5ycj9cMNyalk2F
F6qiqxdfb+jfrJ3y4RE4SebsdMbohv5sr9w8PgFzNytkkabhS6TQzF9p8LVL
TuLF83CPkY3kJzocx3hZKLkGh9zYOniIVYzwjneWdwM54UbZTIlsHtjda9yo
SQA+oCRIGhGGFX37Xi2Lwv8DKek3ww==
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
LXzwIUV+0pggrOA38GpVGP4fvjhAtw==
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
zQLwQWVB0qgwrOTX/2pFFP4f3MyE/g==
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
zXzwIUV+0qggrODb/3pFGP4fR/eDCg==
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTuTGYpOJcSySVSB27UIbQZB1bC7KkuLKlsZRS
yNYfI9n3kENhXFMqFVnK1LVf19L//z/3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL43/p/+9/Hnbj+PREnp+av+1jbBipT5D/MR97adjn1Fnyv/OXCGsn
/r1s2LxCmG3HLgZf8RphG3utMn+F74QDig+QK+6zGPy7fFbCYqeq6sq92Qgf
3XulekydnfClO4P1Yh9gqwRNNY4YDsIFdcNiz3/gJCxndmyfWBHMbD8X4bAr
jBbvIjg22Xt/uBw3YVIlB5cOBU4eCwg3WobLyy6kqTtsIdzVoR8cWAvTKvvX
L4nyEF4hpVws8IGZ4wf3StE+pwnxEr4Zzf501AlWNL9FtS+E5TZ6e3RpcBaV
byV/Dx9he7Vks74Q2LvraeNgDdz/dGjhLzq8JFATubaHn3DH/FZrez+YOb9w
Q+f+rypjcKFhW8czSQHCVIFrnisWsIC/1oHBKNiihGLiXgXv1lc/2TQBC89s
F6OJCRI2Prmmw2kKP+jO+40vEPYxutkgeA9+QrupIdULB9VZ6unSYeb/uZXw
Y+mS6oEj8HcWq+8ugfDhR2VFytlwsZ6Cp0obzL+tNdh3Gp7fqLWL4hYibOmz
q2dRErbLLL0nSoKPmT7rGNeHQ1U7V9yPwze03N9kucACPiJfrvnBX97sjNaI
gqUlxqaSU2Dm+oODVNNSUyrgfEXz1z+3wruFVWYz++F9fXW5z97DdVJpOTXf
YHlDj/igDbibqrSwyi9MmGyz4GghDU9oKGj/qgrLFK9RHffCjtz3M6VNYJGp
5tbiE7Ce1tE4QRdY1UJxu8l5OKD8cbxlGHwwImRdMw5m7j+we04+W3guHDXu
ljheAv/pvsSjUgPz5tGdTTtg04ZpL4N+eICcwiH+Fnbxc1p9PgUvXS8Td1qA
hUia0n3f4UZH5RZZPhHCgZ4FjcfFYF/qfKurPPx7U0HwKRI8Vr8eobYXpj/g
vjxuuMlHPm2JPAp7BdKfsNrAajJikh6uMHN/hjVrpXd+DIIbOuNG6VfgmW12
7kvx8McsnT0jqfDD/dpdBTlwqjst1bEAdjjUxMv4D9xu2ZwVUQtznWKtpLVt
ao9pZo15L3zvQZdoEhVOrORRaxyFHa9q2/81BWd8SGB9Nwub6I9ffMGAbyQ+
VC5l30a47NC3E8H8cLVvvp26KGxNjU8YkIG7Qw/qnf0RZp5v8JHKWXOrvfD0
LX/DUjKsqsQ9vnwInlSdC9W0hO1Ot5rZ28JG6i5p/i5w+ZzU3TBPuOdJ1SN/
X7jSN2DePgR261Ko1Y6Ax71U96/HwSQapaw6Cfa25bY6kwGnK6/bsdyFg0Wz
WJLy4ZyIobCtZfCKa8B6ZBUswideP1EPO18zndZvh2VrAp7E9cDcshwn2wfg
Plfb2flXMDN+gB3dPo6RpmClYNZUnW/w1/Pti9pLsP3ciI7yOrx7UjqCl2M7
4UyLSMYYL2zNottXLgxbauQqBErARi3WsmpycFio2iRVGWbQje8Hk2CPdLZA
AW3YcYtUxO19cDmdMi1hAEucrh+gmMJRnTZOjKMwxTeoyMEaNjNPeF1hB4cP
hQqwuMB54zFuxr/AVeRf6Bd94GY1o79L/OHTw1XOgyGwSOnQOdplmBm/bar/
83Cj4A34hxFbA6FkOJqj+/mWDDgurD2Eng0LxfmdHb0P/+R0taChEM55queQ
WgYf8PK/7fIH/PNAYrByLWxrliT0sQm2CBAKv9UBqyWZ9hn1wGt5HPKTL+GX
JQ3xV6lwxeNYWYk3m77vlFh88AEukxlU2DUJnxmpry+YgYe54oZl5uB3tpS4
hGVYnuPt+/k1uNaXtGzNJkpYZ2bibQk37GahWrjBvyk/td3zsAis60XWShSH
mfE13KIYrcKiAJ87uxiisROO7c2QtCXB1tlp0mGaMM1qMCldB77AuhpbdAB+
mB4gXGMArwp6kFtM4MCa1h1t5vAuB92OxuPwJQey3h8n4R1joul5drDeYsu7
BGd4LFJExffMpvr8cq8c84T7S17MK52HE8Rfpiz5wb9T7ni1/gafesUZfy0c
Zrt9d9UsAjYmDb1gj4EPZr8XqYmHH/n29ntSNo1PYqjktlT4E+etpeoMePRL
QZBN9qb5lOLJm82FexhT12Mfwsz7EZz5XKQ2twwuFv4q8WMlPKTi45pfDbeZ
zd+Rr4evRre9yWiGN/yXlXk64O4/o2OCuuHTOvpcb3vhGUpfBXkALhxpS8+h
wovVMTVLrzf1b85e5cgonCxzbiZzbFN/dlRtnZiEuVsUs0kz8GVSWNavNPj6
ZWfxkgW419hW8hMdjme8LJJch0Nvbh86zCpGeOc7q3tBnHCTXJZEDg/s4T1h
3CwAH1QWJI0Kw0p+/a9WROH/AvEIGqE=
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
qFkAPqQkSBoThhV9+1+viML/A1hYHnQ=
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlZcmWxlJK
Icvtj5Hse8ihMK4plYosZerar2vp/59zz7xf857znPd8znPeZ32f5/k98m4X
TrizsbCwMP6f/n7/86QOVE+QfFubvu1jbBipT5D/MR97WdjntFnyv/OXCGsn
/rVs2LxCmG3HLgZfyRphG3stir/Cd8IBJQfIFfdZDP5dPithsVNVdeXebISP
7r1SPabOTvjSncF6sQ+wVYKmGkcMB+HCumGx5z9wEpYzO7ZPrBhmtp+LcNgV
Rot3MRyb4r0/XI6bMKmSg0snCU4ZCwg3WobLKRfS1R22EO7q0A8OrIVplf3r
l0R5CK+QUi8W+sDM8YN7pWif04V4Cd+MZn866gQrmt+i2hfBchu9Pbo0OJvK
t1Kwh4+wvVqKWV8I7N31tHGwBu5/OrTwJx1eEqiJXNvDT7hjfqu1vR/MnF+4
oXP/V5UxuMiwreOZpABhqsA1zxULWMBf68BgFGxRmmTiXgXv1lc/2TQBC89s
F6OJCRI2Prmmw2kKP+jO/5UvEPYxutkgeA9+QrupIdULB9VZ6unSYeb/uZXw
Y+nS6oEj8HcWq+8ugfDhR5Ri5Ry4RE/BU6UN5t/WGuw7Dc9v1NpFcQsRtvTZ
1bMoCdtlld0TJcHHTJ91jOvDoaqdK+7H4Rta7m+yXWABH5Ev1/zgL292RmtE
wdISY1MpqTBz/cFBqulpqRVwgaL5659a4d3CKrNZ/fC+vrq8Z+/hOqn03Jpv
sLyhR3zQBtxNVVpY5RcmTLZZcLSQhic0FLR/UYVlStaojnthR+77WdImsMhU
c2vJCVhP62icoAusaqG43eQ8HFD+ON4yDD4YEbKuGQcz9x/YPbeALTwPjhp3
Sxwvhf9wX+JRqYF58+nOph2wacO0l0E/PEBO5RB/C7v4Oa0+n4KXrlPEnRZg
IZKmdN93uNFRuUWWT4RwoGdh43Ex2Jc63+oqD//WVBh8igSP1a9HqO2F6Q+4
L48bbvKRT1sij8JegfQnrDawmoyYpIcrzNyfYc1a6Z0fg+CGzrhR+hV4Zpud
+1I8/DFbZ89IGvxwv3ZXYS6c5k5LcyyEHQ418TL+C7dbNmdH1MJcp1graW2b
2mOaVWPeC9970CWaTIUTK3nUGkdhx6va9n9OwZkfEljfzcIm+uMXXzDgG4kP
lcvYtxGmHPp2IpgfrvYtsFMXha2p8QkDMnB36EG9sz/CzPMNPlI5a261F56+
5W9YRoZVlbjHlw/Bk6pzoZqWsN3pVjN7W9hI3SXd3wUun5O6G+YJ9zypeuTv
C1f6Bszbh8BuXQq12hHwuJfq/vU4mERLolQnw9623FZnMuEM5XU7lrtwsGg2
S3IBnBsxFLaVAq+4BqxHVsEifOL1E/Ww8zXTaf12WLYm4ElcD8wty3GyfQDu
c7WdnX8FM+MH2NHt4xhpClYKZk3T+QZ/Pd++qL0E28+N6Civw7snpSN4ObYT
zrKIZIzxwtYsun3lwrClRp5CoARs1GItqyYHh4WqTVKVYQbd+H4wCfbIYAsU
0IYdt0hF3N4Hl9OTpiUMYInT9QNJpnBUp40T4yic5BtU7GANm5knvK6wg8OH
QgVYXOD88Rg345/hKvLP9Is+cLOa0V+l/vDp4SrnwRBYpGzoHO0yzIzfNtX/
ebhR8Ab8w4itgVAKHM3R/XxLJhwX1h5Cz4GF4vzOjt6H/+N0tbChCM59queQ
RoEPePnfdvkd/mkgMVi5FrY1Sxb62ARbBAiF3+qA1ZJN+4x64LV8DvnJl/DL
0ob4q1S44nGsrMSbTd93Siw++ABTZAYVdk3CZ0bq6wtn4GGuuGGZOfidbVJc
wjIsz/H2/fwaXOtLWrZmEyWsMzPxtpQbdrNQLdrg35Sf1u55WATW9SJrJYrD
zPgablGMVmFRgM+dXQzR2AnH9mZK2pJg65x06TBNmGY1mJyhA19gXY0tPgA/
zAgQrjGAVwU9yC0mcGBN6442c3iXg25H43H4kgNZ7/eT8I4x0Yx8O1hvseVd
gjM8Fimi4ntmU31+eVeOecL9pS/mlc7DCeIvU5f84N+S7ni1/gqfesUZfy0c
Zrt9d9UsAjYmDb1gj4EP5rwXqYmHH/n29nsmbRqfxFDJbWnwJ85bS9WZ8OiX
wiCbnE3zKcWTP5sH9zCmrsc+hJn3IzjruUhtHgUuEf4q8WMlPKTi41pQDbeZ
zd+Rr4evRre9yWyGN/yXlXk64O4/omOCuuHTOvpcb3vhmaS+CvIAXDTSlpFL
hRerY2qWXm/q35y9ypFROEXm3EzW2Kb+7KjaOjEJc7co5pBm4MuksOxfaPD1
y87ipQtwr7Gt5Cc6HM94WSy5Dofe3D50mFWM8M53VveCOOEmuWyJXB7Yw3vC
uFkAPqgsSBoVhpX8+l+tiML/A0f5QYc=
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
4oMPKvKTRgRhBZ++18vC8P8AYr9SIQ==
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
HzdvFYV3q4uRRiXgTUH9zxel4L8BcaSw8A==
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlZcmWxlJK
IVt/jHTta8ihMK4plYosZerar2vp/59zz7xf857znPd8znPeZ32f5/k98m4X
TrizsbCwMP6f/n7/81goxLRZ+70mf9vH2DBSnyD/Yz72srDPabPkf+cvEdZO
/GvZsHmFMNuOXQy+kjXCNvZa5f4K3wkHlBwgV95nMfh3+ayExU5V11V4sxE+
uvdKzZg6O+FLdwbrxT7AVgmaahwxHIQL64bFnv/ASVjO7Ng+sWKY2X4uwmFX
GC3exXBsivf+cDluwqQqDi6dJDhlLCDcaBmuKL+Qru6whXBXh35wYC1Mq+pf
vyTKQ3iFlHqx0Admjh/cK0X7nC7ES/hmNPvTUSdY0fwW1b4Iltvo7dGlwdlU
vpWCPXyE7dVSzPpCYO+up42DFLj/6dDCn3R4SYASubaHn3DH/FZrez+YOb9w
Q+f+rypjcJFhW8czSQHCVIFrnisWsIC/1oHBKNiiNMnEvRrera9+smkCFp7Z
LkYTEyRsfHJNh9MUftCd/ytfIOxjdLNB8B78hHZTQ6oXDqqz1NOlw8z/cyvh
x9KlNQNH4O8sVt9dAuHDj8qLlXPgEj0FT5U2mH9ba7DvNDy/UWsXxS1E2NJn
V8+iJGyXVXZPlAQfM33WMa4Ph6p2rrgfh29oub/JdoEFfES+XPODv7zZGa0R
BUtLjE2lpMLM9QcHqaanpVbCBYrmr39qhXcLq8xm9cP7+urynr2H66TScynf
YHlDj/igDbibqrSwyi9MmGyz4GghDU9oKGj/ogrLlKxRHffCjtz3s6RNYJGp
5taSE7Ce1tE4QRdY1UJxu8l5OKDicbxlGHwwImRdMw5m7j+we24BW3geHDXu
ljheCv/hvsSjQoF58+nOph2wacO0l0E/PEBO5RB/C7v4Oa0+n4KXrpeLOy3A
QiRN6b7vcKOjcossnwjhQM/CxuNisC91vtVVHv6tqTD4FAkeq1+PUNsL0x9w
Xx433OQjn7ZEHoW9AulPWG1gNRkxSQ9XmLk/w5q10js/BsENnXGj9CvwzDY7
96V4+GO2zp6RNPjhfu2uwlw4zZ2W5lgIOxxq4mX8F263bM6OqIW5TrFW0do2
tcc0i2LeC9970CWaTIUTq3jUGkdhx6va9n9OwZkfEljfzcIm+uMXXzDgG4kP
lcvYtxEuP/TtRDA/XONbYKcuCltT4xMGZODu0IN6Z3+EmecbfKRq1txqLzx9
y9+wjAyrKnGPLx+CJ1XnQjUtYbvTrWb2trCRuku6vwtcMSd1N8wT7nlS/cjf
F67yDZi3D4HduhRqtSPgcS/V/etxMImWVF6TDHvbcludyYQzlNftWO7CwaLZ
LMkFcG7EUNjWcnjFNWA9shoW4ROvn6iHna+ZTuu3w7KUgCdxPTC3LMfJ9gG4
z9V2dv4VzIwfYEe3j2OkKVgpmDVN5xv89Xz7ovYSbD83oqO8Du+elI7g5dhO
OMsikjHGC1uz6PZVCMOWGnkKgRKwUYu1rJocHBaqNklVhhl04/vBJNgjgy1Q
QBt23CIVcXsfXEFPmpYwgCVO1w8kmcJRnTZOjKNwkm9QsYM1bGae8LrSDg4f
ChVgcYHzx2PcjH+Gq8k/0y/6wM1qRn+V+sOnh6udB0NgkbKhc7TLMDN+21T/
5+FGwRvwDyO2BkIpcDRH9/MtmXBcWHsIPQcWivM7O3of/o/T1cKGIjj3qZ5D
Wjl8wMv/tsvv8E8DicHKtbCtWbLQxybYIkAo/FYHrJZs2mfUA6/lc8hPvoRf
ljbEX6XClY9jZSXebPq+U2LxwQe4XGZQYdckfGakvr5wBh7mihuWmYPf2SbF
JSzD8hxv38+vwbW+pGVrNlHCOjMTb0u5YTcL1aIN/k35ae2eh0VgXS+yVqI4
zIyv4RbFaBUWBfjc2cUQjZ1wbG+mpC0Jts5Jlw7ThGlWg8kZOvAF1tXY4gPw
w4wAYYoBvCroQW4xgQMprTvazOFdDrodjcfhSw5kvd9PwjvGRDPy7WC9xZZ3
Cc7wWKSIiu+ZTfX55V055gn3l76YVzoPJ4i/TF3yg39LuuPV+it86hVn/LVw
mO323VWzCNiYNPSCPQY+mPNehBIPP/Lt7fdM2jQ+iaGS29LgT5y3lmoy4dEv
hUE2OZvmU4onfzYP7mFMXY99CDPvR3DWc5HavHK4RPirxI9V8JCKj2tBDdxm
Nn9Hvh6+Gt32JrMZ3vBfVubpgLv/iI4J6oZP6+hzve2FZ5L6KskDcNFIW0Yu
FV6siaEsvd7Uvzl7lSOjcIrMuZmssU392VG9dWIS5m5RzCHNwJdJYdm/0ODr
l53FSxfgXmNbyU90OJ7xslhyHQ69uX3oMKsY4Z3vrO4FccJNctkSuTywh/eE
cbMAfFBZkDQqDCv59b9aEYX/B/OFwZ8=
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3BbyRrKPpRtIjf+MknFuZZIKpE69kIZQpN1bJUlS4orWxpL
kUK2/hjpyr6EHArjmqJUV5Yyde3XDf3/c+6Z92vec57zns95zvus7/M8v0fB
9eIJNy4ODg7W/9Pf73+eZ/YjeZsjwslf97HWjDTGyf9YgLss9FPqDPnf+YuE
tRP/WjJsWibMtX0nS6BkhbCN/e5yP8XvhP1LDpAr73EY/Lt8TsISp6qfVnhx
ET66N7yGrsFN+PKdgTqJ97BVgpY6TwwP4cKnQxLPf9hAeJvZsX0SxTC7/RsJ
h4azmr2K4dhkr/1h23gJk6p4NupQ4GS6f5jRElxRfjFNw2ET4c52/aCAWphR
1bd6WZyP8DIp5VKhN8weP7hHhvEpTYSf8M1o7iejTrCS+S2afRG8ba2nW5cB
Z9EElgv2CBC2V0826w2GvTqfNAxQ4b4ng/N/MuFFIWrkyh5Bwu1zm63tfWH2
/ML1Hfu/qNLhIsPW9mfSQoRpQtc8li1gIb/dBwaiYItSiolbNbxLX+Nk4zgs
Or1VgiEhTNj45IrOBlP4flf+rwIBsLfRzXrhPPgx46amTA8c+NRST5cJs//P
zYQfyZbW9B+Bv3NYfXcOgA8/LC9WyYZL9BQ9VFthwS0tQT5T8NxarV0Urwhh
S++d3QvSsF1mWZ44CT5m+qx9TB8OUetYdjsO39jtNpLlDAt5i32+5gt/HtkR
rRkFy0rRJ5NTYPb6gwPV0lJTKuECJfPXP7XAu0RVZzL74H29T3OfvYOfyqTl
UL/CCobu8YFrcBdNef6boChhss28o4UsPK6pqP2LGixXskJz3As78t7LlDWB
xSabWkpOwHq7j8YJO8NqFkpbTS7A/hWP4i1D4YMRwatacTB7/4Hdcgq4wnLh
qDHXxLFS+A+3RT5VKsyfzzxt2g6b1k95GvTB/eQUHsk3sLOv07fnk/Di9XJJ
p3lYhKQl2/sdbnBUaZYXECMc4FHYcFwC9qHNtbgowL81FgadIsH0utUI9b0w
8z7vlTHDdT7ycVPkUdgzgPmY0wZWl5OQdneB2fszrFUru+NDIFzfETfKDIen
t9i5LcbDH7J09gynwg/2a3cW5sCpboxUx0LY4VAjP+u/cJtlU1ZELbzxFGcV
o3Vde0wzqeY9cN79TvEkGpxYxafeMAo7XtW2/3MSznifwPl2BjbRH7v0ggXf
SHygUsa9hXD5oa8nggThGp8COw1x2JoWn9AvB3eFHNQ79yPMPt/gI1Uz5lZ7
4albfoZlZFhNmXds6RA8oTYbomUJ251pMbO3hY00nNP8nOGKWZm7oR5w9+Pq
h34+cJWP/5x9MOzaqVirHQGPeartX42DSQxKeU0S7GXLa3U2A05XWbXjuAsH
iWdxJBXAORGDoZvL4WUX/9XIalhMQLJuvA4+fc10Sr8Nlqf6P47rhnnleU62
9cO9LrYzc69gdvwAO7p+oJMmYeUgzlSdr/CXC20L2ouw/eywjsoqvGtCNoKf
ZyvhTItIFp0ftubQ7a0QhS01cxUDpGCjZmt59W1waIj6BE0FZjGN7wWRYPd0
rgAhbdhxk0zE7X1wBZMyJWUAS52p66eYwlEdNk6sozDFJ7DYwRo2M094XWkH
hw2GCHE4w/ljMa7GP8PV5J+Zl7zhJnWjv0r94DND1acHgmGxssHzjCswO35b
V/+noQbhG/APw7YGIslwNE/X800ZcFxoWzAzGxaJ8z03eg/+j9PVwvoiOOeJ
nkNqOXzA0++28+/wT/2JQSq1sK1ZksiHRtjCXyTsVjusnmTaa9QNr+TzKEy8
hF+W1sdfpcGVj2LlpUbWfd8htXD/PVwuN6C4cwI+O1xXVzgND22MG5Kbhd/a
UuISlmAFnjfv5lbgWh/SkjWXOGGd6fE3pbywq4Va0ZrguvzUNo/DYrCuJ3l3
oiTMjq/hZqVoVQ5F+Py5hWDNHXBsT4a0LQm2zk6TDdWCGVYDSek68EXOb7HF
B+AH6f6iVAP4m7A7udkEDqC2bG81h3c66LY3HIcvO5D1fj8Jb6eLp+fbwXoL
zW8TTsP0SDFVn7Pr6vPNDT/mAfeVvphTvgAnSL5MWfSFf6Pc8Wz5FT71akP8
tTCY6/bdb2YRsDFp8AV3DHww+50YNR5+6NPT50FZNz6JIdJbUuGPG24t1mTA
o58LA22y182nDF/+TC7czZq8HvsAZt+P4MznYrW55XCJ6BepH6vgQVVvl4Ia
uNVs7o5CHXw1unUkowle81tS4WuHu/6Ijgnsgs/o6G980wNPU3oryf1w0XBr
eg4NXqiJoS6+Xte/WXvVI6Nwstz56Uz6uv5sr948PgHzNitlk6bhK6TQrF8Y
8PUrpyVL5+EeY1vpj0w4nvWyWHoVDrm5dfAwpwThHW+t8gI3wI3bsqRy+GB3
r3HjJiH4oIowaVQUVvbte7UsDv8P8eAUsA==
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
yriFDz6kyE8aF4QV/AZfrwnD/wL+LdkO
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Ex98WIGfNCoIy3v3v1oRhv8HQuHqow==
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0VdsfB3CzjKHMSaYXufHHSyrWNURSidQyC+URehmfqQEZUlyZ0jOU
UsjUH08yzyGLQq5XKhUZyqtrvq6h//+tu975emetvc76rL3OHs/e+7flXC+c
cGNjYWFh/D/9/f7naapKl/Lc9or8fR9j3VBtnPyP+dhLQr+kzJD/nb9IWCvh
ryWDpmXCbDt2MfiKVglb22mW+sn/IOxfdIBcfp9F/9/lsxIWO1VZW+bFRvjo
3itVo2rshC/dGagT+whbxmuockRzEM6vHRJ7vo2TsKzpsX1ihTCz/VyEQ68w
mr0K4Zgkr/1hstyESRUcXNoUOGnUP8xwCS4rvZCqZr+JcGe7XlBADUyr6Fu7
JMpDeJmUfDHfG2aOH9wjRfuSKsRL+GYU+9MRR1jB7BbVrgCWXe/p1qHBmVS+
5bw9fITtVJNMe4Nhr86nDQPVcN/Twfk/6fCiQHXE6h5+wu1zm63sfGHm/ML1
Hfu/KY/CBQat7c8kBQhTBa55LJvDAn6aBwYiYfNiirFbJbxbT+1k4zgsPL1V
jCYmSNjo5Ko2pwn8oCv3N74A2NvwZr3gPfgJ7aa6VA8cWGuhq0OHmf/nZsKP
pYur+o/AP1gsfzgHwIcflRYqZcFFuvIeyq0w/5aWIJ8peG69xjaSW4iwhfeu
7gVJ2Daj5J4oCT5m8qx9TA8OUelYdjsO39B0e5vpDAt4i3y95gt/fbszSj0S
lpYYnUxKhpnrDw5USU1JLofzFMze/NwC7xZWnsnog/f11uY8+wDXSqVmV3+H
5Qzc4wLX4S6q4vwKvzBhsvW8g7k0PK4ur/WrCixTtEp12As7cN/PkDaGRSab
WopOwLqaR2MFnWEVc4Wtxudh/7LHcRah8MHw4DWNWJi5/8Bu2XlsYTlw5Jhr
wlgx/MptkUe5GubNpTuZtMMm9VOe+n1wPzmZQ/wd7OzruPJ8El68XiruOA8L
kTSke3/ADQ5Kzdv5RAgHeOQ3HBeDfahzLS5y8O+N+UGnSPBo3Vq46l6Y/oD7
8pjBBh/5vCniKOwZQH/Cag2ryohJurvAzP0Z1qiR3vkpEK7viB2hX4Gnt9i6
LcbBnzK19wynwA/3a3XmZ8MpbrQUh3zY/lAjL+O/cJtFU2Z4Dcx1irWC1rqh
PSYZ1WY98L0HnaKJVDihgke1YQR2uKpl9+cknP4xnvX9DGysN3bxBQO+kfBQ
qYR9C+HSQ99PBPHDVT55tmqisBU1Lr5fBu4KOah79ieYeb7BRypmzCz3wlO3
/AxKyLCKIvfY0iF4QmU2RMMCtj3dYmpnAxuqOaf6OcNls1J3Qz3g7ieVj/x8
4Aof/zm7YNi1U75GKxwe81TZvxYLk2iU0qpE2MuG2/JMOpymtGbLchcOEs1k
ScyDs8MHQzeXwssu/msRlbAIn3jdeB3sdM1kSq8N3l7t/yS2G+beznGyrR/u
dbGZmXsNM+MH2MH10yhpElYMYk3R/g5/O9+2oLUI280OayutwbsnpMN5ObYS
zjCPYIzywlYsOr1lwrCFeo58gARs2Gy1XVUWDg1RnaAqwQy60f0gEuyexhYg
oAU7bJIKv70PLqNTpiT0YYnTdf0UEziyw9qRcRSm+AQW2lvBpmbxb8pt4bDB
EAEWZzh3LNrV6Be4kvwL/aI33KRq+FexH3x6qNJpIBgWKRk8R7sMM+O3DfV/
GWoQvAFvG7bRF0qCozi6nm9Kh2ND24LpWbBQrO/Zkfvwfxyv5tcXwNlPde1T
SuEDnn63nf+Af+5PCFKqgW1ME4U+NcLm/kJht9ph1USTXsNueDWXQ27iJfyy
uD7uKhUufxyzXeLthu87JBYefIRLZQbkd03AZ4br6vKn4SGu2CGZWfi9DSU2
fgmW43j3YW4VrvEhLVmxiRLWnh5/V8wNu5qrFKzzb8hPafM4LALreJI1E8Rh
ZnwNNytEKbPIw+fOLgSr74RjetIlbUiwVVaqdKgGTLMcSEzThi+wrsQUHoAf
pvkLV+vDK4Lu5GZjOKC6ZUerGbzLXqe94Th8yZ6s+8dJeMeoaFquLay70Pw+
3gkejRBR9jmzoT7fnCvHPOC+4hdziufhePGXyYu+8O+UO54tv8GnXnPGXQuD
2W7fXTENh41Igy/Yo+GDWR9EquPgRz49fR6UDeOTECK5JQX+zHlrsSodHvma
H2idtWE+pXhyZ3Lgbsbk9ZiHMPN+BGc8F6nJKYWLhL9J/FQBDyp7u+RVwa2m
c3fk6uCrUa1v05vgdb8lJZ52uOtVVHRgF3xaW4/rXQ88TektJ/fDBcOtadlU
eKEqunrxzYb+zdopHxmBk2TOTWeMbujPjsrN4xMwd7NCFmkavkwKzfyVBl+/
7CRePA/3GNlIfqbDcYyXhZJrcMjNrYOHWcUI73xveS+QE26UzZTI5oHdvcaN
mgTgg0qCpBFhWNG37/WyKPw/W7Dslw==
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
jJr54UOKAuRRIVjBt//Vigj8L42MqR8=
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB/BrzxrKPpJtIjcGk1Sca4mkEqljF8oQmqxja0GWlCVbGksp
hWwNRrLvIYfCuKZUKrKUqWu/ru3//597/u/XvOc85z2f85z3Wd/neX6PrMvF
k66sJBKJ8d/0v/f/n432KvIflJXG7/sZ6waq4xTSc6Z52UpCvqTMEGbmLxLW
jP9nSb9pmTDrzt0M3qJVwla2GqW+chuE/YoOUsofkPT+XT4LYdHTlbVlnqyE
j+27WjWqykb48t2BOtGPsEWcugp7FDvh/Noh0Rc/cBCWMTm+X7QQZrafk3DI
VUazZyEcneR5IFSGizC5gp1TKwFOGvULNViCy0ovpqrabSHc2a4b6F8D0yr6
1i6LcBNeJidfyveCmeMH90jSvqQK8hC+Fcn2bMQBlje9TbUtgGXWe7q1aXAm
lXc5by8vYVuVJJPeINiz81nDQDXc92xw/m86vMhfHb66l49w+9xWS1sfmDm/
cH3HgW9Ko3CBfmv7cwl+wlT+6+7LZjC/r8bBgQjYrDjByLUS3qOreqpxHBaa
3i5KExUgbHhqVYvDGH7Ylfsbrz/sZXCrXuA+/JR2S02yBw6oNdfRpsPM/3Mr
4SdSxVX9R+ENksWGkz985HFpoWIWXKQj567UCvNtawn0noLn1mtsIrgECZt7
7e5ekIBtMkrui5Dh48bP28d04WDljmXXE/BNDde3mU4wv5fw1+s+8Ne3uyLV
ImAp8dHJpGSYuf7gAOXUlORyOE/e9M3PLfAeIaWZjD54f29tzvMPcK1kanb1
d1hW3y02YB3uoirMr/AJEaZYzdubScHjanKavyrD0kWrVPt9sD3XgwwpI1h4
sqml6CSso3EsRsAJVjaT3250AfYrexJrHgIfCgtaU4+BmfsP7JqdxxqaA0eM
ucSPFcN/uS5yK1XDPLl0R+N22Lh+ykOvD+6nJLOLvYOdfBxWXkzCizdKxRzm
YUGyulTvBtxgr9i8g1eYsL97fsMJUdibOtfiLAv/3pgfeJoMj9athansg+kP
ua6M6W/y0c9bwo/BHv70pyxWsIq0qISbM8zcn2H1GqldnwLg+o6YEfpVeHqb
jetiLPwpU2vvcAr86IBmZ342nOJKS7HPh+0ON/Iw/oDbzJsyw2pgztMsFbTW
Te0xzqg27YHvP+wUSaTC8RXcKg0jsP01Tdu/J+H0j3Es72dgI92xSy8Z8M34
R4olbNsIlx7+fjKQD67yzrNRFYEtqbFx/dJwV/AhnXM/wszzDT5aMWNqsQ+e
uu2rX0KBlRW4xpYOwxPKs8Hq5rDNmRYTW2vYQNUp1dcJLpuVvBfiDnc/rXzs
6w1XePvN2QbBLp1yNZph8JiH8oG1GJhMSyitSoQ9rbkszqbDaYprNqR7cKBI
JikxD84OGwzZWgovO/uthVfCwrxideN1sON14yndNnhHtd/TmG6Yawf7qbZ+
uNfZembuNcyMH2B7l0+j5ElYIZAlRes7/O1C24LmImw7O6yluAbvmZAK42Hf
TjjDLJwxygNbkrR7y4Rgc7UcOX9x2KDZcoeKDBwSrDJBVYQZdMMHgWTYLY3V
n18Ttt8iGXZnP1xGT5gS14PFz9T1JxjDER1WDoxjcIJ3QKGdJWxiGvem3AYO
HQzmJznBuWNRLoa/wJWUX+iXvOAmFYN/in3hM0OVjgNBsHDJ4HnaFZgZv22q
/8tQg8BN+Idhaz3BJDiSvevFlnQ4JqQtiJ4FC8b4nBt5AP/kcC2/vgDOfqZj
l1IKH/TwveP0J/xzf3ygYg1sbZIo+KkRNvMTDL3dDqskGvcadMOrueyyE6/g
V8X1sdeocPmT6B3ibzd93yG+8PAjXCo9ILd7Aj47XFeXPw0PccYMSc/C760T
YuKWYFn2dx/mVuEab/KSJasIYa3p8XfFXLCLmXLBOt+m/JQ29yPCsLYHRSNe
DGbG13CzfKQSSQ4+f24hSG0XHN2TLmFNhi2zUqVC1GGaxUBimhZ8kWUluvAg
/CjNT6haD14RcKM0G8H+1S07W03h3Xba7Q0n4Mt2FJ0/T8E7R0XScm1gnYXm
93GO8Gi4sJL32U31+eRcPe4O9xW/nFO4AMeJvUpe9IF/T7jr0fIbfPo1R+z1
UJj1zr0VkzDYkDz4ki0KPpT1Qbg6Fn7s3dPnnrBpfOKDJbalwJ85bi9WpcMj
X/MDrLI2zackd+5MDtzNmLwR/Qhm3o/gjBfCNTmlcJHQN/EfK+BBJS/nvCq4
1WTurmwdfC2y9W16E7zuu6TI3Q53/RUZFdAFn9HS5XzXA08n9JZT+uGC4da0
bCq8UBVVvfhmU/9mbZWOjsBJ0uenM0Y39Wdn5dbxCZirWT6LPA1fIYdk/kqD
b1xxFCueh3sMrSU+0+FYxqtCiTU4+Nb2wSMsooR3vbe4H8ABN8pkimdzw26e
44ZN/PAhRQHyiBCs4NP3elkE/g/LOns+
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmy43BJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+//+5Z96vec95zns+5znvs77P8/weObcL
J9zZWFhYGP9L/3//88irXro+xftT87d9jA0j9QnyP+ZjLw37nDpL/nf+EmHt
xL+XDZtXCLPtVGXwFa8RtrHXKvOX/044oPgAueI+i8G/y2clLHaqqq7cm43w
0b1XqsfU2QlfujNYL/YBtkrQVOOI4SBcUDcs9vwHTsKyZsf2iRXBzPZzEQ67
wmjxLoJjk733h8tyEyZVcnDpUODksYBwo2W4vOxCmrrDFsJdHfrBgbUwrbJ/
/ZIoD+EVUsrFAh+YOX5wrxTtc5oQL+Gb0exPR51gBfNbVPtCWHajt0eXBmdR
+Vby9/ARtldLNusLgb27njYO1sD9T4cW/qLDSwI1kWt7+Al3zG+1tveDmfML
N3Tu/6o8BhcatnU8kxQgTBW45rliAQv4ax0YjIItSigm7lXwbn31k00TsPDM
djGamCBh45NrOpym8IPuvN/4AmEfo5sNgvfgJ7SbGlK9cFCdpZ4uHWb+n1sJ
P5YuqR44An9nsfruEggfflRWpJQNF+vJeyq3wfzbWoN9p+H5jVq7KG4hwpY+
qj2LkrBdZuk9URJ8zPRZx7g+HKrSueJ+HL6h5f4mywUW8BH5cs0P/vJmV7RG
FCwtMTaVnAIz1x8cpJKWmlIB5yuYv/65Fd4trDyb2Q/v66vLffYerpNKy6n5
BssZesQHbcDdVMWFVX5hwmSbBUcLaXhCQ177VxVYpniN6rgXduS+nyltAotM
NbcWn4D1tI7GCbrAKhYK203OwwHlj+Mtw+CDESHrmnEwc/+B3XPy2cJz4ahx
t8TxEvhP9yUe5RqYN4/ubNoBmzZMexn0wwPkFA7xt7CLn9Pq8yl46XqZuNMC
LETSlO77Djc6KrXs4BMhHOhZ0HhcDPalzre6ysG/NxUEnyLBY/XrEWp7YfoD
7svjhpt85NOWyKOwVyD9CasNrCYjJunhCjP3Z1izVnrXxyC4oTNulH4Fntlm
574UD3/M0tkzkgo/3K/dVZADp7rTUh0LYIdDTbyM/8Dtls1ZEbUw1ynWSlrb
pvaYZtaY98L3HnSJJlHhxEoetcZR2PGqtv1fU3DGhwTWd7Owif74xRcM+Ebi
Q6VS9m2Eyw59OxHMD1f75tupi8LW1PiEARm4O/Sg3tkfYeb5Bh+pnDW32gtP
3/I3LCXDKorc48uH4EmVuVBNS9judKuZvS1spO6S5u8Cl89J3Q3zhHueVD3y
94UrfQPm7UNgty75Wu0IeNxLZf96HEyiUcqqk2BvW26rMxlwutK6HctdOFg0
iyUpH86JGArbWgavuAasR1bBInzi9RP1sPM102n9dnhHTcCTuB6YewfHyfYB
uM/Vdnb+FcyMH2BHt49jpClYMZg1Vecb/PV8+6L2Emw/N6KjtA7vnpSO4OXY
TjjTIpIxxgtbs+j2lQvDlhq58oESsFGL9Q41WTgsVG2SqgQz6Mb3g0mwRzpb
oIA27LhFKuL2PricTpmWMIAlTtcPUEzhqE4bJ8ZRmOIbVORgDZuZJ7yusIPD
h0IFWFzgvPEYN+Nf4CryL/SLPnCzmtHfJf7w6eEq58EQWKR06BztMsyM3zbV
/3m4UfAG/MOIrYFQMhzN0f18SwYcF9YeQs+GheL8zo7eh39yulrQUAjnPNVz
SC2DD3j533b5A/55IDFYqRa2NUsS+tgEWwQIhd/qgNWSTPuMeuC1PA65yZfw
y5KG+KtUuOJx7A6JN5u+75RYfPABLpMZlFedhM+M1NcXzMDDXHHDMnPwO1tK
XMIyLMfx9v38GlzrS1q2ZhMlrDMz8baEG3azUCnc4N+Un9rueVgE1vUiayWK
w8z4Gm5RiFZmkYfPnV0M0dgFx/ZmSNqSYOvsNOkwTZhmNZiUrgNfYF2NLToA
P0wPEK4xgFcFPcgtJnBgTevONnNY1UG3o/E4fMmBrPfHSXjnmGh6nh2st9jy
LsEZHosUUfY9s6k+v9wrxzzh/pIX84rn4QTxlylLfvDvlDterb/Bp15xxl8L
h9lu3101i4CNSUMv2GPgg9nvRWri4Ue+vf2elE3jkxgquS0V/sR5a6k6Ax79
UhBkk71pPqV48mZz4R7G1PXYhzDzfgRnPhepzS2Di4W/SvxYCQ8p+7jmV8Nt
ZvN35Orhq9FtbzKa4Q3/ZSWeDrj7z+iYoG74tI4+19teeIbSV0EegAtH2tJz
qPBidUzN0utN/ZuzVz4yCifLnJvJHNvUn51VWycmYe4WhWzSDHyZFJb1Kw2+
ftlZvGQB7jW2lfxEh+MZL4sk1+HQm9uHDrOKEd71zupeECfcJJslkcMDe3hP
GDcLwAeVBEmjwrCiX/+rFVH4vy6mY98=
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
88EHlPhJo4Kwom//qxUR+H9hOK0y
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
ahKADykJkkaFYUXfvtcrovD/AHC7dE8=
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/T4an3QbfF9bmb/sYG0bqE+R/zMdeGvY5dZb87/wlwtqJ
fy0bNq8QZtuxi8FXvEbYxl6rzF/hO+GA4gPkivssBv8un5Ww2KmqunJvNsJH
916pHlNnJ3zpzmC92AfYKkFTjSOGg3BB3bDY8x84CcuZHdsnVgQz289FOOwK
o8W7CI5N9t4fLsdNmFTJwaVDgZPHAsKNluHysgtp6g5bCHd16AcH1sK0yv71
S6I8hFdIKRcLfGDm+MG9UrTPaUK8hG9Gsz8ddYIVzW9R7QthuY3eHl0anEXl
W8nfw0fYXi3ZrC8E9u562jhYA/c/HVr4kw4vCdREru3hJ9wxv9Xa3g9mzi/c
0Ln/q8oYXGjY1vFMUoAwVeCa54oFLOCvdWAwCrYooZi4V8G79dVPNk3AwjPb
xWhigoSNT67pcJrCD7rzfuULhH2MbjYI3oOf0G5qSPXCQXWWerp0mPl/biX8
WLqkeuAI/J3F6rtLIHz4UVmRcjZcrKfgqdIG829rDfadhuc3au2iuIUIW/rs
6lmUhO0yS++JkuBjps86xvXhUNXOFffj8A0t9zdZLrCAj8iXa37wlzc7ozWi
YGmJsankFJi5/uAg1bTUlAo4X9H89U+t8G5hldnMfnhfX13us/dwnVRaTs03
WN7QIz5oA+6mKi2s8gsTJtssOFpIwxMaCtq/qMIyxWtUx72wI/f9TGkTWGSq
ubX4BKyndTRO0AVWtVDcbnIeDih/HG8ZBh+MCFnXjIOZ+w/snpPPFp4LR427
JY6XwH+4L/Go1MC8eXRn0w7YtGHay6AfHiCncIi/hV38nFafT8FL18vEnRZg
IZKmdN93uNFRuUWWT4RwoGdB43Ex2Jc63+oqD//WVBB8igSP1a9HqO2F6Q+4
L48bbvKRT1sij8JegfQnrDawmoyYpIcrzNyfYc1a6Z0fg+CGzrhR+hV4Zpud
+1I8/DFLZ89IKvxwv3ZXQQ6c6k5LdSyAHQ418TL+C7dbNmdF1MJcp1graW2b
2mOaWWPeC9970CWaRIUTK3nUGkdhx6va9n9OwRkfEljfzcIm+uMXXzDgG4kP
lUvZtxEuO/TtRDA/XO2bb6cuCltT4xMGZODu0IN6Z3+EmecbfKRy1txqLzx9
y9+wlAyrKnGPLx+CJ1XnQjUtYbvTrWb2trCRukuavwtcPid1N8wT7nlS9cjf
F670DZi3D4HduhRqtSPgcS/V/etxMIlGKatOgr1tua3OZMDpyut2LHfhYNEs
lqR8OCdiKGxrGbziGrAeWQWL8InXT9TDztdMp/XbYdmagCdxPTC3LMfJ9gG4
z9V2dv4VzIwfYEe3j2OkKVgpmDVV5xv89Xz7ovYSbD83oqO8Du+elI7g5dhO
ONMikjHGC1uz6PaVC8OWGrkKgRKwUYu1rJocHBaqNklVhhl04/vBJNgjnS1Q
QBt23CIVcXsfXE6nTEsYwBKn6wcopnBUp40T4yhM8Q0qcrCGzcwTXlfYweFD
oQIsLnDeeIyb8c9wFfln+kUfuFnN6K8Sf/j0cJXzYAgsUjp0jnYZZsZvm+r/
PNwoeAP+YcTWQCgZjubofr4lA44Law+hZ8NCcX5nR+/D/3G6WtBQCOc81XNI
LYMPePnfdvkd/mkgMVi5FrY1SxL62ARbBAiF3+qA1ZJM+4x64LU8DvnJl/DL
kob4q1S44nGsrMSbTd93Siw++ACXyQwq7JqEz4zU1xfMwMNcccMyc/A7W0pc
wjIsz/H2/fwaXOtLWrZmEyWsMzPxtoQbdrNQLdzg35Sf2u55WATW9SJrJYrD
zPgablGMVmFRgM+dXQzR2AnH9mZI2pJg6+w06TBNmGY1mJSuA19gXY0tOgA/
TA8QrjGAVwU9yC0mcGBN6442c3iXg25H43H4kgNZ7/eT8I4x0fQ8O1hvseVd
gjM8Fimi4ntmU31+uVeOecL9JS/mlc7DCeIvU5b84N8od7xaf4VPveKMvxYO
s92+u2oWARuThl6wx8AHs9+L1MTDj3x7+z0pm8YnMVRyWyr8ifPWUnUGPPql
IMgme9N8SvHkzebCPYyp67EPYeb9CM58LlKbWwYXC3+V+LESHlLxcc2vhtvM
5u/I18NXo9veZDTDG/7LyjwdcPcf0TFB3fBpHX2ut73wDKWvgjwAF460pedQ
4cXqmJql15v6N2evcmQUTpY5N5M5tqk/O6q2TkzC3C2K2aQZ+DIpLOsXGnz9
srN4yQLca2wr+YkOxzNeFkmuw6E3tw8dZhUjvPOd1b0gTrhJLksihwf28J4w
bhaADyoLkkaFYSW//lcrovD/AGAdNt4=
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk0ltkfB3C7rKHsg2wTeWMwSWJeSySVSB27UIbQZB1bC7KkLNnSWEop
ZOuPkex7yKEwXlMqFVnK1Gt/vZZm/uc983zNc849z/mce567Pvfe35V1PX/c
jYWJiYn+T/r/+99H56eXfPwOPzR/3UffMFSdIP9rHtbS0E+ps+T/5i8R1kz4
a9mgeYUwy45ddJ7iNcLWdhplfnLfCPsX7ydX3GPS/2/5zIRFTlbVlXuxED6y
93L1mCor4Yu3B+tF3sOW8eoqbNFshAvqhkWefcdOWMb06D6RIpjRfg7CoZfp
LV5FcEyyl06YDCdhUiUbh1YinDzmH2a4DJeXnU9Ttd9CuKtDLyigFqZW9q9f
FOYivEJKuVDgDTPGD+6VoH5KE+AmfCOK9cmoIyxvdpNiVwjLbPT2aFPhLArP
Sv4eHsJ2KsmmfcGwV9eTxsEauP/J0MKfNHiJryZibQ8v4Y75rVZ2vjBjfuGG
Tp0vSmNwoUFbx1NxPsIUvqseK+Ywn5/G/sFI2Lwk0ditCt6tp3qiaQIWnNku
QhXhJ2x0Yk2L3QS+3533K08A7G14o4H/LvyYekNNohcOrLPQ1abBjP9zK+FH
kiXVA4fhb0yW35wD4EMPy4oUs+FiXTkPpTaYd1trkM80PL9RaxvJKUDYwntX
z6I4bJtZeleYBB81edoxrgeHKHeuuB2Dr2u4vc5yhvm8hT5f9YU/v94ZpRYJ
S4qNTSWnwIz1Bwcqp6WmVMD58mavfmyFdwsqzWb2w/v66nKfvoPrJNJyar7C
sgbucYEbcDdFYWGVV5Aw2XrBwVwSnlCT0/xFGZYqXqM47IUdOO9lShrDQlPN
rcXHYV2NI7H8zrCyufx243Owf/mjOItQ+EB48Lp6LMzYf2C3nHyWsFw4ctw1
YbwE/sNtiUupBubOozmZdMAmDdOe+v3wADmFTfQN7OzruPpsCl66VibquAAL
kNQl+77BjQ6KLdI8QoQDPAoaj4nAPpT5VhdZ+LemgqCTJHisfj1cZS9Mu895
adxgkw9/3BJxBPYMoD1mtoZVpETE3V1gxv4Mq9dK7vwQCDd0xo7SLsMz22zd
luLgD1lae0ZS4Qc6ml0FOXCqGzXVoQC2P9jETf8f3G7RnBVeC3OcZK6ktm1q
j0lmjVkvfPd+l3ASBU6o5FJpHIUdrmja/TkFZ7yPZ347CxvrjV94ToevJzxQ
LGXdRrjs4NfjQbxwtU++raowbEWJix+QgrtDDuie+R5mnG/w4cpZM8u98PRN
P4NSMqyswDm+fBCeVJ4LUbeAbU+1mtrZwIaqzml+znD5nMSdUA+453HVQz8f
uNLHf94uGHbtkqvVDIfHPZV11mNhEjWxrDoJ9rLhtDydAacrrtsy3YGDhLOY
kvLhnPCh0K1l8IqL/3pEFSzEI1o/UQ87XTWZ1muHpWv8H8f2wJzSbCfaB+A+
F5vZ+ZcwI36AHVw/jJGmYIUg5lStr/CXc+2Lmkuw3dyIluI6vHtSMpybbTvh
TPMI+hg3bMWk3VcuCFuo5coFiMGGLVbSKjJwaIjKJEURptOM7gWRYPd0lgA+
Tdhhi0T4rX1wOS1xWkwfFjtVP5BoAkd2WjvSj8CJPoFF9lawqVn8qwpbOGwo
hI/JGc4bj3Y1+hmuIv9Mu+ANN6sY/lXiB58arnIaDIaFSofOUi/BjPhtU/2f
hhv5r8PfjdjoCyTDUWzdz7ZkwLGh7cG0bFgg1vfM6D34B8crBQ2FcM4TXfvU
Mni/p98t59/hHwcSghRrYRvTJIEPTbC5v0DYzQ5YJcmkz7AHXstjk518Ab8o
aYi7QoErHsVIi73e9H2n2OL993CZ1KDcrkn49Eh9fcEMPMwROyw1B7+1SYyN
X4Zl2d68m1+Da31Iy1YswoS1ZibelHDCrubKhRu8m/JT2z0OCcHanmSNBFGY
EV/DLfJRSkxy8Nkzi8FqO+GY3gxxGxJslZ0mGaoOUy0Hk9K14PPMqzFF++EH
6f6CNfrwKr87ucUYDqhp3dFmBu+y1+5oPAZftCfr/n4C3jEmnJ5nC+sutryN
d4LHIoSUfE5vqs839/JRD7i/5Pm8wjk4XvRFypIv/Fvibc/WX+GTL9njrobB
LLfurJqGw0akoees0fCB7HdCNXHwQ5/efo/ETeOTECK+LRX+yH5zqToDHv1c
EGidvWk+JbjyZnPhHvrUtZgHMON+BGc+E6rNLYOLBb+IfV8JDyl5u+RXw22m
87dl6+ErUW2vM5rhDb9lRa4OuPuPqOjAbviUlh7Hm154JrGvgjwAF460pedQ
4MXq6JqlV5v6N2endHgUTpY6O5M5tqk/O6q2TkzCnC3y2aQZ+BIpNOsXKnzt
kpNoyQLca2Qj/pEGx9FfFImvwyE3tg8dYhYhvPOt5d1AdrhJJksshwt295ow
auaDDyjyk0YFYQXf/pcrwvDftGjpvg==
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0ltkfB3D7Tij7yD6RNwaTVJzXEkklUsculCE0WcfWgiwpS7Y0llIK
2RqMZN9DDoXxqlQqspSp1/56Lf3/c94zz9c859zznM+557nrc+/9XTnX88fd
WJiYmOj/T/+8/33O+3JNvpR9T/62l75hqDZB/te8rKWhn1Nnyf/NXyKslfD3
skHzCmEW2Z103uI1wtZ2mmV+8t8J+xfvJ1fcY9L/b/nMhEVPVtWVe7EQPrLn
cvWYGivhi7cH60U/wJbxGqps0WyEC+qGRZ/9wE5YxvToXtEimNF+DsKhl+kt
XkVwTLLXvjAZTsKkSjYO7UQ4ecw/zHAZLi87n6Zmz0W4q0MvKKAWplb2r18U
4Sa8Qkq5UOANM8YP7pWkfk4T5CF8I4r1yagjrGB2k2JXCMts9PboUOEsCu9K
/m5ewnaqyaZ9wbBX15PGwRq4/8nQwksavMRfE7G2m49wx/wWKztfmDG/cEPn
vq/KY3ChQVvHUwl+whT+qx4r5jC/n+b+wUjYvCTR2K0K3qWndqJpAhaa2SZK
FRUgbHRiTZvdBL7fnfcbbwDsbXijQeAu/Jh6Q12yFw6ss9DVocGM/3ML4UdS
JdUDh+HvTJbfnQPgQw/LipSy4WJdeQ/lNphva2uQzzQ8v1FrG8kpSNjCe2fP
ogRsm1l6V4QEHzV52jGuB4eodK64HYOva7q9yXKG+b2Fv1z1hb+82RGlHglL
iY9NJafAjPUHB6qkpaZUwPkKZq9/boV3CSnPZvbDe/vqcp++h+sk03JqvsFy
Bu5xgRtwN0VxYZVPiDDZesHBXAqeUJfX+lUFli5eozjsgR0472VKGcPCU82t
xcdhXc0jsQLOsIq5wjbjc7B/+aM4i1D4QHjwukYszNh/YLecfJawXDhy3DVh
vAT+y22JW7kG5smjOZl0wCYN0576/fAAOYVN7C3s7Ou4+mwKXrpWJua4AAuS
NKT6vsONDkot23mFCQd4FDQeE4V9KPOtLnLw700FQSdJ8Fj9erjqHph2n/PS
uMEmH/7EFXEE9gygPWa2hlWlRSXcXWDG/gxr1Ert+BgIN3TGjtIuwzNbbd2W
4uCPWdq7R1LhB/u0ugpy4FQ3aqpDAWx/sImH/gfcbtGcFV4Lc5xkrqS2bWqP
SWaNWS98936XSBIFTqjkVm0chR2uaNm9nIIzPsQzv5uFjfXGLzynw9cTHiiV
sm4lXHbw2/EgPrjaJ99WTQS2osTFD0jD3SEHdM/8CDPON/hw5ayZ5R54+qaf
QSkZVlHkHF8+CE+qzIVoWMC2p1pN7WxgQzXnND9nuHxO8k6oB9zzuOqhnw9c
6eM/bxcMu3bJ12qFw+OeKvvWY2ESNbGsOgn2suG0PJ0Bpyut2zLdgYNEspiS
8uGc8KHQLWXwiov/ekQVLMwrVj9RDztdNZnWa4e31/g/ju2BObeznWgfgPtc
bGbnX8GM+AF2cP04RpqCFYOYU7W/wV/PtS9qLcF2cyPaSuvwrkmpcB62bYQz
zSPoYzywFZNOX7kQbKGeKx8gDhu2WG1XlYFDQ1QnKUownWZ0L4gEu6ezBPBr
wQ5ckuG39sLltMRpcX1Y/FT9QKIJHNlp7Ug/Aif6BBbZW8GmZvGvK2zhsKEQ
fiZnOG882tXoF7iK/AvtgjfcrGr4d4kffGq4ymkwGBYuHTpLvQQz4rdN9X8e
bhS4Dv8wYqMvmAxHsXU/48qAY0Pbg2nZsGCs75nRe/BPjlcKGgrhnCe69qll
8H5Pv1vOf8I/DyQEKdXCNqZJgh+bYHN/wbCbHbBqkkmfYQ+8lscmN/kCflHS
EHeFAlc8itku/mbT953ii/c/wGXSg/I7J+HTI/X1BTPwMEfssPQc/M4mMTZ+
GZZje/t+fg2u9SEtW7GIENaemXhbwgm7mqsUbvBtyk9t9zgkDOt4kjUTxGBG
fA23KEQpM8nDZ88sBqvvgGN6MyRsSLBVdppUqAZMtRxMSteGzzOvxhTthx+k
+wvV6MOrAu7kFmM4oKZVts0M3mmv09F4DL5oT9b98wQsOyaSnmcL6y62vIt3
gscihJV9Tm+qzzf38lEPuL/k+bziOThe7EXKki/8e+Jtz9bf4JOv2OOuhsEs
t+6smobDRqSh56zR8IHs98I1cfBDn95+j8RN45MQIrE1Ff7EfnOpOgMe/VIQ
aJ29aT4lufNmc+Ee+tS1mAcw434EZz4Trs0tg4uFvor/WAkPKXu75FfDbabz
t+Xq4StRbW8ymuENv2Ul7g64+6+o6MBu+JS2HsfbXngmsa+CPAAXjrSl51Dg
xeromqXXm/o3Z6d8eBROlj47kzm2qT+yVVsmJmHOFoVs0gx8iRSa9SsVvnbJ
SaxkAe41spH4RIPj6C+KJNbhkBvbhg4xixLe8c7ybiA73CSTJZ7DDbt7TRg1
88MHlARIo0Kwom//qxUR+H+xMxDI
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
mQ8+oMhPGhWEFXz7X60Iw/8DbLfpqQ==
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlZcmWxlJK
IVt/jHTta8ihMK4plYosZerar2vp/59zz7xf857znPd8znPeZ32f5/k98m4X
TrizsbCwMP6f/n7/82zYkRjxrxlN3/YxNozUJ8j/mI+9LOxz2iz53/lLhLUT
/1o2bF4hzLZjF4OvZI2wjb1Wub/Cd8IBJQfIlfdZDP5dPithsVPVdRXebISP
7r1SM6bOTvjSncF6sQ+wVYKmGkcMB+HCumGx5z9wEpYzO7ZPrBhmtp+LcNgV
Rot3MRyb4r0/XI6bMKmKg0snCU4ZCwg3WoYryi+kqztsIdzVoR8cWAvTqvrX
L4nyEF4hpV4s9IGZ4wf3StE+pwvxEr4Zzf501AlWNL9FtS+C5TZ6e3RpcDaV
b6VgDx9he7UUs74Q2LvraeMgBe5/OrTwJx1eEqBEru3hJ9wxv9Xa3g9mzi/c
0Ln/q8oYXGTY1vFMUoAwVeCa54oFLOCvdWAwCrYoTTJxr4Z366ufbJqAhWe2
i9HEBAkbn1zT4TSFH3Tn/8oXCPsY3WwQvAc/od3UkOqFg+os9XTpMPP/3Er4
sXRpzcAR+DuL1XeXQPjwo/Ji5Ry4RE/BU6UN5t/WGuw7Dc9v1NpFcQsRtvTZ
1bMoCdtlld0TJcHHTJ91jOvDoaqdK+7H4Rta7m+yXWABH5Ev1/zgL292RmtE
wdISY1MpqTBz/cFBqulpqZVwgaL5659a4d3CKrNZ/fC+vrq8Z+/hOqn0XMo3
WN7QIz5oA+6mKi2s8gsTJtssOFpIwxMaCtq/qMIyJWtUx72wI/f9LGkTWGSq
ubXkBKyndTRO0AVWtVDcbnIeDqh4HG8ZBh+MCFnXjIOZ+w/snlvAFp4HR427
JY6Xwn+4L/GoUGDefLqzaQds2jDtZdAPD5BTOcTfwi5+TqvPp+Cl6+XiTguw
EElTuu873Oio3CLLJ0I40LOw8bgY7Eudb3WVh39rKgw+RYLH6tcj1PbC9Afc
l8cNN/nIpy2RR2GvQPoTVhtYTUZM0sMVZu7PsGat9M6PQXBDZ9wo/Qo8s83O
fSke/pits2ckDX64X7urMBdOc6elORbCDoeaeBn/hdstm7MjamGuU6xVtLZN
7THNopj3wvcedIkmU+HEKh61xlHY8aq2/Z9TcOaHBNZ3s7CJ/vjFFwz4RuJD
5TL2bYTLD307EcwP1/gW2KmLwtbU+IQBGbg79KDe2R9h5vkGH6maNbfaC0/f
8jcsI8OqStzjy4fgSdW5UE1L2O50q5m9LWyk7pLu7wJXzEndDfOEe55UP/L3
hat8A+btQ2C3LoVa7Qh43Et1/3ocTKIlldckw9623FZnMuEM5XU7lrtwsGg2
S3IBnBsxFLa1HF5xDViPrIZF+MTrJ+ph52um0/rtsCwl4ElcD8wty3GyfQDu
c7WdnX8FM+MH2NHt4xhpClYKZk3T+QZ/Pd++qL0E28+N6Civw7snpSN4ObYT
zrKIZIzxwtYsun0VwrClRp5CoARs1GItqyYHh4WqTVKVYQbd+H4wCfbIYAsU
0IYdt0hF3N4HV9CTpiUMYInT9QNJpnBUp40T4yic5BtU7GANm5knvK60g8OH
QgVYXOD88Rg345/havLP9Is+cLOa0V+l/vDp4WrnwRBYpGzoHO0yzIzfNtX/
ebhR8Ab8w4itgVAKHM3R/XxLJhwX1h5Cz4GF4vzOjt6H/+N0tbChCM59queQ
Vg4f8PK/7fI7/NNAYrByLWxrliz0sQm2CBAKv9UBqyWb9hn1wGv5HPKTL+GX
pQ3xV6lw5eNYWYk3m77vlFh88AEulxlU2DUJnxmpry+cgYe54oZl5uB3tklx
CcuwPMfb9/NrcK0vadmaTZSwzszE21Ju2M1CtWiDf1N+WrvnYRFY14uslSgO
M+NruEUxWoVFAT53djFEYycc25spaUuCrXPSpcM0YZrVYHKGDnyBdTW2+AD8
MCNAmGIArwp6kFtM4EBK6442c3iXg25H43H4kgNZ7/eT8I4x0Yx8O1hvseVd
gjM8Fimi4ntmU31+eVeOecL9pS/mlc7DCeIvU5f84N+S7ni1/gqfesUZfy0c
Zrt9d9UsAjYmDb1gj4EP5rwXocTDj3x7+z2TNo1PYqjktjT4E+etpZpMePRL
YZBNzqb5lOLJn82DexhT12Mfwsz7EZz1XKQ2rxwuEf4q8WMVPKTi41pQA7eZ
zd+Rr4evRre9yWyGN/yXlXk64O4/omOCuuHTOvpcb3vhmaS+SvIAXDTSlpFL
hRdrYihLrzf1b85e5cgonCJzbiZrbFN/dlRvnZiEuVsUc0gz8GVSWPYvNPj6
ZWfx0gW419hW8hMdjme8LJZch0Nvbh86zCpGeOc7q3tBnHCTXLZELg/s4T1h
3CwAH1QWJI0Kw0p+/a9WROH/AXs0uaU=
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsI9kmcuOPSSrOtURSidSxC2UITdaxtSBLiitbGksp
hWz9MZJ9z3YojGtKpSJLmbr261r6/+fcM+/XvOc85z2f85z3Wd/neX6PnOvF
k25sLCwsjP+nv9//POOj3Zc919Sbvu1nbBiqTZD/MR97SejnlFnyv/OXCGsl
/LVs0LRCmG3nbgZf0RphazvNUj/574T9iw6Syx+w6P+7fFbCYqcra8u82Agf
23e1akyNnfDlu4N1Yh9gy3gNVY5oDsL5tcNi3T9wEpY1Pb5frBBmtp+LcOhV
RrNXIRyT5HUgTJabMKmCg0ubAieN+YcZLsNlpRdT1ey3EO5s1wsKqIFpFf3r
l0V5CK+Qki/le8PM8YN7pWifU4V4Cd+KYn826ggrmN2m2hXAshu9PTo0OJPK
t5K3l4+wnWqSaV8w7NX5rGGwGu5/NrTwJx1eEqiOWNvLT7h9fquVnS/MnF+4
vuPAV+UxuMCgtf25pABhqsB1jxVzWMBP8+BgJGxeTDF2q4T36KmdapyAhWe2
i9HEBAkbnVrT5jSBH3bl/soXAHsb3qoXvA8/pd1Sl+qFA2stdHXoMPP/3Er4
iXRx1cBR+DuL5XfnAPjI49JCpSy4SFfeQ7kV5t/WEuQzDc9v1NhGcgsRtvDe
3bMoCdtmlNwXJcHHTZ63j+vBISodK24n4Juabm8ynWEBb5Ev133hL292RalH
wtISY1NJyTBz/cGBKqkpyeVwnoLZ659a4D3CyrMZ/fD+vtqc5+/hWqnU7Opv
sJyBe1zgBtxFVVxY5RcmTLZecDCXhifU5bV+UYFlitaoDvtgB+4HGdLGsMhU
U0vRSVhX81isoDOsYq6w3fgC7F/2JM4iFD4UHryuEQsz9x/YLTuPLSwHjhx3
TRgvhv9wW+JRroZ5c+lOJu2wSf20p34/PEBO5hB/Czv7Oq52T8FLN0rFHRdg
IZKGdN93uMFBqXkHnwjhAI/8hhNisA91vsVFDv6tMT/oNAkeq1sPV90H0x9y
Xxk32OSjn7ZEHIM9A+hPWa1hVRkxSXcXmLk/wxo10rs+BsL1HbGj9KvwzDZb
t6U4+GOm9t6RFPjRAa3O/Gw4xY2W4pAP2x9u5GX8F26zaMoMr4G5TrNW0Fo3
tccko9qsF77/sFM0kQonVPCoNozCDte07P6cgtM/xLO+m4WN9cYvvWDANxMe
KZWwbyNcevjbySB+uMonz1ZNFLaixsUPyMBdIYd0z/0IM883+GjFrJnlPnj6
tp9BCRlWUeQeXz4MT6rMhWhYwLZnWkztbGBDNedUP2e4bE7qXqgH3PO08rGf
D1zh4z9vFwy7dsrXaIXD454qB9ZjYRKNUlqVCHvZcFueTYfTlNZtWe7BQaKZ
LIl5cHb4UOjWUnjFxX89ohIW4ROvm6iDna6bTOu1wTuq/Z/G9sDcOzhOtQ3A
fS42s/OvYGb8ADu4fhwjTcGKQawp2t/grxfaFrWWYLu5EW2ldXjPpHQ4L8d2
whnmEYwxXtiKRaevTBi2UM+RD5CADZutdqjKwqEhqpNUJZhBN3oQRILd09gC
BLRghy1S4Xf2w2V0yrSEPixxpm6AYgJHdlg7Mo7BFJ/AQnsr2NQs/nW5LRw2
FCLA4gznjke7Gv0MV5J/pl/yhptUDf8q9oPPDFc6DQbDIiVD52lXYGb8tqn+
z8MNgjfhH0Zs9IWS4CiOru4t6XBsaFswPQsWivU9N/oA/o/jtfz6Ajj7ma59
Sil80NPvjvPv8E8DCUFKNbCNaaLQx0bY3F8o7HY7rJpo0mfYA6/lcshNvoRf
FtfHXaPC5U9idki82fR9h8Tiww9wqcyg/O5J+OxIXV3+DDzMFTssMwe/s6HE
xi/Dchxv38+vwTU+pGUrNlHC2jMTb4u5YVdzlYIN/k35KW0eR0RgHU+yZoI4
zIyv4WaFKGUWefj8ucVg9V1wTG+6pA0JtspKlQ7VgGmWg4lp2vBF1tWYwoPw
ozR/4Wp9eFXQndxsDAdUt+xsNYN32+u0N5yAL9uTdX8/Be8cE03LtYV1F5vf
xTvBYxEiyj5nN9Xnm3P1uAfcX/xiXvECHC/+MnnJF/6Nctez5Vf49CvOuOth
MNude6um4bARaegFezR8KOu9SHUc/Nint9+Dsml8EkIkt6XAnzhvL1Wlw6Nf
8gOtszbNpxRP7mwO3MOYuhHzCGbej+CMbpGanFK4SPirxI8V8JCyt0teFdxq
On9Xrg6+FtX6Jr0J3vBbVuJph7v+iIoO7ILPaOtxve2FZyh95eQBuGCkNS2b
Ci9WRVcvvd7Uvzk75aOjcJLM+ZmMsU392Vm5dWIS5m5WyCLNwFdIoZm/0OAb
V5zEixfgXiMbyU90OI7xslByHQ65tX3oCKsY4V3vLO8HcsKNspkS2Tywu9eE
UZMAfEhJkDQqDCv69r9aEYX/Bwi+gQE=
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
GrXwwYeU+EljgrCi78DrVWH4X4Fjd0A=
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
kyYtAvBBZUHSmDCs5D/walUU/hcI654h
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
wqRZED6kLEQaFYGV/Ptfr4jB/wLVXdBZ
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0ltkfB3C7rKHsg2wTeWMwScV5LZFUInXsQhlCk3VsLciSsmRLYylF
yNYfI9n3kENhvKZUKrKUyWt/vZb+//95zzxf85xzz3M+557nrs+993dlXS6d
cmVhYmKi/y/9//3P8zHgyWye0k/NswfomwaqE+R/zMNaGvIlZY787/xlwprx
f6/oN68SZtm1h85TvE7YylajzFfuO2G/4kPkiodMev8un5mwyJmqunJPFsLH
91+rHlNlJXzl3mC9yEfYIk5dhS2KjXBB3bDIix/YCcuYnDggUgQz2s9BOOQa
vcWzCI5O8jwYKsNJmFTJxqGVACeN+YUarMDlZZdSVe22Ee7q0A30r4Wplf0b
V4S5CK+Ski8XeMGM8YN7JahfUgW4Cd+OZH026gDLm96h2BbCMpu9PdpUOJPC
s5q/j4ewrUqSSV8Q7Nn1rHGwBu5/NrT4Fw1e5qsJX9/HS7hjYbulrQ/MmF+4
ofPgN6UxuFC/reO5OB9hCt8N91UzmM9X49BgBGxWkmDkWgXv1VU93TQBC87s
FKGK8BM2PL2uxW4M53Xn/sbjD3sZ3G7gfwA/pd5Wk+iFA+rMdbRpMOP/3E74
iWRJ9cAx+DuTxXcnf/jo47IixSy4WEfOXakN5t3RGug9DS9s1tpEcAoQNvfa
07MkDttklD4QJsEnjJ93jOvCwcqdq64n4Vsarm8znWA+L6GvN3zgr293R6pF
wJJiY1NJyTBj/cEByqkpyRVwvrzpm59b4b2CSnMZ/fCBvrqc5x/gOonU7JpZ
WFbfLTZgE+6mKCyu8QoSJlst2ptJwhNqcpq/KsNSxesU+/2wPefDDEkjWGiq
ubX4FKyjcTyG3wlWNpPfaXQR9it/EmseAh8OC9pQj4EZ+w/smp3PEpoDR4y7
xI+XwH+6LnMp1cDcuTRH4w7YuGHaQ68fHiAns4m+g518HNZeTMHLN8tEHRZh
AZK6ZN93uNFesUWaR4iwv3tB40kR2Juy0OosC//eVBB4hgSP1W+EqeyHaXmc
V8f1t/jY523hx2EPf9pTZitYRUpE3M0ZZuzPsHqt5O5PAXBDZ8wo7Ro8s8PG
dTkW/pSptW8kBX50ULOrIBtOcaWm2BfAdkeauOn/gdvNmzPDamGOM8yV1LYt
7THOqDHthR/kdQknUuD4Si6VxlHY/rqm7V9TcPrHOOb3c7CR7vjll3T4Vvwj
xVLWHYTLjsyeCuSFq73zbVSFYUtKbNyAFNwdfFjn/I8w43yDj1XOmVrsh6fv
+OqXkmFlBc7xlSPwpPJ8sLo5bHO21cTWGjZQdUr1dYLL5yXuh7jDPU+rHvt6
w5Xefgu2QbBLl1ytZhg87qF8cCMGJlETyqoTYU9rTotz6XCa4oYN0304UDiT
KTEfzg4bCtleBq86+22EV8FCPKL1E/Ww4w3jad12WLrG72lMD8wpzXa6fQDu
c7aeW3gNM+IH2N7l0xhpClYIZE7RmoW/XWxf0lyGbedHtBQ34L2TkmHcbDsJ
Z5iF08e4YUsm7b5yQdhcLUfOXww2aLGUVpGBQ4JVJimKMJ1m+DCQBLulsfjz
acL22yTC7h6Ay2kJ02J6sNjZ+oEEYzii08qBfhxO8A4osrOETUzj3lTYwKFD
wXxMTnDueJSL4S9wFfkX2mUvuFnF4O8SX/jscJXjYBAsVDp0gXoVZsRvW+r/
MtzIfwv+YcRaTyAJjmTrfrEtHY4JaQ+iZcECMT7nRx/CPzlcL2gohLOf6dil
lMGHPHzvOv0B/zwQH6hYC1ubJAp8aoLN/ARC73TAKonGfQY98Houm+zkK/hV
SUPsdQpc8SRaWuztlu87xZbyPsJlUoNyeybhcyP19QUz8DBHzLDUPPzeOiEm
bgWWZXv3YWEdrvUmrViyCBPWmpl4V8IJu5gpF27ybslPaXc/KgRre5A14kVh
RnwNt8hHKjHJwRfOLwWp7Yaje9PFrUmwZVaqZIg6TLUYTEzTgi8xr0UXHYIf
pfkJ1ujBa/xu5BYj2L+mdVebKbzHTruj8SR8xY6s88dpeNeYcFquDayz1PI+
zhEeCxdS8j63pT6fnGsn3OH+kpcLChfhONFXycs+8O8J9zxaf4PPvGaPvREK
s9y9v2YSBhuShl6yRsGHsz4I1cTCj717+90TtoxPfLD4jhT4M/ud5ep0ePRr
QYBV1pb5lODKncuBe+hTN6MfwYz7EZzxQqg2pwwuFvwm9mMlPKTk5ZxfDbeZ
LNyTrYevR7a9TW+GN31XFLk64O4/I6MCuuGzWroc73rhmYS+CvIAXDjSlpZN
gZeqo2qW32zp37yt0rFROEnqwkzG2Jb+7KraPjEJc7bIZ5Fm4KukkMxfqfDN
q46iJYtwr6G1+GcaHEt/VSS+AQff3jl0lFmE8O73Fg8C2OEmmUyxbC7YzXPC
sJkPPqzITxoVhBV8+l+vCsP/BQbD1gw=
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
2MwHH1bkJ40Jwgo+A69WheH/Aeh+ieA=
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
MGzmgw8r8pNGBWEFn/7XK8LwfwFRsDur
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Rs0C8CElQdKoMKzo2/9qRRT+HypfXPQ=
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
mgTgA0qCpBFhWNG379WyKPw33cxf9w==
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk01dseB/BjSohQ5iuZbuTEw00T6xgiqUS0zEK5hG7Ga2pAhhRHpnQN
pRQy9XAl8xzyKFzHbVQdoXLryHQcQ++9ddb9f8/9r7XXf33WXv89/vfev63o
cfaYJzeJRGL9L/3//ffzH1b0e11bOuXrHtaaseYE5W8L8ZRHfEqfofwzf4Gw
bvJfi0atS4S5t25nCZWuELZz1KkIVPpOOKh0H6XqDsnwn+VzEZY8XtNQ6ctN
+PCui7V0TR7C528ON0q+g62TtDV443gJFzWMSj75gY+wgvmRPZIlMLv96whH
XGS1+ZbA8am+eyMV+AmTq3nX6VHhVHpQpPEiXFlxNkPTaT3hni6D0OB6mFE9
uHpeQoDwEjntXJEfzB4/uF+W8SlDVJDwtVieR2MusLLFdZpjMayw1t+3mwHn
0ISWCncKEXbUSDUfCIN9ex41D9fBg49G5v5kwgvCddErOzcQ7prdaOMYALPn
F27q3vtFjQ4XG3V0PZYRJkwTvuy9ZAkLB+rsG46BLcuopp418A4DTduWCVhs
erMkQ1KEsIntih6fGXy3t+BXoWDYz/hak8ht+CHjmpZsPxzSYKW/mwmz/8+N
hB/IldUOHYK/k6y/uwXDB+9XlKjmwqX6St5qHfCGTe2h/h/h2bV6hxh+UcJW
ftv75mVgh+zy2xJk+IjZ465xAzhcvXvJ8yh8VcfzVY4bLOwn/vlyAPz51bZY
rRhYTpo+lZoGs9cfHKKekZ5WBRcqW7z4qR3eIaY2kz0I7xloyH/8Fm6Qzcir
+worGnklhqzBvTSVueUNYoQpdnPOlnLwhJaS7i/qsHzpCs15F+zMfydbzhQW
n2ptLz0G6+scThBxg9UtlTebnoGDKh8kWkXA+6PCVrUTYPb+A3vmFXJH5sMx
4x7J42XwH54LAmp1sGAB09WsCzZr+uhjOAgPUdJ4pV7DbgEuy0+m4IUrFVIu
c7AoWVtu4Dvc7KzatkVInHCwd1HzUUnYnzbb7q4I/9ZSFHqcDNMbV6M0dsHM
u/wXxo04fOjD+ujDsE8w8yGXHawhLynj5Q6z92dYu15u2/sQuKk7YYx5EZ7e
5OC5kAi/z9Hb+TIdvrdXt6coD073ZKQ7F8FOB1oEWf+GO61ac6Lq4XXHuaoZ
HRztMcuus+iHb9/tkUihwcnVAhrNY7DzJV3HP6fgrHdJXG9mYFOD8XNPWfDV
5Huq5TybCFcc+HosdANc61/ooCkB29ASk4bk4d7w/fqnfoTZ5xt8qHrGwnoX
/PF6oFE5BVZX4R9fPABPqn8L17aCHU60mzvaw8aabhmBbnDlN9lbEd5w38Oa
+4H+cLV/0KxjGOzRo1SvGwWP+6jvXU2AyQxqRW0K7GvPb30yC85UXXUg3YJD
JXJIKYVwXtRIxMYKeMk9aDW6BhYXkmqcaIRdL5t9NOiEt9QFPUzog/m38Np2
DsED7vYzs89hdvwAO3u8p5OnYJVQrnS9r/CXM53zuguw47eXeqqr8I5JuShB
3s2Esy2jWXRB2Ia0e6BSDLbSylcKloaN22y2aCjAEeEakzRVmMU0uRNKhr0y
uYOFdWHn9bJRN/bAlUzqR2lDWPpE4xDVDI7ptnNhHYap/iElTjawuUXSiyoH
OHIkXJjkBheMx3mY/AzXUH5mnvODWzWM/yoLhE+M1rgOh8Hi5SOnGRdgdvzG
Uf+n0WaRq/APL+0NRVPhWN7eJ+uz4ISIzjBmLiyaEHBq7A78L5dLRU3FcN4j
faf0CnifT+ANt9/hn4aSQ1XrYXvzFNH3LbBlkGjk9S5YI8VswLgPXingVZx8
Bj8ra0q8RIOrHsRvkX7F8X239Pzdd3CF/LDS9kn45MvGxqJpeHRdwqj8N/iN
PTUhaRFW5H39dnYFrvcnL9pwSxDWm554XcYPe1iqF69t4MhP7/Q+KA7v9qHo
JEvB7PgablOOVSMpwadPzYdpbYPj+7Nk7MmwTW6GXIQ2zLAeTsnUg89yLceX
7IPvZQaJ1RnCyyJelDZTOLiufWuHBbzdaXdX81H4vBNF/3dbeCtdIrPAAdaf
b3uT5ArTo8XV/E9y1BeQf/GINzxY9nRW5QycJPUsbSEA/o1606f9V/j4c77E
y5Ew941by+ZRsAl55ClPHLw/9614XSJ8379/0JvKMT7J4TKb0uEPfNcXarPg
sc9FIXa5HPMpK1Awkw/3saauxN+D2fcjOPuJeH1+BVwq9kX6x2p4RM3PvbAW
7jCfvanYCF+K7XiV1QqvBS6qCnTBvX/ExoX0wif0DNa97oenqQNVlCG4+GVH
Zh4Nnq+Nq1t4wdG/b45qh8bgVPnT09l0jv5srdk4MQnztynnkqfhC+SInF8Y
8JULrlJlc3C/ib3MByacyHpWIrMKh1/bPHKQS5LwtjfWt0P44BaFHOk8AdjL
d8KkVRjerypCHhODVQIGny9JwP8Ftc73QA==
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
WvjgQ4r8pDFBWMF34NWqMPw/kVUqLA==
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
Zj74gBI/aVQQVvTtf7UiAv8PEQmSqg==
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
MG4WgA8qC5JGhWEl3/5XK6LwfwEs2qU4
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0ltkfB3C7rKHsI9km8sYfkxTOa4mkEqljF8oQmqxja0GWlH1JYyml
kK0/Btn3kENhvKZUKrKUqdf+ei39/3PeM8/XPOfc85zPuee563Pv/V0Zl0un
XFmYmJjo/09/v/95kqq1YzxefCB/O0jfNFCZJP9jHtbSkM+pc+R/5y8T1oj/
a0W/ZZUwy+69dJ7idcJWtuplvrLfCfsVa5MrHjDp/bt8ZsIiZ6rqyz1ZCB8/
cK1mXIWV8JW7Qw0iH2CLODVltig2wgX1IyLPf2AnLG1y4qBIEcxoPwfhkGv0
Vs8iODrZ81CoNCdhUiUbh2YCnDzuF2qwApeXXUpTsdtGuLtTN9C/DqZWDmxc
EeYivEpKuVzgBTPGD+6ToH5OE+AmnBTJ+nTMAZYzvU2xLYSlN/t6tahwFoVn
NX8/D2Fb5WST/iDYs/tp01AtPPB0ePFPGrzMVxu+vp+XcOfCdktbH5gxv3Bj
16GviuNwoX575zNxPsIUvhvuq2Ywn6+69lAEbFaSYORaBe/TVTndPAkLzu4U
oYrwEzY8va7Jbgw/7Mn7lccf9jJIauS/D1dTk1Ql+uCAenMdLRrM+D+3E34i
WVIzeAz+zmTx3ckfPvq4rEghGy7WkXVXbId5d7QFes/AC5t1NhGcAoTNvfb2
LonDNpml94VJ8AnjZ50TunCwUteq60n4lrrrmywnmM9L6MsNH/jLmz2RqhGw
pNj4dHIKzFh/cIBSWmpKBZwvZ/r6pzZ4n6DiXOYAfLC/PvfZe7heIi2n9hss
o+8WG7AJ91DkF9d4BQmTrRbtzSThSVVZjV+UYKnidYr9Adie80GmpBEsNN3S
VnwK1lE/HsPvBCuZye00ugj7lT+JNQ+BD4cFbajFwIz9B3bNyWcJzYUjJlzi
J0rgP1yXuRRrYe48mqNxJ2zcOOOhNwAPklPYRN/CTj4Oa8+n4eWbZaIOi7AA
SU2y/zvcZK/QuotHiLC/e0HTSRHYm7LQ5iwD/9ZcEHiGBI83bIQpH4BpDzmv
Tuhv8bFP28KPwx7+tGpmK1hZSkTczRlm7M+wWp3kno8BcGNXzBjtGjy7w8Z1
ORb+mKW5fzQVfnRIo7sgB051pabaF8B2R5q56f+FO8xbssLqYI4zzJXU9i3t
Mc6sNe2D7z/sFk6kwPGVXMpNY7D9dQ3bP6fhjA9xzO/mYCPdicsv6PCt+EcK
paw7CJcd+XYqkBeu8c63URGGLSmxcYNScE/wYZ3zP8KM8w0+VjlnanEAnrnt
q19KhpXkOSdWjsBTSvPBauawzdk2E1tr2EDFKc3XCS6fl7gX4g73Vlc99vWG
K739FmyDYJdu2TqNMHjCQ+nQRgxMoiaU1STCntacFucy4HSFDRume3CgcBZT
Yj6cEzYcsr0MXnX22wivgoV4RBsmG2DHG8Yzuh3wrlq/6phemHMX2+mOQbjf
2Xpu4RXMiB9ge5eP46RpWD6QOVXzG/z1YseSxjJsOz+qqbAB75uSDONm20k4
0yycPs4NWzJp9ZcLwuaqubL+YrBBq+UuZWk4JFh5iqIA02mGDwJJsFs6iz+f
Bmy/TSLszkG4nJYwI6YHi51tGEwwhiO6rBzox+EE74AiO0vYxDTudYUNHDoc
zMfkBOdNRLkY/gxXkX+mXfaCW5QN/irxhc+OVDkOBcFCpcMXqFdhRvy2pf7P
I038t+AfRq31BJLhSLae59sy4JiQjiBaNiwQ43N+7AH8H4frBY2FcM5THbvU
Mljbw/eO0+/wT4PxgQp1sLVJosDHZtjMTyD0diesnGjcb9ALr+exyUy9hF+W
NMZep8AVT6J3ib3Z8n2X2NLDD3CZ1JDs3in43GhDQ8EsPMIRMyI1D7+zToiJ
W4Fl2N6+X1iH67xJK5YswoQ1ZyfflnDCLmZKhZu8W/JTO9yPCsFaHmT1eFGY
EV/DrXKRikyy8IXzS0Gqe+DovgxxaxJsmZ0mGaIGUy2GEtM14UvMa9FF2vCj
dD/BWj14jd+N3GoE+9e27W43hffaaXU2nYSv2JF1fj8N7x4XTs+zgXWWWt/F
OcLj4UKK3ue21OeTe+2EOzxQ8mJB/iIcJ/oyZdkH/i3hrkfbr/CZV+yxN0Jh
ljv31kzCYEPS8AvWKPhw9nuh2lj4sXffgHvClvGJDxbfkQp/Yr+9XJMBj30p
CLDK3jKfElx5c7lwL336ZvQjmHE/gjOfC9XllsHFgl/FfqyEhxW9nPNr4HaT
hbsyDfD1yPY3GS3wpu+KAlcn3PNHZFRAD3xWU5fjbR88m9BfQR6EC0fb03Mo
8FJNVO3y6y39m7dVPDYGJ0tdmM0c39Kf3VXbJ6dgzla5bNIsfJUUkvULFb55
1VG0ZBHuM7QW/0SDY+kvi8Q34OCkncNHmUUI73lncT+AHW6WzhLL4YLdPCcN
W/jgwwr8pDFBWN5n4NWqMPw/FiGI5g==
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
kyYtAvBBZUHSmDCs5D/walUU/hfX8F/I
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
qJkfPqgkQB4VghV9+1+tiMD/Ay5Ts94=
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Mx98SJGfNCoIK/j2v1oRhv8Guc9zfw==
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
CeMmAfigiiBpRARW9ut7syIG/wuDxN7s
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
o2Z++KCiAHlUCFbw7X+1IgL/D1g4F4k=
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB/BrzxrKPpJtIjf+mKTiXEsklUgdu1CG0GQdWwuypCzZ0lhK
KWTrj5Hse8ihMK4plUKWMnXt17X0/8+5Z96vec95zns+5znvs77P8/weWZeL
J11ZSSQS4//p7/c/z6iJYu1wCanp237GhoHqBOUf87KVhHxOmaX8O3+JsGb8
X8v6TSuEWXfuZvAWrRG2stUo9ZX7Ttiv6CCl/AFJ79/lsxAWPV1ZW+bJSvjY
vqtVY6pshC/fHagT/QhbxKmrsEexE86vHRJ98QMHYRmT4/tFC2Fm+zkJh1xl
NHsWwtFJngdCZbgIkyvYObUS4KQxv1CDZbis9GKqqt0Wwp3tuoH+NTCtom/9
sgg34RVy8qV8L5g5fnCPJO1zqiAP4VuRbM9GHGB509tU2wJYZqOnW5sGZ1J5
V/L28hK2VUky6Q2CPTufNQxUw33PBhf+pMNL/NXha3v5CLfPb7W09YGZ8wvX
dxz4qjQGF+i3tj+X4CdM5b/uvmIG8/tqHByIgM2KE4xcK+E9uqqnGidgoZnt
ojRRAcKGp9a0OIzhh125v/L6w14Gt+oF7sNPabfUJHvggFpzHW06zPw/txJ+
IlVc1X8U/k6y+O7kDx95XFqomAUX6ci5K7XCfNtaAr2n4fmNGpsILkHC5l67
uxclYJuMkvsiZPi48fP2cV04WLljxfUEfFPD9W2mE8zvJfzlug/85e2uSLUI
WEp8bCopGWauPzhAOTUluRzOkzd981MLvEdIaTajD97fW5vz/ANcK5maXf0N
ltV3iw3YgLuoCgurfEKEKVYL9mZS8ISanOYvyrB00RrVfh9sz/UgQ8oIFp5q
aik6CetoHIsRcIKVzeS3G12A/cqexJqHwIfCgtbVY2Dm/gO7ZuexhubAEeMu
8ePF8B+uS9xK1TBPLt3RuB02rp/20OuD+ynJ7GLvYCcfh9UXU/DSjVIxhwVY
kKwu1fsdbrBXbN7BK0zY3z2/4YQo7E2db3GWhX9rzA88TYbH6tbDVPbB9Idc
V8b1N/nopy3hx2APf/pTFitYRVpUws0ZZu7PsHqN1K7RALi+I2aEfhWe2Wbj
uhQLj2Zq7R1OgR8d0OzMz4ZTXGkp9vmw3eFGHsZ/4TbzpsywGpjzNEsFrXVT
e4wzqk174PsPO0USqXB8BbdKwwhsf03T9s8pOP1jHMv7WdhId/zSSwZ8M/6R
YgnbNsKlh7+dDOSDq7zzbFRFYEtqbFy/NNwVfEjn3I8w83yDj1bMmlrsg6dv
++qXUGBlBa7x5cPwpPJcsLo5bHOmxcTWGjZQdUr1dYLL5iTvhbjD3U8rH/t6
wxXefvO2QbBLp1yNZhg87qF8YD0GJtMSSqsSYU9rLouz6XCa4roN6R4cKJJJ
SsyDs8MGQ7aWwivOfuvhlbAwr1jdRB3seN14WrcN3lHt9zSmG+bawX6qrR/u
dbaenX8NM+MH2N5ldIw8BSsEsqRofYO/Xmhb1FyCbeeGtRTX4T2TUmE87NsJ
Z5iFM8Z4YEuSdm+ZEGyuliPnLw4bNFvuUJGBQ4JVJqmKMINu+CCQDLulsfrz
a8L2WyTD7uyHy+gJ0+J6sPiZuv4EYziiw8qBcQxO8A4otLOETUzj3pTbwKGD
wfwkJzh3PMrF8Ge4kvIz/ZIX3KRi8FexL3xmqNJxIAgWLhk8T7sCM+O3TfV/
HmoQuAn/MGytJ5gER7J3vdiSDseEtAXRs2DBGJ9zIw/g/zhcy68vgLOf6dil
lMIHPXzvOP0O/9QfH6hYA1ubJAqONsJmfoKht9thlUTjXoNueC2XXXbyFfyq
uD72GhUufxK9Q/ztpu87xBcffoRLpQfkdk/CZ4fr6vJn4CHOmCHpOfi9dUJM
3DIsy/7uw/waXONNXrZkFSGsNTPxrpgLdjFTLtjg25Sf0uZ+RBjW9qBoxIvB
zPgabpaPVCLJwefPLQap7YKje9IlrMmwZVaqVIg6TLMYSEzTgi+yrEYXHoQf
pfkJVevBqwJulGYj2L+6ZWerKbzbTru94QR82Y6i8/speOeYSFquDayz2Pw+
zhEeCxdW8j67qT6fnKvH3eG+4pfzChfgOLFXyUs+8G8Jdz1afoVPv+aIvR4K
s965t2oSBhuSB1+yRcGHsj4IV8fCj717+twTNo1PfLDEthT4E8ftpap0eORL
foBV1qb5lOTOnc2BuxlTN6Ifwcz7EZzxQrgmpxQuEvoq/mMFPKjk5ZxXBbea
zN+VrYOvRba+TW+CN3yXFbnb4a4/IqMCuuAzWrqc73rgmYTecko/XDDcmpZN
hReroqqX3mzq35yt0tEROEn6/EzG2Kb+7KzcOjEJczXLZ5Fn4CvkkMxfaPCN
K45ixQtwj6G1xCc6HMt4VSixDgff2j54hEWU8K73FvcDOOBGmUzxbG7YzXPC
sIkfPqQoQB4RghV8+l6viMD/Az3BekA=
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTuTGYpOJcSySVSB27UIbQZB1bC7KkuLKlsZRS
yNYfI9n3kENhXFMqFVnK1LVf19L//z/3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL43/p/+9/Hqv8IOrosZ+av+1jbBipT5D/MR97adjn1Fnyv/OXCGsn
/r1s2LxCmG3HLgZf8RphG3utMn+F74QDig+QK+6zGPy7fFbCYqeq6sq92Qgf
3XulekydnfClO4P1Yh9gqwRNNY4YDsIFdcNiz3/gJCxndmyfWBHMbD8X4bAr
jBbvIjg22Xt/uBw3YVIlB5cOBU4eCwg3WobLyy6kqTtsIdzVoR8cWAvTKvvX
L4nyEF4hpVws8IGZ4wf3StE+pwnxEr4Zzf501AlWNL9FtS+E5TZ6e3RpcBaV
byV/Dx9he7Vks74Q2LvraeNgDdz/dGjhLzq8JFATubaHn3DH/FZrez+YOb9w
Q+f+rypjcKFhW8czSQHCVIFrnisWsIC/1oHBKNiihGLiXgXv1lc/2TQBC89s
F6OJCRI2Prmmw2kKP+jO+40vEPYxutkgeA9+QrupIdULB9VZ6unSYeb/uZXw
Y+mS6oEj8HcWq+8ugfDhR2VFytlwsZ6Cp0obzL+tNdh3Gp7fqLWL4hYibOmz
q2dRErbLLL0nSoKPmT7rGNeHQ1U7V9yPwze03N9kucACPiJfrvnBX97sjNaI
gqUlxqaSU2Dm+oODVNNSUyrgfEXz1z+3wruFVWYz++F9fXW5z97DdVJpOTXf
YHlDj/igDbibqrSwyi9MmGyz4GghDU9oKGj/qgrLFK9RHffCjtz3M6VNYJGp
5tbiE7Ce1tE4QRdY1UJxu8l5OKD8cbxlGHwwImRdMw5m7j+we04+W3guHDXu
ljheAv/pvsSjUgPz5tGdTTtg04ZpL4N+eICcwiH+Fnbxc1p9PgUvXS8Td1qA
hUia0n3f4UZH5RZZPhHCgZ4FjcfFYF/qfKurPPx7U0HwKRI8Vr8eobYXpj/g
vjxuuMlHPm2JPAp7BdKfsNrAajJikh6uMHN/hjVrpXd+DIIbOuNG6VfgmW12
7kvx8McsnT0jqfDD/dpdBTlwqjst1bEAdjjUxMv4D9xu2ZwVUQtznWKtpLVt
ao9pZo15L3zvQZdoEhVOrORRaxyFHa9q2/81BWd8SGB9Nwub6I9ffMGAbyQ+
VC5l30a47NC3E8H8cLVvvp26KGxNjU8YkIG7Qw/qnf0RZp5v8JHKWXOrvfD0
LX/DUjKsqsQ9vnwInlSdC9W0hO1Ot5rZ28JG6i5p/i5w+ZzU3TBPuOdJ1SN/
X7jSN2DePgR261Ko1Y6Ax71U96/HwSQapaw6Cfa25bY6kwGnK6/bsdyFg0Wz
WJLy4ZyIobCtZfCKa8B6ZBUswideP1EPO18zndZvh2VrAp7E9cDcshwn2wfg
Plfb2flXMDN+gB3dPo6RpmClYNZUnW/w1/Pti9pLsP3ciI7yOrx7UjqCl2M7
4UyLSMYYL2zNottXLgxbauQqBErARi3WsmpycFio2iRVGWbQje8Hk2CPdLZA
AW3YcYtUxO19cDmdMi1hAEucrh+gmMJRnTZOjKMwxTeoyMEaNjNPeF1hB4cP
hQqwuMB54zFuxr/AVeRf6Bd94GY1o79L/OHTw1XOgyGwSOnQOdplmBm/bar/
83Cj4A34hxFbA6FkOJqj+/mWDDgurD2Eng0LxfmdHb0P/+R0taChEM55queQ
WgYf8PK/7fIH/PNAYrByLWxrliT0sQm2CBAKv9UBqyWZ9hn1wGt5HPKTL+GX
JQ3xV6lwxeNYWYk3m77vlFh88AEukxlU2DUJnxmpry+YgYe54oZl5uB3tpS4
hGVYnuPt+/k1uNaXtGzNJkpYZ2bibQk37GahWrjBvyk/td3zsAis60XWShSH
mfE13KIYrcKiAJ87uxiisROO7c2QtCXB1tlp0mGaMM1qMCldB77AuhpbdAB+
mB4gXGMArwp6kFtM4MCa1h1t5vAuB92OxuPwJQey3h8n4R1joul5drDeYsu7
BGd4LFJExffMpvr8cq8c84T7S17MK52HE8Rfpiz5wb9T7ni1/gafesUZfy0c
Zrt9d9UsAjYmDb1gj4EPZr8XqYmHH/n29ntSNo1PYqjktlT4E+etpeoMePRL
QZBN9qb5lOLJm82FexhT12Mfwsz7EZz5XKQ2twwuFv4q8WMlPKTi45pfDbeZ
zd+Rr4evRre9yWiGN/yXlXk64O4/o2OCuuHTOvpcb3vhGUpfBXkALhxpS8+h
wovVMTVLrzf1b85e5cgonCxzbiZzbFN/dlRtnZiEuVsUs0kz8GVSWNavNPj6
ZWfxkgW419hW8hMdjme8LJJch0Nvbh86zCpGeOc7q3tBnHCTXJZEDg/s4T1h
3CwAH1QWJI0Kw0p+/a9WROH/AjVQhfg=
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
auaHDyoJkEeFYEXf/lcrIvD/APNptuE=
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/j2Y19fwx2XLyt32MDSP1CfI/5mMvDfucOkv+d/4SYe3E
v5YNm1cIs+3YxeArXiNsY69V5q/wnXBA8QFyxX0Wg3+Xz0pY7FRVXbk3G+Gj
e69Uj6mzE750Z7Be7ANslaCpxhHDQbigbljs+Q+chOXMju0TK4KZ7eciHHaF
0eJdBMcme+8Pl+MmTKrk4NKhwMljAeFGy3B52YU0dYcthLs69IMDa2FaZf/6
JVEewiuklIsFPjBz/OBeKdrnNCFewjej2Z+OOsGK5reo9oWw3EZvjy4NzqLy
reTv4SNsr5Zs1hcCe3c9bRysgfufDi38SYeXBGoi1/bwE+6Y32pt7wcz5xdu
6Nz/VWUMLjRs63gmKUCYKnDNc8UCFvDXOjAYBVuUUEzcq+Dd+uonmyZg4Znt
YjQxQcLGJ9d0OE3hB915v/IFwj5GNxsE78FPaDc1pHrhoDpLPV06zPw/txJ+
LF1SPXAE/s5i9d0lED78qKxIORsu1lPwVGmD+be1BvtOw/MbtXZR3EKELX12
9SxKwnaZpfdESfAx02cd4/pwqGrnivtx+IaW+5ssF1jAR+TLNT/4y5ud0RpR
sLTE2FRyCsxcf3CQalpqSgWcr2j++qdWeLewymxmP7yvry732Xu4Tiotp+Yb
LG/oER+0AXdTlRZW+YUJk20WHC2k4QkNBe1fVGGZ4jWq417Ykft+prQJLDLV
3Fp8AtbTOhon6AKrWihuNzkPB5Q/jrcMgw9GhKxrxsHM/Qd2z8lnC8+Fo8bd
EsdL4D/cl3hUamDePLqzaQds2jDtZdAPD5BTOMTfwi5+TqvPp+Cl62XiTguw
EElTuu873Oio3CLLJ0I40LOg8bgY7Eudb3WVh39rKgg+RYLH6tcj1PbC9Afc
l8cNN/nIpy2RR2GvQPoTVhtYTUZM0sMVZu7PsGat9M6PQXBDZ9wo/Qo8s83O
fSke/pils2ckFX64X7urIAdOdaelOhbADoeaeBn/hdstm7MiamGuU6yVtLZN
7THNrDHvhe896BJNosKJlTxqjaOw41Vt+z+n4IwPCazvZmET/fGLLxjwjcSH
yqXs2wiXHfp2IpgfrvbNt1MXha2p8QkDMnB36EG9sz/CzPMNPlI5a261F56+
5W9YSoZVlbjHlw/Bk6pzoZqWsN3pVjN7W9hI3SXN3wUun5O6G+YJ9zypeuTv
C1f6Bszbh8BuXQq12hHwuJfq/vU4mESjlFUnwd623FZnMuB05XU7lrtwsGgW
S1I+nBMxFLa1DF5xDViPrIJF+MTrJ+ph52um0/rtsGxNwJO4HphbluNk+wDc
52o7O/8KZsYPsKPbxzHSFKwUzJqq8w3+er59UXsJtp8b0VFeh3dPSkfwcmwn
nGkRyRjjha1ZdPvKhWFLjVyFQAnYqMVaVk0ODgtVm6Qqwwy68f1gEuyRzhYo
oA07bpGKuL0PLqdTpiUMYInT9QMUUziq08aJcRSm+AYVOVjDZuYJryvs4PCh
UAEWFzhvPMbN+Ge4ivwz/aIP3Kxm9FeJP3x6uMp5MAQWKR06R7sMM+O3TfV/
Hm4UvAH/MGJrIJQMR3N0P9+SAceFtYfQs2GhOL+zo/fh/zhdLWgohHOe6jmk
lsEHvPxvu/wO/zSQGKxcC9uaJQl9bIItAoTCb3XAakmmfUY98Foeh/zkS/hl
SUP8VSpc8ThWVuLNpu87JRYffIDLZAYVdk3CZ0bq6wtm4GGuuGGZOfidLSUu
YRmW53j7fn4NrvUlLVuziRLWmZl4W8INu1moFm7wb8pPbfc8LALrepG1EsVh
ZnwNtyhGq7AowOfOLoZo7IRjezMkbUmwdXaadJgmTLMaTErXgS+wrsYWHYAf
pgcI1xjAq4Ie5BYTOLCmdUebObzLQbej8Th8yYGs9/tJeMeYaHqeHay32PIu
wRkeixRR8T2zqT6/3CvHPOH+khfzSufhBPGXKUt+8G+UO16tv8KnXnHGXwuH
2W7fXTWLgI1JQy/YY+CD2e9FauLhR769/Z6UTeOTGCq5LRX+xHlrqToDHv1S
EGSTvWk+pXjyZnPhHsbU9diHMPN+BGc+F6nNLYOLhb9K/FgJD6n4uOZXw21m
83fk6+Gr0W1vMprhDf9lZZ4OuPuP6Jigbvi0jj7X2154htJXQR6AC0fa0nOo
8GJ1TM3S6039m7NXOTIKJ8ucm8kc29SfHVVbJyZh7hbFbNIMfJkUlvULDb5+
2Vm8ZAHuNbaV/ESH4xkviyTX4dCb24cOs4oR3vnO6l4QJ9wklyWRwwN7eE8Y
NwvAB5UFSaPCsJJf/6sVUfh/5UWy+Q==
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
UyatfPBBZX7SuCCs5D/4ak0U/hdbR3Rj
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
1MIPH1ISII0JwYp+A69WReD/AhD3P70=
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
4xYB+KCyIGlMGFbyG3i1Igr/DwpsNsk=
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
qEkAPqQkSBoVhhV9+16viML/AxuP3dw=
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Cz98SEmANCYEK/oOvFoVgf8HTbsVlQ==
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB/BrzxrKPsg2kRuDSSrOtURSidSxC2UITdaxtSBLypItjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+//+5Z96vec95zns+5znvs77P8/weOdcL
J9xYSSQS43/p/+9/Hr7uL7OaWj81f9vH2DBUm6D8Y1620tDPqbOUf+cvEdZK
+HvZoHmFMOuOXQze4jXC1naaZX7y3wn7Fx+gVNwn6f+7fBbCoqeq6sq9WAkf
3XulekyNjfClO4P1oh9gy3gNVfZodsIFdcOiz3/gICxremyfaBHMbD8n4dAr
jBavIjgm2Wt/mCwXYXIlO6d2Ipw85h9muAyXl11IU7PfQrirQy8ooBamVfav
XxLhJrxCTrlY4A0zxw/ulaR9ThPkIXwziu3pqCOsYHaLalcIy2709ujQ4Cwq
70r+Hl7CdqrJpn3BsFfX08bBGrj/6dDCX3R4ib8mYm0PH+GO+a1Wdr4wc37h
hs79X5XH4EKDto5nEvyEqfzXPFbMYX4/zQODkbB5SaKxWxW8W0/tZNMELDSz
XZQmKkDY6OSaNocJ/KA77zfeANjb8GaDwD34Ce2mumQvHFhnoatDh5n/51bC
j6VKqgeOwN9Jlt+dA+DDj8qKlLLhYl15D+U2mG9ba5DPNDy/UWsbySVI2MJ7
V8+iBGybWXpPhAwfM3nWMa4Hh6h0rrgdh29our3Jcob5vYW/XPOFv7zZGaUe
CUuJj00lp8DM9QcHqqSlplTA+Qpmr39uhXcLKc9m9sP7+upyn72H6yTTcmq+
wXIG7nGBG3A3VXFhlU+IMMV6wcFcCp5Ql9f6VQWWLl6jOuyFHbjuZ0oZw8JT
za3FJ2BdzaOxAs6wirnCduPzsH/54ziLUPhgePC6RizM3H9gt5x81rBcOHLc
NWG8BP7TbYlbuQbmyaM7mXTAJg3Tnvr98AAlhV3sLezs67j6fApeul4m5rgA
C5I1pPq+w40OSi0yvMKEAzwKGo+Lwj7U+VYXOfj3poKgU2R4rH49XHUvTH/A
dXncYJOPfNoScRT2DKA/YbGGVaVFJdxdYOb+DGvUSu38GAg3dMaO0q/AM9ts
3Zbi4I9Z2ntGUuGH+7W6CnLgVDdaqkMBbH+oiYfxH7jdojkrvBbmPMVSSWvb
1B6TzBqzXvjegy6RJCqcUMmt2jgKO1zVsvtrCs74EM/ybhY21hu/+IIB30h4
qFTKto1w2aFvJ4L44GqffFs1EdiKGhc/IA13hxzUPfsjzDzf4COVs2aWe+Hp
W34GpRRYRZFrfPkQPKkyF6JhAduebjW1s4EN1ZzT/Jzh8jnJu6EecM+Tqkd+
PnClj/+8XTDs2iVfqxUOj3uq7F+Phcm0xLLqJNjLhsvyTAacrrRuS7oLB4lk
kZLy4ZzwodCtZfCKi/96RBUszCtWP1EPO10zmdZrh2Vq/J/E9sBcMuwn2wfg
Pheb2flXMDN+gB1cP46Rp2DFIJZU7W/w1/Pti1pLsN3ciLbSOrx7Uiqch307
4UzzCMYYD2xF0ukrF4It1HPlA8RhwxYrGVVZODREdZKqBDPoRveDyLB7OmsA
vxbssEUy/PY+uJyeOC2uD4ufrh9INIEjO60dGUfhRJ/AInsr2NQs/nWFLRw2
FMJPcobzxqNdjX6Bqyi/0C96w82qhn+X+MGnh6ucBoNh4dKhc7TLMDN+21T/
5+FGgRvwDyM2+oLJcBR79/MtGXBsaHswPRsWjPU9O3of/snxakFDIZzzVNc+
tQw+4Ol32/kP+OeBhCClWtjGNEnwYxNs7i8YdqsDVk0y6TPsgdfy2OUmX8Iv
SxrirlLhiscxMuJvNn3fKb744ANcJj0ov2sSPjNSX18wAw9zxg5Lz8HvbBJj
45dhOfa37+fX4Fof8rIVqwhh7ZmJtyVcsKu5SuEG36b81HaPw8KwjidFM0EM
ZsbXcItClDJJHj53djFYfScc05shYUOGrbLTpEI1YJrlYFK6NnyBZTWm6AD8
MN1fqEYfXhVwp7QYwwE1rTvazOBd9jodjcfhS/YU3T9OwjvGRNLzbGHdxZZ3
8U7wWISwss+ZTfX55l455gH3l7yYVzwPx4u9TFnyhX9PvOPZ+ht86hVH3LUw
mPX23VXTcNiIPPSCLRo+mP1euCYOfuTT2++RuGl8EkIktqXCnzhuLVVnwKNf
CgKtszfNpyR33mwu3MOYuh7zEGbej+DM58K1uWVwsdBX8R8r4SFlb5f8arjN
dP6OXD18NartTUYzvOG3rMTdAXf/GRUd2A2f1tbjfNsLzyT2VVAG4MKRtvQc
KrxYHV2z9HpT/+bslI+MwsnS52Yyxzb1Z0fV1olJmKtFIZs8A18mh2b9SoOv
X3YSK1mAe41sJD7R4TjGyyKJdTjk5vahwyyihHe+s7wXyAE3yWaJ53DD7l4T
Rs388EElAfKoEKzo2/9qRQT+L3YKMAg=
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
xAcfUuAnjQjC8j59r1eE4f8B/Gp9Lg==
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
mTBpEYAPKguSxoRhJf+BVyui8L8Bf7211g==
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
1MwPH1QSII8KwYq+/a9WROD/AcQrfyI=
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
mQ82UuQnjQrCCr79r1aE4b8BAzmtMg==
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
PWHcIgAfVBYkjQnDSn4Dr1ZE4X8BrifhxQ==
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
MGoRgA8pCZLGhGFF34FXK6Lw/wCGQysR
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
hHGzAHxQWZA0Kgwr+fW/WhGF/wufcRSb
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
3CwAH1QSJI0Kw4p+/a9WROH/AQLPfzc=
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
TfzwASUB0ogQrOjb92pZBP4fVyRqtQ==
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
mQ8+qMhPGhWEFXz7X60Iw/8D5o0Xng==
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Mx98SImfNCYIK/r2v14Vhv8Hua/NQg==
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
tfDBhxT5SWOCsILvwKtVYfh/UwsAQw==
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
zQLwISVB0qgwrOjb/2pFFP4fGTlIcg==
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
zAcfVOQnjQrCCj79r1aE4f8BKVTZ9A==
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
5oMPKvKTRgVhBZ/+VyvC8P8Al6EUmw==
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
0rhFAD6oLEgaE4aV/AZerYrC/wXTmcWH
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
SQA+qCRIGhGGFX37Xi2Lwv8DsDVUKg==
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Mx98SJGfNCoIK/j0v1oRgf8H7kz0Zw==
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
YyYtQvA+VWHyiCis4t/3clEC/h8P0WHW
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
auaHDygJkEaFYEXf/lcrIvB/Adg0rCM=
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
k8YtAvBBJUHSmDCs6DfwalUU/hesfrIB
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
buGDDyrxk8aEYEW/gVerIvD/AAD9ZNk=
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
hQ8+pMhPGhOEFXwHXq0Kw/8D6zEoDg==
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0ltkfB3C7rKHsg2yT5Y3BJBXntURSidSxC2UITdaxtSBLypItjaWU
Qrb+GMm+ZzsUxmtKpSJLmXrtr9fS//8/75nna55z7nnO59zz3PW59/6urOvF
k24sTExM9P+l/7//eaJ4VXq0RX5q/rafvmmoNkn+xzyspaGfU+fI/85fJqyV
8PeKQfMqYZZdKnSe4nXC1naaZX5y3wn7Fx8kVzxg0v93+cyERU5X1ZV7sRA+
tu9q9bgaK+HLd4fqRT7AlvEaqmzRbIQL6kZEen5gJyxjeny/SBHMaD8H4dCr
9BavIjgm2etAmAwnYVIlG4d2Ipw87h9muAKXl11MU7PfRrirQy8ooBamVg5s
XBbmIrxKSrlU4A0zxg/uk6B+ThPgJnwrivXZmCMsb3abYlcIy2z29epQ4SwK
z2r+Xh7CdqrJpv3BsFfXs8ahGnjg2fDiXzR4ma8mYn0vL+GOhe1Wdr4wY37h
hs4DX5XG4UKDto7n4nyEKXzXPVbNYT4/zYNDkbB5SaKxWxW8R0/tVNMkLDi7
U4Qqwk/Y6NS6NrsJ/LA77zeeANjb8FYD/334KfWWukQfHFhnoatDgxn/53bC
TyRLqgePwt+ZLL87B8BHHpcVKWbDxbpyHkptMO+O1iCfGXhhs9Y2klOAsIW3
Su+SOGybWXpfmAQfN3neMaEHhyh3rrqdgG9qur3Jcob5vIW+XPeFv7zZHaUe
CUuKjU8np8CM9QcHKqelplTA+fJmr39uhfcIKs1lDsD7++tyn7+H6yTScmq+
wbIG7nGBm3A3RWFxjVeQMNl60cFcEp5Ul9P6VRmWKl6nOOyDHTgfZEoaw0LT
za3FJ2FdzWOx/M6wsrn8TuMLsH/5kziLUPhQePCGRizM2H9gt5x8lrBcOHLC
NWGiBP7TbZlLqQbmzqM5mXTAJg0znvoD8CA5hU30Lezs67jWMw0v3ygTdVyE
BUgakv3f4UYHxRZpHiHCAR4FjSdEYB/KQquLLPx7U0HQaRI8Xr8RrroPpj3k
vDJhsMVHP22LOAZ7BtCeMlvDqlIi4u4uMGN/hjVqJXd/DIQbOmPHaFfh2R22
bstx8Mcs7b2jqfCjA1pdBTlwqhs11aEAtj/cxE3/D9xu0ZwVXgtznGaupLZt
aY9JZo1ZH3z/YZdwEgVOqORSbRyDHa5p2f01DWd8iGd+Nwcb601cekGHbyY8
Uixl3UG47PC3k0G8cLVPvq2aMGxFiYsflIK7Qw7pnvsRZpxv8NHKOTPLffDM
bT+DUjKsrMA5sXIYnlKeD9GwgG3PtJra2cCGas5pfs5w+bzEvVAPuPdp1WM/
H7jSx3/BLhh27ZKr1QqHJzyVD2zEwiRqYll1Euxlw2l5NgNOV9ywZboHBwln
MSXlwznhw6Hby+BVF/+NiCpYiEe0frIedrpuMqPXDkvX+D+N7YU5pdlOtQ/C
/S42cwuvYEb8ADu4fhwnTcMKQcyp2t/grxfal7SWYbv5UW3FDXjPlGQ4N9tO
wpnmEfRxbtiKSae/XBC2UM+VCxCDDVuspFVl4NAQ1SmKIkynGT0IIsHu6SwB
fFqwwzaJ8Dv74XJa4oyYPix2pn4w0QSO7LR2pB+DE30Ci+ytYFOz+NcVtnDY
cAgfkzOcNxHtavQLXEX+hXbJG25WNfy7xA8+M1LlNBQMC5UOn6degRnx25b6
P4808t+Efxi10RdIhqPYunu2ZcCxoe3BtGxYINb33NgD+CfHawUNhXDOM137
1DL4oKffHec/4J8HE4IUa2Eb0ySBj02wub9A2O0OWDXJpN+wF17PY5Odegm/
LGmIu0aBK57ESIu92fJ9p9jSww9wmdSQnMoUfHa0vr5gFh7hiB2Rmoff2STG
xq/Asmxv3y+sw7U+pBUrFmHC2rOTb0s4YVdz5cJN3i35qe0eR4RgHU+yZoIo
zIiv4Rb5KCUmOfj8uaVg9d1wTF+GuA0JtspOkwzVgKmWQ0np2vBF5rWYooPw
o3R/wRp9eI3fndxiDAfUtO5qM4NV7HU6Gk/Al+3Jun+cgneNC6fn2cK6Sy3v
4p3g8QghJZ+zW+rzzb163AMeKHmxoHABjhd9mbLsC/+eeNez9Tf49Cv2uOth
MMude2um4bARafgFazR8KPu9UE0c/Ninb8Ajccv4JISI70iFP7HfXq7OgMe+
FARaZ2+ZTwmuvLlcuJc+fSPmEcy4H8GZPUK1uWVwseBXsR8r4WElb5f8arjN
dOGubD18LartTUYzvOm3osjVAXf/GRUd2A2f0dbjeNsHzyb2V5AH4cLRtvQc
CrxUHV2z/HpL/+btlI6OwclS52czx7f0Z1fV9skpmLNFPps0C18hhWb9SoVv
XHESLVmE+4xsxD/R4Dj6yyLxDTjk1s7hI8wihHe/s7wfyA43yWSJ5XDB7l6T
Rs188CFFftKYIKzgO/BqVRj+L9dx8Y4=
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/Dw9PeN8zk1Hyt32MDSP1CfI/5mMvDfucOkv+d/4SYe3E
v5YNm1cIs+3YxeArXiNsY69V5q/wnXBA8QFyxX0Wg3+Xz0pY7FRVXbk3G+Gj
e69Uj6mzE750Z7Be7ANslaCpxhHDQbigbljs+Q+chOXMju0TK4KZ7eciHHaF
0eJdBMcme+8Pl+MmTKrk4NKhwMljAeFGy3B52YU0dYcthLs69IMDa2FaZf/6
JVEewiuklIsFPjBz/OBeKdrnNCFewjej2Z+OOsGK5reo9oWw3EZvjy4NzqLy
reTv4SNsr5Zs1hcCe3c9bRysgfufDi38SYeXBGoi1/bwE+6Y32pt7wcz5xdu
6Nz/VWUMLjRs63gmKUCYKnDNc8UCFvDXOjAYBVuUUEzcq+Dd+uonmyZg4Znt
YjQxQcLGJ9d0OE3hB915v/IFwj5GNxsE78FPaDc1pHrhoDpLPV06zPw/txJ+
LF1SPXAE/s5i9d0lED78qKxIORsu1lPwVGmD+be1BvtOw/MbtXZR3EKELX12
9SxKwnaZpfdESfAx02cd4/pwqGrnivtx+IaW+5ssF1jAR+TLNT/4y5ud0RpR
sLTE2FRyCsxcf3CQalpqSgWcr2j++qdWeLewymxmP7yvry732Xu4Tiotp+Yb
LG/oER+0AXdTlRZW+YUJk20WHC2k4QkNBe1fVGGZ4jWq417Ykft+prQJLDLV
3Fp8AtbTOhon6AKrWihuNzkPB5Q/jrcMgw9GhKxrxsHM/Qd2z8lnC8+Fo8bd
EsdL4D/cl3hUamDePLqzaQds2jDtZdAPD5BTOMTfwi5+TqvPp+Cl62XiTguw
EElTuu873Oio3CLLJ0I40LOg8bgY7Eudb3WVh39rKgg+RYLH6tcj1PbC9Afc
l8cNN/nIpy2RR2GvQPoTVhtYTUZM0sMVZu7PsGat9M6PQXBDZ9wo/Qo8s83O
fSke/pils2ckFX64X7urIAdOdaelOhbADoeaeBn/hdstm7MiamGuU6yVtLZN
7THNrDHvhe896BJNosKJlTxqjaOw41Vt+z+n4IwPCazvZmET/fGLLxjwjcSH
yqXs2wiXHfp2IpgfrvbNt1MXha2p8QkDMnB36EG9sz/CzPMNPlI5a261F56+
5W9YSoZVlbjHlw/Bk6pzoZqWsN3pVjN7W9hI3SXN3wUun5O6G+YJ9zypeuTv
C1f6Bszbh8BuXQq12hHwuJfq/vU4mESjlFUnwd623FZnMuB05XU7lrtwsGgW
S1I+nBMxFLa1DF5xDViPrIJF+MTrJ+ph52um0/rtsGxNwJO4HphbluNk+wDc
52o7O/8KZsYPsKPbxzHSFKwUzJqq8w3+er59UXsJtp8b0VFeh3dPSkfwcmwn
nGkRyRjjha1ZdPvKhWFLjVyFQAnYqMVaVk0ODgtVm6Qqwwy68f1gEuyRzhYo
oA07bpGKuL0PLqdTpiUMYInT9QMUUziq08aJcRSm+AYVOVjDZuYJryvs4PCh
UAEWFzhvPMbN+Ge4ivwz/aIP3Kxm9FeJP3x6uMp5MAQWKR06R7sMM+O3TfV/
Hm4UvAH/MGJrIJQMR3N0P9+SAceFtYfQs2GhOL+zo/fh/zhdLWgohHOe6jmk
lsEHvPxvu/wO/zSQGKxcC9uaJQl9bIItAoTCb3XAakmmfUY98Foeh/zkS/hl
SUP8VSpc8ThWVuLNpu87JRYffIDLZAYVdk3CZ0bq6wtm4GGuuGGZOfidLSUu
YRmW53j7fn4NrvUlLVuziRLWmZl4W8INu1moFm7wb8pPbfc8LALrepG1EsVh
ZnwNtyhGq7AowOfOLoZo7IRjezMkbUmwdXaadJgmTLMaTErXgS+wrsYWHYAf
pgcI1xjAq4Ie5BYTOLCmdUebObzLQbej8Th8yYGs9/tJeMeYaHqeHay32PIu
wRkeixRR8T2zqT6/3CvHPOH+khfzSufhBPGXKUt+8G+UO16tv8KnXnHGXwuH
2W7fXTWLgI1JQy/YY+CD2e9FauLhR769/Z6UTeOTGCq5LRX+xHlrqToDHv1S
EGSTvWk+pXjyZnPhHsbU9diHMPN+BGc+F6nNLYOLhb9K/FgJD6n4uOZXw21m
83fk6+Gr0W1vMprhDf9lZZ4OuPuP6Jigbvi0jj7X2154htJXQR6AC0fa0nOo
8GJ1TM3S6039m7NXOTIKJ8ucm8kc29SfHVVbJyZh7hbFbNIMfJkUlvULDb5+
2Vm8ZAHuNbaV/ESH4xkviyTX4dCb24cOs4oR3vnO6l4QJ9wklyWRwwN7eE8Y
NwvAB5UFSaPCsJJf/6sVUfh/PNOxBQ==
           "]]}}, {
         {RGBColor[0.647624, 0.37816, 0.614037], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk0lekfB3C7rKHsg2wTufHHJBXnWiKpROrYhTKEJuvYWpAlxZUtjaWU
Qrb+GMm+hxwK45pSqchSpq79upb+/zn3zPs17znPec/nPOd91vd5nt8j73bh
hDsbCwsL4//p7/c/z/HmCauEjsGmb/sYG0bqE+R/zMdeGvY5dZb87/wlwtqJ
fy0bNq8QZtuxi8FXvEbYxl6rzF/hO+GA4gPkivssBv8un5Ww2KmqunJvNsJH
916pHlNnJ3zpzmC92AfYKkFTjSOGg3BB3bDY8x84CcuZHdsnVgQz289FOOwK
o8W7CI5N9t4fLsdNmFTJwaVDgZPHAsKNluHysgtp6g5bCHd16AcH1sK0yv71
S6I8hFdIKRcLfGDm+MG9UrTPaUK8hG9Gsz8ddYIVzW9R7QthuY3eHl0anEXl
W8nfw0fYXi3ZrC8E9u562jhYA/c/HVr4kw4vCdREru3hJ9wxv9Xa3g9mzi/c
0Ln/q8oYXGjY1vFMUoAwVeCa54oFLOCvdWAwCrYooZi4V8G79dVPNk3AwjPb
xWhigoSNT67pcJrCD7rzfuULhH2MbjYI3oOf0G5qSPXCQXWWerp0mPl/biX8
WLqkeuAI/J3F6rtLIHz4UVmRcjZcrKfgqdIG829rDfadhuc3au2iuIUIW/rs
6lmUhO0yS++JkuBjps86xvXhUNXOFffj8A0t9zdZLrCAj8iXa37wlzc7ozWi
YGmJsankFJi5/uAg1bTUlAo4X9H89U+t8G5hldnMfnhfX13us/dwnVRaTs03
WN7QIz5oA+6mKi2s8gsTJtssOFpIwxMaCtq/qMIyxWtUx72wI/f9TGkTWGSq
ubX4BKyndTRO0AVWtVDcbnIeDih/HG8ZBh+MCFnXjIOZ+w/snpPPFp4LR427
JY6XwH+4L/Go1MC8eXRn0w7YtGHay6AfHiCncIi/hV38nFafT8FL18vEnRZg
IZKmdN93uNFRuUWWT4RwoGdB43Ex2Jc63+oqD//WVBB8igSP1a9HqO2F6Q+4
L48bbvKRT1sij8JegfQnrDawmoyYpIcrzNyfYc1a6Z0fg+CGzrhR+hV4Zpud
+1I8/DFLZ89IKvxwv3ZXQQ6c6k5LdSyAHQ418TL+C7dbNmdF1MJcp1graW2b
2mOaWWPeC9970CWaRIUTK3nUGkdhx6va9n9OwRkfEljfzcIm+uMXXzDgG4kP
lUvZtxEuO/TtRDA/XO2bb6cuCltT4xMGZODu0IN6Z3+EmecbfKRy1txqLzx9
y9+wlAyrKnGPLx+CJ1XnQjUtYbvTrWb2trCRukuavwtcPid1N8wT7nlS9cjf
F670DZi3D4HduhRqtSPgcS/V/etxMIlGKatOgr1tua3OZMDpyut2LHfhYNEs
lqR8OCdiKGxrGbziGrAeWQWL8InXT9TDztdMp/XbYdmagCdxPTC3LMfJ9gG4
z9V2dv4VzIwfYEe3j2OkKVgpmDVV5xv89Xz7ovYSbD83oqO8Du+elI7g5dhO
ONMikjHGC1uz6PaVC8OWGrkKgRKwUYu1rJocHBaqNklVhhl04/vBJNgjnS1Q
QBt23CIVcXsfXE6nTEsYwBKn6wcopnBUp40T4yhM8Q0qcrCGzcwTXlfYweFD
oQIsLnDeeIyb8c9wFfln+kUfuFnN6K8Sf/j0cJXzYAgsUjp0jnYZZsZvm+r/
PNwoeAP+YcTWQCgZjubofr4lA44Law+hZ8NCcX5nR+/D/3G6WtBQCOc81XNI
LYMPePnfdvkd/mkgMVi5FrY1SxL62ARbBAiF3+qA1ZJM+4x64LU8DvnJl/DL
kob4q1S44nGsrMSbTd93Siw++ACXyQwq7JqEz4zU1xfMwMNcccMyc/A7W0pc
wjIsz/H2/fwaXOtLWrZmEyWsMzPxtoQbdrNQLdzg35Sf2u55WATW9SJrJYrD
zPgablGMVmFRgM+dXQzR2AnH9mZI2pJg6+w06TBNmGY1mJSuA19gXY0tOgA/
TA8QrjGAVwU9yC0mcGBN6442c3iXg25H43H4kgNZ7/eT8I4x0fQ8O1hvseVd
gjM8Fimi4ntmU31+uVeOecL9JS/mlc7DCeIvU5b84N8od7xaf4VPveKMvxYO
s92+u2oWARuThl6wx8AHs9+L1MTDj3x7+z0pm8YnMVRyWyr8ifPWUnUGPPql
IMgme9N8SvHkzebCPYyp67EPYeb9CM58LlKbWwYXC3+V+LESHlLxcc2vhtvM
5u/I18NXo9veZDTDG/7LyjwdcPcf0TFB3fBpHX2ut73wDKWvgjwAF460pedQ
4cXqmJql15v6N2evcmQUTpY5N5M5tqk/O6q2TkzC3C2K2aQZ+DIpLOsXGnz9
srN4yQLca2wr+YkOxzNeFkmuw6E3tw8dZhUjvPOd1b0gTrhJLksihwf28J4w
bhaADyoLkkaFYSW//lcrovD/ACnPTEU=
           "]]}}, {
         {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
WvjgQwr8pDFBWN5v4NWqMPw/oQe72A==
           "]]}}, {
         {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
Zj74gCI/aVQQVvDtf7UiDP8N7fb2Ww==
           "]]}}, {
         {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Thg288OHFAXIo0Kwgk//qxUR+F89CqRB
           "]]}}, {
         {RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
5oMPK/CTxgRheZ/+N6vC8H8A3yLaCQ==
           "]]}}, {
         {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
TJg0C8AHlQVJo8Kwkn//qxVR+F+VuGHV
           "]]}}, {
         {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
SQA+oCRIGhGGFX37Xi6Lwv8D2CPplA==
           "]]}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
LXzwYUV+0pggrOA38GpVGP4fpGaVmA==
           "]]}}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Ey98SIGPNCIAy3v3vV4Rgv8Heku7rg==
           "]]}}, {
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
qFkAPqQkSBoVhhV9+1+tiML/A8acUC0=
           "]]}}, {
         {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
zQLwQWVB0qgwrOTX/2pFFP4floEx0g==
           "]]}}, {
         {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
NGrhgw8p8ZPGhGBFv4FXqyLwfwFZAF0J
           "]]}}, {
         {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxV1wk01dseB3CzjKHMVzLdyImHm1SsY4ikEqllFsoldDNeUwMypAyZu4ZS
Cpl6uJJ5DlkUruOWSkWGUh3zcQy999Z57/8977/WXv/1WXv99/jfe/+2nOvF
k25sLCws9H+n/7z/92SYKS+WOX0lf99P3zRUmySn/9d87GWhn1PnCDPylwlr
JXxdMWhZJcy2czedr2SdsLWdZrmf/A/C/iUHyZX3WfT/v3xWwmKnq+srvNgI
H9t3tWZcjZ3w5TtDDWIfYMt4DVWOaA7ChfUjYs9/4iQsa3p8v1gxzGg/F+HQ
q/RWr2I4JtnrQJgsN2FSFQeXdiKcPO4fZrgCV5RfTFOz30K4u1MvKKAOplYN
bFwW5SG8Skq5VOgNM8YP7pOifk4T4iV8K4r96ZgjrGCWQbErgmU3+3p1qHA2
hW+1YC8fYTvVZNP+YNir+2nTUC088HR48W8avCxQG7G+l59w58JWKztfmDG/
cGPXgW/K43CRQXvnM0kBwhSB6x6r5rCAn+bBoUjYvDTR2K0a3qOndqp5Ehae
3S5GFRMkbHRqXZvTBH7Qk/87XwDsbXirUfAe/IR6S12qDw6st9DVocGM/3Mr
4cfSpTWDR+EfLJY/nAPgI4/Ki5Vy4BJdeQ/ldph/W1uQzwy8sFlnG8ktRNjC
e3fvkiRsm1V2T5QEHzd51jmhB4eodK26nYBvarq9yXaGBbxFvlz3hb+82RWl
HglLS4xPJ6fAjPUHB6qkpaZUwgUKZq9/aYP3CCvPZQ3A+/vr8569h+ul0nJr
v8NyBu5xgZtwD0VxcY1fmDDZetHBXBqeVJfX+k0FlilZpzjsgx2472dJG8Mi
0y1tJSdhXc1jsYLOsIq5wnbjC7B/xeM4i1D4UHjwhkYszNh/YLfcArawPDhy
wjVhohT+y22ZR7kW5s2nOZl0wiaNM576A/AgOYVD/C3s7Ou49nwaXr5RLu64
CAuRNKT7f8BNDkqtO/hECAd4FDadEIN9KAttLnLwH82FQadJ8HjDRrjqPpj2
gPvKhAGTj37aEnEM9gygPWG1hlVlxCTdXWDG/gxr1Env+hgIN3bFjtGuwrPb
bN2W4+CP2dp7R1Phhwe0ugtz4VQ3aqpDIWx/uJmX/k+4w6IlO7wO5jrNWkVt
Z2qPSVatWR9870G3aBIFTqjiUW0agx2uadn9PQ1nfohnfTcHG+tNXHpBh28m
PFQqY99GuPzw95NB/HCNT4GtmihsRYmLH5SBe0IO6Z77GWacb/DRqjkzy33w
TIafQRkZVlHknlg5DE+pzIdoWMC2Z9pM7WxgQzXnND9nuGJe6m6oB9z7pPqR
nw9c5eO/YBcMu3bL12mFwxOeKgc2YmESNbG8Jgn2suG2PJsJpytt2LLchYNE
s1mSCuDc8OHQreXwqov/RkQ1LMIn3jDZADtdN5nR64B31Po/ie2FuXdwnOoY
hPtdbOYWXsGM+AF2cP04TpqGFYNYU7W/w98udCxpLcN286PaShvwninpcF6O
7YSzzCPo47ywFYtOf4UwbKGeJx8gARu2Wu1QlYVDQ1SnKEownWZ0P4gEu6ez
BQhowQ5bpMJv74craIkzEvqwxJmGwUQTOLLL2pF+DE70CSy2t4JNzeJfV9rC
YcMhAizOcP5EtKvRr3A1+VfaJW+4RdXwa6kffGak2mkoGBYpGz5PvQIz4jem
+j+PNAnehH8atdEXSoajOHqeb8mEY0M7gmk5sFCs77mx+/A/HK8VNhbBuU91
7VPL4YOefred/4R/GUwIUqqDbUyThD42w+b+QmEZnbBqkkm/YS+8ns8hN/US
flnaGHeNAlc+jtkh8Ybp+y6JpQcf4HKZIfndU/DZ0YaGwll4hCt2RGYefmeT
GBu/AstxvH2/sA7X+ZBWrNhECWvPTr4t5YZdzVWKNvmZ8lM7PI6IwDqeZM0E
cZgRX8OtClHKLPLw+XNLweq74Ji+TEkbEmyVkyYdqgFTLYeS0rXhi6xrMcUH
4Yfp/sK1+vCaoDu51RgOqG3b2W4G77bX6Ww6AV+2J+v+eQreOS6anm8L6y61
vot3gscjRJR9zjLV55t39bgHPFD6YkHxAhwv/jJl2Rf+I/GOZ9vv8OlXnHHX
w2C223fXTMNhI9LwC/Zo+FDOe5HaOPiRT9+ARyLT+CSESG5LhT9xZizXZMJj
XwoDrXOY5lOKJ38uD+6lT9+IeQgz7kdw1nORurxyuET4m8TPVfCwsrdLQQ3c
brpwR64BvhbV/iazBd70W1Hi6YR7/oqKDuyBz2jrcb3tg2cT+yvJg3DRaHt6
LgVeqomuXX7N1L95O+WjY3CyzPnZrHGm/uys3jo5BXO3KuSQZuErpNDs36jw
jStO4qWLcJ+RjeQnGhxHf1ksuQGH3No+fIRVjPCud5b3AjnhZtlsiVwe2N1r
0qhFAD6kJEgaE4YVfQderYrC/wKmyFsB
           "]]}}, {
         {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
          0.002777777777777778], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
           "]]}}, {
         {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
Tg1qejHMCSCoylJ17RAf/xfSpd9a
           "]]}}}}, {{}, {}}, {{{{{
           GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 4.821154546390663}], 
                 Offset[{0, 0}, {5.638887821063309, 4.821154546390663}], 
                 Offset[{0., 0.}, {5.695252734599819, 4.821154546390663}], 
                 Offset[{0., 0.}, {5.695252734599819, 4.821154546390663}], 
                 Offset[{0., 0.}, {5.75161764813633, 4.821154546390663}], 
                 Offset[{0, 0}, {6.089807129355393, 4.917505562226007}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  4.917505562226007}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  4.917505562226007}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  4.917505562226007}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 4.821154546390663}], 
                 Offset[{0, 0}, {5.638887821063309, 4.821154546390663}], 
                 Offset[{0., 0.}, {5.695252734599819, 4.821154546390663}], 
                 Offset[{0., 0.}, {5.695252734599819, 4.821154546390663}], 
                 Offset[{0., 0.}, {5.75161764813633, 4.821154546390663}], 
                 Offset[{0, 0}, {6.089807129355393, 4.917505562226007}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  4.917505562226007}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  4.917505562226007}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  4.917505562226007}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{108., 8.000000000000023}, {6.089807129355393, 
                  4.917505562226007}], 
                 Offset[{108., -7.999999999999976}, {6.089807129355393, 
                  4.917505562226007}], 
                 Offset[{10., -7.999999999999997}, {6.089807129355393, 
                  4.917505562226007}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  4.917505562226007}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"conv_1\"\>", ",", "\<\"Weights\"\>"}], 
                   "}"}], TextForm]], "InlineText",ExpressionUUID->
                 "b6fe286e-4251-481a-8d83-99ff9f3313f5"],
                Text[{1, "conv_1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{59., 1.3100631690576847*^-14}, \
{6.089807129355393, 4.917505562226007}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 6.184345076541212}], 
                 Offset[{0, 0}, {5.638887821063309, 6.184345076541212}], 
                 Offset[{0., 0.}, {5.695252734599819, 6.184345076541212}], 
                 Offset[{0., 0.}, {5.695252734599819, 6.184345076541212}], 
                 Offset[{0., 0.}, {5.75161764813633, 6.184345076541212}], 
                 Offset[{0, 0}, {6.089807129355393, 6.405683159846613}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  6.405683159846613}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  6.405683159846613}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  6.405683159846613}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 6.184345076541212}], 
                 Offset[{0, 0}, {5.638887821063309, 6.184345076541212}], 
                 Offset[{0., 0.}, {5.695252734599819, 6.184345076541212}], 
                 Offset[{0., 0.}, {5.695252734599819, 6.184345076541212}], 
                 Offset[{0., 0.}, {5.75161764813633, 6.184345076541212}], 
                 Offset[{0, 0}, {6.089807129355393, 6.405683159846613}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  6.405683159846613}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  6.405683159846613}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  6.405683159846613}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{102., 8.000000000000023}, {6.089807129355393, 
                  6.405683159846613}], 
                 Offset[{102., -7.999999999999977}, {6.089807129355393, 
                  6.405683159846613}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  6.405683159846613}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  6.405683159846613}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"conv_1\"\>", ",", "\<\"Biases\"\>"}], "}"}],
                   TextForm]], "InlineText",ExpressionUUID->
                 "3b281ada-152e-4033-9214-787dcd694918"],
                Text[{1, "conv_1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{56., 1.2434497875801753*^-14}, \
{6.089807129355393, 6.405683159846613}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 2.3838938004009416`}], 
                 Offset[{0, 0}, {5.638887821063309, 2.3838938004009416`}], 
                 Offset[{0., 0.}, {5.695252734599819, 2.3838938004009416`}], 
                 Offset[{0., 0.}, {5.695252734599819, 2.3838938004009416`}], 
                 Offset[{0., 0.}, {5.75161764813633, 2.3838938004009416`}], 
                 Offset[{0, 0}, {6.089807129355393, 2.5611665481415287`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  2.5611665481415287`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  2.5611665481415287`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  2.5611665481415287`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 2.3838938004009416`}], 
                 Offset[{0, 0}, {5.638887821063309, 2.3838938004009416`}], 
                 Offset[{0., 0.}, {5.695252734599819, 2.3838938004009416`}], 
                 Offset[{0., 0.}, {5.695252734599819, 2.3838938004009416`}], 
                 Offset[{0., 0.}, {5.75161764813633, 2.3838938004009416`}], 
                 Offset[{0, 0}, {6.089807129355393, 2.5611665481415287`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  2.5611665481415287`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  2.5611665481415287`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  2.5611665481415287`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{98., 8.000000000000023}, {6.089807129355393, 
                  2.5611665481415287`}], 
                 Offset[{98., -7.999999999999979}, {6.089807129355393, 
                  2.5611665481415287`}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  2.5611665481415287`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  2.5611665481415287`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{"1", ",", "\<\"bn_1\"\>", ",", "\<\"Gamma\"\>"}], 
                   "}"}], TextForm]], "InlineText",ExpressionUUID->
                 "18cfe77c-b34a-4109-b2cc-de166e319d6d"],
                Text[{1, "bn_1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{54., 1.199040866595169*^-14}, \
{6.089807129355393, 2.5611665481415287}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 2.9043964810409886`}], 
                 Offset[{0, 0}, {5.638887821063309, 2.9043964810409886`}], 
                 Offset[{0., 0.}, {5.695252734599819, 2.9043964810409886`}], 
                 Offset[{0., 0.}, {5.695252734599819, 2.9043964810409886`}], 
                 Offset[{0., 0.}, {5.75161764813633, 2.9043964810409886`}], 
                 Offset[{0, 0}, {6.089807129355393, 3.2249293864837396`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  3.2249293864837396`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  3.2249293864837396`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  3.2249293864837396`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 2.9043964810409886`}], 
                 Offset[{0, 0}, {5.638887821063309, 2.9043964810409886`}], 
                 Offset[{0., 0.}, {5.695252734599819, 2.9043964810409886`}], 
                 Offset[{0., 0.}, {5.695252734599819, 2.9043964810409886`}], 
                 Offset[{0., 0.}, {5.75161764813633, 2.9043964810409886`}], 
                 Offset[{0, 0}, {6.089807129355393, 3.2249293864837396`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  3.2249293864837396`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  3.2249293864837396`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  3.2249293864837396`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{83., 8.00000000000002}, {6.089807129355393, 
                  3.2249293864837396`}], 
                 Offset[{83., -7.999999999999981}, {6.089807129355393, 
                  3.2249293864837396`}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  3.2249293864837396`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  3.2249293864837396`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{"1", ",", "\<\"bn_1\"\>", ",", "\<\"Beta\"\>"}], 
                   "}"}], TextForm]], "InlineText",ExpressionUUID->
                 "9559adc6-9409-4121-95b1-424ea5883fa0"],
                Text[{1, "bn_1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{46.5, 1.0325074129013956*^-14}, \
{6.089807129355393, 3.2249293864837396}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.3563318112013402}], 
                 Offset[{0, 0}, {5.638887821063309, 0.3563318112013402}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3563318112013402}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3563318112013402}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.3563318112013402}], 
                 Offset[{0, 0}, {6.089807129355393, -1.2825271648132537`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.2825271648132537`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.2825271648132537`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.2825271648132537`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.3563318112013402}], 
                 Offset[{0, 0}, {5.638887821063309, 0.3563318112013402}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3563318112013402}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3563318112013402}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.3563318112013402}], 
                 Offset[{0, 0}, {6.089807129355393, -1.2825271648132537`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.2825271648132537`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.2825271648132537`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.2825271648132537`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{128., 8.000000000000028}, {
                  6.089807129355393, -1.2825271648132537`}], 
                 Offset[{128., -7.999999999999972}, {
                  6.089807129355393, -1.2825271648132537`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -1.2825271648132537`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.2825271648132537`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"conv_2_red\"\>", ",", "\<\"Weights\"\>"}], 
                   "}"}], TextForm]], "InlineText",ExpressionUUID->
                 "c35516ba-1e20-4d59-ae47-a1c2ed8052d1"],
                Text[{1, "conv_2_red", "Weights"}]],
               BoxRotation->0.], 
              Offset[{69., 1.532107773982716*^-14}, \
{6.089807129355393, -1.2825271648132537}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -6.304266068233991}], 
                 Offset[{0, 0}, {5.638887821063309, -6.304266068233991}], 
                 Offset[{0., 0.}, {5.695252734599819, -6.304266068233991}], 
                 Offset[{0., 0.}, {5.695252734599819, -6.304266068233991}], 
                 Offset[{0., 0.}, {5.75161764813633, -6.304266068233991}], 
                 Offset[{0, 0}, {6.089807129355393, -11.485692524225348`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -11.485692524225348`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -11.485692524225348`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -11.485692524225348`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -6.304266068233991}], 
                 Offset[{0, 0}, {5.638887821063309, -6.304266068233991}], 
                 Offset[{0., 0.}, {5.695252734599819, -6.304266068233991}], 
                 Offset[{0., 0.}, {5.695252734599819, -6.304266068233991}], 
                 Offset[{0., 0.}, {5.75161764813633, -6.304266068233991}], 
                 Offset[{0, 0}, {6.089807129355393, -11.485692524225348`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -11.485692524225348`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -11.485692524225348`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -11.485692524225348`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{122., 8.000000000000027}, {
                  6.089807129355393, -11.485692524225348`}], 
                 Offset[{122., -7.999999999999973}, {
                  6.089807129355393, -11.485692524225348`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -11.485692524225348`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -11.485692524225348`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"conv_2_red\"\>", ",", "\<\"Biases\"\>"}], 
                   "}"}], TextForm]], "InlineText",ExpressionUUID->
                 "5ed07482-7f8c-4a4a-9b4d-23955d59f030"],
                Text[{1, "conv_2_red", "Biases"}]],
               BoxRotation->0.], 
              Offset[{66., 1.4654943925052066*^-14}, \
{6.089807129355393, -11.485692524225348}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 1.3885465509860464`}], 
                 Offset[{0, 0}, {5.638887821063309, 1.3885465509860464`}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.3885465509860464`}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.3885465509860464`}], 
                 Offset[{0., 0.}, {5.75161764813633, 1.3885465509860464`}], 
                 Offset[{0, 0}, {6.089807129355393, 1.6576229301242198`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  1.6576229301242198`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.6576229301242198`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.6576229301242198`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 1.3885465509860464`}], 
                 Offset[{0, 0}, {5.638887821063309, 1.3885465509860464`}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.3885465509860464`}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.3885465509860464`}], 
                 Offset[{0., 0.}, {5.75161764813633, 1.3885465509860464`}], 
                 Offset[{0, 0}, {6.089807129355393, 1.6576229301242198`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  1.6576229301242198`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.6576229301242198`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.6576229301242198`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{118., 8.000000000000027}, {6.089807129355393, 
                  1.6576229301242198`}], 
                 Offset[{118., -7.999999999999973}, {6.089807129355393, 
                  1.6576229301242198`}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  1.6576229301242198`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  1.6576229301242198`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"bn_2_red\"\>", ",", "\<\"Gamma\"\>"}], 
                   "}"}], TextForm]], "InlineText",ExpressionUUID->
                 "8a5b7b45-a1ef-4227-bb82-6307ec9f799a"],
                Text[{1, "bn_2_red", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{64., 1.4210854715202004*^-14}, \
{6.089807129355393, 1.6576229301242198}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.8188594421686959}], 
                 Offset[{0, 0}, {5.638887821063309, 0.8188594421686959}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8188594421686959}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8188594421686959}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.8188594421686959}], 
                 Offset[{0, 0}, {6.089807129355393, 0.8089670760164008}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.8089670760164008}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.8089670760164008}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.8089670760164008}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.8188594421686959}], 
                 Offset[{0, 0}, {5.638887821063309, 0.8188594421686959}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8188594421686959}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8188594421686959}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.8188594421686959}], 
                 Offset[{0, 0}, {6.089807129355393, 0.8089670760164008}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.8089670760164008}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.8089670760164008}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.8089670760164008}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{103., 8.000000000000023}, {6.089807129355393, 
                  0.8089670760164008}], 
                 Offset[{103., -7.999999999999977}, {6.089807129355393, 
                  0.8089670760164008}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.8089670760164008}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.8089670760164008}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"bn_2_red\"\>", ",", "\<\"Beta\"\>"}], "}"}],
                   TextForm]], "InlineText",ExpressionUUID->
                 "c799cbec-0b11-4f72-9e02-d8ccc711582b"],
                Text[{1, "bn_2_red", "Beta"}]],
               BoxRotation->0.], 
              Offset[{56.5, 1.2545520178264269*^-14}, \
{6.089807129355393, 0.8089670760164008}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.9838982314009758}], 
                 Offset[{0, 0}, {5.638887821063309, -0.9838982314009758}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.9838982314009758}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.9838982314009758}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.9838982314009758}], 
                 Offset[{0, 0}, {6.089807129355393, -4.268317254920894}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.268317254920894}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.268317254920894}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.268317254920894}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.9838982314009758}], 
                 Offset[{0, 0}, {5.638887821063309, -0.9838982314009758}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.9838982314009758}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.9838982314009758}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.9838982314009758}], 
                 Offset[{0, 0}, {6.089807129355393, -4.268317254920894}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.268317254920894}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.268317254920894}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.268317254920894}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{108., 8.000000000000023}, {
                  6.089807129355393, -4.268317254920894}], 
                 Offset[{108., -7.999999999999976}, {
                  6.089807129355393, -4.268317254920894}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -4.268317254920894}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.268317254920894}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"conv_2\"\>", ",", "\<\"Weights\"\>"}], 
                   "}"}], TextForm]], "InlineText",ExpressionUUID->
                 "6db0760b-92d5-4d19-960d-669c7b3146b5"],
                Text[{1, "conv_2", "Weights"}]],
               BoxRotation->0.], 
              Offset[{59., 1.3100631690576847*^-14}, \
{6.089807129355393, -4.268317254920894}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -14.330230321229365`}], 
                 Offset[{0, 0}, {5.638887821063309, -14.330230321229365`}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.330230321229365`}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.330230321229365`}], 
                 Offset[{0., 0.}, {5.75161764813633, -14.330230321229365`}], 
                 Offset[{0, 0}, {6.089807129355393, -12.637974300729084`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -12.637974300729084`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -12.637974300729084`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -12.637974300729084`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -14.330230321229365`}], 
                 Offset[{0, 0}, {5.638887821063309, -14.330230321229365`}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.330230321229365`}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.330230321229365`}], 
                 Offset[{0., 0.}, {5.75161764813633, -14.330230321229365`}], 
                 Offset[{0, 0}, {6.089807129355393, -12.637974300729084`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -12.637974300729084`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -12.637974300729084`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -12.637974300729084`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{102., 8.000000000000023}, {
                  6.089807129355393, -12.637974300729084`}], 
                 Offset[{102., -7.999999999999977}, {
                  6.089807129355393, -12.637974300729084`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -12.637974300729084`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -12.637974300729084`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"conv_2\"\>", ",", "\<\"Biases\"\>"}], "}"}],
                   TextForm]], "InlineText",ExpressionUUID->
                 "8733a396-e66a-4748-9403-f2573020d730"],
                Text[{1, "conv_2", "Biases"}]],
               BoxRotation->0.], 
              Offset[{56., 1.2434497875801753*^-14}, \
{6.089807129355393, -12.637974300729084}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.9815811694202357}], 
                 Offset[{0, 0}, {5.638887821063309, 0.9815811694202357}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.9815811694202357}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.9815811694202357}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.9815811694202357}], 
                 Offset[{0, 0}, {6.089807129355393, 1.110990367822995}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  1.110990367822995}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.110990367822995}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.110990367822995}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.9815811694202357}], 
                 Offset[{0, 0}, {5.638887821063309, 0.9815811694202357}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.9815811694202357}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.9815811694202357}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.9815811694202357}], 
                 Offset[{0, 0}, {6.089807129355393, 1.110990367822995}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  1.110990367822995}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.110990367822995}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.110990367822995}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{98., 8.000000000000023}, {6.089807129355393, 
                  1.110990367822995}], 
                 Offset[{98., -7.999999999999979}, {6.089807129355393, 
                  1.110990367822995}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  1.110990367822995}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  1.110990367822995}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{"1", ",", "\<\"bn_2\"\>", ",", "\<\"Gamma\"\>"}], 
                   "}"}], TextForm]], "InlineText",ExpressionUUID->
                 "25a8af66-4b9c-4da4-853e-9a391a9f40c5"],
                Text[{1, "bn_2", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{54., 1.199040866595169*^-14}, \
{6.089807129355393, 1.110990367822995}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.905379038010931}], 
                 Offset[{0, 0}, {5.638887821063309, 0.905379038010931}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.905379038010931}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.905379038010931}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.905379038010931}], 
                 Offset[{0, 0}, {6.089807129355393, 0.9179975352365908}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.9179975352365908}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.9179975352365908}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.9179975352365908}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.905379038010931}], 
                 Offset[{0, 0}, {5.638887821063309, 0.905379038010931}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.905379038010931}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.905379038010931}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.905379038010931}], 
                 Offset[{0, 0}, {6.089807129355393, 0.9179975352365908}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.9179975352365908}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.9179975352365908}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.9179975352365908}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{83., 8.00000000000002}, {6.089807129355393, 
                  0.9179975352365908}], 
                 Offset[{83., -7.999999999999981}, {6.089807129355393, 
                  0.9179975352365908}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.9179975352365908}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.9179975352365908}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{"1", ",", "\<\"bn_2\"\>", ",", "\<\"Beta\"\>"}], 
                   "}"}], TextForm]], "InlineText",ExpressionUUID->
                 "b6311fab-b822-4c96-a2e7-4c7c7b05d143"],
                Text[{1, "bn_2", "Beta"}]],
               BoxRotation->0.], 
              Offset[{46.5, 1.0325074129013956*^-14}, \
{6.089807129355393, 0.9179975352365908}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.5151653352377844}], 
                 Offset[{0, 0}, {5.638887821063309, -0.5151653352377844}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.5151653352377844}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.5151653352377844}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.5151653352377844}], 
                 Offset[{0, 0}, {6.089807129355393, -3.6859947840604756`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.6859947840604756`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.6859947840604756`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.6859947840604756`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.5151653352377844}], 
                 Offset[{0, 0}, {5.638887821063309, -0.5151653352377844}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.5151653352377844}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.5151653352377844}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.5151653352377844}], 
                 Offset[{0, 0}, {6.089807129355393, -3.6859947840604756`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.6859947840604756`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.6859947840604756`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.6859947840604756`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -3.6859947840604756`}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -3.6859947840604756`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.6859947840604756`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.6859947840604756`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"ed4e20ad-98d8-4920-8744-50e54c7fb997"],
                Text[{1, "3a", "conv1x1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -3.6859947840604756}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -14.711758909550872`}], 
                 Offset[{0, 0}, {5.638887821063309, -14.711758909550872`}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.711758909550872`}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.711758909550872`}], 
                 Offset[{0., 0.}, {5.75161764813633, -14.711758909550872`}], 
                 Offset[{0, 0}, {6.089807129355393, -13.407381277182342`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -13.407381277182342`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.407381277182342`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.407381277182342`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -14.711758909550872`}], 
                 Offset[{0, 0}, {5.638887821063309, -14.711758909550872`}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.711758909550872`}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.711758909550872`}], 
                 Offset[{0., 0.}, {5.75161764813633, -14.711758909550872`}], 
                 Offset[{0, 0}, {6.089807129355393, -13.407381277182342`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -13.407381277182342`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.407381277182342`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.407381277182342`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -13.407381277182342`}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -13.407381277182342`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -13.407381277182342`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -13.407381277182342`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"f2f4b117-9266-4ac4-8950-356e8d4abf32"],
                Text[{1, "3a", "conv1x1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -13.407381277182342}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.7278974656632605}], 
                 Offset[{0, 0}, {5.638887821063309, 0.7278974656632605}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7278974656632605}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7278974656632605}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.7278974656632605}], 
                 Offset[{0, 0}, {6.089807129355393, 0.536556846122351}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.536556846122351}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.536556846122351}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.536556846122351}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.7278974656632605}], 
                 Offset[{0, 0}, {5.638887821063309, 0.7278974656632605}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7278974656632605}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7278974656632605}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.7278974656632605}], 
                 Offset[{0, 0}, {6.089807129355393, 0.536556846122351}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.536556846122351}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.536556846122351}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.536556846122351}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {6.089807129355393, 
                  0.536556846122351}], 
                 Offset[{121., -7.999999999999973}, {6.089807129355393, 
                  0.536556846122351}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.536556846122351}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.536556846122351}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c06dea62-7937-43de-a46f-841a84279cfa"],
                Text[{1, "3a", "bn1x1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, 0.536556846122351}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.7420784219906963}], 
                 Offset[{0, 0}, {5.638887821063309, 0.7420784219906963}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7420784219906963}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7420784219906963}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.7420784219906963}], 
                 Offset[{0, 0}, {6.089807129355393, 0.5784068590366128}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.5784068590366128}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.5784068590366128}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.5784068590366128}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.7420784219906963}], 
                 Offset[{0, 0}, {5.638887821063309, 0.7420784219906963}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7420784219906963}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7420784219906963}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.7420784219906963}], 
                 Offset[{0, 0}, {6.089807129355393, 0.5784068590366128}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.5784068590366128}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.5784068590366128}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.5784068590366128}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {6.089807129355393, 
                  0.5784068590366128}], 
                 Offset[{106., -7.999999999999977}, {6.089807129355393, 
                  0.5784068590366128}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.5784068590366128}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.5784068590366128}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"8d549593-4be0-4641-88b4-6fa648d325c0"],
                Text[{1, "3a", "bn1x1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, 0.5784068590366128}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.9598828452454088}], 
                 Offset[{0, 0}, {5.638887821063309, -0.9598828452454088}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.9598828452454088}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.9598828452454088}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.9598828452454088}], 
                 Offset[{0, 0}, {6.089807129355393, -4.196552746725656}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.196552746725656}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.196552746725656}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.196552746725656}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.9598828452454088}], 
                 Offset[{0, 0}, {5.638887821063309, -0.9598828452454088}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.9598828452454088}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.9598828452454088}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.9598828452454088}], 
                 Offset[{0, 0}, {6.089807129355393, -4.196552746725656}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.196552746725656}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.196552746725656}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.196552746725656}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{167., 8.000000000000037}, {
                  6.089807129355393, -4.196552746725656}], 
                 Offset[{167., -7.999999999999963}, {
                  6.089807129355393, -4.196552746725656}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.196552746725656}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.196552746725656}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"6a23f092-4ef1-4c7a-a73b-c0da058a7dc9"],
                Text[{1, "3a", "conv3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{88.5, 1.965094753586527*^-14}, \
{6.089807129355393, -4.196552746725656}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.006277282381081`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.006277282381081`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.006277282381081`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.006277282381081`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.006277282381081`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.041456520632872`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.041456520632872`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.041456520632872`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.041456520632872`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.006277282381081`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.006277282381081`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.006277282381081`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.006277282381081`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.006277282381081`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.041456520632872`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.041456520632872`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.041456520632872`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.041456520632872`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{161., 8.000000000000036}, {
                  6.089807129355393, -14.041456520632872`}], 
                 Offset[{161., -7.9999999999999645`}, {
                  6.089807129355393, -14.041456520632872`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -14.041456520632872`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -14.041456520632872`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"bd80fc6d-637b-4f60-b266-af8631df57a2"],
                Text[{1, "3a", "conv3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{85.5, 1.8984813721090177*^-14}, \
{6.089807129355393, -14.041456520632872}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5802208602006095}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5802208602006095}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5802208602006095}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5802208602006095}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5802208602006095}], 
                 Offset[{0, 0}, {6.089807129355393, 0.10709051229652734`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.10709051229652734`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.10709051229652734`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.10709051229652734`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5802208602006095}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5802208602006095}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5802208602006095}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5802208602006095}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5802208602006095}], 
                 Offset[{0, 0}, {6.089807129355393, 0.10709051229652734`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.10709051229652734`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.10709051229652734`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.10709051229652734`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{157., 8.000000000000034}, {6.089807129355393, 
                  0.10709051229652734`}], 
                 Offset[{157., -7.999999999999965}, {6.089807129355393, 
                  0.10709051229652734`}], 
                 Offset[{10., -7.999999999999997}, {6.089807129355393, 
                  0.10709051229652734`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.10709051229652734`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3150b57a-848e-4719-808a-fdf3d4327415"],
                Text[{1, "3a", "bn3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{83.5, 1.8540724511240114*^-14}, \
{6.089807129355393, 0.10709051229652734}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.007958775008710657}], 
                 Offset[{0, 0}, {5.638887821063309, -0.007958775008710657}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.007958775008710657}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.007958775008710657}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.007958775008710657}], 
                 Offset[{0, 0}, {6.089807129355393, -2.039173363079847}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.039173363079847}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.039173363079847}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.039173363079847}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.007958775008710657}], 
                 Offset[{0, 0}, {5.638887821063309, -0.007958775008710657}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.007958775008710657}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.007958775008710657}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.007958775008710657}], 
                 Offset[{0, 0}, {6.089807129355393, -2.039173363079847}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.039173363079847}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.039173363079847}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.039173363079847}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{142., 8.000000000000032}, {
                  6.089807129355393, -2.039173363079847}], 
                 Offset[{142., -7.999999999999969}, {
                  6.089807129355393, -2.039173363079847}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -2.039173363079847}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -2.039173363079847}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c37c4c8a-54ef-4fa8-941c-41a36c86190c"],
                Text[{1, "3a", "bn3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{76., 1.687538997430238*^-14}, \
{6.089807129355393, -2.039173363079847}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.3129661295116426`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.3129661295116426`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3129661295116426`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3129661295116426`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.3129661295116426`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.862294104691064}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.862294104691064}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.862294104691064}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.862294104691064}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.3129661295116426`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.3129661295116426`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3129661295116426`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3129661295116426`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.3129661295116426`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.862294104691064}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.862294104691064}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.862294104691064}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.862294104691064}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -4.862294104691064}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -4.862294104691064}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.862294104691064}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.862294104691064}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"1e3c9808-0087-4b6d-af99-4026646af8df"],
                Text[{1, "3a", "conv3x3", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -4.862294104691064}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.074803363684977`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.074803363684977`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.074803363684977`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.074803363684977`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.074803363684977`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.136326480342639`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.136326480342639`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.136326480342639`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.136326480342639`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.074803363684977`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.074803363684977`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.074803363684977`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.074803363684977`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.074803363684977`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.136326480342639`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.136326480342639`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.136326480342639`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.136326480342639`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -14.136326480342639`}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -14.136326480342639`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -14.136326480342639`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -14.136326480342639`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"b9d2a0fb-7ecd-4496-a0d2-3b286f4cb6ba"],
                Text[{1, "3a", "conv3x3", "Biases"}]],
               BoxRotation->0.], Offset[{67.5, 1.4988010832439613*^-14}, 
              {6.089807129355393, -14.136326480342639}], {0, 0}]}], 
           GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6829824264039025}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6829824264039025}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6829824264039025}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6829824264039025}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6829824264039025}], 
                 Offset[{0, 0}, {6.089807129355393, 0.4936919665790079}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.4936919665790079}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.4936919665790079}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.4936919665790079}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6829824264039025}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6829824264039025}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6829824264039025}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6829824264039025}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6829824264039025}], 
                 Offset[{0, 0}, {6.089807129355393, 0.4936919665790079}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.4936919665790079}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.4936919665790079}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.4936919665790079}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {6.089807129355393, 
                  0.4936919665790079}], 
                 Offset[{121., -7.999999999999973}, {6.089807129355393, 
                  0.4936919665790079}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.4936919665790079}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.4936919665790079}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c414ba2c-24e1-425d-8815-75614bca6927"],
                Text[{1, "3a", "bn3x3", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, 0.4936919665790079}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.10094937881164846`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.10094937881164846`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.10094937881164846`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.10094937881164846`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.10094937881164846`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.388743570789974}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.388743570789974}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.388743570789974}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.388743570789974}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.10094937881164846`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.10094937881164846`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.10094937881164846`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.10094937881164846`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.10094937881164846`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.388743570789974}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.388743570789974}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.388743570789974}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.388743570789974}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {
                  6.089807129355393, -2.388743570789974}], 
                 Offset[{106., -7.999999999999977}, {
                  6.089807129355393, -2.388743570789974}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.388743570789974}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.388743570789974}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"7c93932d-e9db-4cb8-acc9-817b4cb2d602"],
                Text[{1, "3a", "bn3x3", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, -2.388743570789974}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.9883229676765398}], 
                 Offset[{0, 0}, {5.638887821063309, -0.9883229676765398}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.9883229676765398}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.9883229676765398}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.9883229676765398}], 
                 Offset[{0, 0}, {6.089807129355393, -4.328699711181788}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.328699711181788}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.328699711181788}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.328699711181788}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.9883229676765398}], 
                 Offset[{0, 0}, {5.638887821063309, -0.9883229676765398}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.9883229676765398}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.9883229676765398}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.9883229676765398}], 
                 Offset[{0, 0}, {6.089807129355393, -4.328699711181788}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.328699711181788}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.328699711181788}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.328699711181788}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{202., 8.000000000000044}, {
                  6.089807129355393, -4.328699711181788}], 
                 Offset[{202., -7.999999999999956}, {
                  6.089807129355393, -4.328699711181788}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.328699711181788}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.328699711181788}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"51fefcb9-ef17-4373-8597-cdb059a85224"],
                Text[{1, "3a", "convdouble_3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{106., 2.353672812205332*^-14}, \
{6.089807129355393, -4.328699711181788}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.308165851514563`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.308165851514563`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.308165851514563`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.308165851514563`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.308165851514563`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.640290398461628`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.640290398461628`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.640290398461628`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.640290398461628`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.308165851514563`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.308165851514563`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.308165851514563`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.308165851514563`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.308165851514563`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.640290398461628`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.640290398461628`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.640290398461628`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.640290398461628`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{196., 8.000000000000044}, {
                  6.089807129355393, -14.640290398461628`}], 
                 Offset[{196., -7.9999999999999565`}, {
                  6.089807129355393, -14.640290398461628`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -14.640290398461628`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -14.640290398461628`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"06223658-2943-45d6-a799-bb11a43f0a1b"],
                Text[{1, "3a", "convdouble_3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{103., 2.2870594307278225*^-14}, \
{6.089807129355393, -14.640290398461628}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.48631900400782696`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.48631900400782696`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48631900400782696`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48631900400782696`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.48631900400782696`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.6832616845350303}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.6832616845350303}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.6832616845350303}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.6832616845350303}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.48631900400782696`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.48631900400782696`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48631900400782696`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48631900400782696`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.48631900400782696`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.6832616845350303}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.6832616845350303}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.6832616845350303}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.6832616845350303}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{192., 8.000000000000043}, {
                  6.089807129355393, -0.6832616845350303}], 
                 Offset[{192., -7.999999999999957}, {
                  6.089807129355393, -0.6832616845350303}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -0.6832616845350303}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.6832616845350303}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"f8b2921b-b452-4bd7-b3e1-e35242536cac"],
                Text[{1, "3a", "bndouble_3x3_reduce", "Gamma"}]],
               BoxRotation->0.], Offset[{101., 2.2426505097428162*^-14}, 
              {6.089807129355393, -0.6832616845350303}], {0, 0}]}], 
           GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.13199497688934383`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.13199497688934383`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.13199497688934383`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.13199497688934383`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.13199497688934383`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.6801595852014928`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.6801595852014928`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.6801595852014928`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.6801595852014928`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.13199497688934383`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.13199497688934383`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.13199497688934383`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.13199497688934383`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.13199497688934383`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.6801595852014928`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.6801595852014928`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.6801595852014928`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.6801595852014928`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{177., 8.000000000000039}, {
                  6.089807129355393, -1.6801595852014928`}], 
                 Offset[{177., -7.999999999999961}, {
                  6.089807129355393, -1.6801595852014928`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -1.6801595852014928`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.6801595852014928`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"1b0645d6-4cfb-449b-b22d-d19ccd39fb09"],
                Text[{1, "3a", "bndouble_3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{93.5, 2.0761170560490427*^-14}, \
{6.089807129355393, -1.6801595852014928}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4658466903545606`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4658466903545606`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4658466903545606`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4658466903545606`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4658466903545606`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.351324263874081}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.351324263874081}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.351324263874081}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.351324263874081}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4658466903545606`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4658466903545606`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4658466903545606`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4658466903545606`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4658466903545606`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.351324263874081}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.351324263874081}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.351324263874081}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.351324263874081}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -5.351324263874081}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -5.351324263874081}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -5.351324263874081}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.351324263874081}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"661657a7-dbd3-4bdf-b56b-bef603c8e611"],
                Text[{1, "3a", "convdouble_3x3_0", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -5.351324263874081}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.2637814906569}], 
                 Offset[{0, 0}, {5.638887821063309, -15.2637814906569}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.2637814906569}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.2637814906569}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.2637814906569}], 
                 Offset[{0, 0}, {6.089807129355393, -14.57729434180247}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.57729434180247}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.57729434180247}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.57729434180247}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.2637814906569}], 
                 Offset[{0, 0}, {5.638887821063309, -15.2637814906569}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.2637814906569}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.2637814906569}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.2637814906569}], 
                 Offset[{0, 0}, {6.089807129355393, -14.57729434180247}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.57729434180247}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.57729434180247}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.57729434180247}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -14.57729434180247}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -14.57729434180247}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -14.57729434180247}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -14.57729434180247}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"8301af3b-da5c-4c72-8a46-b86328334228"],
                Text[{1, "3a", "convdouble_3x3_0", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -14.57729434180247}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4224814358049184}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4224814358049184}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4224814358049184}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4224814358049184}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4224814358049184}], 
                 Offset[{0, 0}, {6.089807129355393, -1.0591320082663473`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.0591320082663473`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.0591320082663473`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.0591320082663473`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4224814358049184}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4224814358049184}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4224814358049184}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4224814358049184}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4224814358049184}], 
                 Offset[{0, 0}, {6.089807129355393, -1.0591320082663473`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.0591320082663473`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.0591320082663473`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.0591320082663473`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {
                  6.089807129355393, -1.0591320082663473`}], 
                 Offset[{168., -7.999999999999963}, {
                  6.089807129355393, -1.0591320082663473`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -1.0591320082663473`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.0591320082663473`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3a795d5f-5a2f-46fd-97a6-5d7e1bda5d03"],
                Text[{1, "3a", "bndouble_3x3_0", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, -1.0591320082663473}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.3132975173027293}], 
                 Offset[{0, 0}, {5.638887821063309, -0.3132975173027293}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3132975173027293}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3132975173027293}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.3132975173027293}], 
                 Offset[{0, 0}, {6.089807129355393, -3.173673085175581}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.173673085175581}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.173673085175581}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.173673085175581}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.3132975173027293}], 
                 Offset[{0, 0}, {5.638887821063309, -0.3132975173027293}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3132975173027293}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3132975173027293}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.3132975173027293}], 
                 Offset[{0, 0}, {6.089807129355393, -3.173673085175581}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.173673085175581}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.173673085175581}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.173673085175581}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -3.173673085175581}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -3.173673085175581}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.173673085175581}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.173673085175581}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"1cb48c9d-f93a-4720-8186-cd4ff283094d"],
                Text[{1, "3a", "bndouble_3x3_0", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -3.173673085175581}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.6463675951737193`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.6463675951737193`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6463675951737193`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6463675951737193`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.6463675951737193`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.92660187865344}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.92660187865344}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.92660187865344}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.92660187865344}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.6463675951737193`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.6463675951737193`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6463675951737193`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6463675951737193`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.6463675951737193`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.92660187865344}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.92660187865344}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.92660187865344}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.92660187865344}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -5.92660187865344}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -5.92660187865344}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -5.92660187865344}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.92660187865344}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c7167459-092b-45ea-b1c4-eb7771eb202f"],
                Text[{1, "3a", "convdouble_3x3_1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -5.92660187865344}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.189770020954}], 
                 Offset[{0, 0}, {5.638887821063309, -15.189770020954}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.189770020954}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.189770020954}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.189770020954}], 
                 Offset[{0, 0}, {6.089807129355393, -14.301221270107888`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.301221270107888`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.301221270107888`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.301221270107888`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.189770020954}], 
                 Offset[{0, 0}, {5.638887821063309, -15.189770020954}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.189770020954}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.189770020954}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.189770020954}], 
                 Offset[{0, 0}, {6.089807129355393, -14.301221270107888`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.301221270107888`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.301221270107888`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.301221270107888`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -14.301221270107888`}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -14.301221270107888`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -14.301221270107888`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -14.301221270107888`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c866d622-be99-4af6-b907-e4486f9607f0"],
                Text[{1, "3a", "convdouble_3x3_1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -14.301221270107888}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6507137399908264}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6507137399908264}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6507137399908264}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6507137399908264}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6507137399908264}], 
                 Offset[{0, 0}, {6.089807129355393, 0.3767323388711685}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.3767323388711685}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.3767323388711685}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.3767323388711685}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6507137399908264}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6507137399908264}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6507137399908264}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6507137399908264}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6507137399908264}], 
                 Offset[{0, 0}, {6.089807129355393, 0.3767323388711685}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.3767323388711685}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.3767323388711685}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.3767323388711685}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {6.089807129355393, 
                  0.3767323388711685}], 
                 Offset[{168., -7.999999999999963}, {6.089807129355393, 
                  0.3767323388711685}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.3767323388711685}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.3767323388711685}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"00419c0b-fa16-4fe9-81ef-5a42947060dc"],
                Text[{1, "3a", "bndouble_3x3_1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, 0.3767323388711685}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.22314550461753524`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.22314550461753524`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.22314550461753524`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.22314550461753524`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.22314550461753524`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.7458873816069223`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.7458873816069223`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.7458873816069223`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.7458873816069223`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.22314550461753524`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.22314550461753524`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.22314550461753524`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.22314550461753524`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.22314550461753524`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.7458873816069223`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.7458873816069223`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.7458873816069223`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.7458873816069223`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -2.7458873816069223`}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -2.7458873816069223`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.7458873816069223`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.7458873816069223`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"96b84651-2b76-4e9f-b7f7-11f74b6877d4"],
                Text[{1, "3a", "bndouble_3x3_1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -2.7458873816069223}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.037578894454635}], 
                 Offset[{0, 0}, {5.638887821063309, -1.037578894454635}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.037578894454635}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.037578894454635}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.037578894454635}], 
                 Offset[{0, 0}, {6.089807129355393, -4.440631390214909}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.440631390214909}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.440631390214909}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.440631390214909}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.037578894454635}], 
                 Offset[{0, 0}, {5.638887821063309, -1.037578894454635}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.037578894454635}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.037578894454635}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.037578894454635}], 
                 Offset[{0, 0}, {6.089807129355393, -4.440631390214909}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.440631390214909}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.440631390214909}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.440631390214909}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{132., 8.00000000000003}, {
                  6.089807129355393, -4.440631390214909}], 
                 Offset[{132., -7.999999999999971}, {
                  6.089807129355393, -4.440631390214909}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.440631390214909}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.440631390214909}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"e9a3fb36-27b7-43ac-b4dc-68c921540106"],
                Text[{1, "3a", "convproj", "Weights"}]],
               BoxRotation->0.], 
              Offset[{71., 1.5765166949677223*^-14}, \
{6.089807129355393, -4.440631390214909}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.198236348694689`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.198236348694689`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.198236348694689`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.198236348694689`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.198236348694689`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.512375570725663`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.512375570725663`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.512375570725663`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.512375570725663`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.198236348694689`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.198236348694689`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.198236348694689`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.198236348694689`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.198236348694689`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.512375570725663`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.512375570725663`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.512375570725663`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.512375570725663`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{126., 8.000000000000028}, {
                  6.089807129355393, -14.512375570725663`}], 
                 Offset[{126., -7.9999999999999725`}, {
                  6.089807129355393, -14.512375570725663`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -14.512375570725663`}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -14.512375570725663`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"14221eca-93ed-4e11-a2d4-72ffce6a8b1b"],
                Text[{1, "3a", "convproj", "Biases"}]],
               BoxRotation->0.], 
              Offset[{68., 1.509903313490213*^-14}, \
{6.089807129355393, -14.512375570725663}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5656496452243742}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5656496452243742}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5656496452243742}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5656496452243742}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5656496452243742}], 
                 Offset[{0, 0}, {6.089807129355393, -0.01309437888551696}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.01309437888551696}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.01309437888551696}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.01309437888551696}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5656496452243742}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5656496452243742}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5656496452243742}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5656496452243742}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5656496452243742}], 
                 Offset[{0, 0}, {6.089807129355393, -0.01309437888551696}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.01309437888551696}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.01309437888551696}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.01309437888551696}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{122., 8.000000000000027}, {
                  6.089807129355393, -0.01309437888551696}], 
                 Offset[{122., -7.999999999999973}, {
                  6.089807129355393, -0.01309437888551696}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.01309437888551696}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.01309437888551696}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"af06754b-836a-4429-90dc-f09f23c5d6e4"],
                Text[{1, "3a", "bnproj", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{66., 1.4654943925052066*^-14}, \
{6.089807129355393, -0.01309437888551696}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.15953545519118992`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.15953545519118992`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.15953545519118992`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.15953545519118992`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.15953545519118992`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.6370360973353226`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.6370360973353226`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.6370360973353226`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.6370360973353226`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.15953545519118992`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.15953545519118992`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.15953545519118992`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.15953545519118992`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.15953545519118992`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.6370360973353226`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.6370360973353226`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.6370360973353226`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.6370360973353226`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{107., 8.000000000000023}, {
                  6.089807129355393, -2.6370360973353226`}], 
                 Offset[{107., -7.999999999999976}, {
                  6.089807129355393, -2.6370360973353226`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -2.6370360973353226`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.6370360973353226`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3a\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"65a4abba-b268-4eb6-b80b-145bcf2789c5"],
                Text[{1, "3a", "bnproj", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58.5, 1.2989609388114332*^-14}, \
{6.089807129355393, -2.6370360973353226}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.753534587313999}], 
                 Offset[{0, 0}, {5.638887821063309, -0.753534587313999}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.753534587313999}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.753534587313999}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.753534587313999}], 
                 Offset[{0, 0}, {6.089807129355393, -4.0797870687720525`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.0797870687720525`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.0797870687720525`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.0797870687720525`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.753534587313999}], 
                 Offset[{0, 0}, {5.638887821063309, -0.753534587313999}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.753534587313999}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.753534587313999}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.753534587313999}], 
                 Offset[{0, 0}, {6.089807129355393, -4.0797870687720525`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.0797870687720525`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.0797870687720525`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.0797870687720525`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -4.0797870687720525`}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -4.0797870687720525`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.0797870687720525`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.0797870687720525`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"2bef39e4-1e27-49e3-8c6e-1842a7fd869c"],
                Text[{1, "3b", "conv1x1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -4.0797870687720525}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.195884265719705`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.195884265719705`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.195884265719705`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.195884265719705`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.195884265719705`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.445163097733964`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.445163097733964`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.445163097733964`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.445163097733964`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.195884265719705`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.195884265719705`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.195884265719705`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.195884265719705`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.195884265719705`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.445163097733964`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.445163097733964`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.445163097733964`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.445163097733964`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -14.445163097733964`}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -14.445163097733964`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -14.445163097733964`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -14.445163097733964`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"9e8bcbc9-aefa-4336-93af-b6b6411cfcc9"],
                Text[{1, "3b", "conv1x1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -14.445163097733964}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5670164025681564}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5670164025681564}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5670164025681564}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5670164025681564}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5670164025681564}], 
                 Offset[{0, 0}, {6.089807129355393, 0.016062128984620783`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.016062128984620783`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.016062128984620783`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.016062128984620783`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5670164025681564}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5670164025681564}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5670164025681564}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5670164025681564}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5670164025681564}], 
                 Offset[{0, 0}, {6.089807129355393, 0.016062128984620783`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.016062128984620783`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.016062128984620783`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.016062128984620783`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {6.089807129355393, 
                  0.016062128984620783`}], 
                 Offset[{121., -7.999999999999973}, {6.089807129355393, 
                  0.016062128984620783`}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.016062128984620783`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.016062128984620783`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"85a03eda-b74e-4ed1-aefa-cbfd25b8bb7a"],
                Text[{1, "3b", "bn1x1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, 0.016062128984620783}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.03527416390494783}], 
                 Offset[{0, 0}, {5.638887821063309, -0.03527416390494783}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.03527416390494783}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.03527416390494783}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.03527416390494783}], 
                 Offset[{0, 0}, {6.089807129355393, -2.143984271517086}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.143984271517086}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.143984271517086}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.143984271517086}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.03527416390494783}], 
                 Offset[{0, 0}, {5.638887821063309, -0.03527416390494783}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.03527416390494783}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.03527416390494783}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.03527416390494783}], 
                 Offset[{0, 0}, {6.089807129355393, -2.143984271517086}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.143984271517086}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.143984271517086}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.143984271517086}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {
                  6.089807129355393, -2.143984271517086}], 
                 Offset[{106., -7.999999999999977}, {
                  6.089807129355393, -2.143984271517086}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.143984271517086}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.143984271517086}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"25a74f36-dcc5-4d5f-b2cb-e9c2af66deb5"],
                Text[{1, "3b", "bn1x1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, -2.143984271517086}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.0657253997662353`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.0657253997662353`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.0657253997662353`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.0657253997662353`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.0657253997662353`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.604164334484442}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.604164334484442}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.604164334484442}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.604164334484442}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.0657253997662353`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.0657253997662353`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.0657253997662353`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.0657253997662353`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.0657253997662353`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.604164334484442}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.604164334484442}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.604164334484442}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.604164334484442}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{167., 8.000000000000037}, {
                  6.089807129355393, -4.604164334484442}], 
                 Offset[{167., -7.999999999999963}, {
                  6.089807129355393, -4.604164334484442}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.604164334484442}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.604164334484442}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"4b13337f-6bf0-49d9-86bd-a151b76a4506"],
                Text[{1, "3b", "conv3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{88.5, 1.965094753586527*^-14}, \
{6.089807129355393, -4.604164334484442}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.184350725282716`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.184350725282716`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.184350725282716`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.184350725282716`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.184350725282716`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.221612578747164`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.221612578747164`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.221612578747164`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.221612578747164`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.184350725282716`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.184350725282716`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.184350725282716`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.184350725282716`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.184350725282716`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.221612578747164`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.221612578747164`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.221612578747164`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.221612578747164`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{161., 8.000000000000036}, {
                  6.089807129355393, -14.221612578747164`}], 
                 Offset[{161., -7.9999999999999645`}, {
                  6.089807129355393, -14.221612578747164`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -14.221612578747164`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -14.221612578747164`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"74e7c988-41c4-4ea6-b0d8-f24cd9e026b3"],
                Text[{1, "3b", "conv3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{85.5, 1.8984813721090177*^-14}, \
{6.089807129355393, -14.221612578747164}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5640889382402167}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5640889382402167}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5640889382402167}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5640889382402167}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5640889382402167}], 
                 Offset[{0, 0}, {6.089807129355393, -0.09854985243025961}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.09854985243025961}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.09854985243025961}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.09854985243025961}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5640889382402167}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5640889382402167}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5640889382402167}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5640889382402167}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5640889382402167}], 
                 Offset[{0, 0}, {6.089807129355393, -0.09854985243025961}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.09854985243025961}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.09854985243025961}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.09854985243025961}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{157., 8.000000000000034}, {
                  6.089807129355393, -0.09854985243025961}], 
                 Offset[{157., -7.999999999999965}, {
                  6.089807129355393, -0.09854985243025961}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -0.09854985243025961}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.09854985243025961}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3655e74f-02f1-45bd-bef7-cd92716d0e26"],
                Text[{1, "3b", "bn3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{83.5, 1.8540724511240114*^-14}, \
{6.089807129355393, -0.09854985243025961}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.33272253322316947`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.33272253322316947`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.33272253322316947`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.33272253322316947`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.33272253322316947`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.212054620077705}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.212054620077705}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.212054620077705}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.212054620077705}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.33272253322316947`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.33272253322316947`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.33272253322316947`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.33272253322316947`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.33272253322316947`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.212054620077705}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.212054620077705}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.212054620077705}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.212054620077705}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{142., 8.000000000000032}, {
                  6.089807129355393, -3.212054620077705}], 
                 Offset[{142., -7.999999999999969}, {
                  6.089807129355393, -3.212054620077705}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -3.212054620077705}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -3.212054620077705}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"4a4ded4f-c6d9-4ae0-af01-852b95df622c"],
                Text[{1, "3b", "bn3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{76., 1.687538997430238*^-14}, \
{6.089807129355393, -3.212054620077705}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4084589345174232`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4084589345174232`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4084589345174232`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4084589345174232`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4084589345174232`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.196776147023027}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.196776147023027}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.196776147023027}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.196776147023027}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4084589345174232`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4084589345174232`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4084589345174232`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4084589345174232`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4084589345174232`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.196776147023027}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.196776147023027}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.196776147023027}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.196776147023027}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -5.196776147023027}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -5.196776147023027}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.196776147023027}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.196776147023027}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"7a9da7b7-2807-4f5a-918a-0c88a400f4fe"],
                Text[{1, "3b", "conv3x3", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -5.196776147023027}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.492417989825157`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.492417989825157`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.492417989825157`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.492417989825157`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.492417989825157`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.040366880174304`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.040366880174304`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.040366880174304`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.040366880174304`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.492417989825157`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.492417989825157`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.492417989825157`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.492417989825157`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.492417989825157`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.040366880174304`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.040366880174304`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.040366880174304`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.040366880174304`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -15.040366880174304`}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -15.040366880174304`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.040366880174304`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.040366880174304`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"47c9937d-614a-47fb-86f0-0a1f1d1ea898"],
                Text[{1, "3b", "conv3x3", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -15.040366880174304}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5284767055892499}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5284767055892499}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5284767055892499}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5284767055892499}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5284767055892499}], 
                 Offset[{0, 0}, {6.089807129355393, -0.38860934081779513`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.38860934081779513`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.38860934081779513`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.38860934081779513`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5284767055892499}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5284767055892499}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5284767055892499}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5284767055892499}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5284767055892499}], 
                 Offset[{0, 0}, {6.089807129355393, -0.38860934081779513`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.38860934081779513`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.38860934081779513`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.38860934081779513`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {
                  6.089807129355393, -0.38860934081779513`}], 
                 Offset[{121., -7.999999999999973}, {
                  6.089807129355393, -0.38860934081779513`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.38860934081779513`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.38860934081779513`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"6159f172-26f5-4b08-bdd6-f1d5dd36c2a3"],
                Text[{1, "3b", "bn3x3", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, -0.38860934081779513}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.41710667634483534`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.41710667634483534`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.41710667634483534`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.41710667634483534`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.41710667634483534`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.532738296079213}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.532738296079213}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.532738296079213}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.532738296079213}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.41710667634483534`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.41710667634483534`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.41710667634483534`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.41710667634483534`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.41710667634483534`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.532738296079213}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.532738296079213}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.532738296079213}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.532738296079213}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {
                  6.089807129355393, -3.532738296079213}], 
                 Offset[{106., -7.999999999999977}, {
                  6.089807129355393, -3.532738296079213}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.532738296079213}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.532738296079213}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"490cf8a8-7930-4d80-9792-96a80aa8d976"],
                Text[{1, "3b", "bn3x3", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, -3.532738296079213}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.0263854484750214`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.0263854484750214`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.0263854484750214`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.0263854484750214`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.0263854484750214`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.3860385642407405`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.3860385642407405`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.3860385642407405`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.3860385642407405`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.0263854484750214`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.0263854484750214`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.0263854484750214`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.0263854484750214`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.0263854484750214`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.3860385642407405`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.3860385642407405`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.3860385642407405`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.3860385642407405`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{202., 8.000000000000044}, {
                  6.089807129355393, -4.3860385642407405`}], 
                 Offset[{202., -7.999999999999956}, {
                  6.089807129355393, -4.3860385642407405`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.3860385642407405`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.3860385642407405`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"d847f3fa-3448-4a2c-8151-d9290a7a6a53"],
                Text[{1, "3b", "convdouble_3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{106., 2.353672812205332*^-14}, \
{6.089807129355393, -4.3860385642407405}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -14.946477747984586`}], 
                 Offset[{0, 0}, {5.638887821063309, -14.946477747984586`}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.946477747984586`}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.946477747984586`}], 
                 Offset[{0., 0.}, {5.75161764813633, -14.946477747984586`}], 
                 Offset[{0, 0}, {6.089807129355393, -13.805991637068217`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -13.805991637068217`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.805991637068217`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.805991637068217`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -14.946477747984586`}], 
                 Offset[{0, 0}, {5.638887821063309, -14.946477747984586`}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.946477747984586`}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.946477747984586`}], 
                 Offset[{0., 0.}, {5.75161764813633, -14.946477747984586`}], 
                 Offset[{0, 0}, {6.089807129355393, -13.805991637068217`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -13.805991637068217`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.805991637068217`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.805991637068217`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{196., 8.000000000000044}, {
                  6.089807129355393, -13.805991637068217`}], 
                 Offset[{196., -7.9999999999999565`}, {
                  6.089807129355393, -13.805991637068217`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -13.805991637068217`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -13.805991637068217`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"776cd790-9ffa-42b5-8cfa-1713e00ce01a"],
                Text[{1, "3b", "convdouble_3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{103., 2.2870594307278225*^-14}, \
{6.089807129355393, -13.805991637068217}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6375599411428492}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6375599411428492}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6375599411428492}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6375599411428492}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6375599411428492}], 
                 Offset[{0, 0}, {6.089807129355393, 0.3397196604101161}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.3397196604101161}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.3397196604101161}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.3397196604101161}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6375599411428492}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6375599411428492}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6375599411428492}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6375599411428492}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6375599411428492}], 
                 Offset[{0, 0}, {6.089807129355393, 0.3397196604101161}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.3397196604101161}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.3397196604101161}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.3397196604101161}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{192., 8.000000000000043}, {6.089807129355393, 
                  0.3397196604101161}], 
                 Offset[{192., -7.999999999999957}, {6.089807129355393, 
                  0.3397196604101161}], 
                 Offset[{10., -7.999999999999997}, {6.089807129355393, 
                  0.3397196604101161}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.3397196604101161}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"0f8b23fc-f39d-4975-a295-0cf0f31a4754"],
                Text[{1, "3b", "bndouble_3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{101., 2.2426505097428162*^-14}, \
{6.089807129355393, 0.3397196604101161}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.2658466181430184}], 
                 Offset[{0, 0}, {5.638887821063309, -0.2658466181430184}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2658466181430184}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2658466181430184}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.2658466181430184}], 
                 Offset[{0, 0}, {6.089807129355393, -3.025778613338908}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.025778613338908}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.025778613338908}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.025778613338908}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.2658466181430184}], 
                 Offset[{0, 0}, {5.638887821063309, -0.2658466181430184}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2658466181430184}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2658466181430184}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.2658466181430184}], 
                 Offset[{0, 0}, {6.089807129355393, -3.025778613338908}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.025778613338908}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.025778613338908}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.025778613338908}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{177., 8.000000000000039}, {
                  6.089807129355393, -3.025778613338908}], 
                 Offset[{177., -7.999999999999961}, {
                  6.089807129355393, -3.025778613338908}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -3.025778613338908}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.025778613338908}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"ee5f411c-fb1b-490f-b8f3-a339c486f96f"],
                Text[{1, "3b", "bndouble_3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{93.5, 2.0761170560490427*^-14}, \
{6.089807129355393, -3.025778613338908}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.3184103996354395`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.3184103996354395`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3184103996354395`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3184103996354395`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.3184103996354395`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.906516569356808}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.906516569356808}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.906516569356808}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.906516569356808}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.3184103996354395`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.3184103996354395`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3184103996354395`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3184103996354395`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.3184103996354395`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.906516569356808}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.906516569356808}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.906516569356808}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.906516569356808}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -4.906516569356808}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -4.906516569356808}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -4.906516569356808}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.906516569356808}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"88156e36-55c3-41cb-8ea6-4ee5574c46a4"],
                Text[{1, "3b", "convdouble_3x3_0", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -4.906516569356808}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.442494448794934`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.442494448794934`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.442494448794934`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.442494448794934`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.442494448794934`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.932142468113064`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.932142468113064`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.932142468113064`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.932142468113064`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.442494448794934`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.442494448794934`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.442494448794934`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.442494448794934`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.442494448794934`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.932142468113064`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.932142468113064`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.932142468113064`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.932142468113064`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -14.932142468113064`}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -14.932142468113064`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -14.932142468113064`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -14.932142468113064`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c2755490-4890-4f19-b806-54d2d19a9535"],
                Text[{1, "3b", "convdouble_3x3_0", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -14.932142468113064}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.7424943155790099}], 
                 Offset[{0, 0}, {5.638887821063309, 0.7424943155790099}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7424943155790099}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7424943155790099}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.7424943155790099}], 
                 Offset[{0, 0}, {6.089807129355393, 0.6200061843796666}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.6200061843796666}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.6200061843796666}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.6200061843796666}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.7424943155790099}], 
                 Offset[{0, 0}, {5.638887821063309, 0.7424943155790099}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7424943155790099}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7424943155790099}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.7424943155790099}], 
                 Offset[{0, 0}, {6.089807129355393, 0.6200061843796666}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.6200061843796666}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.6200061843796666}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.6200061843796666}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {6.089807129355393, 
                  0.6200061843796666}], 
                 Offset[{168., -7.999999999999963}, {6.089807129355393, 
                  0.6200061843796666}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.6200061843796666}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.6200061843796666}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"b6d7cc24-2379-4beb-a963-76da2631ebff"],
                Text[{1, "3b", "bndouble_3x3_0", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, 0.6200061843796666}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.13854547742865042`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.13854547742865042`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.13854547742865042`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.13854547742865042`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.13854547742865042`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.639739380620974}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.639739380620974}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.639739380620974}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.639739380620974}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.13854547742865042`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.13854547742865042`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.13854547742865042`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.13854547742865042`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.13854547742865042`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.639739380620974}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.639739380620974}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.639739380620974}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.639739380620974}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -1.639739380620974}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -1.639739380620974}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -1.639739380620974}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.639739380620974}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3ebe5830-6aff-49de-8a6d-710ce2de111b"],
                Text[{1, "3b", "bndouble_3x3_0", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -1.639739380620974}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4389434310856513`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4389434310856513`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4389434310856513`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4389434310856513`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4389434310856513`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.2362806536818125`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.2362806536818125`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.2362806536818125`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.2362806536818125`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4389434310856513`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4389434310856513`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4389434310856513`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4389434310856513`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4389434310856513`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.2362806536818125`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.2362806536818125`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.2362806536818125`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.2362806536818125`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -5.2362806536818125`}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -5.2362806536818125`}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -5.2362806536818125`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.2362806536818125`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"8eb8209e-89e9-4a90-a99f-382ec42d91e7"],
                Text[{1, "3b", "convdouble_3x3_1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -5.2362806536818125}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.40228769830581}], 
                 Offset[{0, 0}, {5.638887821063309, -15.40228769830581}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.40228769830581}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.40228769830581}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.40228769830581}], 
                 Offset[{0, 0}, {6.089807129355393, -14.819510121768571`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.819510121768571`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.819510121768571`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.819510121768571`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.40228769830581}], 
                 Offset[{0, 0}, {5.638887821063309, -15.40228769830581}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.40228769830581}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.40228769830581}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.40228769830581}], 
                 Offset[{0, 0}, {6.089807129355393, -14.819510121768571`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.819510121768571`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.819510121768571`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.819510121768571`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -14.819510121768571`}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -14.819510121768571`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -14.819510121768571`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -14.819510121768571`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"5e7721f5-b6c9-4450-8086-eb035f572b28"],
                Text[{1, "3b", "convdouble_3x3_1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -14.819510121768571}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5556804461378544}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5556804461378544}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5556804461378544}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5556804461378544}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5556804461378544}], 
                 Offset[{0, 0}, {6.089807129355393, -0.21266987663142428`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.21266987663142428`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.21266987663142428`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.21266987663142428`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5556804461378544}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5556804461378544}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5556804461378544}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5556804461378544}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5556804461378544}], 
                 Offset[{0, 0}, {6.089807129355393, -0.21266987663142428`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.21266987663142428`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.21266987663142428`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.21266987663142428`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {
                  6.089807129355393, -0.21266987663142428`}], 
                 Offset[{168., -7.999999999999963}, {
                  6.089807129355393, -0.21266987663142428`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.21266987663142428`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.21266987663142428`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"566a7482-e7cb-49ee-97ee-3e84687aba4b"],
                Text[{1, "3b", "bndouble_3x3_1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, -0.21266987663142428}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.2432825354579459}], 
                 Offset[{0, 0}, {5.638887821063309, -0.2432825354579459}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2432825354579459}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2432825354579459}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.2432825354579459}], 
                 Offset[{0, 0}, {6.089807129355393, -2.8857843670530943`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.8857843670530943`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.8857843670530943`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.8857843670530943`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.2432825354579459}], 
                 Offset[{0, 0}, {5.638887821063309, -0.2432825354579459}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2432825354579459}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2432825354579459}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.2432825354579459}], 
                 Offset[{0, 0}, {6.089807129355393, -2.8857843670530943`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.8857843670530943`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.8857843670530943`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.8857843670530943`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -2.8857843670530943`}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -2.8857843670530943`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.8857843670530943`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.8857843670530943`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"4a25a14d-360d-48ea-810d-49546aa2c0b6"],
                Text[{1, "3b", "bndouble_3x3_1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -2.8857843670530943}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.052170495862398}], 
                 Offset[{0, 0}, {5.638887821063309, -1.052170495862398}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.052170495862398}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.052170495862398}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.052170495862398}], 
                 Offset[{0, 0}, {6.089807129355393, -4.494417230162783}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.494417230162783}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.494417230162783}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.494417230162783}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.052170495862398}], 
                 Offset[{0, 0}, {5.638887821063309, -1.052170495862398}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.052170495862398}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.052170495862398}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.052170495862398}], 
                 Offset[{0, 0}, {6.089807129355393, -4.494417230162783}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.494417230162783}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.494417230162783}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.494417230162783}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{132., 8.00000000000003}, {
                  6.089807129355393, -4.494417230162783}], 
                 Offset[{132., -7.999999999999971}, {
                  6.089807129355393, -4.494417230162783}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.494417230162783}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.494417230162783}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"55989b52-5ce7-4b99-8ee8-706b29756f5e"],
                Text[{1, "3b", "convproj", "Weights"}]],
               BoxRotation->0.], 
              Offset[{71., 1.5765166949677223*^-14}, \
{6.089807129355393, -4.494417230162783}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.004549912746903`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.004549912746903`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.004549912746903`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.004549912746903`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.004549912746903`}], 
                 Offset[{0, 0}, {6.089807129355393, -13.93303619720255}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -13.93303619720255}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.93303619720255}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.93303619720255}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.004549912746903`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.004549912746903`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.004549912746903`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.004549912746903`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.004549912746903`}], 
                 Offset[{0, 0}, {6.089807129355393, -13.93303619720255}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -13.93303619720255}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.93303619720255}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.93303619720255}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{126., 8.000000000000028}, {
                  6.089807129355393, -13.93303619720255}], 
                 Offset[{126., -7.9999999999999725`}, {
                  6.089807129355393, -13.93303619720255}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -13.93303619720255}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -13.93303619720255}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"577898d2-c094-4611-ab9b-6334f5750e02"],
                Text[{1, "3b", "convproj", "Biases"}]],
               BoxRotation->0.], 
              Offset[{68., 1.509903313490213*^-14}, \
{6.089807129355393, -13.93303619720255}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5602840006064692}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5602840006064692}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5602840006064692}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5602840006064692}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5602840006064692}], 
                 Offset[{0, 0}, {6.089807129355393, -0.15531684004113486`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.15531684004113486`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.15531684004113486`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.15531684004113486`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5602840006064692}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5602840006064692}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5602840006064692}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5602840006064692}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5602840006064692}], 
                 Offset[{0, 0}, {6.089807129355393, -0.15531684004113486`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.15531684004113486`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.15531684004113486`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.15531684004113486`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{122., 8.000000000000027}, {
                  6.089807129355393, -0.15531684004113486`}], 
                 Offset[{122., -7.999999999999973}, {
                  6.089807129355393, -0.15531684004113486`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.15531684004113486`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.15531684004113486`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"99cd72e8-3495-41bb-b375-c3dec5f96633"],
                Text[{1, "3b", "bnproj", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{66., 1.4654943925052066*^-14}, \
{6.089807129355393, -0.15531684004113486}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.18239209930411937`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.18239209930411937`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.18239209930411937`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.18239209930411937`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.18239209930411937`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.673198306599323}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.673198306599323}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.673198306599323}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.673198306599323}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.18239209930411937`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.18239209930411937`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.18239209930411937`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.18239209930411937`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.18239209930411937`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.673198306599323}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.673198306599323}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.673198306599323}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.673198306599323}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{107., 8.000000000000023}, {
                  6.089807129355393, -2.673198306599323}], 
                 Offset[{107., -7.999999999999976}, {
                  6.089807129355393, -2.673198306599323}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -2.673198306599323}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.673198306599323}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3b\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"e87aa4f2-4b84-462a-821a-fb9903194418"],
                Text[{1, "3b", "bnproj", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58.5, 1.2989609388114332*^-14}, \
{6.089807129355393, -2.673198306599323}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.3263232492546668`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.3263232492546668`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3263232492546668`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3263232492546668`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.3263232492546668`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.991712442159316}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.991712442159316}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.991712442159316}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.991712442159316}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.3263232492546668`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.3263232492546668`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3263232492546668`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3263232492546668`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.3263232492546668`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.991712442159316}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.991712442159316}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.991712442159316}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.991712442159316}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{166., 8.000000000000037}, {
                  6.089807129355393, -4.991712442159316}], 
                 Offset[{166., -7.999999999999963}, {
                  6.089807129355393, -4.991712442159316}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.991712442159316}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.991712442159316}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"8d19b2d6-93ba-4bd7-825f-923e3eab3010"],
                Text[{1, "3c", "conv3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{88., 1.9539925233402755*^-14}, \
{6.089807129355393, -4.991712442159316}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.480256122464532`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.480256122464532`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.480256122464532`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.480256122464532`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.480256122464532`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.986759007123334`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.986759007123334`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.986759007123334`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.986759007123334`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.480256122464532`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.480256122464532`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.480256122464532`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.480256122464532`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.480256122464532`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.986759007123334`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.986759007123334`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.986759007123334`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.986759007123334`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{160., 8.000000000000036}, {
                  6.089807129355393, -14.986759007123334`}], 
                 Offset[{160., -7.9999999999999645`}, {
                  6.089807129355393, -14.986759007123334`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -14.986759007123334`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -14.986759007123334`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"32ee3d88-9d89-421f-b930-a0835437e437"],
                Text[{1, "3c", "conv3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{85., 1.887379141862766*^-14}, \
{6.089807129355393, -14.986759007123334}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4792933719129778}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4792933719129778}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4792933719129778}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4792933719129778}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4792933719129778}], 
                 Offset[{0, 0}, {6.089807129355393, -0.771617717680216}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.771617717680216}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.771617717680216}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.771617717680216}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4792933719129778}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4792933719129778}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4792933719129778}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4792933719129778}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4792933719129778}], 
                 Offset[{0, 0}, {6.089807129355393, -0.771617717680216}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.771617717680216}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.771617717680216}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.771617717680216}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{156., 8.000000000000034}, {
                  6.089807129355393, -0.771617717680216}], 
                 Offset[{156., -7.999999999999965}, {
                  6.089807129355393, -0.771617717680216}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -0.771617717680216}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.771617717680216}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"cb380a55-6358-470a-987f-8b14dce89d1d"],
                Text[{1, "3c", "bn3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{83., 1.84297022087776*^-14}, \
{6.089807129355393, -0.771617717680216}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.09620102846410293}], 
                 Offset[{0, 0}, {5.638887821063309, 0.09620102846410293}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.09620102846410293}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.09620102846410293}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.09620102846410293}], 
                 Offset[{0, 0}, {6.089807129355393, -1.7653893791177493`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.7653893791177493`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.7653893791177493`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.7653893791177493`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.09620102846410293}], 
                 Offset[{0, 0}, {5.638887821063309, 0.09620102846410293}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.09620102846410293}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.09620102846410293}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.09620102846410293}], 
                 Offset[{0, 0}, {6.089807129355393, -1.7653893791177493`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.7653893791177493`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.7653893791177493`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.7653893791177493`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{141., 8.00000000000003}, {
                  6.089807129355393, -1.7653893791177493`}], 
                 Offset[{141., -7.999999999999969}, {
                  6.089807129355393, -1.7653893791177493`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -1.7653893791177493`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.7653893791177493`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"da9a9338-b6ac-4b01-8c9e-434b6b0d5154"],
                Text[{1, "3c", "bn3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{75.5, 1.6764367671839864*^-14}, \
{6.089807129355393, -1.7653893791177493}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.9963214140997292`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.9963214140997292`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9963214140997292`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9963214140997292`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.9963214140997292`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.785310753011717}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.785310753011717}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.785310753011717}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.785310753011717}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.9963214140997292`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.9963214140997292`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9963214140997292`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9963214140997292`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.9963214140997292`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.785310753011717}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.785310753011717}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.785310753011717}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.785310753011717}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{130., 8.00000000000003}, {
                  6.089807129355393, -6.785310753011717}], 
                 Offset[{130., -7.999999999999972}, {
                  6.089807129355393, -6.785310753011717}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -6.785310753011717}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.785310753011717}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"efe47572-c234-4cc2-a005-c03611780bad"],
                Text[{1, "3c", "conv3x3", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70., 1.554312234475219*^-14}, \
{6.089807129355393, -6.785310753011717}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.804896345918054`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.804896345918054`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.804896345918054`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.804896345918054`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.804896345918054`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.743786757454057`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.743786757454057`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.743786757454057`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.743786757454057`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.804896345918054`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.804896345918054`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.804896345918054`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.804896345918054`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.804896345918054`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.743786757454057`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.743786757454057`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.743786757454057`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.743786757454057`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{124., 8.000000000000027}, {
                  6.089807129355393, -15.743786757454057`}], 
                 Offset[{124., -7.9999999999999725`}, {
                  6.089807129355393, -15.743786757454057`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.743786757454057`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.743786757454057`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3ad9986e-f04c-400b-af5e-976a5be8571f"],
                Text[{1, "3c", "conv3x3", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67., 1.4876988529977098*^-14}, \
{6.089807129355393, -15.743786757454057}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6037611607443178}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6037611607443178}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6037611607443178}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6037611607443178}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6037611607443178}], 
                 Offset[{0, 0}, {6.089807129355393, 0.20238651465759694`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.20238651465759694`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.20238651465759694`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.20238651465759694`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6037611607443178}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6037611607443178}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6037611607443178}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6037611607443178}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6037611607443178}], 
                 Offset[{0, 0}, {6.089807129355393, 0.20238651465759694`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.20238651465759694`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.20238651465759694`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.20238651465759694`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{120., 8.000000000000027}, {6.089807129355393, 
                  0.20238651465759694`}], 
                 Offset[{120., -7.999999999999973}, {6.089807129355393, 
                  0.20238651465759694`}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.20238651465759694`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.20238651465759694`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"7061a1f2-9213-484b-952e-8288377bb570"],
                Text[{1, "3c", "bn3x3", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65., 1.4432899320127035*^-14}, \
{6.089807129355393, 0.20238651465759694}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.5556048333051165}], 
                 Offset[{0, 0}, {5.638887821063309, -0.5556048333051165}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.5556048333051165}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.5556048333051165}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.5556048333051165}], 
                 Offset[{0, 0}, {6.089807129355393, -3.745407099817142}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.745407099817142}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.745407099817142}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.745407099817142}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.5556048333051165}], 
                 Offset[{0, 0}, {5.638887821063309, -0.5556048333051165}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.5556048333051165}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.5556048333051165}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.5556048333051165}], 
                 Offset[{0, 0}, {6.089807129355393, -3.745407099817142}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.745407099817142}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.745407099817142}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.745407099817142}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{105., 8.000000000000023}, {
                  6.089807129355393, -3.745407099817142}], 
                 Offset[{105., -7.999999999999977}, {
                  6.089807129355393, -3.745407099817142}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.745407099817142}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.745407099817142}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"9b2b061d-9a49-416a-8954-7cb66c980647"],
                Text[{1, "3c", "bn3x3", "Beta"}]],
               BoxRotation->0.], 
              Offset[{57.5, 1.27675647831893*^-14}, \
{6.089807129355393, -3.745407099817142}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.2350570142668678`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.2350570142668678`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2350570142668678`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2350570142668678`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.2350570142668678`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.665179586558953}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.665179586558953}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.665179586558953}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.665179586558953}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.2350570142668678`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.2350570142668678`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2350570142668678`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2350570142668678`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.2350570142668678`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.665179586558953}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.665179586558953}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.665179586558953}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.665179586558953}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{201., 8.000000000000044}, {
                  6.089807129355393, -4.665179586558953}], 
                 Offset[{201., -7.999999999999956}, {
                  6.089807129355393, -4.665179586558953}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.665179586558953}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.665179586558953}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"f5853a19-b50a-4d7f-a28c-13dcebbade5b"],
                Text[{1, "3c", "convdouble_3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{105.5, 2.3425705819590803*^-14}, \
{6.089807129355393, -4.665179586558953}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.191945762589215`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.191945762589215`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.191945762589215`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.191945762589215`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.191945762589215`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.375165647063215`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.375165647063215`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.375165647063215`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.375165647063215`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.191945762589215`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.191945762589215`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.191945762589215`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.191945762589215`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.191945762589215`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.375165647063215`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.375165647063215`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.375165647063215`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.375165647063215`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{195., 8.000000000000044}, {
                  6.089807129355393, -14.375165647063215`}], 
                 Offset[{195., -7.9999999999999565`}, {
                  6.089807129355393, -14.375165647063215`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -14.375165647063215`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -14.375165647063215`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"4a5d0f86-7ea4-4b5a-aa06-b76c7b7999a9"],
                Text[{1, "3c", "convdouble_3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{102.5, 2.275957200481571*^-14}, \
{6.089807129355393, -14.375165647063215}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.47291268132461456`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.47291268132461456`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.47291268132461456`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.47291268132461456`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.47291268132461456`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.8019920614325646}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.8019920614325646}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8019920614325646}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8019920614325646}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.47291268132461456`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.47291268132461456`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.47291268132461456`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.47291268132461456`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.47291268132461456`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.8019920614325646}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.8019920614325646}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8019920614325646}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8019920614325646}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{191., 8.000000000000043}, {
                  6.089807129355393, -0.8019920614325646}], 
                 Offset[{191., -7.999999999999957}, {
                  6.089807129355393, -0.8019920614325646}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -0.8019920614325646}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.8019920614325646}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"ac124006-d187-4a06-8a3a-c1d0ff03f7ad"],
                Text[{1, "3c", "bndouble_3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{100.5, 2.2315482794965646*^-14}, \
{6.089807129355393, -0.8019920614325646}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.2868825466813112}], 
                 Offset[{0, 0}, {5.638887821063309, -0.2868825466813112}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2868825466813112}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2868825466813112}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.2868825466813112}], 
                 Offset[{0, 0}, {6.089807129355393, -3.0985941111421105`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.0985941111421105`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.0985941111421105`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.0985941111421105`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.2868825466813112}], 
                 Offset[{0, 0}, {5.638887821063309, -0.2868825466813112}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2868825466813112}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2868825466813112}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.2868825466813112}], 
                 Offset[{0, 0}, {6.089807129355393, -3.0985941111421105`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.0985941111421105`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.0985941111421105`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.0985941111421105`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{176., 8.000000000000039}, {
                  6.089807129355393, -3.0985941111421105`}], 
                 Offset[{176., -7.999999999999961}, {
                  6.089807129355393, -3.0985941111421105`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -3.0985941111421105`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.0985941111421105`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"248e6c89-b731-4c82-8be6-ad180a436245"],
                Text[{1, "3c", "bndouble_3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{93., 2.0650148258027912*^-14}, \
{6.089807129355393, -3.0985941111421105}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.62336217075905}], 
                 Offset[{0, 0}, {5.638887821063309, -1.62336217075905}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.62336217075905}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.62336217075905}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.62336217075905}], 
                 Offset[{0, 0}, {6.089807129355393, -5.845903735344959}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.845903735344959}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.845903735344959}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.845903735344959}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.62336217075905}], 
                 Offset[{0, 0}, {5.638887821063309, -1.62336217075905}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.62336217075905}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.62336217075905}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.62336217075905}], 
                 Offset[{0, 0}, {6.089807129355393, -5.845903735344959}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.845903735344959}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.845903735344959}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.845903735344959}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{177., 8.000000000000039}, {
                  6.089807129355393, -5.845903735344959}], 
                 Offset[{177., -7.999999999999961}, {
                  6.089807129355393, -5.845903735344959}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -5.845903735344959}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.845903735344959}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"cc8bdb7f-5555-4852-bfdd-fd4244d5de1f"],
                Text[{1, "3c", "convdouble_3x3_0", "Weights"}]],
               BoxRotation->0.], 
              Offset[{93.5, 2.0761170560490427*^-14}, \
{6.089807129355393, -5.845903735344959}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.640472878947946`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.640472878947946`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.640472878947946`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.640472878947946`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.640472878947946`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.245531625803666`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.245531625803666`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.245531625803666`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.245531625803666`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.640472878947946`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.640472878947946`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.640472878947946`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.640472878947946`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.640472878947946`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.245531625803666`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.245531625803666`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.245531625803666`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.245531625803666`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{171., 8.000000000000037}, {
                  6.089807129355393, -15.245531625803666`}], 
                 Offset[{171., -7.999999999999962}, {
                  6.089807129355393, -15.245531625803666`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.245531625803666`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.245531625803666`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"cd8bc2f7-c4e9-4d82-9ee4-1d79b6dc2c0f"],
                Text[{1, "3c", "convdouble_3x3_0", "Biases"}]],
               BoxRotation->0.], 
              Offset[{90.5, 2.0095036745715333*^-14}, \
{6.089807129355393, -15.245531625803666}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.442735792153894}], 
                 Offset[{0, 0}, {5.638887821063309, 0.442735792153894}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.442735792153894}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.442735792153894}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.442735792153894}], 
                 Offset[{0, 0}, {6.089807129355393, -0.9906971223295348}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.9906971223295348}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.9906971223295348}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.9906971223295348}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.442735792153894}], 
                 Offset[{0, 0}, {5.638887821063309, 0.442735792153894}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.442735792153894}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.442735792153894}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.442735792153894}], 
                 Offset[{0, 0}, {6.089807129355393, -0.9906971223295348}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.9906971223295348}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.9906971223295348}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.9906971223295348}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{167., 8.000000000000037}, {
                  6.089807129355393, -0.9906971223295348}], 
                 Offset[{167., -7.999999999999963}, {
                  6.089807129355393, -0.9906971223295348}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.9906971223295348}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.9906971223295348}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"21abadce-4c85-4461-b821-90c2de25ea89"],
                Text[{1, "3c", "bndouble_3x3_0", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{88.5, 1.965094753586527*^-14}, \
{6.089807129355393, -0.9906971223295348}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.17208272455483328`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.17208272455483328`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.17208272455483328`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.17208272455483328`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.17208272455483328`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.5517502587244405`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.5517502587244405`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.5517502587244405`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.5517502587244405`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.17208272455483328`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.17208272455483328`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.17208272455483328`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.17208272455483328`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.17208272455483328`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.5517502587244405`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.5517502587244405`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.5517502587244405`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.5517502587244405`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{152., 8.000000000000034}, {
                  6.089807129355393, -1.5517502587244405`}], 
                 Offset[{152., -7.999999999999966}, {
                  6.089807129355393, -1.5517502587244405`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -1.5517502587244405`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.5517502587244405`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"87421ab7-9f3d-4173-a712-d919d9aca7b3"],
                Text[{1, "3c", "bndouble_3x3_0", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81., 1.7985612998927536*^-14}, \
{6.089807129355393, -1.5517502587244405}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.8540857708817329`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.8540857708817329`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8540857708817329`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8540857708817329`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.8540857708817329`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.45720140211473}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.45720140211473}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.45720140211473}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.45720140211473}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.8540857708817329`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.8540857708817329`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8540857708817329`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8540857708817329`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.8540857708817329`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.45720140211473}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.45720140211473}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.45720140211473}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.45720140211473}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{177., 8.000000000000039}, {
                  6.089807129355393, -6.45720140211473}], 
                 Offset[{177., -7.999999999999961}, {
                  6.089807129355393, -6.45720140211473}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -6.45720140211473}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.45720140211473}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"18b31312-8899-4650-9fde-2cf61101e5da"],
                Text[{1, "3c", "convdouble_3x3_1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{93.5, 2.0761170560490427*^-14}, \
{6.089807129355393, -6.45720140211473}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.61926449344369}], 
                 Offset[{0, 0}, {5.638887821063309, -15.61926449344369}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.61926449344369}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.61926449344369}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.61926449344369}], 
                 Offset[{0, 0}, {6.089807129355393, -15.195861464939298`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.195861464939298`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.195861464939298`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.195861464939298`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.61926449344369}], 
                 Offset[{0, 0}, {5.638887821063309, -15.61926449344369}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.61926449344369}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.61926449344369}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.61926449344369}], 
                 Offset[{0, 0}, {6.089807129355393, -15.195861464939298`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.195861464939298`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.195861464939298`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.195861464939298`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{171., 8.000000000000037}, {
                  6.089807129355393, -15.195861464939298`}], 
                 Offset[{171., -7.999999999999962}, {
                  6.089807129355393, -15.195861464939298`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.195861464939298`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.195861464939298`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3a03b96d-932e-47f9-b542-f2b57a52b72d"],
                Text[{1, "3c", "convdouble_3x3_1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{90.5, 2.0095036745715333*^-14}, \
{6.089807129355393, -15.195861464939298}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6654905991219113}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6654905991219113}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6654905991219113}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6654905991219113}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6654905991219113}], 
                 Offset[{0, 0}, {6.089807129355393, 0.4148029742500298}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.4148029742500298}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.4148029742500298}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.4148029742500298}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6654905991219113}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6654905991219113}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6654905991219113}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6654905991219113}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6654905991219113}], 
                 Offset[{0, 0}, {6.089807129355393, 0.4148029742500298}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.4148029742500298}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.4148029742500298}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.4148029742500298}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{167., 8.000000000000037}, {6.089807129355393, 
                  0.4148029742500298}], 
                 Offset[{167., -7.999999999999963}, {6.089807129355393, 
                  0.4148029742500298}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.4148029742500298}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.4148029742500298}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"f3968bf1-37c1-4e10-b001-684d306cb61d"],
                Text[{1, "3c", "bndouble_3x3_1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{88.5, 1.965094753586527*^-14}, \
{6.089807129355393, 0.4148029742500298}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.3861645175697457}], 
                 Offset[{0, 0}, {5.638887821063309, -0.3861645175697457}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3861645175697457}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3861645175697457}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.3861645175697457}], 
                 Offset[{0, 0}, {6.089807129355393, -3.406372899082024}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.406372899082024}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.406372899082024}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.406372899082024}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.3861645175697457}], 
                 Offset[{0, 0}, {5.638887821063309, -0.3861645175697457}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3861645175697457}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3861645175697457}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.3861645175697457}], 
                 Offset[{0, 0}, {6.089807129355393, -3.406372899082024}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.406372899082024}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.406372899082024}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.406372899082024}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{152., 8.000000000000034}, {
                  6.089807129355393, -3.406372899082024}], 
                 Offset[{152., -7.999999999999966}, {
                  6.089807129355393, -3.406372899082024}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.406372899082024}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.406372899082024}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"3c\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"bf11ef7f-9f89-4447-a098-813bf55bfc7a"],
                Text[{1, "3c", "bndouble_3x3_1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81., 1.7985612998927536*^-14}, \
{6.089807129355393, -3.406372899082024}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.3350564845730195`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.3350564845730195`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3350564845730195`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3350564845730195`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.3350564845730195`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.033614411092289}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.033614411092289}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.033614411092289}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.033614411092289}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.3350564845730195`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.3350564845730195`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3350564845730195`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3350564845730195`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.3350564845730195`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.033614411092289}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.033614411092289}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.033614411092289}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.033614411092289}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -5.033614411092289}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -5.033614411092289}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.033614411092289}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.033614411092289}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"78e0c8c8-6c6e-4c6d-8e8a-97f0b6979c15"],
                Text[{1, "4a", "conv1x1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -5.033614411092289}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.88887177817422}], 
                 Offset[{0, 0}, {5.638887821063309, -15.88887177817422}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.88887177817422}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.88887177817422}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.88887177817422}], 
                 Offset[{0, 0}, {6.089807129355393, -16.07821364803166}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.07821364803166}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.07821364803166}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.07821364803166}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.88887177817422}], 
                 Offset[{0, 0}, {5.638887821063309, -15.88887177817422}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.88887177817422}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.88887177817422}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.88887177817422}], 
                 Offset[{0, 0}, {6.089807129355393, -16.07821364803166}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.07821364803166}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.07821364803166}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.07821364803166}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -16.07821364803166}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -16.07821364803166}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.07821364803166}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.07821364803166}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"f8b373bb-79aa-4106-a5d6-08069e2fe81c"],
                Text[{1, "4a", "conv1x1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -16.07821364803166}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5369360969734286}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5369360969734286}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5369360969734286}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5369360969734286}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5369360969734286}], 
                 Offset[{0, 0}, {6.089807129355393, -0.30038663868285126`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.30038663868285126`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.30038663868285126`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.30038663868285126`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5369360969734286}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5369360969734286}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5369360969734286}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5369360969734286}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5369360969734286}], 
                 Offset[{0, 0}, {6.089807129355393, -0.30038663868285126`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.30038663868285126`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.30038663868285126`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.30038663868285126`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {
                  6.089807129355393, -0.30038663868285126`}], 
                 Offset[{121., -7.999999999999973}, {
                  6.089807129355393, -0.30038663868285126`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.30038663868285126`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.30038663868285126`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"b41c337b-871a-4958-b7ed-b22fedfefef5"],
                Text[{1, "4a", "bn1x1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, -0.30038663868285126}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.5656348752535862}], 
                 Offset[{0, 0}, {5.638887821063309, -0.5656348752535862}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.5656348752535862}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.5656348752535862}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.5656348752535862}], 
                 Offset[{0, 0}, {6.089807129355393, -3.809148130583148}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.809148130583148}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.809148130583148}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.809148130583148}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.5656348752535862}], 
                 Offset[{0, 0}, {5.638887821063309, -0.5656348752535862}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.5656348752535862}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.5656348752535862}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.5656348752535862}], 
                 Offset[{0, 0}, {6.089807129355393, -3.809148130583148}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.809148130583148}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.809148130583148}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.809148130583148}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {
                  6.089807129355393, -3.809148130583148}], 
                 Offset[{106., -7.999999999999977}, {
                  6.089807129355393, -3.809148130583148}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.809148130583148}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.809148130583148}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"de9a53d6-ebae-4407-8517-c80c4cb779ad"],
                Text[{1, "4a", "bn1x1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, -3.809148130583148}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.497919120824292}], 
                 Offset[{0, 0}, {5.638887821063309, -1.497919120824292}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.497919120824292}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.497919120824292}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.497919120824292}], 
                 Offset[{0, 0}, {6.089807129355393, -5.500468840502864}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.500468840502864}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.500468840502864}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.500468840502864}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.497919120824292}], 
                 Offset[{0, 0}, {5.638887821063309, -1.497919120824292}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.497919120824292}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.497919120824292}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.497919120824292}], 
                 Offset[{0, 0}, {6.089807129355393, -5.500468840502864}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.500468840502864}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.500468840502864}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.500468840502864}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{167., 8.000000000000037}, {
                  6.089807129355393, -5.500468840502864}], 
                 Offset[{167., -7.999999999999963}, {
                  6.089807129355393, -5.500468840502864}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.500468840502864}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.500468840502864}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"6a7f5c40-6225-4ac1-af62-48d471667d55"],
                Text[{1, "4a", "conv3x3_reduce", "Weights"}]],
               BoxRotation->0.], Offset[{88.5, 1.965094753586527*^-14}, 
              {6.089807129355393, -5.500468840502864}], {0, 0}]}], 
           GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.859287758080711`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.859287758080711`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.859287758080711`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.859287758080711`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.859287758080711`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.870894647165796`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.870894647165796`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.870894647165796`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.870894647165796`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.859287758080711`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.859287758080711`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.859287758080711`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.859287758080711`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.859287758080711`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.870894647165796`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.870894647165796`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.870894647165796`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.870894647165796`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{161., 8.000000000000036}, {
                  6.089807129355393, -15.870894647165796`}], 
                 Offset[{161., -7.9999999999999645`}, {
                  6.089807129355393, -15.870894647165796`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.870894647165796`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.870894647165796`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"194b9e1a-ec5d-40af-b731-141263c0399a"],
                Text[{1, "4a", "conv3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{85.5, 1.8984813721090177*^-14}, \
{6.089807129355393, -15.870894647165796}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4285919304858613}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4285919304858613}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4285919304858613}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4285919304858613}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4285919304858613}], 
                 Offset[{0, 0}, {6.089807129355393, -1.0246369900643448`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.0246369900643448`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.0246369900643448`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.0246369900643448`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4285919304858613}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4285919304858613}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4285919304858613}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4285919304858613}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4285919304858613}], 
                 Offset[{0, 0}, {6.089807129355393, -1.0246369900643448`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.0246369900643448`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.0246369900643448`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.0246369900643448`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{157., 8.000000000000034}, {
                  6.089807129355393, -1.0246369900643448`}], 
                 Offset[{157., -7.999999999999965}, {
                  6.089807129355393, -1.0246369900643448`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -1.0246369900643448`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.0246369900643448`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c0e80652-24b9-4e4e-8e41-6a955072cbd2"],
                Text[{1, "4a", "bn3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{83.5, 1.8540724511240114*^-14}, \
{6.089807129355393, -1.0246369900643448}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.35467074835621243`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.35467074835621243`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.35467074835621243`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.35467074835621243`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.35467074835621243`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.2508743406834184`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.2508743406834184`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.2508743406834184`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.2508743406834184`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.35467074835621243`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.35467074835621243`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.35467074835621243`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.35467074835621243`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.35467074835621243`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.2508743406834184`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.2508743406834184`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.2508743406834184`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.2508743406834184`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{142., 8.000000000000032}, {
                  6.089807129355393, -3.2508743406834184`}], 
                 Offset[{142., -7.999999999999969}, {
                  6.089807129355393, -3.2508743406834184`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -3.2508743406834184`}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -3.2508743406834184`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"d61ef3eb-ad06-4b20-bce5-2d776c834cb2"],
                Text[{1, "4a", "bn3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{76., 1.687538997430238*^-14}, \
{6.089807129355393, -3.2508743406834184}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.554725010827174}], 
                 Offset[{0, 0}, {5.638887821063309, -1.554725010827174}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.554725010827174}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.554725010827174}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.554725010827174}], 
                 Offset[{0, 0}, {6.089807129355393, -5.7268283989500235`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.7268283989500235`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.7268283989500235`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.7268283989500235`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.554725010827174}], 
                 Offset[{0, 0}, {5.638887821063309, -1.554725010827174}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.554725010827174}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.554725010827174}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.554725010827174}], 
                 Offset[{0, 0}, {6.089807129355393, -5.7268283989500235`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.7268283989500235`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.7268283989500235`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.7268283989500235`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -5.7268283989500235`}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -5.7268283989500235`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.7268283989500235`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.7268283989500235`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c04f2298-088d-4edc-a217-f5c6d8c7419d"],
                Text[{1, "4a", "conv3x3", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -5.7268283989500235}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.905412132311481`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.905412132311481`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.905412132311481`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.905412132311481`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.905412132311481`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.11960012973869}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.11960012973869}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.11960012973869}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.11960012973869}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.905412132311481`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.905412132311481`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.905412132311481`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.905412132311481`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.905412132311481`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.11960012973869}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.11960012973869}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.11960012973869}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.11960012973869}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -16.11960012973869}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -16.11960012973869}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.11960012973869}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.11960012973869}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"e7656d3f-2abf-441e-a816-d07f3134f424"],
                Text[{1, "4a", "conv3x3", "Biases"}]],
               BoxRotation->0.], Offset[{67.5, 1.4988010832439613*^-14}, 
              {6.089807129355393, -16.11960012973869}], {0, 0}]}], 
           GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5739344507494918}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5739344507494918}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5739344507494918}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5739344507494918}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5739344507494918}], 
                 Offset[{0, 0}, {6.089807129355393, 0.045834251472619485`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.045834251472619485`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.045834251472619485`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.045834251472619485`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5739344507494918}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5739344507494918}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5739344507494918}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5739344507494918}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5739344507494918}], 
                 Offset[{0, 0}, {6.089807129355393, 0.045834251472619485`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.045834251472619485`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.045834251472619485`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.045834251472619485`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {6.089807129355393, 
                  0.045834251472619485`}], 
                 Offset[{121., -7.999999999999973}, {6.089807129355393, 
                  0.045834251472619485`}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.045834251472619485`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.045834251472619485`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"4c9eda1f-5fe8-4696-9352-f4b6fc9251d2"],
                Text[{1, "4a", "bn3x3", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, 0.045834251472619485}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.24035898517044657`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.24035898517044657`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.24035898517044657`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.24035898517044657`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.24035898517044657`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.8512818929272177`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.8512818929272177`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.8512818929272177`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.8512818929272177`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.24035898517044657`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.24035898517044657`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.24035898517044657`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.24035898517044657`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.24035898517044657`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.8512818929272177`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.8512818929272177`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.8512818929272177`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.8512818929272177`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {
                  6.089807129355393, -2.8512818929272177`}], 
                 Offset[{106., -7.999999999999977}, {
                  6.089807129355393, -2.8512818929272177`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.8512818929272177`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.8512818929272177`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"e475228c-9e6d-426d-87de-5fc0919d092c"],
                Text[{1, "4a", "bn3x3", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, -2.8512818929272177}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4630283263233368`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4630283263233368`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4630283263233368`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4630283263233368`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4630283263233368`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.313479850794057}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.313479850794057}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.313479850794057}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.313479850794057}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4630283263233368`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4630283263233368`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4630283263233368`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4630283263233368`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4630283263233368`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.313479850794057}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.313479850794057}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.313479850794057}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.313479850794057}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{202., 8.000000000000044}, {
                  6.089807129355393, -5.313479850794057}], 
                 Offset[{202., -7.999999999999956}, {
                  6.089807129355393, -5.313479850794057}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.313479850794057}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.313479850794057}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"2e51404b-8768-4ea4-a15a-c5b80bae22d9"],
                Text[{1, "4a", "convdouble_3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{106., 2.353672812205332*^-14}, \
{6.089807129355393, -5.313479850794057}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.861468365198832`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.861468365198832`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.861468365198832`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.861468365198832`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.861468365198832`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.9126243352076}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.9126243352076}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.9126243352076}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.9126243352076}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.861468365198832`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.861468365198832`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.861468365198832`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.861468365198832`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.861468365198832`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.9126243352076}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.9126243352076}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.9126243352076}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.9126243352076}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{196., 8.000000000000044}, {
                  6.089807129355393, -15.9126243352076}], 
                 Offset[{196., -7.9999999999999565`}, {
                  6.089807129355393, -15.9126243352076}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -15.9126243352076}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.9126243352076}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"4c8b826e-a70e-4547-8dac-813ef31db823"],
                Text[{1, "4a", "convdouble_3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{103., 2.2870594307278225*^-14}, \
{6.089807129355393, -15.9126243352076}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.45257886003681863`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.45257886003681863`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.45257886003681863`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.45257886003681863`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.45257886003681863`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.9258898881511968}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.9258898881511968}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.9258898881511968}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.9258898881511968}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.45257886003681863`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.45257886003681863`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.45257886003681863`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.45257886003681863`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.45257886003681863`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.9258898881511968}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.9258898881511968}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.9258898881511968}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.9258898881511968}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{192., 8.000000000000043}, {
                  6.089807129355393, -0.9258898881511968}], 
                 Offset[{192., -7.999999999999957}, {
                  6.089807129355393, -0.9258898881511968}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -0.9258898881511968}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.9258898881511968}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"e668e963-f25b-4f99-9f0b-1e0635a28c2f"],
                Text[{1, "4a", "bndouble_3x3_reduce", "Gamma"}]],
               BoxRotation->0.], Offset[{101., 2.2426505097428162*^-14}, 
              {6.089807129355393, -0.9258898881511968}], {0, 0}]}], 
           GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.10653145467962118`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.10653145467962118`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.10653145467962118`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.10653145467962118`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.10653145467962118`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.424265427767757}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.424265427767757}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.424265427767757}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.424265427767757}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.10653145467962118`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.10653145467962118`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.10653145467962118`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.10653145467962118`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.10653145467962118`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.424265427767757}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.424265427767757}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.424265427767757}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.424265427767757}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{177., 8.000000000000039}, {
                  6.089807129355393, -2.424265427767757}], 
                 Offset[{177., -7.999999999999961}, {
                  6.089807129355393, -2.424265427767757}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -2.424265427767757}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.424265427767757}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"6bcc315e-a94e-43a9-b86e-c595bcd2c212"],
                Text[{1, "4a", "bndouble_3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{93.5, 2.0761170560490427*^-14}, \
{6.089807129355393, -2.424265427767757}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.5755828230235682`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.5755828230235682`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5755828230235682`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5755828230235682`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.5755828230235682`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.766047115967005}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.766047115967005}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.766047115967005}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.766047115967005}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.5755828230235682`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.5755828230235682`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5755828230235682`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5755828230235682`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.5755828230235682`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.766047115967005}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.766047115967005}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.766047115967005}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.766047115967005}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -5.766047115967005}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -5.766047115967005}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -5.766047115967005}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.766047115967005}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"a4be0d46-2fdc-43aa-b182-7721425ba3d5"],
                Text[{1, "4a", "convdouble_3x3_0", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -5.766047115967005}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.163225628596578`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.163225628596578`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.163225628596578`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.163225628596578`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.163225628596578`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.716546675380673`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.716546675380673`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.716546675380673`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.716546675380673`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.163225628596578`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.163225628596578`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.163225628596578`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.163225628596578`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.163225628596578`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.716546675380673`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.716546675380673`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.716546675380673`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.716546675380673`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -16.716546675380673`}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -16.716546675380673`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.716546675380673`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.716546675380673`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"214a09cf-00c7-42ac-8032-208ae2e9f3a4"],
                Text[{1, "4a", "convdouble_3x3_0", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -16.716546675380673}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5183181109596806}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5183181109596806}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5183181109596806}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5183181109596806}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5183181109596806}], 
                 Offset[{0, 0}, {6.089807129355393, -0.41830945521848373`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.41830945521848373`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.41830945521848373`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.41830945521848373`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5183181109596806}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5183181109596806}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5183181109596806}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5183181109596806}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5183181109596806}], 
                 Offset[{0, 0}, {6.089807129355393, -0.41830945521848373`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.41830945521848373`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.41830945521848373`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.41830945521848373`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {
                  6.089807129355393, -0.41830945521848373`}], 
                 Offset[{168., -7.999999999999963}, {
                  6.089807129355393, -0.41830945521848373`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.41830945521848373`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.41830945521848373`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"7ab08d0a-9f0b-447c-9f6b-eef01815de2a"],
                Text[{1, "4a", "bndouble_3x3_0", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, -0.41830945521848373}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.14706570364060356`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.14706570364060356`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.14706570364060356`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.14706570364060356`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.14706570364060356`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.566164076062013}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.566164076062013}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.566164076062013}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.566164076062013}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.14706570364060356`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.14706570364060356`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.14706570364060356`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.14706570364060356`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.14706570364060356`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.566164076062013}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.566164076062013}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.566164076062013}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.566164076062013}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -2.566164076062013}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -2.566164076062013}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.566164076062013}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.566164076062013}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"64da283b-a56e-4338-9d7b-9972ba8e13a0"],
                Text[{1, "4a", "bndouble_3x3_0", "Beta"}]],
               BoxRotation->0.], Offset[{81.5, 1.8096635301390052*^-14}, 
              {6.089807129355393, -2.566164076062013}], {0, 0}]}], 
           GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.6912993435436852`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.6912993435436852`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6912993435436852`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6912993435436852`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.6912993435436852`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.090472664110237}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.090472664110237}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.090472664110237}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.090472664110237}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.6912993435436852`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.6912993435436852`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6912993435436852`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6912993435436852`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.6912993435436852`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.090472664110237}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.090472664110237}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.090472664110237}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.090472664110237}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -6.090472664110237}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -6.090472664110237}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -6.090472664110237}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.090472664110237}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"274a15f7-57bb-4bd7-9b99-94d49526170f"],
                Text[{1, "4a", "convdouble_3x3_1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -6.090472664110237}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.79768134358261}], 
                 Offset[{0, 0}, {5.638887821063309, -15.79768134358261}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.79768134358261}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.79768134358261}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.79768134358261}], 
                 Offset[{0, 0}, {6.089807129355393, -15.700783651419911`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.700783651419911`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.700783651419911`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.700783651419911`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.79768134358261}], 
                 Offset[{0, 0}, {5.638887821063309, -15.79768134358261}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.79768134358261}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.79768134358261}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.79768134358261}], 
                 Offset[{0, 0}, {6.089807129355393, -15.700783651419911`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.700783651419911`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.700783651419911`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.700783651419911`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -15.700783651419911`}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -15.700783651419911`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.700783651419911`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.700783651419911`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"2ab116af-a5ec-4661-8590-5a2eca6dd649"],
                Text[{1, "4a", "convdouble_3x3_1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -15.700783651419911}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6324960041171516}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6324960041171516}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6324960041171516}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6324960041171516}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6324960041171516}], 
                 Offset[{0, 0}, {6.089807129355393, 0.30380902747767824`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.30380902747767824`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.30380902747767824`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.30380902747767824`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6324960041171516}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6324960041171516}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6324960041171516}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6324960041171516}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6324960041171516}], 
                 Offset[{0, 0}, {6.089807129355393, 0.30380902747767824`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.30380902747767824`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.30380902747767824`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.30380902747767824`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {6.089807129355393, 
                  0.30380902747767824`}], 
                 Offset[{168., -7.999999999999963}, {6.089807129355393, 
                  0.30380902747767824`}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.30380902747767824`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.30380902747767824`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"79e52379-56ef-44c6-bcf9-4a71483d0fe5"],
                Text[{1, "4a", "bndouble_3x3_1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, 0.30380902747767824}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.24484194338260876`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.24484194338260876`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.24484194338260876`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.24484194338260876`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.24484194338260876`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.9203371806797542`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.9203371806797542`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.9203371806797542`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.9203371806797542`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.24484194338260876`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.24484194338260876`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.24484194338260876`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.24484194338260876`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.24484194338260876`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.9203371806797542`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.9203371806797542`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.9203371806797542`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.9203371806797542`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -2.9203371806797542`}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -2.9203371806797542`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.9203371806797542`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.9203371806797542`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"e08260da-6142-4fb9-86ca-f20eff79a101"],
                Text[{1, "4a", "bndouble_3x3_1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -2.9203371806797542}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.5349766644853935`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.5349766644853935`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5349766644853935`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5349766644853935`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.5349766644853935`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.688099468526963}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.688099468526963}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.688099468526963}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.688099468526963}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.5349766644853935`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.5349766644853935`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5349766644853935`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5349766644853935`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.5349766644853935`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.688099468526963}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.688099468526963}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.688099468526963}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.688099468526963}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{132., 8.00000000000003}, {
                  6.089807129355393, -5.688099468526963}], 
                 Offset[{132., -7.999999999999971}, {
                  6.089807129355393, -5.688099468526963}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.688099468526963}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.688099468526963}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3eb3f2ad-278a-45fd-b524-63d43cb117ab"],
                Text[{1, "4a", "convproj", "Weights"}]],
               BoxRotation->0.], 
              Offset[{71., 1.5765166949677223*^-14}, \
{6.089807129355393, -5.688099468526963}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.697723985717305`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.697723985717305`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.697723985717305`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.697723985717305`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.697723985717305`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.388820693060962`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.388820693060962`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.388820693060962`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.388820693060962`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.697723985717305`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.697723985717305`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.697723985717305`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.697723985717305`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.697723985717305`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.388820693060962`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.388820693060962`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.388820693060962`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.388820693060962`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{126., 8.000000000000028}, {
                  6.089807129355393, -15.388820693060962`}], 
                 Offset[{126., -7.9999999999999725`}, {
                  6.089807129355393, -15.388820693060962`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.388820693060962`}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -15.388820693060962`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"46a1ead5-ad8f-49e5-a75f-42f19ad64c00"],
                Text[{1, "4a", "convproj", "Biases"}]],
               BoxRotation->0.], 
              Offset[{68., 1.509903313490213*^-14}, \
{6.089807129355393, -15.388820693060962}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5477082641340337}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5477082641340337}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5477082641340337}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5477082641340337}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5477082641340337}], 
                 Offset[{0, 0}, {6.089807129355393, -0.2417688169885977}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.2417688169885977}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.2417688169885977}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.2417688169885977}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5477082641340337}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5477082641340337}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5477082641340337}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5477082641340337}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5477082641340337}], 
                 Offset[{0, 0}, {6.089807129355393, -0.2417688169885977}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.2417688169885977}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.2417688169885977}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.2417688169885977}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{122., 8.000000000000027}, {
                  6.089807129355393, -0.2417688169885977}], 
                 Offset[{122., -7.999999999999973}, {
                  6.089807129355393, -0.2417688169885977}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.2417688169885977}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.2417688169885977}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c3eb4f3f-ee1c-47a4-a76c-bf034d2480bb"],
                Text[{1, "4a", "bnproj", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{66., 1.4654943925052066*^-14}, \
{6.089807129355393, -0.2417688169885977}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.02306696643421772}], 
                 Offset[{0, 0}, {5.638887821063309, 0.02306696643421772}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.02306696643421772}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.02306696643421772}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.02306696643421772}], 
                 Offset[{0, 0}, {6.089807129355393, -1.8922358907025632`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.8922358907025632`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.8922358907025632`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.8922358907025632`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.02306696643421772}], 
                 Offset[{0, 0}, {5.638887821063309, 0.02306696643421772}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.02306696643421772}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.02306696643421772}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.02306696643421772}], 
                 Offset[{0, 0}, {6.089807129355393, -1.8922358907025632`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.8922358907025632`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.8922358907025632`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.8922358907025632`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{107., 8.000000000000023}, {
                  6.089807129355393, -1.8922358907025632`}], 
                 Offset[{107., -7.999999999999976}, {
                  6.089807129355393, -1.8922358907025632`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -1.8922358907025632`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.8922358907025632`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4a\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"34abca19-1dcc-4c75-9b04-599b037a2d3c"],
                Text[{1, "4a", "bnproj", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58.5, 1.2989609388114332*^-14}, \
{6.089807129355393, -1.8922358907025632}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.2696139244670084`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.2696139244670084`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2696139244670084`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2696139244670084`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.2696139244670084`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.81614926732984}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.81614926732984}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.81614926732984}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.81614926732984}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.2696139244670084`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.2696139244670084`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2696139244670084`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2696139244670084`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.2696139244670084`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.81614926732984}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.81614926732984}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.81614926732984}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.81614926732984}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -4.81614926732984}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -4.81614926732984}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.81614926732984}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.81614926732984}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"0b35f62d-6ffa-44f6-a0ab-98136820ad28"],
                Text[{1, "4b", "conv1x1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -4.81614926732984}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.787666964177683`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.787666964177683`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.787666964177683`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.787666964177683`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.787666964177683`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.657429863189622`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.657429863189622`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.657429863189622`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.657429863189622`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.787666964177683`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.787666964177683`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.787666964177683`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.787666964177683`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.787666964177683`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.657429863189622`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.657429863189622`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.657429863189622`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.657429863189622`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -15.657429863189622`}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -15.657429863189622`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.657429863189622`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.657429863189622`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"887a5a64-c769-4f20-a468-d07eca8e9b65"],
                Text[{1, "4b", "conv1x1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -15.657429863189622}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5645384166604751}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5645384166604751}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5645384166604751}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5645384166604751}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5645384166604751}], 
                 Offset[{0, 0}, {6.089807129355393, -0.0418148978300612}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.0418148978300612}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.0418148978300612}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.0418148978300612}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5645384166604751}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5645384166604751}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5645384166604751}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5645384166604751}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5645384166604751}], 
                 Offset[{0, 0}, {6.089807129355393, -0.0418148978300612}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.0418148978300612}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.0418148978300612}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.0418148978300612}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {
                  6.089807129355393, -0.0418148978300612}], 
                 Offset[{121., -7.999999999999973}, {
                  6.089807129355393, -0.0418148978300612}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.0418148978300612}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.0418148978300612}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"1971db34-90e4-4d18-a840-6653974195da"],
                Text[{1, "4b", "bn1x1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, -0.0418148978300612}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.6461891323350403}], 
                 Offset[{0, 0}, {5.638887821063309, -0.6461891323350403}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.6461891323350403}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.6461891323350403}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.6461891323350403}], 
                 Offset[{0, 0}, {6.089807129355393, -3.8901465435486355`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.8901465435486355`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.8901465435486355`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.8901465435486355`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.6461891323350403}], 
                 Offset[{0, 0}, {5.638887821063309, -0.6461891323350403}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.6461891323350403}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.6461891323350403}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.6461891323350403}], 
                 Offset[{0, 0}, {6.089807129355393, -3.8901465435486355`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.8901465435486355`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.8901465435486355`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.8901465435486355`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {
                  6.089807129355393, -3.8901465435486355`}], 
                 Offset[{106., -7.999999999999977}, {
                  6.089807129355393, -3.8901465435486355`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.8901465435486355`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.8901465435486355`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"087dcf9d-953d-4628-9d39-67256d1f8aef"],
                Text[{1, "4b", "bn1x1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, -3.8901465435486355}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.5236584774279378`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.5236584774279378`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5236584774279378`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5236584774279378`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.5236584774279378`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.612233046097196}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.612233046097196}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.612233046097196}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.612233046097196}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.5236584774279378`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.5236584774279378`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5236584774279378`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5236584774279378`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.5236584774279378`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.612233046097196}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.612233046097196}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.612233046097196}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.612233046097196}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{167., 8.000000000000037}, {
                  6.089807129355393, -5.612233046097196}], 
                 Offset[{167., -7.999999999999963}, {
                  6.089807129355393, -5.612233046097196}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.612233046097196}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.612233046097196}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"8a732e41-cb68-40b6-b6f3-8da196d1643e"],
                Text[{1, "4b", "conv3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{88.5, 1.965094753586527*^-14}, \
{6.089807129355393, -5.612233046097196}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.926567571477246`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.926567571477246`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.926567571477246`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.926567571477246`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.926567571477246`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.202704124681198`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.202704124681198`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.202704124681198`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.202704124681198`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.926567571477246`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.926567571477246`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.926567571477246`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.926567571477246`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.926567571477246`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.202704124681198`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.202704124681198`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.202704124681198`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.202704124681198`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{161., 8.000000000000036}, {
                  6.089807129355393, -16.202704124681198`}], 
                 Offset[{161., -7.9999999999999645`}, {
                  6.089807129355393, -16.202704124681198`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.202704124681198`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.202704124681198`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"aa7b2663-6cb0-4f3f-aa86-4c380b6da817"],
                Text[{1, "4b", "conv3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{85.5, 1.8984813721090177*^-14}, \
{6.089807129355393, -16.202704124681198}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.44562388180082624`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.44562388180082624`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.44562388180082624`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.44562388180082624`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.44562388180082624`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.9579801802652098}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.9579801802652098}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.9579801802652098}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.9579801802652098}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.44562388180082624`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.44562388180082624`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.44562388180082624`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.44562388180082624`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.44562388180082624`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.9579801802652098}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.9579801802652098}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.9579801802652098}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.9579801802652098}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{157., 8.000000000000034}, {
                  6.089807129355393, -0.9579801802652098}], 
                 Offset[{157., -7.999999999999965}, {
                  6.089807129355393, -0.9579801802652098}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -0.9579801802652098}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.9579801802652098}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"10ea6456-475f-4e32-8233-7c3f92ee319c"],
                Text[{1, "4b", "bn3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{83.5, 1.8540724511240114*^-14}, \
{6.089807129355393, -0.9579801802652098}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.2300227930726267}], 
                 Offset[{0, 0}, {5.638887821063309, -0.2300227930726267}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2300227930726267}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2300227930726267}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.2300227930726267}], 
                 Offset[{0, 0}, {6.089807129355393, -2.7815291764838435`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.7815291764838435`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.7815291764838435`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.7815291764838435`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.2300227930726267}], 
                 Offset[{0, 0}, {5.638887821063309, -0.2300227930726267}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2300227930726267}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2300227930726267}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.2300227930726267}], 
                 Offset[{0, 0}, {6.089807129355393, -2.7815291764838435`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.7815291764838435`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.7815291764838435`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.7815291764838435`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{142., 8.000000000000032}, {
                  6.089807129355393, -2.7815291764838435`}], 
                 Offset[{142., -7.999999999999969}, {
                  6.089807129355393, -2.7815291764838435`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -2.7815291764838435`}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -2.7815291764838435`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"06946a98-1bb3-449d-8124-03e92c8c7c12"],
                Text[{1, "4b", "bn3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{76., 1.687538997430238*^-14}, \
{6.089807129355393, -2.7815291764838435}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.8162335865004}], 
                 Offset[{0, 0}, {5.638887821063309, -1.8162335865004}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8162335865004}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8162335865004}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.8162335865004}], 
                 Offset[{0, 0}, {6.089807129355393, -6.35949622704242}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.35949622704242}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.35949622704242}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.35949622704242}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.8162335865004}], 
                 Offset[{0, 0}, {5.638887821063309, -1.8162335865004}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8162335865004}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8162335865004}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.8162335865004}], 
                 Offset[{0, 0}, {6.089807129355393, -6.35949622704242}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.35949622704242}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.35949622704242}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.35949622704242}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -6.35949622704242}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -6.35949622704242}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -6.35949622704242}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.35949622704242}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"cf66b057-f308-49cb-bd9a-ce29e258ba2d"],
                Text[{1, "4b", "conv3x3", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -6.35949622704242}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.909870425157278`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.909870425157278`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.909870425157278`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.909870425157278`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.909870425157278`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.1610612315545}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.1610612315545}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.1610612315545}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.1610612315545}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.909870425157278`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.909870425157278`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.909870425157278`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.909870425157278`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.909870425157278`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.1610612315545}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.1610612315545}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.1610612315545}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.1610612315545}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -16.1610612315545}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -16.1610612315545}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.1610612315545}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.1610612315545}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"6a8ab97b-9625-4a1a-a2d2-ec0d9f1f13a6"],
                Text[{1, "4b", "conv3x3", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -16.1610612315545}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5094989078843235}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5094989078843235}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5094989078843235}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5094989078843235}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5094989078843235}], 
                 Offset[{0, 0}, {6.089807129355393, -0.5358904404084155}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.5358904404084155}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.5358904404084155}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.5358904404084155}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5094989078843235}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5094989078843235}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5094989078843235}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5094989078843235}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5094989078843235}], 
                 Offset[{0, 0}, {6.089807129355393, -0.5358904404084155}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.5358904404084155}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.5358904404084155}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.5358904404084155}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {
                  6.089807129355393, -0.5358904404084155}], 
                 Offset[{121., -7.999999999999973}, {
                  6.089807129355393, -0.5358904404084155}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.5358904404084155}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.5358904404084155}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"a7c4076b-a622-4080-90a4-f6895e62f486"],
                Text[{1, "4b", "bn3x3", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, -0.5358904404084155}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.25876080546685243`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.25876080546685243`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.25876080546685243`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.25876080546685243`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.25876080546685243`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.9552014448779844`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.9552014448779844`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.9552014448779844`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.9552014448779844`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.25876080546685243`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.25876080546685243`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.25876080546685243`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.25876080546685243`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.25876080546685243`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.9552014448779844`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.9552014448779844`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.9552014448779844`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.9552014448779844`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {
                  6.089807129355393, -2.9552014448779844`}], 
                 Offset[{106., -7.999999999999977}, {
                  6.089807129355393, -2.9552014448779844`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.9552014448779844`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.9552014448779844`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"e083c6b3-52d0-4d92-b18f-0d253896e9bc"],
                Text[{1, "4b", "bn3x3", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, -2.9552014448779844}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4080688507460257`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4080688507460257`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4080688507460257`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4080688507460257`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4080688507460257`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.1570435453858705`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.1570435453858705`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.1570435453858705`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.1570435453858705`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4080688507460257`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4080688507460257`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4080688507460257`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4080688507460257`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4080688507460257`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.1570435453858705`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.1570435453858705`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.1570435453858705`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.1570435453858705`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{202., 8.000000000000044}, {
                  6.089807129355393, -5.1570435453858705`}], 
                 Offset[{202., -7.999999999999956}, {
                  6.089807129355393, -5.1570435453858705`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.1570435453858705`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.1570435453858705`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"28624d54-4292-4318-8b4f-75d935ee18ba"],
                Text[{1, "4b", "convdouble_3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{106., 2.353672812205332*^-14}, \
{6.089807129355393, -5.1570435453858705}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.754985232320923`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.754985232320923`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.754985232320923`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.754985232320923`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.754985232320923`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.613646841595946`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.613646841595946`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.613646841595946`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.613646841595946`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.754985232320923`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.754985232320923`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.754985232320923`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.754985232320923`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.754985232320923`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.613646841595946`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.613646841595946`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.613646841595946`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.613646841595946`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{196., 8.000000000000044}, {
                  6.089807129355393, -15.613646841595946`}], 
                 Offset[{196., -7.9999999999999565`}, {
                  6.089807129355393, -15.613646841595946`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -15.613646841595946`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.613646841595946`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3c776016-ddc8-4499-9c2d-40b6c71a7bef"],
                Text[{1, "4b", "convdouble_3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{103., 2.2870594307278225*^-14}, \
{6.089807129355393, -15.613646841595946}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.48635007509405975`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.48635007509405975`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48635007509405975`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48635007509405975`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.48635007509405975`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.6542244548746392}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.6542244548746392}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.6542244548746392}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.6542244548746392}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.48635007509405975`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.48635007509405975`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48635007509405975`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48635007509405975`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.48635007509405975`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.6542244548746392}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.6542244548746392}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.6542244548746392}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.6542244548746392}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{192., 8.000000000000043}, {
                  6.089807129355393, -0.6542244548746392}], 
                 Offset[{192., -7.999999999999957}, {
                  6.089807129355393, -0.6542244548746392}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -0.6542244548746392}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.6542244548746392}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"7310efab-18fe-44ae-ad0e-5c353778fe34"],
                Text[{1, "4b", "bndouble_3x3_reduce", "Gamma"}]],
               BoxRotation->0.], Offset[{101., 2.2426505097428162*^-14}, 
              {6.089807129355393, -0.6542244548746392}], {0, 0}]}], 
           GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.236283445910954}], 
                 Offset[{0, 0}, {5.638887821063309, -0.236283445910954}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.236283445910954}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.236283445910954}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.236283445910954}], 
                 Offset[{0, 0}, {6.089807129355393, -2.816601039763447}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.816601039763447}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.816601039763447}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.816601039763447}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.236283445910954}], 
                 Offset[{0, 0}, {5.638887821063309, -0.236283445910954}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.236283445910954}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.236283445910954}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.236283445910954}], 
                 Offset[{0, 0}, {6.089807129355393, -2.816601039763447}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.816601039763447}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.816601039763447}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.816601039763447}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{177., 8.000000000000039}, {
                  6.089807129355393, -2.816601039763447}], 
                 Offset[{177., -7.999999999999961}, {
                  6.089807129355393, -2.816601039763447}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -2.816601039763447}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.816601039763447}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"6caaab6e-6291-4abc-b57d-6f3521aef548"],
                Text[{1, "4b", "bndouble_3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{93.5, 2.0761170560490427*^-14}, \
{6.089807129355393, -2.816601039763447}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.7067138996370126`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.7067138996370126`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7067138996370126`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7067138996370126`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.7067138996370126`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.219973030585715}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.219973030585715}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.219973030585715}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.219973030585715}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.7067138996370126`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.7067138996370126`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7067138996370126`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7067138996370126`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.7067138996370126`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.219973030585715}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.219973030585715}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.219973030585715}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.219973030585715}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -6.219973030585715}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -6.219973030585715}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -6.219973030585715}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.219973030585715}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"51e7d9a1-ade4-4877-a97e-283689e2a5fa"],
                Text[{1, "4b", "convdouble_3x3_0", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -6.219973030585715}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.960390513531603`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.960390513531603`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.960390513531603`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.960390513531603`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.960390513531603`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.286509775573197`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.286509775573197`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.286509775573197`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.286509775573197`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.960390513531603`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.960390513531603`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.960390513531603`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.960390513531603`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.960390513531603`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.286509775573197`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.286509775573197`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.286509775573197`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.286509775573197`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -16.286509775573197`}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -16.286509775573197`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.286509775573197`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.286509775573197`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"14040b6f-4cb0-473a-abac-710efe5e0ca2"],
                Text[{1, "4b", "convdouble_3x3_0", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -16.286509775573197}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4623332521741822}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4623332521741822}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4623332521741822}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4623332521741822}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4623332521741822}], 
                 Offset[{0, 0}, {6.089807129355393, -0.8327824553164916}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.8327824553164916}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8327824553164916}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8327824553164916}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4623332521741822}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4623332521741822}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4623332521741822}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4623332521741822}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4623332521741822}], 
                 Offset[{0, 0}, {6.089807129355393, -0.8327824553164916}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.8327824553164916}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8327824553164916}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8327824553164916}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {
                  6.089807129355393, -0.8327824553164916}], 
                 Offset[{168., -7.999999999999963}, {
                  6.089807129355393, -0.8327824553164916}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.8327824553164916}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.8327824553164916}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"d603e84a-6f18-4890-b4a4-6c220b6154eb"],
                Text[{1, "4b", "bndouble_3x3_0", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, -0.8327824553164916}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.08408001322235474}], 
                 Offset[{0, 0}, {5.638887821063309, -0.08408001322235474}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.08408001322235474}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.08408001322235474}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.08408001322235474}], 
                 Offset[{0, 0}, {6.089807129355393, -2.353093082948913}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.353093082948913}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.353093082948913}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.353093082948913}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.08408001322235474}], 
                 Offset[{0, 0}, {5.638887821063309, -0.08408001322235474}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.08408001322235474}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.08408001322235474}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.08408001322235474}], 
                 Offset[{0, 0}, {6.089807129355393, -2.353093082948913}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.353093082948913}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.353093082948913}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.353093082948913}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -2.353093082948913}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -2.353093082948913}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.353093082948913}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.353093082948913}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"5a761eb2-1dc7-4c35-84e7-da027840a21e"],
                Text[{1, "4b", "bndouble_3x3_0", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -2.353093082948913}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.8226310600079783`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.8226310600079783`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8226310600079783`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8226310600079783`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.8226310600079783`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.407643008303178}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.407643008303178}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.407643008303178}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.407643008303178}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.8226310600079783`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.8226310600079783`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8226310600079783`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8226310600079783`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.8226310600079783`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.407643008303178}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.407643008303178}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.407643008303178}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.407643008303178}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -6.407643008303178}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -6.407643008303178}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -6.407643008303178}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.407643008303178}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"32188f03-6f58-460e-9709-bda112d087ba"],
                Text[{1, "4b", "convdouble_3x3_1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -6.407643008303178}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.877749521751143`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.877749521751143`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.877749521751143`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.877749521751143`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.877749521751143`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.95419588921423}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.95419588921423}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.95419588921423}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.95419588921423}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.877749521751143`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.877749521751143`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.877749521751143`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.877749521751143`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.877749521751143`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.95419588921423}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.95419588921423}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.95419588921423}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.95419588921423}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -15.95419588921423}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -15.95419588921423}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.95419588921423}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.95419588921423}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"312950c3-3dc2-4d73-b201-67c725074ab8"],
                Text[{1, "4b", "convdouble_3x3_1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -15.95419588921423}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5748843270530024}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5748843270530024}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5748843270530024}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5748843270530024}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5748843270530024}], 
                 Offset[{0, 0}, {6.089807129355393, 0.07606589446332022}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.07606589446332022}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.07606589446332022}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.07606589446332022}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5748843270530024}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5748843270530024}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5748843270530024}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5748843270530024}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5748843270530024}], 
                 Offset[{0, 0}, {6.089807129355393, 0.07606589446332022}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.07606589446332022}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.07606589446332022}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.07606589446332022}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {6.089807129355393, 
                  0.07606589446332022}], 
                 Offset[{168., -7.999999999999963}, {6.089807129355393, 
                  0.07606589446332022}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.07606589446332022}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.07606589446332022}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"62bd4e81-0522-40e5-b4f6-d10e5baf088e"],
                Text[{1, "4b", "bndouble_3x3_1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, 0.07606589446332022}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.3919756861344149}], 
                 Offset[{0, 0}, {5.638887821063309, -0.3919756861344149}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3919756861344149}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3919756861344149}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.3919756861344149}], 
                 Offset[{0, 0}, {6.089807129355393, -3.446650240803257}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.446650240803257}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.446650240803257}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.446650240803257}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.3919756861344149}], 
                 Offset[{0, 0}, {5.638887821063309, -0.3919756861344149}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3919756861344149}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3919756861344149}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.3919756861344149}], 
                 Offset[{0, 0}, {6.089807129355393, -3.446650240803257}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.446650240803257}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.446650240803257}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.446650240803257}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -3.446650240803257}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -3.446650240803257}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.446650240803257}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.446650240803257}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"0a945f86-db4a-4db8-a408-6a8055f45fbf"],
                Text[{1, "4b", "bndouble_3x3_1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -3.446650240803257}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.5152755724460685`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.5152755724460685`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5152755724460685`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5152755724460685`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.5152755724460685`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.574816055486445}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.574816055486445}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.574816055486445}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.574816055486445}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.5152755724460685`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.5152755724460685`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5152755724460685`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5152755724460685`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.5152755724460685`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.574816055486445}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.574816055486445}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.574816055486445}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.574816055486445}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{132., 8.00000000000003}, {
                  6.089807129355393, -5.574816055486445}], 
                 Offset[{132., -7.999999999999971}, {
                  6.089807129355393, -5.574816055486445}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.574816055486445}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.574816055486445}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"e7f8c218-0f35-4ef4-9ab3-aa2b1ed2adc6"],
                Text[{1, "4b", "convproj", "Weights"}]],
               BoxRotation->0.], 
              Offset[{71., 1.5765166949677223*^-14}, \
{6.089807129355393, -5.574816055486445}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.341701708794995`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.341701708794995`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.341701708794995`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.341701708794995`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.341701708794995`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.761171858319678`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.761171858319678`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.761171858319678`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.761171858319678`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.341701708794995`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.341701708794995`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.341701708794995`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.341701708794995`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.341701708794995`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.761171858319678`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.761171858319678`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.761171858319678`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.761171858319678`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{126., 8.000000000000028}, {
                  6.089807129355393, -14.761171858319678`}], 
                 Offset[{126., -7.9999999999999725`}, {
                  6.089807129355393, -14.761171858319678`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -14.761171858319678`}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -14.761171858319678`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"bac35ffc-66ee-4ef9-8685-49c210db49ee"],
                Text[{1, "4b", "convproj", "Biases"}]],
               BoxRotation->0.], 
              Offset[{68., 1.509903313490213*^-14}, \
{6.089807129355393, -14.761171858319678}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5317645408160849}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5317645408160849}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5317645408160849}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5317645408160849}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5317645408160849}], 
                 Offset[{0, 0}, {6.089807129355393, -0.35910873238661667`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.35910873238661667`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.35910873238661667`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.35910873238661667`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5317645408160849}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5317645408160849}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5317645408160849}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5317645408160849}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5317645408160849}], 
                 Offset[{0, 0}, {6.089807129355393, -0.35910873238661667`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.35910873238661667`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.35910873238661667`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.35910873238661667`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{122., 8.000000000000027}, {
                  6.089807129355393, -0.35910873238661667`}], 
                 Offset[{122., -7.999999999999973}, {
                  6.089807129355393, -0.35910873238661667`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.35910873238661667`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.35910873238661667`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"751036bf-548e-4b65-848c-1f9ddc4ad57d"],
                Text[{1, "4b", "bnproj", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{66., 1.4654943925052066*^-14}, \
{6.089807129355393, -0.35910873238661667}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.07178593987241119}], 
                 Offset[{0, 0}, {5.638887821063309, -0.07178593987241119}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.07178593987241119}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.07178593987241119}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.07178593987241119}], 
                 Offset[{0, 0}, {6.089807129355393, -2.317657211032072}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.317657211032072}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.317657211032072}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.317657211032072}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.07178593987241119}], 
                 Offset[{0, 0}, {5.638887821063309, -0.07178593987241119}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.07178593987241119}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.07178593987241119}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.07178593987241119}], 
                 Offset[{0, 0}, {6.089807129355393, -2.317657211032072}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.317657211032072}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.317657211032072}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.317657211032072}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{107., 8.000000000000023}, {
                  6.089807129355393, -2.317657211032072}], 
                 Offset[{107., -7.999999999999976}, {
                  6.089807129355393, -2.317657211032072}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -2.317657211032072}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.317657211032072}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4b\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"40e52081-d2d3-49d6-a082-41aa3cb5c371"],
                Text[{1, "4b", "bnproj", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58.5, 1.2989609388114332*^-14}, \
{6.089807129355393, -2.317657211032072}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.2605443381884505`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.2605443381884505`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2605443381884505`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2605443381884505`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.2605443381884505`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.719097354282332}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.719097354282332}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.719097354282332}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.719097354282332}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.2605443381884505`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.2605443381884505`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2605443381884505`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2605443381884505`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.2605443381884505`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.719097354282332}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.719097354282332}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.719097354282332}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.719097354282332}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{130., 8.00000000000003}, {
                  6.089807129355393, -4.719097354282332}], 
                 Offset[{130., -7.999999999999972}, {
                  6.089807129355393, -4.719097354282332}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.719097354282332}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.719097354282332}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"55af550c-4b53-4a0d-bc19-1766239c5147"],
                Text[{1, "4c", "conv1x1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70., 1.554312234475219*^-14}, \
{6.089807129355393, -4.719097354282332}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.690775002414403`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.690775002414403`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.690775002414403`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.690775002414403`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.690775002414403`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.341974252649095`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.341974252649095`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.341974252649095`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.341974252649095`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.690775002414403`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.690775002414403`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.690775002414403`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.690775002414403`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.690775002414403`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.341974252649095`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.341974252649095`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.341974252649095`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.341974252649095`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{124., 8.000000000000027}, {
                  6.089807129355393, -15.341974252649095`}], 
                 Offset[{124., -7.9999999999999725`}, {
                  6.089807129355393, -15.341974252649095`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.341974252649095`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.341974252649095`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"901dfcc8-c100-4bc6-97c7-f06251be7d7a"],
                Text[{1, "4c", "conv1x1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67., 1.4876988529977098*^-14}, \
{6.089807129355393, -15.341974252649095}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.603037505073868}], 
                 Offset[{0, 0}, {5.638887821063309, 0.603037505073868}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.603037505073868}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.603037505073868}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.603037505073868}], 
                 Offset[{0, 0}, {6.089807129355393, 0.17064383777044162`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.17064383777044162`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.17064383777044162`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.17064383777044162`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.603037505073868}], 
                 Offset[{0, 0}, {5.638887821063309, 0.603037505073868}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.603037505073868}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.603037505073868}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.603037505073868}], 
                 Offset[{0, 0}, {6.089807129355393, 0.17064383777044162`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.17064383777044162`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.17064383777044162`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.17064383777044162`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{120., 8.000000000000027}, {6.089807129355393, 
                  0.17064383777044162`}], 
                 Offset[{120., -7.999999999999973}, {6.089807129355393, 
                  0.17064383777044162`}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.17064383777044162`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.17064383777044162`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"647cb415-190b-4fb8-a0d2-362ae9863d7f"],
                Text[{1, "4c", "bn1x1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65., 1.4432899320127035*^-14}, \
{6.089807129355393, 0.17064383777044162}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.7442970729127608}], 
                 Offset[{0, 0}, {5.638887821063309, -0.7442970729127608}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.7442970729127608}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.7442970729127608}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.7442970729127608}], 
                 Offset[{0, 0}, {6.089807129355393, -3.98807683516547}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.98807683516547}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.98807683516547}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.98807683516547}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.7442970729127608}], 
                 Offset[{0, 0}, {5.638887821063309, -0.7442970729127608}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.7442970729127608}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.7442970729127608}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.7442970729127608}], 
                 Offset[{0, 0}, {6.089807129355393, -3.98807683516547}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.98807683516547}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.98807683516547}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.98807683516547}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{105., 8.000000000000023}, {
                  6.089807129355393, -3.98807683516547}], 
                 Offset[{105., -7.999999999999977}, {
                  6.089807129355393, -3.98807683516547}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.98807683516547}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.98807683516547}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"11353544-0f67-4d30-bc9f-87a0106e1118"],
                Text[{1, "4c", "bn1x1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{57.5, 1.27675647831893*^-14}, \
{6.089807129355393, -3.98807683516547}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.526750482656364}], 
                 Offset[{0, 0}, {5.638887821063309, -1.526750482656364}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.526750482656364}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.526750482656364}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.526750482656364}], 
                 Offset[{0, 0}, {6.089807129355393, -5.6499365343145165`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.6499365343145165`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.6499365343145165`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.6499365343145165`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.526750482656364}], 
                 Offset[{0, 0}, {5.638887821063309, -1.526750482656364}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.526750482656364}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.526750482656364}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.526750482656364}], 
                 Offset[{0, 0}, {6.089807129355393, -5.6499365343145165`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.6499365343145165`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.6499365343145165`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.6499365343145165`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{166., 8.000000000000037}, {
                  6.089807129355393, -5.6499365343145165`}], 
                 Offset[{166., -7.999999999999963}, {
                  6.089807129355393, -5.6499365343145165`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.6499365343145165`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.6499365343145165`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"f0e50686-03ed-4120-8aeb-9faaedc91afa"],
                Text[{1, "4c", "conv3x3_reduce", "Weights"}]],
               BoxRotation->0.], Offset[{88., 1.9539925233402755*^-14}, 
              {6.089807129355393, -5.6499365343145165}], {0, 0}]}], 
           GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.947799288560851`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.947799288560851`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.947799288560851`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.947799288560851`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.947799288560851`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.244535483108983`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.244535483108983`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.244535483108983`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.244535483108983`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.947799288560851`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.947799288560851`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.947799288560851`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.947799288560851`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.947799288560851`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.244535483108983`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.244535483108983`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.244535483108983`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.244535483108983`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{160., 8.000000000000036}, {
                  6.089807129355393, -16.244535483108983`}], 
                 Offset[{160., -7.9999999999999645`}, {
                  6.089807129355393, -16.244535483108983`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.244535483108983`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.244535483108983`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"fbeddfb1-3119-4dab-bd99-aaa58b1693bd"],
                Text[{1, "4c", "conv3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{85., 1.887379141862766*^-14}, \
{6.089807129355393, -16.244535483108983}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5174930766217423}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5174930766217423}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5174930766217423}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5174930766217423}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5174930766217423}], 
                 Offset[{0, 0}, {6.089807129355393, -0.4477561207272568}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.4477561207272568}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.4477561207272568}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.4477561207272568}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5174930766217423}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5174930766217423}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5174930766217423}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5174930766217423}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5174930766217423}], 
                 Offset[{0, 0}, {6.089807129355393, -0.4477561207272568}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.4477561207272568}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.4477561207272568}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.4477561207272568}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{156., 8.000000000000034}, {
                  6.089807129355393, -0.4477561207272568}], 
                 Offset[{156., -7.999999999999965}, {
                  6.089807129355393, -0.4477561207272568}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -0.4477561207272568}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.4477561207272568}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"dc31ec30-a4ee-4a62-a9f9-fa386521565e"],
                Text[{1, "4c", "bn3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{83., 1.84297022087776*^-14}, \
{6.089807129355393, -0.4477561207272568}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.003565690852989448}], 
                 Offset[{0, 0}, {5.638887821063309, -0.003565690852989448}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.003565690852989448}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.003565690852989448}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.003565690852989448}], 
                 Offset[{0, 0}, {6.089807129355393, -2.0038030707502403`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.0038030707502403`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.0038030707502403`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.0038030707502403`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.003565690852989448}], 
                 Offset[{0, 0}, {5.638887821063309, -0.003565690852989448}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.003565690852989448}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.003565690852989448}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.003565690852989448}], 
                 Offset[{0, 0}, {6.089807129355393, -2.0038030707502403`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.0038030707502403`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.0038030707502403`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.0038030707502403`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{141., 8.00000000000003}, {
                  6.089807129355393, -2.0038030707502403`}], 
                 Offset[{141., -7.999999999999969}, {
                  6.089807129355393, -2.0038030707502403`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -2.0038030707502403`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.0038030707502403`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3c2a6924-891e-4e44-9144-75c7188494f4"],
                Text[{1, "4c", "bn3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{75.5, 1.6764367671839864*^-14}, \
{6.089807129355393, -2.0038030707502403}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.9363884610778959`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.9363884610778959`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9363884610778959`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9363884610778959`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.9363884610778959`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.613532397711544}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.613532397711544}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.613532397711544}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.613532397711544}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.9363884610778959`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.9363884610778959`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9363884610778959`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9363884610778959`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.9363884610778959`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.613532397711544}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.613532397711544}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.613532397711544}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.613532397711544}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{130., 8.00000000000003}, {
                  6.089807129355393, -6.613532397711544}], 
                 Offset[{130., -7.999999999999972}, {
                  6.089807129355393, -6.613532397711544}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -6.613532397711544}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.613532397711544}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"5bb5ec66-ca37-4c80-91c6-e172e50985be"],
                Text[{1, "4c", "conv3x3", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70., 1.554312234475219*^-14}, \
{6.089807129355393, -6.613532397711544}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.011518380227677`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.011518380227677`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.011518380227677`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.011518380227677`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.011518380227677`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.371020392504512`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.371020392504512`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.371020392504512`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.371020392504512`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.011518380227677`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.011518380227677`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.011518380227677`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.011518380227677`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.011518380227677`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.371020392504512`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.371020392504512`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.371020392504512`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.371020392504512`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{124., 8.000000000000027}, {
                  6.089807129355393, -16.371020392504512`}], 
                 Offset[{124., -7.9999999999999725`}, {
                  6.089807129355393, -16.371020392504512`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.371020392504512`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.371020392504512`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"06e264de-7c98-4dfb-a86f-292d6ac90b4e"],
                Text[{1, "4c", "conv3x3", "Biases"}]],
               BoxRotation->0.], Offset[{67., 1.4876988529977098*^-14}, 
              {6.089807129355393, -16.371020392504512}], {0, 0}]}], 
           GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.48398180986761075`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.48398180986761075`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48398180986761075`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48398180986761075`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.48398180986761075`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.741754382062063}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.741754382062063}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.741754382062063}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.741754382062063}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.48398180986761075`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.48398180986761075`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48398180986761075`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48398180986761075`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.48398180986761075`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.741754382062063}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.741754382062063}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.741754382062063}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.741754382062063}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{120., 8.000000000000027}, {
                  6.089807129355393, -0.741754382062063}], 
                 Offset[{120., -7.999999999999973}, {
                  6.089807129355393, -0.741754382062063}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.741754382062063}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.741754382062063}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"f7a29799-43e2-4541-9e35-bd450c12bc48"],
                Text[{1, "4c", "bn3x3", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65., 1.4432899320127035*^-14}, \
{6.089807129355393, -0.741754382062063}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.2589488438641955}], 
                 Offset[{0, 0}, {5.638887821063309, -0.2589488438641955}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2589488438641955}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2589488438641955}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.2589488438641955}], 
                 Offset[{0, 0}, {6.089807129355393, -2.990233064133329}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.990233064133329}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.990233064133329}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.990233064133329}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.2589488438641955}], 
                 Offset[{0, 0}, {5.638887821063309, -0.2589488438641955}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2589488438641955}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2589488438641955}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.2589488438641955}], 
                 Offset[{0, 0}, {6.089807129355393, -2.990233064133329}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.990233064133329}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.990233064133329}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.990233064133329}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{105., 8.000000000000023}, {
                  6.089807129355393, -2.990233064133329}], 
                 Offset[{105., -7.999999999999977}, {
                  6.089807129355393, -2.990233064133329}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.990233064133329}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.990233064133329}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"1a9120a7-26e2-4f27-9e2b-f427ade671d6"],
                Text[{1, "4c", "bn3x3", "Beta"}]],
               BoxRotation->0.], 
              Offset[{57.5, 1.27675647831893*^-14}, \
{6.089807129355393, -2.990233064133329}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4599032091200776`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4599032091200776`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4599032091200776`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4599032091200776`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4599032091200776`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.275208338122147}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.275208338122147}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.275208338122147}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.275208338122147}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4599032091200776`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4599032091200776`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4599032091200776`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4599032091200776`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4599032091200776`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.275208338122147}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.275208338122147}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.275208338122147}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.275208338122147}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{201., 8.000000000000044}, {
                  6.089807129355393, -5.275208338122147}], 
                 Offset[{201., -7.999999999999956}, {
                  6.089807129355393, -5.275208338122147}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.275208338122147}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.275208338122147}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"1019feb6-42c9-4111-b71b-d13ff2779df7"],
                Text[{1, "4c", "convdouble_3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{105.5, 2.3425705819590803*^-14}, \
{6.089807129355393, -5.275208338122147}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.8588950879056}], 
                 Offset[{0, 0}, {5.638887821063309, -15.8588950879056}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.8588950879056}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.8588950879056}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.8588950879056}], 
                 Offset[{0, 0}, {6.089807129355393, -15.828904763330474`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.828904763330474`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.828904763330474`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.828904763330474`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.8588950879056}], 
                 Offset[{0, 0}, {5.638887821063309, -15.8588950879056}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.8588950879056}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.8588950879056}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.8588950879056}], 
                 Offset[{0, 0}, {6.089807129355393, -15.828904763330474`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.828904763330474`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.828904763330474`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.828904763330474`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{195., 8.000000000000044}, {
                  6.089807129355393, -15.828904763330474`}], 
                 Offset[{195., -7.9999999999999565`}, {
                  6.089807129355393, -15.828904763330474`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -15.828904763330474`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.828904763330474`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"0f1908b0-6b4d-4dcd-a754-4d59124d07a1"],
                Text[{1, "4c", "convdouble_3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{102.5, 2.275957200481571*^-14}, \
{6.089807129355393, -15.828904763330474}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5110991172845107}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5110991172845107}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5110991172845107}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5110991172845107}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5110991172845107}], 
                 Offset[{0, 0}, {6.089807129355393, -0.47721666553320585`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.47721666553320585`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.47721666553320585`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.47721666553320585`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5110991172845107}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5110991172845107}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5110991172845107}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5110991172845107}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5110991172845107}], 
                 Offset[{0, 0}, {6.089807129355393, -0.47721666553320585`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.47721666553320585`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.47721666553320585`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.47721666553320585`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{191., 8.000000000000043}, {
                  6.089807129355393, -0.47721666553320585`}], 
                 Offset[{191., -7.999999999999957}, {
                  6.089807129355393, -0.47721666553320585`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -0.47721666553320585`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.47721666553320585`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"9d4e5940-585d-4871-a4b8-2589b86e77b3"],
                Text[{1, "4c", "bndouble_3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{100.5, 2.2315482794965646*^-14}, \
{6.089807129355393, -0.47721666553320585}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.04794189033610266}], 
                 Offset[{0, 0}, {5.638887821063309, -0.04794189033610266}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.04794189033610266}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.04794189033610266}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.04794189033610266}], 
                 Offset[{0, 0}, {6.089807129355393, -2.2131623128906632`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.2131623128906632`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.2131623128906632`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.2131623128906632`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.04794189033610266}], 
                 Offset[{0, 0}, {5.638887821063309, -0.04794189033610266}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.04794189033610266}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.04794189033610266}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.04794189033610266}], 
                 Offset[{0, 0}, {6.089807129355393, -2.2131623128906632`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.2131623128906632`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.2131623128906632`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.2131623128906632`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{176., 8.000000000000039}, {
                  6.089807129355393, -2.2131623128906632`}], 
                 Offset[{176., -7.999999999999961}, {
                  6.089807129355393, -2.2131623128906632`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -2.2131623128906632`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.2131623128906632`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"0072b530-5e76-40bc-9639-37f790c1e1ac"],
                Text[{1, "4c", "bndouble_3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{93., 2.0650148258027912*^-14}, \
{6.089807129355393, -2.2131623128906632}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.7949602742548258`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.7949602742548258`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7949602742548258`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7949602742548258`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.7949602742548258`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.312289594867179}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.312289594867179}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.312289594867179}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.312289594867179}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.7949602742548258`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.7949602742548258`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7949602742548258`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7949602742548258`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.7949602742548258`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.312289594867179}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.312289594867179}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.312289594867179}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.312289594867179}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{177., 8.000000000000039}, {
                  6.089807129355393, -6.312289594867179}], 
                 Offset[{177., -7.999999999999961}, {
                  6.089807129355393, -6.312289594867179}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -6.312289594867179}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.312289594867179}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"53043bbf-d195-499f-90db-bbcfb47d57b1"],
                Text[{1, "4c", "convdouble_3x3_0", "Weights"}]],
               BoxRotation->0.], 
              Offset[{93.5, 2.0761170560490427*^-14}, \
{6.089807129355393, -6.312289594867179}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.88207567685167}], 
                 Offset[{0, 0}, {5.638887821063309, -15.88207567685167}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.88207567685167}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.88207567685167}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.88207567685167}], 
                 Offset[{0, 0}, {6.089807129355393, -15.995599397115843`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.995599397115843`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.995599397115843`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.995599397115843`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.88207567685167}], 
                 Offset[{0, 0}, {5.638887821063309, -15.88207567685167}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.88207567685167}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.88207567685167}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.88207567685167}], 
                 Offset[{0, 0}, {6.089807129355393, -15.995599397115843`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.995599397115843`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.995599397115843`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.995599397115843`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{171., 8.000000000000037}, {
                  6.089807129355393, -15.995599397115843`}], 
                 Offset[{171., -7.999999999999962}, {
                  6.089807129355393, -15.995599397115843`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.995599397115843`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.995599397115843`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"fab0d719-bab2-4f7f-810d-b8487e2b52af"],
                Text[{1, "4c", "convdouble_3x3_0", "Biases"}]],
               BoxRotation->0.], 
              Offset[{90.5, 2.0095036745715333*^-14}, \
{6.089807129355393, -15.995599397115843}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5106126944239617}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5106126944239617}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5106126944239617}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5106126944239617}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5106126944239617}], 
                 Offset[{0, 0}, {6.089807129355393, -0.5065078401566958}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.5065078401566958}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.5065078401566958}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.5065078401566958}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5106126944239617}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5106126944239617}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5106126944239617}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5106126944239617}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5106126944239617}], 
                 Offset[{0, 0}, {6.089807129355393, -0.5065078401566958}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.5065078401566958}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.5065078401566958}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.5065078401566958}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{167., 8.000000000000037}, {
                  6.089807129355393, -0.5065078401566958}], 
                 Offset[{167., -7.999999999999963}, {
                  6.089807129355393, -0.5065078401566958}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.5065078401566958}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.5065078401566958}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"23faf5cf-770f-4c88-ba55-8d9b1dd97056"],
                Text[{1, "4c", "bndouble_3x3_0", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{88.5, 1.965094753586527*^-14}, \
{6.089807129355393, -0.5065078401566958}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.12297267539775388`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.12297267539775388`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.12297267539775388`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.12297267539775388`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.12297267539775388`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.72176811818554}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.72176811818554}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.72176811818554}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.72176811818554}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.12297267539775388`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.12297267539775388`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.12297267539775388`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.12297267539775388`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.12297267539775388`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.72176811818554}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.72176811818554}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.72176811818554}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.72176811818554}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{152., 8.000000000000034}, {
                  6.089807129355393, -1.72176811818554}], 
                 Offset[{152., -7.999999999999966}, {
                  6.089807129355393, -1.72176811818554}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -1.72176811818554}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.72176811818554}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"520cc073-5a7e-4af4-881a-fb19c253dfe8"],
                Text[{1, "4c", "bndouble_3x3_0", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81., 1.7985612998927536*^-14}, \
{6.089807129355393, -1.72176811818554}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.8936345221423847`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.8936345221423847`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8936345221423847`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8936345221423847`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.8936345221423847`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.508100188621596}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.508100188621596}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.508100188621596}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.508100188621596}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.8936345221423847`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.8936345221423847`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8936345221423847`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.8936345221423847`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.8936345221423847`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.508100188621596}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.508100188621596}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.508100188621596}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.508100188621596}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{177., 8.000000000000039}, {
                  6.089807129355393, -6.508100188621596}], 
                 Offset[{177., -7.999999999999961}, {
                  6.089807129355393, -6.508100188621596}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -6.508100188621596}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.508100188621596}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"dce75b9b-b095-4d13-b084-2590f67772d6"],
                Text[{1, "4c", "convdouble_3x3_1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{93.5, 2.0761170560490427*^-14}, \
{6.089807129355393, -6.508100188621596}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.8397717379718}], 
                 Offset[{0, 0}, {5.638887821063309, -15.8397717379718}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.8397717379718}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.8397717379718}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.8397717379718}], 
                 Offset[{0, 0}, {6.089807129355393, -15.78653428790086}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.78653428790086}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.78653428790086}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.78653428790086}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.8397717379718}], 
                 Offset[{0, 0}, {5.638887821063309, -15.8397717379718}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.8397717379718}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.8397717379718}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.8397717379718}], 
                 Offset[{0, 0}, {6.089807129355393, -15.78653428790086}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.78653428790086}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.78653428790086}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.78653428790086}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{171., 8.000000000000037}, {
                  6.089807129355393, -15.78653428790086}], 
                 Offset[{171., -7.999999999999962}, {
                  6.089807129355393, -15.78653428790086}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.78653428790086}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.78653428790086}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"4eca8b59-8442-4657-974d-fceb752da47e"],
                Text[{1, "4c", "convdouble_3x3_1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{90.5, 2.0095036745715333*^-14}, \
{6.089807129355393, -15.78653428790086}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6053821826026694}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6053821826026694}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6053821826026694}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6053821826026694}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6053821826026694}], 
                 Offset[{0, 0}, {6.089807129355393, 0.2682522317273061}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.2682522317273061}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.2682522317273061}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.2682522317273061}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6053821826026694}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6053821826026694}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6053821826026694}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6053821826026694}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6053821826026694}], 
                 Offset[{0, 0}, {6.089807129355393, 0.2682522317273061}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.2682522317273061}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.2682522317273061}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.2682522317273061}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{167., 8.000000000000037}, {6.089807129355393, 
                  0.2682522317273061}], 
                 Offset[{167., -7.999999999999963}, {6.089807129355393, 
                  0.2682522317273061}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.2682522317273061}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.2682522317273061}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"daeb1303-3da8-414f-8501-273f9771034c"],
                Text[{1, "4c", "bndouble_3x3_1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{88.5, 1.965094753586527*^-14}, \
{6.089807129355393, 0.2682522317273061}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.15440688575272032`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.15440688575272032`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.15440688575272032`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.15440688575272032`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.15440688575272032`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.601453005705249}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.601453005705249}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.601453005705249}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.601453005705249}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.15440688575272032`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.15440688575272032`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.15440688575272032`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.15440688575272032`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.15440688575272032`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.601453005705249}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.601453005705249}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.601453005705249}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.601453005705249}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{152., 8.000000000000034}, {
                  6.089807129355393, -2.601453005705249}], 
                 Offset[{152., -7.999999999999966}, {
                  6.089807129355393, -2.601453005705249}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.601453005705249}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.601453005705249}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"72953b54-ea8e-4ba1-b520-27e0a54bbad0"],
                Text[{1, "4c", "bndouble_3x3_1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81., 1.7985612998927536*^-14}, \
{6.089807129355393, -2.601453005705249}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4946504922126456`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4946504922126456`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4946504922126456`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4946504922126456`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4946504922126456`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.463412783440066}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.463412783440066}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.463412783440066}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.463412783440066}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4946504922126456`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4946504922126456`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4946504922126456`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4946504922126456`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4946504922126456`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.463412783440066}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.463412783440066}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.463412783440066}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.463412783440066}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -5.463412783440066}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -5.463412783440066}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.463412783440066}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.463412783440066}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"caedf1e2-7e89-44d7-9f3c-264ba44fc572"],
                Text[{1, "4c", "convproj", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -5.463412783440066}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.52567264793333}], 
                 Offset[{0, 0}, {5.638887821063309, -15.52567264793333}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.52567264793333}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.52567264793333}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.52567264793333}], 
                 Offset[{0, 0}, {6.089807129355393, -15.093146144483827`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.093146144483827`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.093146144483827`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.093146144483827`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.52567264793333}], 
                 Offset[{0, 0}, {5.638887821063309, -15.52567264793333}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.52567264793333}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.52567264793333}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.52567264793333}], 
                 Offset[{0, 0}, {6.089807129355393, -15.093146144483827`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.093146144483827`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.093146144483827`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.093146144483827`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -15.093146144483827`}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -15.093146144483827`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.093146144483827`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.093146144483827`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"1fd78c66-1937-4ed3-a454-1eddc99ec269"],
                Text[{1, "4c", "convproj", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -15.093146144483827}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4579503657019614}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4579503657019614}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4579503657019614}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4579503657019614}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4579503657019614}], 
                 Offset[{0, 0}, {6.089807129355393, -0.8944317751329246}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.8944317751329246}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8944317751329246}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8944317751329246}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4579503657019614}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4579503657019614}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4579503657019614}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4579503657019614}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4579503657019614}], 
                 Offset[{0, 0}, {6.089807129355393, -0.8944317751329246}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.8944317751329246}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8944317751329246}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8944317751329246}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {
                  6.089807129355393, -0.8944317751329246}], 
                 Offset[{121., -7.999999999999973}, {
                  6.089807129355393, -0.8944317751329246}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.8944317751329246}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.8944317751329246}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"72003751-79dd-4480-9823-ecf277b27ccd"],
                Text[{1, "4c", "bnproj", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, -0.8944317751329246}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.3819129726443654}], 
                 Offset[{0, 0}, {5.638887821063309, -0.3819129726443654}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3819129726443654}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3819129726443654}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.3819129726443654}], 
                 Offset[{0, 0}, {6.089807129355393, -3.367124101257958}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.367124101257958}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.367124101257958}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.367124101257958}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.3819129726443654}], 
                 Offset[{0, 0}, {5.638887821063309, -0.3819129726443654}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3819129726443654}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.3819129726443654}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.3819129726443654}], 
                 Offset[{0, 0}, {6.089807129355393, -3.367124101257958}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.367124101257958}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.367124101257958}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.367124101257958}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {
                  6.089807129355393, -3.367124101257958}], 
                 Offset[{106., -7.999999999999977}, {
                  6.089807129355393, -3.367124101257958}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.367124101257958}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.367124101257958}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4c\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"069901c1-c43c-4944-a194-c1e99279a514"],
                Text[{1, "4c", "bnproj", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, -3.367124101257958}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.2667388862581774`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.2667388862581774`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2667388862581774`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2667388862581774`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.2667388862581774`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.768804638493726}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.768804638493726}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.768804638493726}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.768804638493726}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.2667388862581774`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.2667388862581774`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2667388862581774`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.2667388862581774`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.2667388862581774`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.768804638493726}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.768804638493726}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.768804638493726}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.768804638493726}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -4.768804638493726}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -4.768804638493726}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.768804638493726}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.768804638493726}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"4c0c51c9-ede0-4fab-a954-cd121666aed1"],
                Text[{1, "4d", "conv1x1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -4.768804638493726}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.601015324399015`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.601015324399015`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.601015324399015`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.601015324399015`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.601015324399015`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.145109776068745`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.145109776068745`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.145109776068745`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.145109776068745`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.601015324399015`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.601015324399015`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.601015324399015`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.601015324399015`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.601015324399015`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.145109776068745`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.145109776068745`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.145109776068745`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.145109776068745`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -15.145109776068745`}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -15.145109776068745`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.145109776068745`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.145109776068745`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"02232d65-a5b1-4c43-a257-e1f6b1685e25"],
                Text[{1, "4d", "conv1x1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -15.145109776068745}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4900599895682246}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4900599895682246}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4900599895682246}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4900599895682246}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4900599895682246}], 
                 Offset[{0, 0}, {6.089807129355393, -0.595567301661259}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.595567301661259}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.595567301661259}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.595567301661259}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4900599895682246}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4900599895682246}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4900599895682246}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4900599895682246}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4900599895682246}], 
                 Offset[{0, 0}, {6.089807129355393, -0.595567301661259}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.595567301661259}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.595567301661259}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.595567301661259}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {
                  6.089807129355393, -0.595567301661259}], 
                 Offset[{121., -7.999999999999973}, {
                  6.089807129355393, -0.595567301661259}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.595567301661259}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.595567301661259}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"a071cdbc-b38a-4238-a776-44a4d04b2b4d"],
                Text[{1, "4d", "bn1x1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, -0.595567301661259}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.37283229876057195`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.37283229876057195`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.37283229876057195`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.37283229876057195`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.37283229876057195`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.2897236821806923`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.2897236821806923`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.2897236821806923`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.2897236821806923`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.37283229876057195`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.37283229876057195`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.37283229876057195`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.37283229876057195`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.37283229876057195`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.2897236821806923`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.2897236821806923`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.2897236821806923`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.2897236821806923`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {
                  6.089807129355393, -3.2897236821806923`}], 
                 Offset[{106., -7.999999999999977}, {
                  6.089807129355393, -3.2897236821806923`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.2897236821806923`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.2897236821806923`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"646c1166-5c5c-4a8e-a23c-b237df683313"],
                Text[{1, "4d", "bn1x1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, -3.2897236821806923}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.402591234191639}], 
                 Offset[{0, 0}, {5.638887821063309, -1.402591234191639}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.402591234191639}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.402591234191639}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.402591234191639}], 
                 Offset[{0, 0}, {6.089807129355393, -5.116715979243518}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.116715979243518}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.116715979243518}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.116715979243518}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.402591234191639}], 
                 Offset[{0, 0}, {5.638887821063309, -1.402591234191639}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.402591234191639}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.402591234191639}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.402591234191639}], 
                 Offset[{0, 0}, {6.089807129355393, -5.116715979243518}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.116715979243518}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.116715979243518}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.116715979243518}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{167., 8.000000000000037}, {
                  6.089807129355393, -5.116715979243518}], 
                 Offset[{167., -7.999999999999963}, {
                  6.089807129355393, -5.116715979243518}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.116715979243518}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.116715979243518}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"97b55f9d-7de5-48f8-9424-bdd912f15176"],
                Text[{1, "4d", "conv3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{88.5, 1.965094753586527*^-14}, \
{6.089807129355393, -5.116715979243518}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.722824982799732`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.722824982799732`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.722824982799732`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.722824982799732`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.722824982799732`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.480311545708291`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.480311545708291`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.480311545708291`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.480311545708291`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.722824982799732`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.722824982799732`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.722824982799732`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.722824982799732`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.722824982799732`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.480311545708291`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.480311545708291`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.480311545708291`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.480311545708291`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{161., 8.000000000000036}, {
                  6.089807129355393, -15.480311545708291`}], 
                 Offset[{161., -7.9999999999999645`}, {
                  6.089807129355393, -15.480311545708291`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.480311545708291`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.480311545708291`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"51acc50a-ccd5-4048-a6d4-f0d8ec77aad2"],
                Text[{1, "4d", "conv3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{85.5, 1.8984813721090177*^-14}, \
{6.089807129355393, -15.480311545708291}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6804953997967983}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6804953997967983}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6804953997967983}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6804953997967983}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6804953997967983}], 
                 Offset[{0, 0}, {6.089807129355393, 0.45380878656779167`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.45380878656779167`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.45380878656779167`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.45380878656779167`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6804953997967983}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6804953997967983}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6804953997967983}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6804953997967983}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6804953997967983}], 
                 Offset[{0, 0}, {6.089807129355393, 0.45380878656779167`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.45380878656779167`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.45380878656779167`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.45380878656779167`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{157., 8.000000000000034}, {6.089807129355393, 
                  0.45380878656779167`}], 
                 Offset[{157., -7.999999999999965}, {6.089807129355393, 
                  0.45380878656779167`}], 
                 Offset[{10., -7.999999999999997}, {6.089807129355393, 
                  0.45380878656779167`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.45380878656779167`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"7ea38ba0-1446-42fb-a314-9509361a6927"],
                Text[{1, "4d", "bn3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{83.5, 1.8540724511240114*^-14}, \
{6.089807129355393, 0.45380878656779167}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.008024108216397208}], 
                 Offset[{0, 0}, {5.638887821063309, 0.008024108216397208}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.008024108216397208}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.008024108216397208}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.008024108216397208}], 
                 Offset[{0, 0}, {6.089807129355393, -1.930888632997129}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.930888632997129}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.930888632997129}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.930888632997129}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.008024108216397208}], 
                 Offset[{0, 0}, {5.638887821063309, 0.008024108216397208}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.008024108216397208}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.008024108216397208}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.008024108216397208}], 
                 Offset[{0, 0}, {6.089807129355393, -1.930888632997129}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.930888632997129}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.930888632997129}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.930888632997129}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{142., 8.000000000000032}, {
                  6.089807129355393, -1.930888632997129}], 
                 Offset[{142., -7.999999999999969}, {
                  6.089807129355393, -1.930888632997129}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -1.930888632997129}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -1.930888632997129}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"ffe09929-53c4-4a31-a929-93c02b8765e7"],
                Text[{1, "4d", "bn3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{76., 1.687538997430238*^-14}, \
{6.089807129355393, -1.930888632997129}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.7943877162959743`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.7943877162959743`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7943877162959743`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7943877162959743`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.7943877162959743`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.265959609402333}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.265959609402333}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.265959609402333}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.265959609402333}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.7943877162959743`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.7943877162959743`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7943877162959743`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7943877162959743`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.7943877162959743`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.265959609402333}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.265959609402333}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.265959609402333}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.265959609402333}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -6.265959609402333}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -6.265959609402333}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -6.265959609402333}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.265959609402333}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"b6264346-ce36-4dd7-91a7-3ea22dfc4748"],
                Text[{1, "4d", "conv3x3", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -6.265959609402333}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.11157809196413}], 
                 Offset[{0, 0}, {5.638887821063309, -16.11157809196413}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.11157809196413}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.11157809196413}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.11157809196413}], 
                 Offset[{0, 0}, {6.089807129355393, -16.628514790015558`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.628514790015558`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.628514790015558`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.628514790015558`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.11157809196413}], 
                 Offset[{0, 0}, {5.638887821063309, -16.11157809196413}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.11157809196413}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.11157809196413}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.11157809196413}], 
                 Offset[{0, 0}, {6.089807129355393, -16.628514790015558`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.628514790015558`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.628514790015558`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.628514790015558`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -16.628514790015558`}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -16.628514790015558`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.628514790015558`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.628514790015558`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"03b1c91f-1b78-4896-96ae-fd426aa4e1b1"],
                Text[{1, "4d", "conv3x3", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -16.628514790015558}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.33519401419335115`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.33519401419335115`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.33519401419335115`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.33519401419335115`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.33519401419335115`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.32601370469052}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.32601370469052}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.32601370469052}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.32601370469052}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.33519401419335115`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.33519401419335115`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.33519401419335115`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.33519401419335115`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.33519401419335115`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.32601370469052}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.32601370469052}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.32601370469052}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.32601370469052}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {
                  6.089807129355393, -1.32601370469052}], 
                 Offset[{121., -7.999999999999973}, {
                  6.089807129355393, -1.32601370469052}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -1.32601370469052}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.32601370469052}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"17fd35e7-c5bb-41ef-923e-e36c837912d9"],
                Text[{1, "4d", "bn3x3", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, -1.32601370469052}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.14086416048770603`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.14086416048770603`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.14086416048770603`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.14086416048770603`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.14086416048770603`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.4957465180299967`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.4957465180299967`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.4957465180299967`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.4957465180299967`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.14086416048770603`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.14086416048770603`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.14086416048770603`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.14086416048770603`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.14086416048770603`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.4957465180299967`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.4957465180299967`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.4957465180299967`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.4957465180299967`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {
                  6.089807129355393, -2.4957465180299967`}], 
                 Offset[{106., -7.999999999999977}, {
                  6.089807129355393, -2.4957465180299967`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.4957465180299967`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.4957465180299967`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"2a9837b4-56e1-4117-be9d-a58e256f202f"],
                Text[{1, "4d", "bn3x3", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, -2.4957465180299967}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4939914978183395`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4939914978183395`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4939914978183395`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4939914978183395`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4939914978183395`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.426302612988309}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.426302612988309}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.426302612988309}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.426302612988309}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4939914978183395`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4939914978183395`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4939914978183395`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4939914978183395`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4939914978183395`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.426302612988309}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.426302612988309}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.426302612988309}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.426302612988309}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{202., 8.000000000000044}, {
                  6.089807129355393, -5.426302612988309}], 
                 Offset[{202., -7.999999999999956}, {
                  6.089807129355393, -5.426302612988309}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.426302612988309}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.426302612988309}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"ab1acdbd-892f-4420-bf11-60f265fcd8e1"],
                Text[{1, "4d", "convdouble_3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{106., 2.353672812205332*^-14}, \
{6.089807129355393, -5.426302612988309}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.888724855928084`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.888724855928084`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.888724855928084`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.888724855928084`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.888724855928084`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.036918378042518`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.036918378042518`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.036918378042518`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.036918378042518`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.888724855928084`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.888724855928084`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.888724855928084`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.888724855928084`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.888724855928084`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.036918378042518`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.036918378042518`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.036918378042518`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.036918378042518`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{196., 8.000000000000044}, {
                  6.089807129355393, -16.036918378042518`}], 
                 Offset[{196., -7.9999999999999565`}, {
                  6.089807129355393, -16.036918378042518`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -16.036918378042518`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.036918378042518`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"f8f5ed2e-e941-4c1b-a4a6-cad79dee6c48"],
                Text[{1, "4d", "convdouble_3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{103., 2.2870594307278225*^-14}, \
{6.089807129355393, -16.036918378042518}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5350645767410727}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5350645767410727}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5350645767410727}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5350645767410727}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5350645767410727}], 
                 Offset[{0, 0}, {6.089807129355393, -0.3297230094022128}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.3297230094022128}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.3297230094022128}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.3297230094022128}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5350645767410727}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5350645767410727}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5350645767410727}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5350645767410727}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5350645767410727}], 
                 Offset[{0, 0}, {6.089807129355393, -0.3297230094022128}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.3297230094022128}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.3297230094022128}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.3297230094022128}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{192., 8.000000000000043}, {
                  6.089807129355393, -0.3297230094022128}], 
                 Offset[{192., -7.999999999999957}, {
                  6.089807129355393, -0.3297230094022128}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -0.3297230094022128}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.3297230094022128}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"5acef82f-e85b-4402-90a8-7fade4fd4ed0"],
                Text[{1, "4d", "bndouble_3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{101., 2.2426505097428162*^-14}, \
{6.089807129355393, -0.3297230094022128}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.047124295641741906`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.047124295641741906`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.047124295641741906`}],
                  Offset[{0., 0.}, {5.695252734599819, 
                  0.047124295641741906`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.047124295641741906`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.8514597063743052`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.8514597063743052`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.8514597063743052`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.8514597063743052`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.047124295641741906`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.047124295641741906`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.047124295641741906`}],
                  Offset[{0., 0.}, {5.695252734599819, 
                  0.047124295641741906`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.047124295641741906`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.8514597063743052`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.8514597063743052`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.8514597063743052`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.8514597063743052`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{177., 8.000000000000039}, {
                  6.089807129355393, -1.8514597063743052`}], 
                 Offset[{177., -7.999999999999961}, {
                  6.089807129355393, -1.8514597063743052`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -1.8514597063743052`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.8514597063743052`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"649ae56e-6916-4c2a-a59f-9ddc0b18603b"],
                Text[{1, "4d", "bndouble_3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{93.5, 2.0761170560490427*^-14}, \
{6.089807129355393, -1.8514597063743052}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.9510436568135314`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.9510436568135314`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9510436568135314`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9510436568135314`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.9510436568135314`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.668613475392012}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.668613475392012}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.668613475392012}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.668613475392012}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.9510436568135314`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.9510436568135314`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9510436568135314`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9510436568135314`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.9510436568135314`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.668613475392012}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.668613475392012}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.668613475392012}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.668613475392012}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -6.668613475392012}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -6.668613475392012}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -6.668613475392012}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.668613475392012}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c182d15e-ea58-4b4b-b5dd-b6974b4c4b3a"],
                Text[{1, "4d", "convdouble_3x3_0", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -6.668613475392012}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.03731665230863}], 
                 Offset[{0, 0}, {5.638887821063309, -16.03731665230863}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.03731665230863}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.03731665230863}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.03731665230863}], 
                 Offset[{0, 0}, {6.089807129355393, -16.455894311678325`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.455894311678325`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.455894311678325`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.455894311678325`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.03731665230863}], 
                 Offset[{0, 0}, {5.638887821063309, -16.03731665230863}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.03731665230863}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.03731665230863}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.03731665230863}], 
                 Offset[{0, 0}, {6.089807129355393, -16.455894311678325`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.455894311678325`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.455894311678325`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.455894311678325`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -16.455894311678325`}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -16.455894311678325`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.455894311678325`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.455894311678325`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"53e257ef-013c-48da-bd70-a2cd358331e4"],
                Text[{1, "4d", "convdouble_3x3_0", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -16.455894311678325}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.45956084433610084`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.45956084433610084`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.45956084433610084`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.45956084433610084`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.45956084433610084`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.8635188370766766}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.8635188370766766}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8635188370766766}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8635188370766766}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.45956084433610084`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.45956084433610084`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.45956084433610084`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.45956084433610084`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.45956084433610084`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.8635188370766766}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.8635188370766766}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8635188370766766}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.8635188370766766}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {
                  6.089807129355393, -0.8635188370766766}], 
                 Offset[{168., -7.999999999999963}, {
                  6.089807129355393, -0.8635188370766766}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.8635188370766766}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.8635188370766766}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"e2784e21-fd36-40ac-950f-7d55ac733ac4"],
                Text[{1, "4d", "bndouble_3x3_0", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, -0.8635188370766766}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.14404832139520757`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.14404832139520757`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.14404832139520757`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.14404832139520757`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.14404832139520757`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.531036347693381}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.531036347693381}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.531036347693381}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.531036347693381}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.14404832139520757`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.14404832139520757`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.14404832139520757`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.14404832139520757`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.14404832139520757`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.531036347693381}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.531036347693381}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.531036347693381}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.531036347693381}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -2.531036347693381}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -2.531036347693381}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.531036347693381}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.531036347693381}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"f1c548eb-aa84-4e0d-a0bd-2b3c942def52"],
                Text[{1, "4d", "bndouble_3x3_0", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -2.531036347693381}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.994753296526263}], 
                 Offset[{0, 0}, {5.638887821063309, -1.994753296526263}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.994753296526263}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.994753296526263}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.994753296526263}], 
                 Offset[{0, 0}, {6.089807129355393, -6.725834890090389}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.725834890090389}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.725834890090389}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.725834890090389}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.994753296526263}], 
                 Offset[{0, 0}, {5.638887821063309, -1.994753296526263}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.994753296526263}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.994753296526263}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.994753296526263}], 
                 Offset[{0, 0}, {6.089807129355393, -6.725834890090389}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.725834890090389}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.725834890090389}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.725834890090389}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -6.725834890090389}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -6.725834890090389}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -6.725834890090389}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.725834890090389}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"965fa5bb-3753-40f1-9c6d-6975bfa1e4d5"],
                Text[{1, "4d", "convdouble_3x3_1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -6.725834890090389}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.02696053215481}], 
                 Offset[{0, 0}, {5.638887821063309, -16.02696053215481}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.02696053215481}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.02696053215481}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.02696053215481}], 
                 Offset[{0, 0}, {6.089807129355393, -16.413403698952237`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.413403698952237`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.413403698952237`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.413403698952237`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.02696053215481}], 
                 Offset[{0, 0}, {5.638887821063309, -16.02696053215481}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.02696053215481}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.02696053215481}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.02696053215481}], 
                 Offset[{0, 0}, {6.089807129355393, -16.413403698952237`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.413403698952237`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.413403698952237`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.413403698952237`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -16.413403698952237`}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -16.413403698952237`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.413403698952237`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.413403698952237`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"0fa43d3a-458c-427d-9b49-3c9ea7373e7c"],
                Text[{1, "4d", "convdouble_3x3_1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -16.413403698952237}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.41316694349055616`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.41316694349055616`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.41316694349055616`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.41316694349055616`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.41316694349055616`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.0946175985522828`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.0946175985522828`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.0946175985522828`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.0946175985522828`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.41316694349055616`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.41316694349055616`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.41316694349055616`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.41316694349055616`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.41316694349055616`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.0946175985522828`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.0946175985522828`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.0946175985522828`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.0946175985522828`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {
                  6.089807129355393, -1.0946175985522828`}], 
                 Offset[{168., -7.999999999999963}, {
                  6.089807129355393, -1.0946175985522828`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -1.0946175985522828`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.0946175985522828`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"e5fc37f5-ad42-43c3-ad8d-c59a80aed5d9"],
                Text[{1, "4d", "bndouble_3x3_1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, -1.0946175985522828}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.007690487922238537}], 
                 Offset[{0, 0}, {5.638887821063309, 0.007690487922238537}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.007690487922238537}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.007690487922238537}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.007690487922238537}], 
                 Offset[{0, 0}, {6.089807129355393, -1.9677246028732327`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.9677246028732327`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.9677246028732327`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.9677246028732327`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.007690487922238537}], 
                 Offset[{0, 0}, {5.638887821063309, 0.007690487922238537}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.007690487922238537}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.007690487922238537}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.007690487922238537}], 
                 Offset[{0, 0}, {6.089807129355393, -1.9677246028732327`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.9677246028732327`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.9677246028732327`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.9677246028732327`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -1.9677246028732327`}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -1.9677246028732327`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -1.9677246028732327`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.9677246028732327`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"9525f316-2a8c-458b-9474-a09314bd5148"],
                Text[{1, "4d", "bndouble_3x3_1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -1.9677246028732327}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.3248998874083242`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.3248998874083242`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3248998874083242`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3248998874083242`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.3248998874083242`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.949509688031407}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.949509688031407}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.949509688031407}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.949509688031407}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.3248998874083242`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.3248998874083242`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3248998874083242`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.3248998874083242`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.3248998874083242`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.949509688031407}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.949509688031407}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.949509688031407}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.949509688031407}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{132., 8.00000000000003}, {
                  6.089807129355393, -4.949509688031407}], 
                 Offset[{132., -7.999999999999971}, {
                  6.089807129355393, -4.949509688031407}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -4.949509688031407}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.949509688031407}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"1d5e8ffb-2c6a-4978-8f03-a9c0a0d98d6a"],
                Text[{1, "4d", "convproj", "Weights"}]],
               BoxRotation->0.], 
              Offset[{71., 1.5765166949677223*^-14}, \
{6.089807129355393, -4.949509688031407}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.321325606276794`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.321325606276794`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.321325606276794`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.321325606276794`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.321325606276794`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.701516445088588`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.701516445088588`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.701516445088588`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.701516445088588`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.321325606276794`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.321325606276794`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.321325606276794`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.321325606276794`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.321325606276794`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.701516445088588`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.701516445088588`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.701516445088588`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.701516445088588`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{126., 8.000000000000028}, {
                  6.089807129355393, -14.701516445088588`}], 
                 Offset[{126., -7.9999999999999725`}, {
                  6.089807129355393, -14.701516445088588`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -14.701516445088588`}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -14.701516445088588`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"53dde877-8b83-4217-84cf-393326d87dd9"],
                Text[{1, "4d", "convproj", "Biases"}]],
               BoxRotation->0.], 
              Offset[{68., 1.509903313490213*^-14}, \
{6.089807129355393, -14.701516445088588}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.31423428151071775`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.31423428151071775`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.31423428151071775`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.31423428151071775`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.31423428151071775`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.3736367384969317`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.3736367384969317`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.3736367384969317`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.3736367384969317`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.31423428151071775`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.31423428151071775`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.31423428151071775`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.31423428151071775`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.31423428151071775`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.3736367384969317`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.3736367384969317`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.3736367384969317`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.3736367384969317`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{122., 8.000000000000027}, {
                  6.089807129355393, -1.3736367384969317`}], 
                 Offset[{122., -7.999999999999973}, {
                  6.089807129355393, -1.3736367384969317`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -1.3736367384969317`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.3736367384969317`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c72aca34-86f3-4182-b8be-2402e779f4d0"],
                Text[{1, "4d", "bnproj", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{66., 1.4654943925052066*^-14}, \
{6.089807129355393, -1.3736367384969317}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.0621457695985757`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.0621457695985757`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.0621457695985757`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.0621457695985757`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.0621457695985757`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.548467496341589}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.548467496341589}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.548467496341589}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.548467496341589}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.0621457695985757`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.0621457695985757`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.0621457695985757`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.0621457695985757`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.0621457695985757`}], 
                 Offset[{0, 0}, {6.089807129355393, -4.548467496341589}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -4.548467496341589}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.548467496341589}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -4.548467496341589}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{107., 8.000000000000023}, {
                  6.089807129355393, -4.548467496341589}], 
                 Offset[{107., -7.999999999999976}, {
                  6.089807129355393, -4.548467496341589}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -4.548467496341589}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -4.548467496341589}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4d\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"1be9ca07-e51b-4c59-8d5b-852ab37bbaa8"],
                Text[{1, "4d", "bnproj", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58.5, 1.2989609388114332*^-14}, \
{6.089807129355393, -4.548467496341589}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.7030488726417161`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.7030488726417161`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7030488726417161`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7030488726417161`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.7030488726417161`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.13265974380726}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.13265974380726}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.13265974380726}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.13265974380726}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.7030488726417161`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.7030488726417161`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7030488726417161`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7030488726417161`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.7030488726417161`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.13265974380726}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.13265974380726}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.13265974380726}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.13265974380726}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{167., 8.000000000000037}, {
                  6.089807129355393, -6.13265974380726}], 
                 Offset[{167., -7.999999999999963}, {
                  6.089807129355393, -6.13265974380726}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -6.13265974380726}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.13265974380726}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"9fdeef6d-0b30-4a23-b7ca-99a9c6267671"],
                Text[{1, "4e", "conv3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{88.5, 1.965094753586527*^-14}, \
{6.089807129355393, -6.13265974380726}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.04261079364563}], 
                 Offset[{0, 0}, {5.638887821063309, -16.04261079364563}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.04261079364563}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.04261079364563}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.04261079364563}], 
                 Offset[{0, 0}, {6.089807129355393, -16.498582673829965`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.498582673829965`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.498582673829965`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.498582673829965`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.04261079364563}], 
                 Offset[{0, 0}, {5.638887821063309, -16.04261079364563}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.04261079364563}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.04261079364563}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.04261079364563}], 
                 Offset[{0, 0}, {6.089807129355393, -16.498582673829965`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.498582673829965`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.498582673829965`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.498582673829965`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{161., 8.000000000000036}, {
                  6.089807129355393, -16.498582673829965`}], 
                 Offset[{161., -7.9999999999999645`}, {
                  6.089807129355393, -16.498582673829965`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.498582673829965`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.498582673829965`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"d1b67cc0-29ee-4c9d-bb35-5905831a714e"],
                Text[{1, "4e", "conv3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{85.5, 1.8984813721090177*^-14}, \
{6.089807129355393, -16.498582673829965}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.3829352139367189}], 
                 Offset[{0, 0}, {5.638887821063309, 0.3829352139367189}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3829352139367189}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3829352139367189}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.3829352139367189}], 
                 Offset[{0, 0}, {6.089807129355393, -1.1680132325589891`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.1680132325589891`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.1680132325589891`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.1680132325589891`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.3829352139367189}], 
                 Offset[{0, 0}, {5.638887821063309, 0.3829352139367189}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3829352139367189}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3829352139367189}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.3829352139367189}], 
                 Offset[{0, 0}, {6.089807129355393, -1.1680132325589891`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.1680132325589891`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.1680132325589891`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.1680132325589891`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{157., 8.000000000000034}, {
                  6.089807129355393, -1.1680132325589891`}], 
                 Offset[{157., -7.999999999999965}, {
                  6.089807129355393, -1.1680132325589891`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -1.1680132325589891`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.1680132325589891`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"af128ab4-1eea-4195-ad57-99c782a14502"],
                Text[{1, "4e", "bn3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{83.5, 1.8540724511240114*^-14}, \
{6.089807129355393, -1.1680132325589891}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.1405584687069963}], 
                 Offset[{0, 0}, {5.638887821063309, 0.1405584687069963}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.1405584687069963}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.1405584687069963}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.1405584687069963}], 
                 Offset[{0, 0}, {6.089807129355393, -1.599062870048334}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.599062870048334}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.599062870048334}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.599062870048334}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.1405584687069963}], 
                 Offset[{0, 0}, {5.638887821063309, 0.1405584687069963}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.1405584687069963}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.1405584687069963}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.1405584687069963}], 
                 Offset[{0, 0}, {6.089807129355393, -1.599062870048334}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.599062870048334}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.599062870048334}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.599062870048334}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{142., 8.000000000000032}, {
                  6.089807129355393, -1.599062870048334}], 
                 Offset[{142., -7.999999999999969}, {
                  6.089807129355393, -1.599062870048334}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -1.599062870048334}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -1.599062870048334}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"0dce4f79-f79c-4c3f-9a35-fa71016bebb6"],
                Text[{1, "4e", "bn3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{76., 1.687538997430238*^-14}, \
{6.089807129355393, -1.599062870048334}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.239768969634564}], 
                 Offset[{0, 0}, {5.638887821063309, -2.239768969634564}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.239768969634564}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.239768969634564}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.239768969634564}], 
                 Offset[{0, 0}, {6.089807129355393, -7.263032806876429}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -7.263032806876429}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.263032806876429}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.263032806876429}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.239768969634564}], 
                 Offset[{0, 0}, {5.638887821063309, -2.239768969634564}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.239768969634564}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.239768969634564}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.239768969634564}], 
                 Offset[{0, 0}, {6.089807129355393, -7.263032806876429}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -7.263032806876429}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.263032806876429}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.263032806876429}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -7.263032806876429}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -7.263032806876429}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -7.263032806876429}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -7.263032806876429}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"f8edccbe-4b96-4eda-8a72-0f024576168e"],
                Text[{1, "4e", "conv3x3", "Weights"}]],
               BoxRotation->0.], Offset[{70.5, 1.5654144647214707*^-14}, 
              {6.089807129355393, -7.263032806876429}], {0, 0}]}], 
           GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.3595894484881}], 
                 Offset[{0, 0}, {5.638887821063309, -16.3595894484881}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.3595894484881}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.3595894484881}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.3595894484881}], 
                 Offset[{0, 0}, {6.089807129355393, -17.065743328030695`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -17.065743328030695`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -17.065743328030695`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -17.065743328030695`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.3595894484881}], 
                 Offset[{0, 0}, {5.638887821063309, -16.3595894484881}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.3595894484881}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.3595894484881}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.3595894484881}], 
                 Offset[{0, 0}, {6.089807129355393, -17.065743328030695`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -17.065743328030695`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -17.065743328030695`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -17.065743328030695`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -17.065743328030695`}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -17.065743328030695`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -17.065743328030695`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -17.065743328030695`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"68f935d6-fefb-4c02-86c0-a79cd5afe7cd"],
                Text[{1, "4e", "conv3x3", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -17.065743328030695}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.504009677158633}], 
                 Offset[{0, 0}, {5.638887821063309, 0.504009677158633}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.504009677158633}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.504009677158633}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.504009677158633}], 
                 Offset[{0, 0}, {6.089807129355393, -0.5655958727941313}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.5655958727941313}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.5655958727941313}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.5655958727941313}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.504009677158633}], 
                 Offset[{0, 0}, {5.638887821063309, 0.504009677158633}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.504009677158633}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.504009677158633}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.504009677158633}], 
                 Offset[{0, 0}, {6.089807129355393, -0.5655958727941313}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.5655958727941313}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.5655958727941313}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.5655958727941313}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {
                  6.089807129355393, -0.5655958727941313}], 
                 Offset[{121., -7.999999999999973}, {
                  6.089807129355393, -0.5655958727941313}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.5655958727941313}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.5655958727941313}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"63245ec8-98bf-4ea4-b7c2-ac83e99d8f70"],
                Text[{1, "4e", "bn3x3", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, -0.5655958727941313}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.4001640243740359}], 
                 Offset[{0, 0}, {5.638887821063309, -0.4001640243740359}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.4001640243740359}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.4001640243740359}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.4001640243740359}], 
                 Offset[{0, 0}, {6.089807129355393, -3.488541522036339}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.488541522036339}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.488541522036339}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.488541522036339}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.4001640243740359}], 
                 Offset[{0, 0}, {5.638887821063309, -0.4001640243740359}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.4001640243740359}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.4001640243740359}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.4001640243740359}], 
                 Offset[{0, 0}, {6.089807129355393, -3.488541522036339}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.488541522036339}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.488541522036339}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.488541522036339}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {
                  6.089807129355393, -3.488541522036339}], 
                 Offset[{106., -7.999999999999977}, {
                  6.089807129355393, -3.488541522036339}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.488541522036339}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.488541522036339}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"74434be4-36f0-4744-9166-5884cdd209bd"],
                Text[{1, "4e", "bn3x3", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, -3.488541522036339}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.678354241599322}], 
                 Offset[{0, 0}, {5.638887821063309, -1.678354241599322}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.678354241599322}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.678354241599322}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.678354241599322}], 
                 Offset[{0, 0}, {6.089807129355393, -5.967285961634559}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.967285961634559}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.967285961634559}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.967285961634559}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.678354241599322}], 
                 Offset[{0, 0}, {5.638887821063309, -1.678354241599322}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.678354241599322}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.678354241599322}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.678354241599322}], 
                 Offset[{0, 0}, {6.089807129355393, -5.967285961634559}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.967285961634559}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.967285961634559}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.967285961634559}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{202., 8.000000000000044}, {
                  6.089807129355393, -5.967285961634559}], 
                 Offset[{202., -7.999999999999956}, {
                  6.089807129355393, -5.967285961634559}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.967285961634559}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.967285961634559}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"de09895d-0367-467b-a4f7-b2eb8fd52388"],
                Text[{1, "4e", "convdouble_3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{106., 2.353672812205332*^-14}, \
{6.089807129355393, -5.967285961634559}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.99299996472832}], 
                 Offset[{0, 0}, {5.638887821063309, -15.99299996472832}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.99299996472832}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.99299996472832}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.99299996472832}], 
                 Offset[{0, 0}, {6.089807129355393, -16.328726610959993`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.328726610959993`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.328726610959993`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.328726610959993`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.99299996472832}], 
                 Offset[{0, 0}, {5.638887821063309, -15.99299996472832}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.99299996472832}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.99299996472832}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.99299996472832}], 
                 Offset[{0, 0}, {6.089807129355393, -16.328726610959993`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.328726610959993`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.328726610959993`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.328726610959993`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{196., 8.000000000000044}, {
                  6.089807129355393, -16.328726610959993`}], 
                 Offset[{196., -7.9999999999999565`}, {
                  6.089807129355393, -16.328726610959993`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -16.328726610959993`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.328726610959993`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"5de7c518-d449-445c-8145-25f364fc4790"],
                Text[{1, "4e", "convdouble_3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{103., 2.2870594307278225*^-14}, \
{6.089807129355393, -16.328726610959993}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.3726124406924658}], 
                 Offset[{0, 0}, {5.638887821063309, 0.3726124406924658}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3726124406924658}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3726124406924658}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.3726124406924658}], 
                 Offset[{0, 0}, {6.089807129355393, -1.24227234626041}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.24227234626041}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.24227234626041}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.24227234626041}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.3726124406924658}], 
                 Offset[{0, 0}, {5.638887821063309, 0.3726124406924658}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3726124406924658}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3726124406924658}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.3726124406924658}], 
                 Offset[{0, 0}, {6.089807129355393, -1.24227234626041}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.24227234626041}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.24227234626041}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.24227234626041}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{192., 8.000000000000043}, {
                  6.089807129355393, -1.24227234626041}], 
                 Offset[{192., -7.999999999999957}, {
                  6.089807129355393, -1.24227234626041}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -1.24227234626041}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.24227234626041}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"562925b3-0968-41e4-81ef-4e129d60d279"],
                Text[{1, "4e", "bndouble_3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{101., 2.2426505097428162*^-14}, \
{6.089807129355393, -1.24227234626041}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.015607305398561049`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.015607305398561049`}], 
                 Offset[{0., 0.}, {
                  5.695252734599819, -0.015607305398561049`}], 
                 Offset[{0., 0.}, {
                  5.695252734599819, -0.015607305398561049`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.015607305398561049`}],
                  Offset[{0, 0}, {6.089807129355393, -2.0742312238015597`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.0742312238015597`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.0742312238015597`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.0742312238015597`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.015607305398561049`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.015607305398561049`}], 
                 Offset[{0., 0.}, {
                  5.695252734599819, -0.015607305398561049`}], 
                 Offset[{0., 0.}, {
                  5.695252734599819, -0.015607305398561049`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.015607305398561049`}],
                  Offset[{0, 0}, {6.089807129355393, -2.0742312238015597`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.0742312238015597`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.0742312238015597`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.0742312238015597`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{177., 8.000000000000039}, {
                  6.089807129355393, -2.0742312238015597`}], 
                 Offset[{177., -7.999999999999961}, {
                  6.089807129355393, -2.0742312238015597`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -2.0742312238015597`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.0742312238015597`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"92f0a874-2950-43b5-a7be-f885a28ee37d"],
                Text[{1, "4e", "bndouble_3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{93.5, 2.0761170560490427*^-14}, \
{6.089807129355393, -2.0742312238015597}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.306449951208964}], 
                 Offset[{0, 0}, {5.638887821063309, -2.306449951208964}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.306449951208964}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.306449951208964}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.306449951208964}], 
                 Offset[{0, 0}, {6.089807129355393, -7.388593665638038}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -7.388593665638038}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.388593665638038}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.388593665638038}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.306449951208964}], 
                 Offset[{0, 0}, {5.638887821063309, -2.306449951208964}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.306449951208964}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.306449951208964}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.306449951208964}], 
                 Offset[{0, 0}, {6.089807129355393, -7.388593665638038}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -7.388593665638038}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.388593665638038}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.388593665638038}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -7.388593665638038}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -7.388593665638038}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -7.388593665638038}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -7.388593665638038}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c0ab81cb-1eda-41bb-aecd-a93589a61a05"],
                Text[{1, "4e", "convdouble_3x3_0", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -7.388593665638038}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.158766727768924`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.158766727768924`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.158766727768924`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.158766727768924`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.158766727768924`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.6725644408698}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.6725644408698}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.6725644408698}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.6725644408698}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.158766727768924`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.158766727768924`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.158766727768924`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.158766727768924`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.158766727768924`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.6725644408698}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.6725644408698}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.6725644408698}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.6725644408698}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -16.6725644408698}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -16.6725644408698}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.6725644408698}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.6725644408698}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"7e8edd90-1dfa-4fd8-9b0f-046ac35917da"],
                Text[{1, "4e", "convdouble_3x3_0", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -16.6725644408698}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.25809162146061143`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.25809162146061143`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.25809162146061143`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.25809162146061143`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.25809162146061143`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.445549333063757}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.445549333063757}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.445549333063757}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.445549333063757}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.25809162146061143`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.25809162146061143`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.25809162146061143`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.25809162146061143`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.25809162146061143`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.445549333063757}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.445549333063757}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.445549333063757}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.445549333063757}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {
                  6.089807129355393, -1.445549333063757}], 
                 Offset[{168., -7.999999999999963}, {
                  6.089807129355393, -1.445549333063757}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -1.445549333063757}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.445549333063757}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"70c505dd-32c8-4104-9b4b-f1fa2d0093af"],
                Text[{1, "4e", "bndouble_3x3_0", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, -1.445549333063757}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.04257410760482405}], 
                 Offset[{0, 0}, {5.638887821063309, -0.04257410760482405}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.04257410760482405}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.04257410760482405}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.04257410760482405}], 
                 Offset[{0, 0}, {6.089807129355393, -2.1786351892247495`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.1786351892247495`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.1786351892247495`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.1786351892247495`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.04257410760482405}], 
                 Offset[{0, 0}, {5.638887821063309, -0.04257410760482405}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.04257410760482405}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.04257410760482405}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.04257410760482405}], 
                 Offset[{0, 0}, {6.089807129355393, -2.1786351892247495`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.1786351892247495`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.1786351892247495`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.1786351892247495`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -2.1786351892247495`}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -2.1786351892247495`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.1786351892247495`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.1786351892247495`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"2abc651b-6dbc-4ab2-8ea8-b9cb09d3ece3"],
                Text[{1, "4e", "bndouble_3x3_0", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -2.1786351892247495}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.4556616082354132`}], 
                 Offset[{0, 0}, {5.638887821063309, -2.4556616082354132`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.4556616082354132`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.4556616082354132`}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.4556616082354132`}], 
                 Offset[{0, 0}, {6.089807129355393, -7.560330623955328}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -7.560330623955328}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.560330623955328}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.560330623955328}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.4556616082354132`}], 
                 Offset[{0, 0}, {5.638887821063309, -2.4556616082354132`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.4556616082354132`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.4556616082354132`}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.4556616082354132`}], 
                 Offset[{0, 0}, {6.089807129355393, -7.560330623955328}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -7.560330623955328}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.560330623955328}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.560330623955328}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -7.560330623955328}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -7.560330623955328}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -7.560330623955328}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -7.560330623955328}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"097851e0-5de0-46a0-b379-efbe09871b63"],
                Text[{1, "4e", "convdouble_3x3_1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -7.560330623955328}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.316726890958268`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.316726890958268`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.316726890958268`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.316726890958268`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.316726890958268`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.93658011297868}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.93658011297868}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.93658011297868}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.93658011297868}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.316726890958268`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.316726890958268`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.316726890958268`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.316726890958268`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.316726890958268`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.93658011297868}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.93658011297868}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.93658011297868}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.93658011297868}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -16.93658011297868}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -16.93658011297868}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.93658011297868}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.93658011297868}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"77993470-d9b0-4b5b-919c-7378f97cfd3f"],
                Text[{1, "4e", "convdouble_3x3_1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -16.93658011297868}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6040286468485987}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6040286468485987}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6040286468485987}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6040286468485987}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6040286468485987}], 
                 Offset[{0, 0}, {6.089807129355393, 0.23473131015744814`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.23473131015744814`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.23473131015744814`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.23473131015744814`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6040286468485987}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6040286468485987}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6040286468485987}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6040286468485987}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6040286468485987}], 
                 Offset[{0, 0}, {6.089807129355393, 0.23473131015744814`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.23473131015744814`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.23473131015744814`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.23473131015744814`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {6.089807129355393, 
                  0.23473131015744814`}], 
                 Offset[{168., -7.999999999999963}, {6.089807129355393, 
                  0.23473131015744814`}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.23473131015744814`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.23473131015744814`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"0d9b4751-c42f-4941-bfa1-a2cf803ed6a3"],
                Text[{1, "4e", "bndouble_3x3_1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, 0.23473131015744814}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.2826879394343521}], 
                 Offset[{0, 0}, {5.638887821063309, -0.2826879394343521}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2826879394343521}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2826879394343521}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.2826879394343521}], 
                 Offset[{0, 0}, {6.089807129355393, -3.06195556974939}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.06195556974939}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.06195556974939}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.06195556974939}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.2826879394343521}], 
                 Offset[{0, 0}, {5.638887821063309, -0.2826879394343521}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2826879394343521}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.2826879394343521}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.2826879394343521}], 
                 Offset[{0, 0}, {6.089807129355393, -3.06195556974939}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.06195556974939}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.06195556974939}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.06195556974939}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -3.06195556974939}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -3.06195556974939}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.06195556974939}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.06195556974939}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"4e\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"baf0f4a2-8d8a-4918-9f71-163c8634f892"],
                Text[{1, "4e", "bndouble_3x3_1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -3.06195556974939}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.580496809747676}], 
                 Offset[{0, 0}, {5.638887821063309, -1.580496809747676}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.580496809747676}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.580496809747676}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.580496809747676}], 
                 Offset[{0, 0}, {6.089807129355393, -5.805657915010289}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.805657915010289}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.805657915010289}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.805657915010289}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.580496809747676}], 
                 Offset[{0, 0}, {5.638887821063309, -1.580496809747676}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.580496809747676}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.580496809747676}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.580496809747676}], 
                 Offset[{0, 0}, {6.089807129355393, -5.805657915010289}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.805657915010289}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.805657915010289}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.805657915010289}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -5.805657915010289}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -5.805657915010289}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.805657915010289}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.805657915010289}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"88c37c0d-082a-4ad7-b1e4-8a7a3436057f"],
                Text[{1, "5a", "conv1x1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -5.805657915010289}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.352506742899052`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.352506742899052`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.352506742899052`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.352506742899052`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.352506742899052`}], 
                 Offset[{0, 0}, {6.089807129355393, -17.022772459199828`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -17.022772459199828`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -17.022772459199828`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -17.022772459199828`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.352506742899052`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.352506742899052`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.352506742899052`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.352506742899052`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.352506742899052`}], 
                 Offset[{0, 0}, {6.089807129355393, -17.022772459199828`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -17.022772459199828`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -17.022772459199828`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -17.022772459199828`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -17.022772459199828`}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -17.022772459199828`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -17.022772459199828`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -17.022772459199828`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"e8e4b668-e497-42b7-9ab9-527264bd12c9"],
                Text[{1, "5a", "conv1x1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -17.022772459199828}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5565693513178349}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5565693513178349}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5565693513178349}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5565693513178349}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5565693513178349}], 
                 Offset[{0, 0}, {6.089807129355393, -0.18391699851510318`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.18391699851510318`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.18391699851510318`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.18391699851510318`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5565693513178349}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5565693513178349}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5565693513178349}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5565693513178349}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5565693513178349}], 
                 Offset[{0, 0}, {6.089807129355393, -0.18391699851510318`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.18391699851510318`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.18391699851510318`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.18391699851510318`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {
                  6.089807129355393, -0.18391699851510318`}], 
                 Offset[{121., -7.999999999999973}, {
                  6.089807129355393, -0.18391699851510318`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.18391699851510318`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.18391699851510318`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"6f2d8536-aa18-4cda-aef3-6f871c5004d8"],
                Text[{1, "5a", "bn1x1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, -0.18391699851510318}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.18832094776495387`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.18832094776495387`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.18832094776495387`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.18832094776495387`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.18832094776495387`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.7093537158403915`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.7093537158403915`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.7093537158403915`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.7093537158403915`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.18832094776495387`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.18832094776495387`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.18832094776495387`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.18832094776495387`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.18832094776495387`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.7093537158403915`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.7093537158403915`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.7093537158403915`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.7093537158403915`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {
                  6.089807129355393, -2.7093537158403915`}], 
                 Offset[{106., -7.999999999999977}, {
                  6.089807129355393, -2.7093537158403915`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.7093537158403915`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.7093537158403915`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"581f8422-7fc7-4a8d-b5e8-e7f62c6627bf"],
                Text[{1, "5a", "bn1x1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, -2.7093537158403915}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.6902752211426497`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.6902752211426497`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6902752211426497`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6902752211426497`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.6902752211426497`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.0490219756651165`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.0490219756651165`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.0490219756651165`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.0490219756651165`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.6902752211426497`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.6902752211426497`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6902752211426497`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6902752211426497`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.6902752211426497`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.0490219756651165`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.0490219756651165`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.0490219756651165`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.0490219756651165`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{167., 8.000000000000037}, {
                  6.089807129355393, -6.0490219756651165`}], 
                 Offset[{167., -7.999999999999963}, {
                  6.089807129355393, -6.0490219756651165`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -6.0490219756651165`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.0490219756651165`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"d9600332-f3e0-4714-a60b-eaef9f1d9a39"],
                Text[{1, "5a", "conv3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{88.5, 1.965094753586527*^-14}, \
{6.089807129355393, -6.0490219756651165}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.296922576791932`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.296922576791932`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.296922576791932`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.296922576791932`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.296922576791932`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.849827550978475`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.849827550978475`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.849827550978475`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.849827550978475`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.296922576791932`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.296922576791932`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.296922576791932`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.296922576791932`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.296922576791932`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.849827550978475`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.849827550978475`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.849827550978475`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.849827550978475`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{161., 8.000000000000036}, {
                  6.089807129355393, -16.849827550978475`}], 
                 Offset[{161., -7.9999999999999645`}, {
                  6.089807129355393, -16.849827550978475`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.849827550978475`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.849827550978475`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"32c4a169-e32a-4f48-b949-5b0c6d956e13"],
                Text[{1, "5a", "conv3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{85.5, 1.8984813721090177*^-14}, \
{6.089807129355393, -16.849827550978475}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5643319223943628}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5643319223943628}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5643319223943628}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5643319223943628}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5643319223943628}], 
                 Offset[{0, 0}, {6.089807129355393, -0.07024285613590203}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.07024285613590203}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.07024285613590203}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.07024285613590203}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5643319223943628}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5643319223943628}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5643319223943628}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5643319223943628}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5643319223943628}], 
                 Offset[{0, 0}, {6.089807129355393, -0.07024285613590203}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.07024285613590203}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.07024285613590203}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.07024285613590203}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{157., 8.000000000000034}, {
                  6.089807129355393, -0.07024285613590203}], 
                 Offset[{157., -7.999999999999965}, {
                  6.089807129355393, -0.07024285613590203}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -0.07024285613590203}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.07024285613590203}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"5dc70088-1aaf-4a61-8575-cedd9e7d1fc5"],
                Text[{1, "5a", "bn3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{83.5, 1.8540724511240114*^-14}, \
{6.089807129355393, -0.07024285613590203}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.11686920798761555`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.11686920798761555`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.11686920798761555`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.11686920798761555`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.11686920798761555`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.4599076222631826`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.4599076222631826`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.4599076222631826`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.4599076222631826`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.11686920798761555`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.11686920798761555`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.11686920798761555`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.11686920798761555`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.11686920798761555`}], 
                 Offset[{0, 0}, {6.089807129355393, -2.4599076222631826`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.4599076222631826`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.4599076222631826`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.4599076222631826`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{142., 8.000000000000032}, {
                  6.089807129355393, -2.4599076222631826`}], 
                 Offset[{142., -7.999999999999969}, {
                  6.089807129355393, -2.4599076222631826`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -2.4599076222631826`}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -2.4599076222631826`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"ba505b10-3d05-4873-8f0a-610b5c21a82d"],
                Text[{1, "5a", "bn3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{76., 1.687538997430238*^-14}, \
{6.089807129355393, -2.4599076222631826}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.084891759944285}], 
                 Offset[{0, 0}, {5.638887821063309, -2.084891759944285}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.084891759944285}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.084891759944285}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.084891759944285}], 
                 Offset[{0, 0}, {6.089807129355393, -6.988482628277884}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.988482628277884}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.988482628277884}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.988482628277884}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.084891759944285}], 
                 Offset[{0, 0}, {5.638887821063309, -2.084891759944285}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.084891759944285}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.084891759944285}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.084891759944285}], 
                 Offset[{0, 0}, {6.089807129355393, -6.988482628277884}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.988482628277884}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.988482628277884}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.988482628277884}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -6.988482628277884}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -6.988482628277884}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -6.988482628277884}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.988482628277884}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"2d0139ea-5fda-495a-bff0-0aa7063be1a6"],
                Text[{1, "5a", "conv3x3", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -6.988482628277884}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.30419674274737}], 
                 Offset[{0, 0}, {5.638887821063309, -16.30419674274737}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.30419674274737}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.30419674274737}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.30419674274737}], 
                 Offset[{0, 0}, {6.089807129355393, -16.893325139670466`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.893325139670466`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.893325139670466`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.893325139670466`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.30419674274737}], 
                 Offset[{0, 0}, {5.638887821063309, -16.30419674274737}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.30419674274737}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.30419674274737}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.30419674274737}], 
                 Offset[{0, 0}, {6.089807129355393, -16.893325139670466`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.893325139670466`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.893325139670466`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.893325139670466`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -16.893325139670466`}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -16.893325139670466`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.893325139670466`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.893325139670466`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"961f3367-9421-4d7f-bce9-5868c28160d7"],
                Text[{1, "5a", "conv3x3", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -16.893325139670466}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4843833367428147}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4843833367428147}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4843833367428147}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4843833367428147}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4843833367428147}], 
                 Offset[{0, 0}, {6.089807129355393, -0.7123973831287153}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.7123973831287153}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.7123973831287153}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.7123973831287153}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.4843833367428147}], 
                 Offset[{0, 0}, {5.638887821063309, 0.4843833367428147}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4843833367428147}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.4843833367428147}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.4843833367428147}], 
                 Offset[{0, 0}, {6.089807129355393, -0.7123973831287153}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.7123973831287153}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.7123973831287153}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.7123973831287153}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {
                  6.089807129355393, -0.7123973831287153}], 
                 Offset[{121., -7.999999999999973}, {
                  6.089807129355393, -0.7123973831287153}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.7123973831287153}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.7123973831287153}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"4cdd58e5-6474-41eb-9059-233f666032e3"],
                Text[{1, "5a", "bn3x3", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, -0.7123973831287153}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.06686862880334556}], 
                 Offset[{0, 0}, {5.638887821063309, 0.06686862880334556}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.06686862880334556}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.06686862880334556}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.06686862880334556}], 
                 Offset[{0, 0}, {6.089807129355393, -1.8091853937606273`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.8091853937606273`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.8091853937606273`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.8091853937606273`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.06686862880334556}], 
                 Offset[{0, 0}, {5.638887821063309, 0.06686862880334556}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.06686862880334556}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.06686862880334556}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.06686862880334556}], 
                 Offset[{0, 0}, {6.089807129355393, -1.8091853937606273`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.8091853937606273`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.8091853937606273`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.8091853937606273`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {
                  6.089807129355393, -1.8091853937606273`}], 
                 Offset[{106., -7.999999999999977}, {
                  6.089807129355393, -1.8091853937606273`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -1.8091853937606273`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.8091853937606273`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"4fe8deeb-a9e9-4a56-88ce-52d19f0fbcca"],
                Text[{1, "5a", "bn3x3", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, -1.8091853937606273}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.7054843245750861`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.7054843245750861`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7054843245750861`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7054843245750861`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.7054843245750861`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.175708071718065}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.175708071718065}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.175708071718065}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.175708071718065}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.7054843245750861`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.7054843245750861`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7054843245750861`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.7054843245750861`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.7054843245750861`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.175708071718065}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.175708071718065}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.175708071718065}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.175708071718065}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{202., 8.000000000000044}, {
                  6.089807129355393, -6.175708071718065}], 
                 Offset[{202., -7.999999999999956}, {
                  6.089807129355393, -6.175708071718065}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -6.175708071718065}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.175708071718065}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"bc3bbb72-9e43-4e48-bf83-30920428c22b"],
                Text[{1, "5a", "convdouble_3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{106., 2.353672812205332*^-14}, \
{6.089807129355393, -6.175708071718065}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.330708445991835`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.330708445991835`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.330708445991835`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.330708445991835`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.330708445991835`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.979695522063846`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.979695522063846`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.979695522063846`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.979695522063846`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.330708445991835`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.330708445991835`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.330708445991835`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.330708445991835`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.330708445991835`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.979695522063846`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.979695522063846`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.979695522063846`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.979695522063846`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{196., 8.000000000000044}, {
                  6.089807129355393, -16.979695522063846`}], 
                 Offset[{196., -7.9999999999999565`}, {
                  6.089807129355393, -16.979695522063846`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -16.979695522063846`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.979695522063846`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3e81a856-6f13-4791-8836-0812fa2ea8e8"],
                Text[{1, "5a", "convdouble_3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{103., 2.2870594307278225*^-14}, \
{6.089807129355393, -16.979695522063846}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5616958359267125}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5616958359267125}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5616958359267125}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5616958359267125}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5616958359267125}], 
                 Offset[{0, 0}, {6.089807129355393, -0.12689734783658413`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.12689734783658413`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.12689734783658413`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.12689734783658413`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5616958359267125}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5616958359267125}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5616958359267125}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5616958359267125}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5616958359267125}], 
                 Offset[{0, 0}, {6.089807129355393, -0.12689734783658413`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.12689734783658413`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.12689734783658413`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.12689734783658413`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{192., 8.000000000000043}, {
                  6.089807129355393, -0.12689734783658413`}], 
                 Offset[{192., -7.999999999999957}, {
                  6.089807129355393, -0.12689734783658413`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -0.12689734783658413`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.12689734783658413`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c9cbb9b6-e4ed-4df5-b103-22c6ca26a2fb"],
                Text[{1, "5a", "bndouble_3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{101., 2.2426505097428162*^-14}, \
{6.089807129355393, -0.12689734783658413}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.4663866469187497}], 
                 Offset[{0, 0}, {5.638887821063309, -0.4663866469187497}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.4663866469187497}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.4663866469187497}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.4663866469187497}], 
                 Offset[{0, 0}, {6.089807129355393, -3.630501032649766}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.630501032649766}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.630501032649766}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.630501032649766}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.4663866469187497}], 
                 Offset[{0, 0}, {5.638887821063309, -0.4663866469187497}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.4663866469187497}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.4663866469187497}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.4663866469187497}], 
                 Offset[{0, 0}, {6.089807129355393, -3.630501032649766}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.630501032649766}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.630501032649766}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.630501032649766}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{177., 8.000000000000039}, {
                  6.089807129355393, -3.630501032649766}], 
                 Offset[{177., -7.999999999999961}, {
                  6.089807129355393, -3.630501032649766}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -3.630501032649766}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.630501032649766}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"75427cfa-eba7-463d-869d-ff7f3b7fc330"],
                Text[{1, "5a", "bndouble_3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{93.5, 2.0761170560490427*^-14}, \
{6.089807129355393, -3.630501032649766}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.9117861101806222`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.9117861101806222`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9117861101806222`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9117861101806222`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.9117861101806222`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.560106171524681}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.560106171524681}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.560106171524681}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.560106171524681}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.9117861101806222`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.9117861101806222`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9117861101806222`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.9117861101806222`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.9117861101806222`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.560106171524681}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.560106171524681}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.560106171524681}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.560106171524681}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -6.560106171524681}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -6.560106171524681}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -6.560106171524681}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.560106171524681}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"f640f4a1-df39-4eeb-af54-6e6eb226f870"],
                Text[{1, "5a", "convdouble_3x3_0", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -6.560106171524681}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.199996109070568`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.199996109070568`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.199996109070568`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.199996109070568`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.199996109070568`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.761001789269113`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.761001789269113`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.761001789269113`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.761001789269113`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.199996109070568`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.199996109070568`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.199996109070568`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.199996109070568`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.199996109070568`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.761001789269113`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.761001789269113`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.761001789269113`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.761001789269113`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -16.761001789269113`}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -16.761001789269113`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.761001789269113`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.761001789269113`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"fdddc1b4-121a-4e84-a247-af5536c8d3b8"],
                Text[{1, "5a", "convdouble_3x3_0", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -16.761001789269113}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5469839966963606}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5469839966963606}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5469839966963606}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5469839966963606}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5469839966963606}], 
                 Offset[{0, 0}, {6.089807129355393, -0.27092262119910737`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.27092262119910737`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.27092262119910737`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.27092262119910737`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.5469839966963606}], 
                 Offset[{0, 0}, {5.638887821063309, 0.5469839966963606}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5469839966963606}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.5469839966963606}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.5469839966963606}], 
                 Offset[{0, 0}, {6.089807129355393, -0.27092262119910737`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.27092262119910737`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.27092262119910737`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.27092262119910737`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {
                  6.089807129355393, -0.27092262119910737`}], 
                 Offset[{168., -7.999999999999963}, {
                  6.089807129355393, -0.27092262119910737`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -0.27092262119910737`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.27092262119910737`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"d5f9a17f-a4fd-4ed3-b3f4-cae4b695500f"],
                Text[{1, "5a", "bndouble_3x3_0", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, -0.27092262119910737}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.055355238311708965`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.055355238311708965`}], 
                 Offset[{0., 0.}, {
                  5.695252734599819, -0.055355238311708965`}], 
                 Offset[{0., 0.}, {
                  5.695252734599819, -0.055355238311708965`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.055355238311708965`}],
                  Offset[{0, 0}, {6.089807129355393, -2.247764580835476}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.247764580835476}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.247764580835476}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.247764580835476}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.055355238311708965`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.055355238311708965`}], 
                 Offset[{0., 0.}, {
                  5.695252734599819, -0.055355238311708965`}], 
                 Offset[{0., 0.}, {
                  5.695252734599819, -0.055355238311708965`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.055355238311708965`}],
                  Offset[{0, 0}, {6.089807129355393, -2.247764580835476}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.247764580835476}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.247764580835476}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.247764580835476}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -2.247764580835476}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -2.247764580835476}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.247764580835476}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.247764580835476}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"74494826-7f8a-4143-9b36-0b2d09519a08"],
                Text[{1, "5a", "bndouble_3x3_0", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -2.247764580835476}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.0251702661825854`}], 
                 Offset[{0, 0}, {5.638887821063309, -2.0251702661825854`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.0251702661825854`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.0251702661825854`}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.0251702661825854`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.84800399217038}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.84800399217038}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.84800399217038}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.84800399217038}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.0251702661825854`}], 
                 Offset[{0, 0}, {5.638887821063309, -2.0251702661825854`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.0251702661825854`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.0251702661825854`}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.0251702661825854`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.84800399217038}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.84800399217038}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.84800399217038}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.84800399217038}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -6.84800399217038}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -6.84800399217038}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -6.84800399217038}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.84800399217038}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"e7c76469-1564-4746-99ae-b5b543fa1e0a"],
                Text[{1, "5a", "convdouble_3x3_1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -6.84800399217038}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.08240153693753}], 
                 Offset[{0, 0}, {5.638887821063309, -16.08240153693753}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.08240153693753}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.08240153693753}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.08240153693753}], 
                 Offset[{0, 0}, {6.089807129355393, -16.541703336923295`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.541703336923295`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.541703336923295`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.541703336923295`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.08240153693753}], 
                 Offset[{0, 0}, {5.638887821063309, -16.08240153693753}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.08240153693753}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.08240153693753}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.08240153693753}], 
                 Offset[{0, 0}, {6.089807129355393, -16.541703336923295`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.541703336923295`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.541703336923295`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.541703336923295`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -16.541703336923295`}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -16.541703336923295`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.541703336923295`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.541703336923295`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"21809b3c-f5b4-4553-90a4-764d3798f042"],
                Text[{1, "5a", "convdouble_3x3_1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -16.541703336923295}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6027648977824808}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6027648977824808}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6027648977824808}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6027648977824808}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6027648977824808}], 
                 Offset[{0, 0}, {6.089807129355393, 0.1390654433251033}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.1390654433251033}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.1390654433251033}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.1390654433251033}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.6027648977824808}], 
                 Offset[{0, 0}, {5.638887821063309, 0.6027648977824808}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6027648977824808}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.6027648977824808}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.6027648977824808}], 
                 Offset[{0, 0}, {6.089807129355393, 0.1390654433251033}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.1390654433251033}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.1390654433251033}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.1390654433251033}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {6.089807129355393, 
                  0.1390654433251033}], 
                 Offset[{168., -7.999999999999963}, {6.089807129355393, 
                  0.1390654433251033}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.1390654433251033}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.1390654433251033}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"2d188f89-1137-4135-a198-00ea8a7e29ec"],
                Text[{1, "5a", "bndouble_3x3_1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, 0.1390654433251033}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.06086668349416601}], 
                 Offset[{0, 0}, {5.638887821063309, -0.06086668349416601}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.06086668349416601}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.06086668349416601}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.06086668349416601}], 
                 Offset[{0, 0}, {6.089807129355393, -2.282530447991155}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.282530447991155}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.282530447991155}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.282530447991155}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.06086668349416601}], 
                 Offset[{0, 0}, {5.638887821063309, -0.06086668349416601}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.06086668349416601}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.06086668349416601}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.06086668349416601}], 
                 Offset[{0, 0}, {6.089807129355393, -2.282530447991155}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.282530447991155}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.282530447991155}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.282530447991155}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -2.282530447991155}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -2.282530447991155}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -2.282530447991155}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -2.282530447991155}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"6d5b4441-ffd6-4739-bedd-37030ce8c59f"],
                Text[{1, "5a", "bndouble_3x3_1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -2.282530447991155}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.6461284250142936`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.6461284250142936`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6461284250142936`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6461284250142936`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.6461284250142936`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.886247561445645}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.886247561445645}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.886247561445645}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.886247561445645}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.6461284250142936`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.6461284250142936`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6461284250142936`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6461284250142936`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.6461284250142936`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.886247561445645}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.886247561445645}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.886247561445645}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.886247561445645}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{132., 8.00000000000003}, {
                  6.089807129355393, -5.886247561445645}], 
                 Offset[{132., -7.999999999999971}, {
                  6.089807129355393, -5.886247561445645}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.886247561445645}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.886247561445645}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"141a32d9-b981-4ab5-a1cb-d68d13b53de5"],
                Text[{1, "5a", "convproj", "Weights"}]],
               BoxRotation->0.], 
              Offset[{71., 1.5765166949677223*^-14}, \
{6.089807129355393, -5.886247561445645}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.72605984951543}], 
                 Offset[{0, 0}, {5.638887821063309, -15.72605984951543}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.72605984951543}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.72605984951543}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.72605984951543}], 
                 Offset[{0, 0}, {6.089807129355393, -15.56952789769621}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.56952789769621}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.56952789769621}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.56952789769621}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.72605984951543}], 
                 Offset[{0, 0}, {5.638887821063309, -15.72605984951543}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.72605984951543}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.72605984951543}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.72605984951543}], 
                 Offset[{0, 0}, {6.089807129355393, -15.56952789769621}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.56952789769621}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.56952789769621}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.56952789769621}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{126., 8.000000000000028}, {
                  6.089807129355393, -15.56952789769621}], 
                 Offset[{126., -7.9999999999999725`}, {
                  6.089807129355393, -15.56952789769621}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.56952789769621}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -15.56952789769621}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"1278aea9-c61c-4309-b35d-03366e16f348"],
                Text[{1, "5a", "convproj", "Biases"}]],
               BoxRotation->0.], 
              Offset[{68., 1.509903313490213*^-14}, \
{6.089807129355393, -15.56952789769621}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.38039888079949946`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.38039888079949946`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.38039888079949946`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.38039888079949946`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.38039888079949946`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.2045353529023755`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.2045353529023755`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.2045353529023755`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.2045353529023755`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.38039888079949946`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.38039888079949946`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.38039888079949946`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.38039888079949946`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.38039888079949946`}], 
                 Offset[{0, 0}, {6.089807129355393, -1.2045353529023755`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.2045353529023755`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.2045353529023755`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.2045353529023755`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{122., 8.000000000000027}, {
                  6.089807129355393, -1.2045353529023755`}], 
                 Offset[{122., -7.999999999999973}, {
                  6.089807129355393, -1.2045353529023755`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -1.2045353529023755`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.2045353529023755`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3474f0e3-15b5-4b3d-8103-adfa00486852"],
                Text[{1, "5a", "bnproj", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{66., 1.4654943925052066*^-14}, \
{6.089807129355393, -1.2045353529023755}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.38080536622289396`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.38080536622289396`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.38080536622289396`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.38080536622289396`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.38080536622289396`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.3284214234924487`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.3284214234924487`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.3284214234924487`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.3284214234924487`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.38080536622289396`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.38080536622289396`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.38080536622289396`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.38080536622289396`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.38080536622289396`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.3284214234924487`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.3284214234924487`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.3284214234924487`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.3284214234924487`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{107., 8.000000000000023}, {
                  6.089807129355393, -3.3284214234924487`}], 
                 Offset[{107., -7.999999999999976}, {
                  6.089807129355393, -3.3284214234924487`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -3.3284214234924487`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.3284214234924487`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5a\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"01abbf93-5517-432e-bd89-a0a579adcdf9"],
                Text[{1, "5a", "bnproj", "Beta"}]],
               BoxRotation->0.], Offset[{58.5, 1.2989609388114332*^-14}, 
              {6.089807129355393, -3.3284214234924487}], {0, 0}]}], 
           GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.5126627576646647`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.5126627576646647`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5126627576646647`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5126627576646647`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.5126627576646647`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.537613121715075}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.537613121715075}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.537613121715075}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.537613121715075}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.5126627576646647`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.5126627576646647`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5126627576646647`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.5126627576646647`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.5126627576646647`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.537613121715075}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.537613121715075}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.537613121715075}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.537613121715075}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -5.537613121715075}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -5.537613121715075}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.537613121715075}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.537613121715075}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"f2477f22-cc46-40ee-8d13-4e1a701ff630"],
                Text[{1, "5b", "conv1x1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -5.537613121715075}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -14.79316074906918}], 
                 Offset[{0, 0}, {5.638887821063309, -14.79316074906918}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.79316074906918}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.79316074906918}], 
                 Offset[{0., 0.}, {5.75161764813633, -14.79316074906918}], 
                 Offset[{0, 0}, {6.089807129355393, -13.64809936443996}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -13.64809936443996}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.64809936443996}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.64809936443996}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -14.79316074906918}], 
                 Offset[{0, 0}, {5.638887821063309, -14.79316074906918}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.79316074906918}], 
                 Offset[{0., 0.}, {5.695252734599819, -14.79316074906918}], 
                 Offset[{0., 0.}, {5.75161764813633, -14.79316074906918}], 
                 Offset[{0, 0}, {6.089807129355393, -13.64809936443996}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -13.64809936443996}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.64809936443996}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -13.64809936443996}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -13.64809936443996}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -13.64809936443996}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -13.64809936443996}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -13.64809936443996}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"conv1x1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"29ab6208-7fdf-4136-963e-c80b95864575"],
                Text[{1, "5b", "conv1x1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -13.64809936443996}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 1.1572511836357509`}], 
                 Offset[{0, 0}, {5.638887821063309, 1.1572511836357509`}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.1572511836357509`}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.1572511836357509`}], 
                 Offset[{0., 0.}, {5.75161764813633, 1.1572511836357509`}], 
                 Offset[{0, 0}, {6.089807129355393, 1.3238389735329237`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  1.3238389735329237`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.3238389735329237`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.3238389735329237`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 1.1572511836357509`}], 
                 Offset[{0, 0}, {5.638887821063309, 1.1572511836357509`}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.1572511836357509`}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.1572511836357509`}], 
                 Offset[{0., 0.}, {5.75161764813633, 1.1572511836357509`}], 
                 Offset[{0, 0}, {6.089807129355393, 1.3238389735329237`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  1.3238389735329237`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.3238389735329237`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.3238389735329237`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {6.089807129355393, 
                  1.3238389735329237`}], 
                 Offset[{121., -7.999999999999973}, {6.089807129355393, 
                  1.3238389735329237`}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  1.3238389735329237`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  1.3238389735329237`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3f19e436-c8ae-4154-a7b0-ba4707f0acc4"],
                Text[{1, "5b", "bn1x1", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, 1.3238389735329237}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 1.3223131621037836`}], 
                 Offset[{0, 0}, {5.638887821063309, 1.3223131621037836`}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.3223131621037836`}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.3223131621037836`}], 
                 Offset[{0., 0.}, {5.75161764813633, 1.3223131621037836`}], 
                 Offset[{0, 0}, {6.089807129355393, 1.4787383151870288`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  1.4787383151870288`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.4787383151870288`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.4787383151870288`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 1.3223131621037836`}], 
                 Offset[{0, 0}, {5.638887821063309, 1.3223131621037836`}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.3223131621037836`}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.3223131621037836`}], 
                 Offset[{0., 0.}, {5.75161764813633, 1.3223131621037836`}], 
                 Offset[{0, 0}, {6.089807129355393, 1.4787383151870288`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  1.4787383151870288`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.4787383151870288`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.4787383151870288`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {6.089807129355393, 
                  1.4787383151870288`}], 
                 Offset[{106., -7.999999999999977}, {6.089807129355393, 
                  1.4787383151870288`}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  1.4787383151870288`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  1.4787383151870288`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bn1x1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"b68afcee-47a1-48b0-9b38-b535ca1ad2ee"],
                Text[{1, "5b", "bn1x1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, 1.4787383151870288}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4809645125734947`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4809645125734947`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4809645125734947`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4809645125734947`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4809645125734947`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.388939447132028}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.388939447132028}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.388939447132028}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.388939447132028}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.4809645125734947`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.4809645125734947`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4809645125734947`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.4809645125734947`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.4809645125734947`}], 
                 Offset[{0, 0}, {6.089807129355393, -5.388939447132028}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.388939447132028}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.388939447132028}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.388939447132028}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{167., 8.000000000000037}, {
                  6.089807129355393, -5.388939447132028}], 
                 Offset[{167., -7.999999999999963}, {
                  6.089807129355393, -5.388939447132028}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.388939447132028}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.388939447132028}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"86de9a4f-ed0a-4cb2-b4ac-ad3653901773"],
                Text[{1, "5b", "conv3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{88.5, 1.965094753586527*^-14}, \
{6.089807129355393, -5.388939447132028}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.725794259254574`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.725794259254574`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.725794259254574`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.725794259254574`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.725794259254574`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.525135113303076`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.525135113303076`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.525135113303076`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.525135113303076`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.725794259254574`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.725794259254574`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.725794259254574`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.725794259254574`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.725794259254574`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.525135113303076`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.525135113303076`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.525135113303076`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.525135113303076`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{161., 8.000000000000036}, {
                  6.089807129355393, -15.525135113303076`}], 
                 Offset[{161., -7.9999999999999645`}, {
                  6.089807129355393, -15.525135113303076`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.525135113303076`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.525135113303076`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"conv3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"841ea30c-1668-4296-90ac-a4eccdc2eb69"],
                Text[{1, "5b", "conv3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{85.5, 1.8984813721090177*^-14}, \
{6.089807129355393, -15.525135113303076}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.7428897006664965}], 
                 Offset[{0, 0}, {5.638887821063309, 0.7428897006664965}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7428897006664965}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7428897006664965}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.7428897006664965}], 
                 Offset[{0, 0}, {6.089807129355393, 0.6634504756845995}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.6634504756845995}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.6634504756845995}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.6634504756845995}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.7428897006664965}], 
                 Offset[{0, 0}, {5.638887821063309, 0.7428897006664965}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7428897006664965}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.7428897006664965}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.7428897006664965}], 
                 Offset[{0, 0}, {6.089807129355393, 0.6634504756845995}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.6634504756845995}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.6634504756845995}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.6634504756845995}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{157., 8.000000000000034}, {6.089807129355393, 
                  0.6634504756845995}], 
                 Offset[{157., -7.999999999999965}, {6.089807129355393, 
                  0.6634504756845995}], 
                 Offset[{10., -7.999999999999997}, {6.089807129355393, 
                  0.6634504756845995}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.6634504756845995}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"b0f7cc0f-3fba-431b-bace-e45ed7a852e4"],
                Text[{1, "5b", "bn3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{83.5, 1.8540724511240114*^-14}, \
{6.089807129355393, 0.6634504756845995}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.0216843104815502}], 
                 Offset[{0, 0}, {5.638887821063309, -0.0216843104815502}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.0216843104815502}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.0216843104815502}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.0216843104815502}], 
                 Offset[{0, 0}, {6.089807129355393, -2.1091045083134303`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.1091045083134303`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.1091045083134303`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.1091045083134303`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.0216843104815502}], 
                 Offset[{0, 0}, {5.638887821063309, -0.0216843104815502}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.0216843104815502}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.0216843104815502}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.0216843104815502}], 
                 Offset[{0, 0}, {6.089807129355393, -2.1091045083134303`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -2.1091045083134303`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.1091045083134303`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -2.1091045083134303`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{142., 8.000000000000032}, {
                  6.089807129355393, -2.1091045083134303`}], 
                 Offset[{142., -7.999999999999969}, {
                  6.089807129355393, -2.1091045083134303`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -2.1091045083134303`}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -2.1091045083134303`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bn3x3_reduce\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3b8638e5-c4fd-4b27-a8a4-6defce1b3b64"],
                Text[{1, "5b", "bn3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{76., 1.687538997430238*^-14}, \
{6.089807129355393, -2.1091045083134303}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.025851330483315}], 
                 Offset[{0, 0}, {5.638887821063309, -2.025851330483315}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.025851330483315}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.025851330483315}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.025851330483315}], 
                 Offset[{0, 0}, {6.089807129355393, -6.91524098062877}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.91524098062877}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.91524098062877}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.91524098062877}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.025851330483315}], 
                 Offset[{0, 0}, {5.638887821063309, -2.025851330483315}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.025851330483315}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.025851330483315}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.025851330483315}], 
                 Offset[{0, 0}, {6.089807129355393, -6.91524098062877}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.91524098062877}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.91524098062877}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.91524098062877}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{131., 8.00000000000003}, {
                  6.089807129355393, -6.91524098062877}], 
                 Offset[{131., -7.999999999999971}, {
                  6.089807129355393, -6.91524098062877}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -6.91524098062877}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.91524098062877}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"626d26cc-a640-4ff3-9a0a-e9895b0e01e1"],
                Text[{1, "5b", "conv3x3", "Weights"}]],
               BoxRotation->0.], 
              Offset[{70.5, 1.5654144647214707*^-14}, \
{6.089807129355393, -6.91524098062877}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.716514828014322`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.716514828014322`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.716514828014322`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.716514828014322`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.716514828014322`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.434917316989134`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.434917316989134`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.434917316989134`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.434917316989134`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.716514828014322`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.716514828014322`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.716514828014322`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.716514828014322`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.716514828014322`}], 
                 Offset[{0, 0}, {6.089807129355393, -15.434917316989134`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.434917316989134`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.434917316989134`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.434917316989134`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{125., 8.000000000000027}, {
                  6.089807129355393, -15.434917316989134`}], 
                 Offset[{125., -7.9999999999999725`}, {
                  6.089807129355393, -15.434917316989134`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.434917316989134`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.434917316989134`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"conv3x3\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"9d090d51-5677-4148-beda-45de850bf05c"],
                Text[{1, "5b", "conv3x3", "Biases"}]],
               BoxRotation->0.], 
              Offset[{67.5, 1.4988010832439613*^-14}, \
{6.089807129355393, -15.434917316989134}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.9294152802935157}], 
                 Offset[{0, 0}, {5.638887821063309, 0.9294152802935157}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.9294152802935157}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.9294152802935157}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.9294152802935157}], 
                 Offset[{0, 0}, {6.089807129355393, 1.0346962496070105`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  1.0346962496070105`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.0346962496070105`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.0346962496070105`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.9294152802935157}], 
                 Offset[{0, 0}, {5.638887821063309, 0.9294152802935157}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.9294152802935157}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.9294152802935157}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.9294152802935157}], 
                 Offset[{0, 0}, {6.089807129355393, 1.0346962496070105`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  1.0346962496070105`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.0346962496070105`}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.0346962496070105`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{121., 8.000000000000027}, {6.089807129355393, 
                  1.0346962496070105`}], 
                 Offset[{121., -7.999999999999973}, {6.089807129355393, 
                  1.0346962496070105`}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  1.0346962496070105`}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  1.0346962496070105`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"cd33f1dc-888e-4784-8d8a-1c96c43a65e5"],
                Text[{1, "5b", "bn3x3", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{65.5, 1.454392162258955*^-14}, \
{6.089807129355393, 1.0346962496070105}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 1.092581804941879}], 
                 Offset[{0, 0}, {5.638887821063309, 1.092581804941879}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.092581804941879}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.092581804941879}], 
                 Offset[{0., 0.}, {5.75161764813633, 1.092581804941879}], 
                 Offset[{0, 0}, {6.089807129355393, 1.211080839039347}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  1.211080839039347}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.211080839039347}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.211080839039347}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 1.092581804941879}], 
                 Offset[{0, 0}, {5.638887821063309, 1.092581804941879}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.092581804941879}], 
                 Offset[{0., 0.}, {5.695252734599819, 1.092581804941879}], 
                 Offset[{0., 0.}, {5.75161764813633, 1.092581804941879}], 
                 Offset[{0, 0}, {6.089807129355393, 1.211080839039347}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  1.211080839039347}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.211080839039347}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  1.211080839039347}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{106., 8.000000000000023}, {6.089807129355393, 
                  1.211080839039347}], 
                 Offset[{106., -7.999999999999977}, {6.089807129355393, 
                  1.211080839039347}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  1.211080839039347}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  1.211080839039347}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bn3x3\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"063ede4f-4848-4c87-a651-4fc5be12e6df"],
                Text[{1, "5b", "bn3x3", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58., 1.2878587085651816*^-14}, \
{6.089807129355393, 1.211080839039347}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.6817662639548405`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.6817662639548405`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6817662639548405`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6817662639548405`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.6817662639548405`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.0080092734131965`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.0080092734131965`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.0080092734131965`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.0080092734131965`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.6817662639548405`}], 
                 Offset[{0, 0}, {5.638887821063309, -1.6817662639548405`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6817662639548405`}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.6817662639548405`}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.6817662639548405`}], 
                 Offset[{0, 0}, {6.089807129355393, -6.0080092734131965`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -6.0080092734131965`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.0080092734131965`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -6.0080092734131965`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{202., 8.000000000000044}, {
                  6.089807129355393, -6.0080092734131965`}], 
                 Offset[{202., -7.999999999999956}, {
                  6.089807129355393, -6.0080092734131965`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -6.0080092734131965`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -6.0080092734131965`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"5de9681e-042a-4375-8f73-1a65196b7f92"],
                Text[{1, "5b", "convdouble_3x3_reduce", "Weights"}]],
               BoxRotation->0.], 
              Offset[{106., 2.353672812205332*^-14}, \
{6.089807129355393, -6.0080092734131965}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.08677352453789}], 
                 Offset[{0, 0}, {5.638887821063309, -16.08677352453789}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.08677352453789}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.08677352453789}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.08677352453789}], 
                 Offset[{0, 0}, {6.089807129355393, -16.584899443338024`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.584899443338024`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.584899443338024`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.584899443338024`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.08677352453789}], 
                 Offset[{0, 0}, {5.638887821063309, -16.08677352453789}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.08677352453789}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.08677352453789}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.08677352453789}], 
                 Offset[{0, 0}, {6.089807129355393, -16.584899443338024`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.584899443338024`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.584899443338024`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.584899443338024`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{196., 8.000000000000044}, {
                  6.089807129355393, -16.584899443338024`}], 
                 Offset[{196., -7.9999999999999565`}, {
                  6.089807129355393, -16.584899443338024`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -16.584899443338024`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.584899443338024`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", 
                    ",", "\<\"convdouble_3x3_reduce\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"0b968ae0-9c77-4f88-9e71-78ce1af9e11a"],
                Text[{1, "5b", "convdouble_3x3_reduce", "Biases"}]],
               BoxRotation->0.], 
              Offset[{103., 2.2870594307278225*^-14}, \
{6.089807129355393, -16.584899443338024}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.48863382495996227`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.48863382495996227`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48863382495996227`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48863382495996227`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.48863382495996227`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.6250286762887342}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.6250286762887342}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.6250286762887342}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.6250286762887342}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.48863382495996227`}], 
                 Offset[{0, 0}, {5.638887821063309, 0.48863382495996227`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48863382495996227`}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.48863382495996227`}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.48863382495996227`}], 
                 Offset[{0, 0}, {6.089807129355393, -0.6250286762887342}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -0.6250286762887342}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.6250286762887342}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -0.6250286762887342}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{192., 8.000000000000043}, {
                  6.089807129355393, -0.6250286762887342}], 
                 Offset[{192., -7.999999999999957}, {
                  6.089807129355393, -0.6250286762887342}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -0.6250286762887342}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -0.6250286762887342}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"b2d50c76-8bd4-4040-b8ce-cd5e058e4024"],
                Text[{1, "5b", "bndouble_3x3_reduce", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{101., 2.2426505097428162*^-14}, \
{6.089807129355393, -0.6250286762887342}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.30893238065892076`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.30893238065892076`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.30893238065892076`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.30893238065892076`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.30893238065892076`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.1359495243157403`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.1359495243157403`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.1359495243157403`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.1359495243157403`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.30893238065892076`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.30893238065892076`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.30893238065892076`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.30893238065892076`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.30893238065892076`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.1359495243157403`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.1359495243157403`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.1359495243157403`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.1359495243157403`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{177., 8.000000000000039}, {
                  6.089807129355393, -3.1359495243157403`}], 
                 Offset[{177., -7.999999999999961}, {
                  6.089807129355393, -3.1359495243157403`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -3.1359495243157403`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.1359495243157403`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bndouble_3x3_reduce\"\>",
                     ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"7621236c-b93a-4b31-9f7f-1bf7216925a6"],
                Text[{1, "5b", "bndouble_3x3_reduce", "Beta"}]],
               BoxRotation->0.], 
              Offset[{93.5, 2.0761170560490427*^-14}, \
{6.089807129355393, -3.1359495243157403}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.1522204069255038`}], 
                 Offset[{0, 0}, {5.638887821063309, -2.1522204069255038`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.1522204069255038`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.1522204069255038`}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.1522204069255038`}], 
                 Offset[{0, 0}, {6.089807129355393, -7.0693820832727825`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -7.0693820832727825`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.0693820832727825`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.0693820832727825`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.1522204069255038`}], 
                 Offset[{0, 0}, {5.638887821063309, -2.1522204069255038`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.1522204069255038`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.1522204069255038`}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.1522204069255038`}], 
                 Offset[{0, 0}, {6.089807129355393, -7.0693820832727825`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -7.0693820832727825`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.0693820832727825`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.0693820832727825`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -7.0693820832727825`}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -7.0693820832727825`}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -7.0693820832727825`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -7.0693820832727825`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"687391ee-7849-4610-8862-6e75bf184a4e"],
                Text[{1, "5b", "convdouble_3x3_0", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -7.0693820832727825}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.278541023998716`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.278541023998716`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.278541023998716`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.278541023998716`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.278541023998716`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.805831660792485`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.805831660792485`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.805831660792485`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.805831660792485`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -16.278541023998716`}], 
                 Offset[{0, 0}, {5.638887821063309, -16.278541023998716`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.278541023998716`}], 
                 Offset[{0., 0.}, {5.695252734599819, -16.278541023998716`}], 
                 Offset[{0., 0.}, {5.75161764813633, -16.278541023998716`}], 
                 Offset[{0, 0}, {6.089807129355393, -16.805831660792485`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -16.805831660792485`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.805831660792485`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -16.805831660792485`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -16.805831660792485`}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -16.805831660792485`}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -16.805831660792485`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -16.805831660792485`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"convdouble_3x3_0\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"1b3e39ef-042e-4fbb-8d52-6d108a3a49cc"],
                Text[{1, "5b", "convdouble_3x3_0", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -16.805831660792485}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.3948763243057487}], 
                 Offset[{0, 0}, {5.638887821063309, 0.3948763243057487}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3948763243057487}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3948763243057487}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.3948763243057487}], 
                 Offset[{0, 0}, {6.089807129355393, -1.1312924677089857`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.1312924677089857`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.1312924677089857`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.1312924677089857`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.3948763243057487}], 
                 Offset[{0, 0}, {5.638887821063309, 0.3948763243057487}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3948763243057487}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.3948763243057487}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.3948763243057487}], 
                 Offset[{0, 0}, {6.089807129355393, -1.1312924677089857`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -1.1312924677089857`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.1312924677089857`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -1.1312924677089857`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {
                  6.089807129355393, -1.1312924677089857`}], 
                 Offset[{168., -7.999999999999963}, {
                  6.089807129355393, -1.1312924677089857`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -1.1312924677089857`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -1.1312924677089857`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"3ad41353-260c-4351-a865-6f4ecc9ddfd4"],
                Text[{1, "5b", "bndouble_3x3_0", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{89., 1.9761969838327786*^-14}, \
{6.089807129355393, -1.1312924677089857}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.44422018456251067`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.44422018456251067`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.44422018456251067`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.44422018456251067`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.44422018456251067`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.5799536539355894`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.5799536539355894`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.5799536539355894`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.5799536539355894`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -0.44422018456251067`}], 
                 Offset[{0, 0}, {5.638887821063309, -0.44422018456251067`}], 
                 Offset[{0., 0.}, {5.695252734599819, -0.44422018456251067`}],
                  Offset[{0., 0.}, {
                  5.695252734599819, -0.44422018456251067`}], 
                 Offset[{0., 0.}, {5.75161764813633, -0.44422018456251067`}], 
                 Offset[{0, 0}, {6.089807129355393, -3.5799536539355894`}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -3.5799536539355894`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.5799536539355894`}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -3.5799536539355894`}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {
                  6.089807129355393, -3.5799536539355894`}], 
                 Offset[{153., -7.999999999999966}, {
                  6.089807129355393, -3.5799536539355894`}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -3.5799536539355894`}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -3.5799536539355894`}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bndouble_3x3_0\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"df9317bd-5f8c-4047-ad9a-214c533e9289"],
                Text[{1, "5b", "bndouble_3x3_0", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, -3.5799536539355894}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.2374476658982}], 
                 Offset[{0, 0}, {5.638887821063309, -2.2374476658982}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.2374476658982}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.2374476658982}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.2374476658982}], 
                 Offset[{0, 0}, {6.089807129355393, -7.159059878068782}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -7.159059878068782}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.159059878068782}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.159059878068782}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.2374476658982}], 
                 Offset[{0, 0}, {5.638887821063309, -2.2374476658982}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.2374476658982}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.2374476658982}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.2374476658982}], 
                 Offset[{0, 0}, {6.089807129355393, -7.159059878068782}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -7.159059878068782}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.159059878068782}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.159059878068782}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{178., 8.000000000000039}, {
                  6.089807129355393, -7.159059878068782}], 
                 Offset[{178., -7.999999999999961}, {
                  6.089807129355393, -7.159059878068782}], 
                 Offset[{10., -7.9999999999999964`}, {
                  6.089807129355393, -7.159059878068782}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -7.159059878068782}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"021e3013-a024-4430-b467-a820a0d2e3d2"],
                Text[{1, "5b", "convdouble_3x3_1", "Weights"}]],
               BoxRotation->0.], 
              Offset[{94., 2.0872192862952943*^-14}, \
{6.089807129355393, -7.159059878068782}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.66392379353123}], 
                 Offset[{0, 0}, {5.638887821063309, -15.66392379353123}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.66392379353123}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.66392379353123}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.66392379353123}], 
                 Offset[{0, 0}, {6.089807129355393, -15.29421660673137}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.29421660673137}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.29421660673137}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.29421660673137}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.66392379353123}], 
                 Offset[{0, 0}, {5.638887821063309, -15.66392379353123}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.66392379353123}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.66392379353123}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.66392379353123}], 
                 Offset[{0, 0}, {6.089807129355393, -15.29421660673137}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -15.29421660673137}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.29421660673137}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -15.29421660673137}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{172., 8.000000000000037}, {
                  6.089807129355393, -15.29421660673137}], 
                 Offset[{172., -7.999999999999962}, {
                  6.089807129355393, -15.29421660673137}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -15.29421660673137}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -15.29421660673137}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"convdouble_3x3_1\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"74efe72d-7460-4828-8f47-af1d4facea8e"],
                Text[{1, "5b", "convdouble_3x3_1", "Biases"}]],
               BoxRotation->0.], 
              Offset[{91., 2.020605904817785*^-14}, \
{6.089807129355393, -15.29421660673137}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.8047329128479755}], 
                 Offset[{0, 0}, {5.638887821063309, 0.8047329128479755}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8047329128479755}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8047329128479755}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.8047329128479755}], 
                 Offset[{0, 0}, {6.089807129355393, 0.7122217879446718}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.7122217879446718}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.7122217879446718}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.7122217879446718}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.8047329128479755}], 
                 Offset[{0, 0}, {5.638887821063309, 0.8047329128479755}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8047329128479755}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8047329128479755}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.8047329128479755}], 
                 Offset[{0, 0}, {6.089807129355393, 0.7122217879446718}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.7122217879446718}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.7122217879446718}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.7122217879446718}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{168., 8.000000000000037}, {6.089807129355393, 
                  0.7122217879446718}], 
                 Offset[{168., -7.999999999999963}, {6.089807129355393, 
                  0.7122217879446718}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.7122217879446718}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.7122217879446718}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"c2ed4fa9-d859-4d3d-a7b7-4284ca77dbfd"],
                Text[{1, "5b", "bndouble_3x3_1", "Gamma"}]],
               BoxRotation->0.], Offset[{89., 1.9761969838327786*^-14}, 
              {6.089807129355393, 0.7122217879446718}], {0, 0}]}], 
           GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.8878775214893688}], 
                 Offset[{0, 0}, {5.638887821063309, 0.8878775214893688}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8878775214893688}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8878775214893688}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.8878775214893688}], 
                 Offset[{0, 0}, {6.089807129355393, 0.864155322147816}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.864155322147816}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.864155322147816}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.864155322147816}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.8878775214893688}], 
                 Offset[{0, 0}, {5.638887821063309, 0.8878775214893688}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8878775214893688}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8878775214893688}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.8878775214893688}], 
                 Offset[{0, 0}, {6.089807129355393, 0.864155322147816}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.864155322147816}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.864155322147816}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.864155322147816}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{153., 8.000000000000034}, {6.089807129355393, 
                  0.864155322147816}], 
                 Offset[{153., -7.999999999999966}, {6.089807129355393, 
                  0.864155322147816}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.864155322147816}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.864155322147816}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bndouble_3x3_1\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"2057946a-28c2-467e-aa51-49a880266358"],
                Text[{1, "5b", "bndouble_3x3_1", "Beta"}]],
               BoxRotation->0.], 
              Offset[{81.5, 1.8096635301390052*^-14}, \
{6.089807129355393, 0.864155322147816}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.372950891355843}], 
                 Offset[{0, 0}, {5.638887821063309, -1.372950891355843}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.372950891355843}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.372950891355843}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.372950891355843}], 
                 Offset[{0, 0}, {6.089807129355393, -5.075484211211287}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.075484211211287}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.075484211211287}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.075484211211287}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -1.372950891355843}], 
                 Offset[{0, 0}, {5.638887821063309, -1.372950891355843}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.372950891355843}], 
                 Offset[{0., 0.}, {5.695252734599819, -1.372950891355843}], 
                 Offset[{0., 0.}, {5.75161764813633, -1.372950891355843}], 
                 Offset[{0, 0}, {6.089807129355393, -5.075484211211287}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -5.075484211211287}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.075484211211287}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -5.075484211211287}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{132., 8.00000000000003}, {
                  6.089807129355393, -5.075484211211287}], 
                 Offset[{132., -7.999999999999971}, {
                  6.089807129355393, -5.075484211211287}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -5.075484211211287}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -5.075484211211287}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Weights\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"10f5adce-0457-48f9-93ce-5589d1ec82ed"],
                Text[{1, "5b", "convproj", "Weights"}]],
               BoxRotation->0.], 
              Offset[{71., 1.5765166949677223*^-14}, \
{6.089807129355393, -5.075484211211287}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.429243231073531`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.429243231073531`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.429243231073531`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.429243231073531`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.429243231073531`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.8764601161167}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.8764601161167}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.8764601161167}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.8764601161167}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -15.429243231073531`}], 
                 Offset[{0, 0}, {5.638887821063309, -15.429243231073531`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.429243231073531`}], 
                 Offset[{0., 0.}, {5.695252734599819, -15.429243231073531`}], 
                 Offset[{0., 0.}, {5.75161764813633, -15.429243231073531`}], 
                 Offset[{0, 0}, {6.089807129355393, -14.8764601161167}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -14.8764601161167}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.8764601161167}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -14.8764601161167}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{126., 8.000000000000028}, {
                  6.089807129355393, -14.8764601161167}], 
                 Offset[{126., -7.9999999999999725`}, {
                  6.089807129355393, -14.8764601161167}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -14.8764601161167}], 
                 Offset[{10., 8.000000000000004}, {
                  6.089807129355393, -14.8764601161167}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"convproj\"\>", 
                    ",", "\<\"Biases\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"77535776-b7b6-4a67-8520-3331c55a89e4"],
                Text[{1, "5b", "convproj", "Biases"}]],
               BoxRotation->0.], 
              Offset[{68., 1.509903313490213*^-14}, \
{6.089807129355393, -14.8764601161167}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.8165357144559463}], 
                 Offset[{0, 0}, {5.638887821063309, 0.8165357144559463}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8165357144559463}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8165357144559463}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.8165357144559463}], 
                 Offset[{0, 0}, {6.089807129355393, 0.7599079943458098}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.7599079943458098}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.7599079943458098}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.7599079943458098}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.8165357144559463}], 
                 Offset[{0, 0}, {5.638887821063309, 0.8165357144559463}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8165357144559463}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.8165357144559463}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.8165357144559463}], 
                 Offset[{0, 0}, {6.089807129355393, 0.7599079943458098}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.7599079943458098}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.7599079943458098}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.7599079943458098}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{122., 8.000000000000027}, {6.089807129355393, 
                  0.7599079943458098}], 
                 Offset[{122., -7.999999999999973}, {6.089807129355393, 
                  0.7599079943458098}], 
                 Offset[{10., -7.999999999999998}, {6.089807129355393, 
                  0.7599079943458098}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.7599079943458098}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Gamma\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"be244e32-71fa-41ae-93ec-32f182199561"],
                Text[{1, "5b", "bnproj", "Gamma"}]],
               BoxRotation->0.], 
              Offset[{66., 1.4654943925052066*^-14}, \
{6.089807129355393, 0.7599079943458098}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.9178075569819436}], 
                 Offset[{0, 0}, {5.638887821063309, 0.9178075569819436}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.9178075569819436}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.9178075569819436}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.9178075569819436}], 
                 Offset[{0, 0}, {6.089807129355393, 0.9734804412109875}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.9734804412109875}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.9734804412109875}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.9734804412109875}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, 0.9178075569819436}], 
                 Offset[{0, 0}, {5.638887821063309, 0.9178075569819436}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.9178075569819436}], 
                 Offset[{0., 0.}, {5.695252734599819, 0.9178075569819436}], 
                 Offset[{0., 0.}, {5.75161764813633, 0.9178075569819436}], 
                 Offset[{0, 0}, {6.089807129355393, 0.9734804412109875}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {6.089807129355393, 
                  0.9734804412109875}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.9734804412109875}], 
                 Offset[{10., 2.220446049250313*^-15}, {6.089807129355393, 
                  0.9734804412109875}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{107., 8.000000000000023}, {6.089807129355393, 
                  0.9734804412109875}], 
                 Offset[{107., -7.999999999999976}, {6.089807129355393, 
                  0.9734804412109875}], 
                 Offset[{10., -7.999999999999997}, {6.089807129355393, 
                  0.9734804412109875}], 
                 Offset[{10., 8.000000000000002}, {6.089807129355393, 
                  0.9734804412109875}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "\<\"5b\"\>", ",", "\<\"bnproj\"\>", 
                    ",", "\<\"Beta\"\>"}], "}"}], TextForm]], "InlineText",
                 ExpressionUUID->"f40c6287-5c9b-4456-93fd-cffbe9fd3099"],
                Text[{1, "5b", "bnproj", "Beta"}]],
               BoxRotation->0.], 
              Offset[{58.5, 1.2989609388114332*^-14}, \
{6.089807129355393, 0.9734804412109875}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.7090255089864947`}], 
                 Offset[{0, 0}, {5.638887821063309, -2.7090255089864947`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.7090255089864947`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.7090255089864947`}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.7090255089864947`}], 
                 Offset[{0, 0}, {6.089807129355393, -7.861609548723712}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -7.861609548723712}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.861609548723712}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.861609548723712}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -2.7090255089864947`}], 
                 Offset[{0, 0}, {5.638887821063309, -2.7090255089864947`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.7090255089864947`}], 
                 Offset[{0., 0.}, {5.695252734599819, -2.7090255089864947`}], 
                 Offset[{0., 0.}, {5.75161764813633, -2.7090255089864947`}], 
                 Offset[{0, 0}, {6.089807129355393, -7.861609548723712}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -7.861609548723712}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.861609548723712}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -7.861609548723712}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{70., 8.000000000000016}, {
                  6.089807129355393, -7.861609548723712}], 
                 Offset[{70., -7.999999999999984}, {
                  6.089807129355393, -7.861609548723712}], 
                 Offset[{10., -7.999999999999998}, {
                  6.089807129355393, -7.861609548723712}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -7.861609548723712}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{"2", ",", "\<\"Weights\"\>"}], "}"}], TextForm]], 
                 "InlineText",ExpressionUUID->
                 "68bcb871-4525-4315-8c67-26154551f415"],
                Text[{2, "Weights"}]],
               BoxRotation->0.], 
              Offset[{40., 8.881784197001252*^-15}, \
{6.089807129355393, -7.861609548723712}], {0, 0}]}], GraphicsGroupBox[{{
              {GrayLevel[1], AbsoluteThickness[4], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -4.242546517620995}], 
                 Offset[{0, 0}, {5.638887821063309, -4.242546517620995}], 
                 Offset[{0., 0.}, {5.695252734599819, -4.242546517620995}], 
                 Offset[{0., 0.}, {5.695252734599819, -4.242546517620995}], 
                 Offset[{0., 0.}, {5.75161764813633, -4.242546517620995}], 
                 Offset[{0, 0}, {6.089807129355393, -9.454264708922583}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -9.454264708922583}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -9.454264708922583}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -9.454264708922583}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               BSplineCurveBox[{
                Offset[{0, 0}, {5.638887821063309, -4.242546517620995}], 
                 Offset[{0, 0}, {5.638887821063309, -4.242546517620995}], 
                 Offset[{0., 0.}, {5.695252734599819, -4.242546517620995}], 
                 Offset[{0., 0.}, {5.695252734599819, -4.242546517620995}], 
                 Offset[{0., 0.}, {5.75161764813633, -4.242546517620995}], 
                 Offset[{0, 0}, {6.089807129355393, -9.454264708922583}], 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  6.089807129355393, -9.454264708922583}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -9.454264708922583}], 
                 Offset[{10., 2.220446049250313*^-15}, {
                  6.089807129355393, -9.454264708922583}]}]}}, {
              {GrayLevel[1], Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
               PolygonBox[{
                Offset[{64., 8.000000000000014}, {
                  6.089807129355393, -9.454264708922583}], 
                 Offset[{64., -7.999999999999986}, {
                  6.089807129355393, -9.454264708922583}], 
                 Offset[{10., -7.999999999999997}, {
                  6.089807129355393, -9.454264708922583}], 
                 Offset[{10., 8.000000000000002}, {
                  6.089807129355393, -9.454264708922583}]}]}}, {
              {RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               EdgeForm[None]}}, {}, InsetBox[
              RotationBox[
               InterpretationBox[Cell[BoxData[
                 FormBox[
                  RowBox[{"{", 
                   RowBox[{"2", ",", "\<\"Biases\"\>"}], "}"}], TextForm]], 
                 "InlineText",ExpressionUUID->
                 "6d6829e2-1be1-4af7-9580-e0c95c2dd008"],
                Text[{2, "Biases"}]],
               BoxRotation->0.], 
              Offset[{37., 8.215650382226158*^-15}, \
{6.089807129355393, -9.454264708922583}], {0, 0}]}]}}}}, {{{}}}}, {{}, {}}, \
{{}, {}}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.20310061318959435`, -17.995842760788623`},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledFrameTicks[{Log, Exp}]}, {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledFrameTicks[{Log, Exp}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->{{All, 242.}, {All, All}},
    ImageSize->{580.09765625, Automatic},
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Exp[#]& )[
           Part[#, 1]], 
          (Exp[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Exp[#]& )[
           Part[#, 1]], 
          (Exp[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.1150304357887968, 
     5.521460917862246}, {-17.612030255434178`, 6.184345076541212}},
    PlotRangeClipping->False,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->FrontEndValueCache[{
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, {{{0., 
         FormBox["1", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
         FormBox["5", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {2.302585092994046, 
         FormBox["10", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {3.912023005428146, 
         FormBox["50", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {4.605170185988092, 
         FormBox["100", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {0.6931471805599453, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {1.791759469228055, 
         FormBox[
          InterpretationBox[
           StyleBox[
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {2.995732273553991, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {4.0943445622221, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {4.248495242049359, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {4.382026634673881, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {4.499809670330265, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {5.298317366548036, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {5.703782474656201, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {5.991464547107982, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {6.214608098422191, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {6.396929655216146, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {6.551080335043404, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {6.684611727667927, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {6.802394763324311, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {6.907755278982137, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {7.003065458786462, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {7.090076835776092, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {7.170119543449628, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {7.24422751560335, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {7.313220387090301, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {7.3777589082278725`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}}, {{-11.512925464970229`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
           TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-4.605170185988091, 
         FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {2.302585092994046, 
         FormBox["10", TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-16.11809565095832, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-9.210340371976182, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-6.907755278982137, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {0., 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {4.605170185988092, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {6.907755278982137, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {9.210340371976184, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {9.305650551780507, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {9.392661928770137, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {9.472704636443673, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {9.546812608597396, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {9.615805480084347, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {9.680344001221918, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {9.740968623038354, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}, {9.798127036878302, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
         0.}, {
          AbsoluteThickness[0.1]}}}}],
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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
hp201Pt3TMmDmIm0xO/JPt6H4jZtyE2xzCSqp1eHDrBsmpIFQ5vX0Z5MRhwp
vmJikukm7DjHTodWNBzRToc09YbTodF1A9G4jaDXoeSXqyVGk2GTMoxJSOl2
0GvXss5VHCFK5aPfT624G8/sa2dqlQAYdzkBzBoBmC+nAMesITt/pGnmKcNf
eQb7YdkTl4bZm/aIbZY44rBE5zd6nVhUraioEAAhjvsFjfLt29gN/AmO8q9C
gXhr8BCxrNIU3yWe6dqNc1O69kvlNeEuw/QpqzAQYgk1ZNwjZFATZcWOGIfc
9M+SRt3lY29fTV49FNWRRCSvNk1KILekJS2qTZYXdVO3ExZtRdY+4bPAptEI
HDXrYRq3Cjaja8Qt/BVyEip1m3XlviaRRcuWjcPi4zZ9j08YITm+E046/MSU
ZzNfMMHeCvrmJIm1GJJ38j6oaOJUrSpvLNzaWpfpLr1iHcWblaaC4W+Ae1Qv
JusfrJ7wwQbSP+TeO9NnSf/swL51H+JYu194uke2WN1KH1SdZ7BUZoGrxBRq
tTrUprA8i+/B5w0ovfhyvIsv6QP0NXz889DmDJ7GbhrcWYluYsz/Z8XV1kUt
h6I6JpJkk9ZJ9g0qh8A4vpQyRet3lLFcOuwthXN0t8S9oK1NNkeZ2Q4MDAiR
Y3uIb+AcTp3qgNeIMBDzoe0UK5FGXTEEXOI9bDIuMuNBewY7xWbP7z5n0JR0
KhiTMjWREA8gqM5ksoNVIGjAsSlxtVtKC1cZacle6HyfST0hIC+Oq3zqzABN
lKSnJSo17ONequKUXB1C9Z46dQZ9DiWkeHrOyKl+fzhmTGvEb0cLDcXsiw47
rb+TR7XNxPsRbDpiUiIxWpuaJCKtcXMMeyZzHp5yI8Bs0N6Bhtqz6HXrOY4H
0dvSjYQFhe9VIGXAmrgUQREQv11C5cq738Gn60krs/Wa1J1nY9Bt9SgVhfLZ
dWVsS+i1GfbfCKx8IM8bTkx02G026tT1jIRDOEyiD4lrEKmb/UOyfhX9dt+Q
JmUaKQ+z3+7ebnrulWGF3Bat31D5bqtsnXPQoF6ur1MNyUGMgpV8i6R1SprV
oyRjXb+xWu7eZjS0WbnpYVdrnoYLNvYxErAxj6SCNNa5KD8LCNwSEsLJaJhr
5NLABKQpo00RC9CJdvigsHHLp0r7MqKuVnWaXpK9qCH9tKu/SXTPoKSFxPLZ
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
iVRC6iJFUXOk7LLT+ynFabvR9qM8o/eDc9F6M/XTp6vWSVKiJkuvCkWiPT/3
p2tgnmXv8bv9ZyJuBegNmXuaVgel91SaczAmsk1Kh03UraMPfe3H9fOoRt38
Gk1jk9L4rCal2Tlmkd+Uoe/hYLapKaNvvvZi5J0Y1qXt7TmGghavZWUl4eky
TVHzSrsst3ZYU6JKa0pl+wmELMdFOhkXpct48su7PeoBzWizpTgS8bj+T6f8
Ggbr9waRSAbVZd7rDQmJRjBQNzsMxnsZs8NgGTY9LdcwGBW2yBjbJ3u1TTPT
ryaZDyv3sa7oOHzaT6vOhMHSIU316g5PO5E4BSv0GL1SHkVBQZ4TsCNoar8V
EOQlRTWnuAtjQyNolXHsDj0VHkBFeZM5ZNyDMpmjddjgsofcwpWKG9EzQOPP
h6QoieGJUa0OpqFXVNdtZUDNwH38EOoGI7Nc+vrwM6aVV0gM1VnJo7Ikff6w
5iuEx4YUNU1157BflyeXNdt8FfkyyjnDfXvtiP4Hcbcc3rESu9dew5eQoLwv
0I9Cbo9cib33fwu7V18lJGi25a+8HG8/eLl+O8PatnvdNaeQoLbAVLIg0Sjp
zKHHROQMpR+Tkkk3XHOmRplUM1e/M9RtCtVNJgxVUhv9kLRK65Ahc/pd6Mzn
dtIp1VfSLbHN5ykCwJkagnMoSyPDImqYEqhRpmq0dDa9V5zsI4rXV2Zh0Y3J
K2L18ibx5cbJ6kz4y/DSv8vxXsOhvdnRMs8fjZYNMSwsfNsfNNGnqeiYiCnh
8VNiHraWoKTFhIi9Io5KWoUvxUIIWs2oomNNaqels36bOfgjEau6d0esYsSx
+CMRK/b4HW+vQ4c/qaQXHu9AHSNWsrZPjVhlkhjtOuGyt9V0jimm6YwTT/+0
WIaiKMjdHiWACwED41bCY5rk5EOT3eCzsAE+ebJjVo4BOY034kVTTbmeHk+7
omUESQvCZqK5GC0TCdvcM1f9GXVSadZPTn3/xMkiHLdsbBtkhD4VLa7yRvWh
UPD5oiZGx/zKIXdUGBMPfRhDEWIexkWARFXfIMbg91yLcSQ4o7rJwMG74brk
UQwkPkhlQdHGm1F526f5EsKT94v141yU3fbZUwjqDJVRhALki+uc/5kaQpqh
vmD3VWpubrZk1cdU/hA3iaYftVDKNEtGOZ4T/sb5qGfYldMMllEzJUb5HMuD
actR+0U/tZ1NYnyZcpx+IXrVR8atPpFludGvHNI6Q2lQW9YPe8W0FAbnDWjD
QSZcETU75RgCVjRnlo/f6lAog0zI6zRLThaqK2VaM1WKhG4skjwjizLGJzzM
YHS7Zp9GR06YAsMs2bhy8V1SRrPMorVk0cpcWWga4QYl7bogp9NJYxXPdbyh
mcy7wXBkmCs77lTQJLmmKUr3AvRPMC6YFNLrUsWStAIbVeM0zXabEMWv1oHW
HROGkJrnzJVBsNOkkCQjIURSNqDT3yhJ2AXFLRMp66JyhNF0Eu4hj8hf8q8E
fGMDOWjEDOf4cLzsHVS1TshjyIhtGdBCnRbRWy+7azvczNYVM6F85RLctasZ
k+mM1WdsLjEQYCEguP76A+iID9+O7kcv5EvoRN4X6Me56Hn0C+hf+2n0rFko
Asps61vzt7Ltb/TbGda2jt/987sEFGlB4VpVt+P7R9SiYvCYssRO9bC9jLwv
pBX+ZtGSibqcqWKIIojVpHRgWoExtUvJWRJWDiVFH1VPkemyatgk+uxc2DM9
xORJE55/7JhdZpmCd2Dc9MvSP8WYyVERjfM3FfEpCZuX6SvIqnrPeFjXb3ZN
Z/efRVHZsR9yVg9x5L3OtKH4lBXe+pB6/iK+Ues3N4KT8Rw4yZkP235VRZ7p
Vg1FX11tOFbeCHc4bUIZrrm5Y+SM+D4P3W3dFjpNEhMDA3N4HIJHDIzKWQTk
5xF6yO3YXCo2aTvtHcybaRGjHjm5yZRNp7NBYmbs8EUsjFA4xuu2IWj4lwy7
MeqbxLSsVE4zKpySVbajvA+ifhkImstxaCxjg5zoblFjh9It6BeGWD+iMsVZ
+MGuEmzfXiJG2wda+Lsfvxebd13Ilyx8eV+gH+di0+4L8dSeL+P53RfKwjfb
nnnrS3hmz5f02xnWtpfe/NIpC/8zulJpvPDFDGb+p9LF1Ur2REHDBW4vegoC
ZijTuWfnLNmo9Xym3JeEwZXMuTk+HjcBIe5DN4SNfN/R0WGCQKa3qOXpdxYi
D0f06v/ZchLJKeuBzM9Rp/7/YM7g/wVzZp6u/iQLNQ3mjJ0hkYM1k4VJM1gz
ii5kJwMSJz+pmDMzNujZqXAz1W9uxXNbt87B1q1b5WSee24rqk+Bm7GTLXIu
8N27fnj2rnLQ4GTEORE7ll0UgI2daS41rBkjc3O2BYXVReMpK3li3qn0wsvN
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
wg5yZsB4O5ayyHjaI9qabkKP711a1FXsn8e/Pdcp8ISZlTQ9Zs6AbVGeTJdn
GTSIGDRQ/YZAdLQyEwwcVAmKh+Io/+NM2OZtwwiHPrXtJhFsJk56WLSbjf32
TkGeZIZXDErL1vRMlYmxO08ojeM21t5+F7Y1D6qQrU3VtDQGUL/jYRJ7s+Fw
e+B29qF3wKX8XIcG0NruFi/Gijfn6ZCvt9HBmcMCPuzKIM743o8xlZbs7XUd
wog8rNUbTN13SLvrQLfDBa/bSe/JIY6aPrcLzXt+j9uXlkj9WIjEpiV3SfZG
JcbcCWN6NwdPOBySbzbDukt3kSq7CbmkIZXWD6EtL9NK2uyRWJVMUiVUdqqV
Jd3CeQwfsGBXM72fDpPVEhVr0zF9pepHyUrq84Jd8i5KlpEIvb4agbY8ZGRs
UllsPMoVnUVnnlgGip+DbdaLInafM1sD0u8YPJ3qfTBinhmXkKcTnS4lDoTc
nQKyJNsCw37tzKo0XzbCKUvRXdjV4OGsiJPg2EjXGfhf/wofxLF0TpXLFDp/
AYE/fwYjr3/R9hVdNrL+8wis/5x8SrPqXT+OY3kV5NWSffWnyPnvxNJjEOZ5
S42lUjaLJm+Xs+LKyq2RaPk7s+3G8zP/htmVFVljMTIOcUpNZXj58a7PxU/f
gnnbO8CuVdk//SlWZa8SYJ6SJMyvhJOuYmHm8h8wu+3Ygx0f7kOL22Q2Utrn
zTd/Q8Vov3ZQbSUkOfqqAZ9tsTC3M2OGqn9vVoGQypnsh/CNGUojYui0zRIJ
QyT9/L9KvVu+9z3B7JKJ3mvHH+fdrDXnaXj9gJ0mayr78Tzk97Ir9DlUZi3E
S2VOrbFOxyxaLPj/9ULGQ7LG7qS11tdZqsK0pqkwraOdw9plugn1Z6pRefo0
SSmn0dHeiorqNvgcvWit3EL9/B4O9nnR+PFS2G5ejvJBLxwlNF3csAzljWdI
cipFR+8g+mq3Sd19TQ70crutLWioryUN5DROlVeiJv956tdakcZDxFIc7ZlJ
UrSBAIaxtH1d+WJ7Sklgn45DAwkzaoQUxvq8XajmZFOeemT+ihRWedxpWLm1
WoZx04J0zJqtjA3pGWuxftkv1PDdvVZmt/p3MjCdRBRJDZmegfXrl+k0kb9U
szPna06KVpu9YqfOSRXH8ZWzOFpN6dWf0ft5XtmCjPhJmmCwQC6TCdGtrjud
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
CQeVy5eDfZ4c4pRZ9eZs5Tlxhh0WzbwfFyg+FbbdIEq/p/VUIoq26BSpoTU6
orYM/ZI2MoRee8Wo2NEg9S1MQmvL8f2o6g1Owo/xrVcexoLVDXwQFdN5plym
YOEaK/ulNSOyOz/PXJyCfIoEI39WtFyOg2EtmeVr45PI1MuPzjI512HqZSpk
iCuuy5TKdbgur+wGqIDJT3aPmKhV7LQW6emWVFmX8c8UaCEskTEicNE0EQxF
xhNqBMODbhE15WkSE1/ii4kmTZPiPil+05amG++uypXoxT6/woHyeQI2g80Y
syQNXiT5nJI0YZqJ95MWfYdI5/N6ffBplEvGowtFVf2kxODWhMsOiSMxLZJf
rwkyImBxZm4NMxSDAD0pfhMQOQPmxExtZVtJiu8ReL144pozi7P3f8RA4I1I
UIwzQDKwuwsOXxjR8AgGHEMYZDehsAtl2w7L7grHDe185Kv42boT8EVlzlYj
/BmZN0ZZla0MgSE9pSf4SOpGwlakruEz/2AnDrwwGytKesVWMIkpe9dLd6B9
91f5IGKnc6pcpqBx5zRUb78NzbtuoClbldXt+A7OfHSzfErTZS27vjaOKXjp
1xg4Ov1FmlAs91dDa8q1wS415RoIW2+rKmd5MwVext+aL4z2G0/egUueW8Ey
0yEUlp8hmSwhEYZGQS7SGnmoGD1JkItM5smQixK0JPQYl8iPBISiLh/Xxk3n
rWte5DlNl9w2iIWO0PrqYfYVuMWQtf5LvouRoIZbjAuthjU0pcfjRF1JruTT
OBcfkTwbHd6gwVNUtBpURKEA/xlv0QO//j6mZxUGUAyE1F61TLiRoIpVvpy6
pxFhoqEEC4W8GPKoLsbCQR3X/FlqQuGTCqwjTWAe7zBNdIOSgdNAnrKn3EcP
X4/fFzmsTZ3ehhZxZogFPaJO8WQ5MDiAzo4ONJwqUv4ZX8KRijoxgQf66xWO
3qECHCrMF9xTJz1B3cECtLg5DtGDWvquwUkj6RtC1f5cfPjC98Xb7J2yNuq6
H721JTjT3oP+IQ/y19yK2/54EuHugyJdj8pJpp0SChfNwKJ9g5q6jG2C2ZVd
fPtIQqM35SdO19kXwz4OjwvKGw97+1T+phiDZAZE6mIkruG+IbBHsMuucn68
dKRfJtvJaLJr7sX9W+UgdqVzqlym4De59+MnuYvo/3nErqrsntxH8dOtj8mn
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
eB9s33hBXN/Lm4/j57Zb8ToRcWWXGwXLbsKNK4plt0iIuLwTfS0NeOcxIuI3
KzHUsEfisFysEA+Ui6iW3+7EsKsdH666l4g4c1wcFqtHvIp10nB2NuygFeha
7OoLw+8aQE/bCTxM/Vq4cRcepf+/8b07cNutt2DmD3+ImXf+Ftsra/HSN2hM
3t5BovJWLJp7J6790ldwRzpDUHwbq/NOo7mjD61Ff1Lxga9sRG5RFc7WluFt
SWP9Kxzq5nc4OvqEISCcsShNJj4U/u52jj6xVjEWD3N21bCoOBnGG25qxZ8W
vcsHMR6dU+UyBWuf3IzMp3di3ZPsG6DKXn5qG15esl0+pemytxZtGLfaMaOJ
5ky61SVyThXmYlOjYTAjFiqBr6Ojg+oY5zyuY1KWacM3PQSb0dWGj86jQb9g
S87VozYd6zYon8NdXUFYWIvVW4jeRnOYcV1NBHh1Y++WXFSRhNfa1Iy/Lvw6
fkRiP4hnbvrifdhTuF/Uni3L/hl3/aVugjY+e966hU/OxH3r9ooFeGPmI/jv
iwskNfS3/tsD2F9YKL6iG5/+Dm57jdSTA08Qf62W329d/X187cn3lfb2bfx1
1QzYVhzFoSdvxyP7iL1GhkkAZIxqsFszDd8gafFRDLfsFDLNrW3FoDdIAk+j
xFI/kPMxnqD/p939Q9xx2wxNpvcjr7Ed626w4el3d2D/wQ+FTK/7ytdwpyHT
vafRTmQ6UPm2kOmDTKYFZSgvP4a3LDIlrSnSh12r58mqzugqs5lM2aGo4yzW
3nMjFh8asuxesoccT8zVCJ6ULOycHXrqNO35/4NMbMzdhD/eZsPczTXy4trz
MmgNy0EQLmRNtyGzzCWoK7w2iQrvraHZkdYmlSsJjpJVkhmwPag0srB3EM5g
TBCAxLSgssbohM//NImVqmcYT2bW8EEMQ+dUuUzBY3+owQMv2PH4mjPEMFQ2
BQ+trrtSf7v05fGWerZV8PrDWzopcr7c2lNiEjdrljFKagu83odPsyz4zCLM
XsxWZs1i6z3v3+v1in7DYKeXyL4or1t8iLxIF0T9/HPzF+guxa+JfFYVO8SG
5u4mJXTLK8RBN42K21CvEhYHRdpy5bX9asWbyH7hAbne1kWzFwl7N9n+EbnV
zO3lEuX8WrVngjZ+cN66ZS+RwPn4R+iixzuS/Rvc8OwxDVJyK7aUt2JgsF4k
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
BVdQobeGSVY9llvIPtX6jVwuzDLYdNJyJGBnQhdPjca9DYm1XBBkiMri8h0N
RUCyQV2u+2HAE4kV9Vp+mTQfDik9M+JuU5luzIBfCiVVa7qOunj70mZSa7Bb
gr3PZxqSW3h6mnWWtYS4EPb0CA5rsztCAiHGba/NP/9oGfE4ShN+71A1HzSC
dE6VyxS09R9DTdtHaB8oI/FYldk796G+Y698StNlfa5aq1GVDOoKRH1N2Pzy
Ohxs0QbDc2E42vqSEO5FerrEjB4D05OUHbMGXOUxHi106bAgCScbpDKSpTmc
zK3da1STV1+oSQ52G5IkavrnnKXbWguteuxs5xeU98RIJy/D5qWH3B0oyMnB
WVfEtuDiI+32d+G1nd/igxOC7/zWTLlMwRt7brUqG32blwn2EqWDffV27bJ9
QmZRjgLjDUv2fTY6tUZdl11HFvBY+WB7Fc/kxIrXWI/lRXdzKxz+WJL6ZbmL
JcrOWWLtqHrai9OWkuTBObbbye1dNqa9c8n1ku5hgPPFzY2DN8fcV9tfEkPj
7jNApspndMzrmcSrCEdHUNuxiw96FXROlcsUlDe+h/xTK1HZzGFBqqyo5hUU
VWfKpzRdZu8cGyLxBSVKaRCmkGT+ClsZpY35kGVvVj54m4u3t1j3Y72PdTve
g+bXy/vVHFPNwKh8zWW8T21eObuz8+/YlFJXV5eS2HgenQOX/yK+Ic4IMsXQ
N4lBQ72JNU982Th1Ydi4cqTpOqwiOKS7Es2VaEr9KuLDkC+sOebC7VpMfi4q
Ia0JdLpr4fJJLB1iIZ+6F4ehDnGdIUkK5ncO6TbHXvcq/7ukPiVfe9tLUdrm
RjzoRDnD6NCwlZaWo4Sum12K493N5XxtW35+cpHzb/W48KLGHGUit8yrZHWe
dyzNbiXHg10qFrLLJDI6+c/bbUcfYxDoIaF1tqmqSYIsTFlMVGl1fyuEMsZY
TJ0IyNORGFFVhX6SLUb6W9HnV6tlbKQfTX3+xGQ3qba/Ju057FWo6h4W1V2/
Xwy1Ulk/aZWdVWhyqNyi8eAQqqr66Bf0m6ZW+CSuIDb62s59i47qW/J1V/Eb
yDzUBfeZv+LxzGMQ3TPSg/cffwONPnX7HqrzxrGei74aIxx72hiJpYJeP7vN
6yoxlyCxWMJxmqzrRbQImxmfUVGOtnksVDHpiauRYUESw5hoRpd9XUN+0O10
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
L/8bhwGbxA==\
\>"]]}], "}"}]], "Output",
 CellChangeTimes->{3.707695804601318*^9, 
  3.707749646212381*^9},ExpressionUUID->"4c5f94eb-6f01-46de-b75b-\
97cbca1d2980"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.707749786190486*^9, 
  3.7077497945006933`*^9}},ExpressionUUID->"62d7e5fe-fba7-4ae8-a608-\
ef789da088a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/adendek/Documents/Wolfram \
Mathematica/Intern/project/DeepLaetitia/scripts/smileDetector/models/\
InceptionV3/transferLearinig.wlnet\>\"", ",", 
   RowBox[{"trainedDeepCNNInceptionV3", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7077498581710033`*^9, 
  3.707749938635556*^9}},ExpressionUUID->"cb9b7c1f-ab84-46d0-901c-\
72424804c5be"],

Cell[BoxData["\<\"/Users/adendek/Documents/Wolfram \
Mathematica/Intern/project/DeepLaetitia/scripts/smileDetector/models/\
InceptionV3/transferLearinig.wlnet\"\>"], "Output",
 CellChangeTimes->{
  3.707749893538083*^9, {3.707749928640974*^9, 
   3.7077499413651876`*^9}},ExpressionUUID->"f779397f-d9f2-4ed9-bbb3-\
ee3a9097f5be"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dynamic", "[", 
   RowBox[{
    RowBox[{"image", "=", 
     RowBox[{"CurrentImage", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"box", " ", "=", "  ", 
     RowBox[{"FindFaces", "[", "image", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"face", " ", "=", "   ", 
     RowBox[{
      RowBox[{
       RowBox[{"ImageTrim", "[", 
        RowBox[{"image", ",", "#"}], "]"}], "&"}], "/@", " ", "box"}]}], " ", 
    ";", "\[IndentingNewLine]", 
    RowBox[{"face", " ", "=", " ", 
     RowBox[{"face", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"greyFace", " ", "=", " ", 
     RowBox[{"ColorConvert", "[", 
      RowBox[{"face", ",", "\"\<Grayscale\>\""}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{"image", ",", "greyFace", ",", 
       RowBox[{"Column", "[", 
        RowBox[{
         RowBox[{"trainedDeepCNNInceptionV3", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"greyFace", ",", "\"\<TopProbabilities\>\""}], "]"}], 
        "]"}]}], "}"}], "]"}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7072563936524754`*^9, 3.707256409838191*^9}, {
   3.707256441802643*^9, 3.707256489283073*^9}, {3.707257114666801*^9, 
   3.707257124515836*^9}, {3.7072572062401752`*^9, 3.707257249578582*^9}, {
   3.707257567748266*^9, 3.707257577265594*^9}, 3.707259154061228*^9, {
   3.707259199034816*^9, 3.707259309295079*^9}, {3.7072595088720913`*^9, 
   3.707259529021721*^9}, {3.7075222635370607`*^9, 3.707522264571309*^9}, {
   3.707522369289407*^9, 3.707522472276947*^9}, 
   3.7077499877173357`*^9},ExpressionUUID->"01475401-2c7f-4af9-a978-\
4797451789d2"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 16, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 247, 4, 92, "Title", "ExpressionUUID" -> \
"a0b1baf7-8601-414e-9ed0-d026f23099d8"],
Cell[CellGroupData[{
Cell[852, 30, 283, 7, 54, "Input", "ExpressionUUID" -> \
"f9dbb206-af34-44ca-b4bc-ccff5f5480b9"],
Cell[1138, 39, 489, 11, 32, "Output", "ExpressionUUID" -> \
"d41be35a-496b-41c6-9bcc-cf1f8b06022e"]
}, Open  ]],
Cell[1642, 53, 725, 15, 32, "Input", "ExpressionUUID" -> \
"f1547c29-e318-4cdc-8115-d6789ff43fe7"],
Cell[2370, 70, 447, 10, 32, "Input", "ExpressionUUID" -> \
"32ab7c15-78fd-4273-930c-81b05d14b1dc"],
Cell[CellGroupData[{
Cell[2842, 84, 169, 3, 51, "Subtitle", "ExpressionUUID" -> \
"23f55ea8-c055-4265-9dec-c2898be4ad1d"],
Cell[CellGroupData[{
Cell[3036, 91, 356, 9, 32, "Input", "ExpressionUUID" -> \
"841da03a-58f8-478d-83bc-127b531a859f"],
Cell[3395, 102, 307727, 5391, 485, "Output", "ExpressionUUID" -> \
"7e4e8e0b-fcbf-437f-b306-8c45e2a14ead"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311159, 5498, 543, 12, 32, "Input", "ExpressionUUID" -> \
"60c002f2-b0cf-462d-a8f8-a4c2761b962b"],
Cell[311705, 5512, 451, 9, 32, "Output", "ExpressionUUID" -> \
"13f3991f-ec8e-41f3-9ba2-7350bcaac9e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312193, 5526, 515, 11, 54, "Input", "ExpressionUUID" -> \
"ac534145-dc5a-44d6-b1ef-9e44ddd88761"],
Cell[312711, 5539, 574687, 10822, 436, "Output", "ExpressionUUID" -> \
"32f4cc80-6873-4d7a-8a90-49d16375acf2"]
}, Open  ]],
Cell[887413, 16364, 409, 12, 54, "Input", "ExpressionUUID" -> \
"40f561bf-436d-48b0-952f-d7619af9a791"],
Cell[CellGroupData[{
Cell[887847, 16380, 1511, 28, 75, "Input", "ExpressionUUID" -> \
"b1fe91d8-f9fa-43a4-b5f5-735b7d2b5612"],
Cell[889361, 16410, 309376, 6069, 121, "Output", "ExpressionUUID" -> \
"d79d011d-084c-49cd-bcb9-dfcc437c9391"]
}, Open  ]],
Cell[1198752, 22482, 657, 14, 159, "Input", "ExpressionUUID" -> \
"df134258-c818-4554-a217-4e58f12cc63d"],
Cell[1199412, 22498, 278, 7, 32, "Input", "ExpressionUUID" -> \
"f532ce2a-5a4f-4d40-a89f-fb09541f7dbc"],
Cell[1199693, 22507, 438, 11, 54, "Input", "ExpressionUUID" -> \
"6a018796-38e0-47c8-badd-95fccf905073"],
Cell[CellGroupData[{
Cell[1200156, 22522, 1872, 37, 201, "Input", "ExpressionUUID" -> \
"191a967e-f980-4b40-bb06-360f9501ff9e"],
Cell[1202031, 22561, 2168226, 38394, 1590, "Output", "ExpressionUUID" -> \
"4c5f94eb-6f01-46de-b75b-97cbca1d2980"]
}, Open  ]],
Cell[3370272, 60958, 154, 3, 32, "Input", "ExpressionUUID" -> \
"62d7e5fe-fba7-4ae8-a608-ef789da088a2"],
Cell[CellGroupData[{
Cell[3370451, 60965, 438, 10, 54, "Input", "ExpressionUUID" -> \
"cb9b7c1f-ab84-46d0-901c-72424804c5be"],
Cell[3370892, 60977, 329, 6, 32, "Output", "ExpressionUUID" -> \
"f779397f-d9f2-4ed9-bbb3-ee3a9097f5be"]
}, Open  ]],
Cell[3371236, 60986, 1749, 38, 159, "Input", "ExpressionUUID" -> \
"01475401-2c7f-4af9-a978-4797451789d2"]
}, Open  ]]
}, Open  ]]
}
]
*)

