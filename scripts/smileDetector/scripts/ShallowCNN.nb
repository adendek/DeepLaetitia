(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1021466,      19294]
NotebookOptionsPosition[   1012428,      19073]
NotebookOutlinePosition[   1012813,      19090]
CellTagsIndexPosition[   1012770,      19087]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Shallow Convolution Neural Network approach", "Title",
 CellChangeTimes->{{3.707314003495525*^9, 
  3.7073140259671288`*^9}},ExpressionUUID->"99106860-62ed-4b89-9114-\
8c7d6b83eeb6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LaunchKernels", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.707572743330172*^9, 
  3.707572748440819*^9}},ExpressionUUID->"a3526a00-63c6-45f3-b003-\
c38378e99a3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"1", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"2", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"3", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"4", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"5", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"6", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"7", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"8", ",", "\<\"local\"\>"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.707572752408124*^9, 3.707575455183291*^9, 
  3.707677354799279*^9, 
  3.707688750909607*^9},ExpressionUUID->"9ec5e3c9-4a3a-4c89-b637-\
7d57ebb70bf8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"files", "=", 
     RowBox[{"FileNames", "[", 
      RowBox[{"\"\<../datasets/Training/Happy/*.png\>\"", ",", 
       RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"happyFaces", " ", "=", "  ", 
     RowBox[{"ParallelMap", "[", " ", 
      RowBox[{"Import", ",", " ", "files"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.707313886863284*^9, 3.707313898453529*^9}, {
   3.707313960296879*^9, 3.707313987661146*^9}, {3.707314053633945*^9, 
   3.707314054066917*^9}, {3.707436110668577*^9, 3.707436127677635*^9}, 
   3.707436171793996*^9, 3.7074362974779673`*^9, {3.707436814624593*^9, 
   3.707436819373756*^9}, {3.7074370655618343`*^9, 3.7074370657626467`*^9}, {
   3.707498009549336*^9, 3.707498049671289*^9}, {3.7074981129410267`*^9, 
   3.707498122460094*^9}},ExpressionUUID->"2ac3ceca-b4c2-4cfb-a240-\
4bb9b129ed50"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<../datasets/Training/Neutral/*.png\>\"", ",", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"neutralFaces", " ", "=", "  ", 
   RowBox[{"ParallelMap", "[", " ", 
    RowBox[{"Import", ",", " ", "files"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.707313886863284*^9, 3.707313898453529*^9}, {
   3.707313960296879*^9, 3.707313987661146*^9}, {3.707314053633945*^9, 
   3.707314054066917*^9}, {3.707436110668577*^9, 3.707436127677635*^9}, 
   3.707436171793996*^9, 3.70743629844928*^9, {3.707436823795073*^9, 
   3.7074368257109327`*^9}, 3.7074370679681273`*^9, 3.707498534976256*^9, 
   3.707498574998727*^9},ExpressionUUID->"b844a3ea-d5de-484a-a23d-\
1b7b6e1e11a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<../datasets/Training/Sad/*.png\>\"", ",", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sadFaces", " ", "=", "  ", 
   RowBox[{"ParallelMap", "[", " ", 
    RowBox[{"Import", ",", " ", "files"}], "]"}]}], ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.707314118202957*^9, 3.7073141651393137`*^9}, {
   3.70731528144893*^9, 3.7073152823572903`*^9}, {3.707317369072307*^9, 
   3.70731737102283*^9}, {3.707317404452744*^9, 3.707317452183457*^9}, {
   3.70739022195333*^9, 3.707390225654479*^9}, {3.7074361292052917`*^9, 
   3.707436159202714*^9}, {3.707436304098506*^9, 3.707436324818892*^9}, 
   3.707436887033741*^9, 3.707437069737444*^9, 
   3.70749853662685*^9},ExpressionUUID->"681b7eb9-0020-4471-bf13-\
1f52670e5f7a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<../datasets/Training/Angry/*.png\>\"", ",", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"angryFaces", " ", "=", "  ", 
  RowBox[{"ParallelMap", "[", " ", 
   RowBox[{"Import", ",", " ", "files"}], "]"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.707314118202957*^9, 3.7073141651393137`*^9}, {
   3.70731528144893*^9, 3.7073152823572903`*^9}, {3.707317369072307*^9, 
   3.70731737102283*^9}, {3.707317404452744*^9, 3.707317452183457*^9}, {
   3.70739022195333*^9, 3.707390225654479*^9}, {3.7074361292052917`*^9, 
   3.707436159202714*^9}, {3.707436304098506*^9, 3.707436332059613*^9}, 
   3.707436887891344*^9, {3.70743707177493*^9, 3.7074370719919977`*^9}, 
   3.707498539232581*^9, 
   3.7076898806013327`*^9},ExpressionUUID->"e3f2bc49-d28a-40d9-9de7-\
c78b0208a308"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.70768992288065*^9},ExpressionUUID->"cc254adf-312b-4ee7-9c40-db303ba03878"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<../datasets/Training/Surprise/*.png\>\"", ",", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"surpriseFaces", " ", "=", "  ", 
  RowBox[{"ParallelMap", "[", " ", 
   RowBox[{"Import", ",", " ", "files"}], "]"}]}], "\n"}], "Input",
 CellChangeTimes->{{3.707314118202957*^9, 3.7073141651393137`*^9}, {
   3.70731528144893*^9, 3.7073152823572903`*^9}, {3.707317369072307*^9, 
   3.70731737102283*^9}, {3.707317404452744*^9, 3.707317452183457*^9}, {
   3.70739022195333*^9, 3.707390225654479*^9}, {3.7074361292052917`*^9, 
   3.707436159202714*^9}, {3.707436304098506*^9, 3.70743634204379*^9}, 
   3.707436889640417*^9, 3.707437075961434*^9, 3.70749854623569*^9, 
   3.707689885237458*^9},ExpressionUUID->"5257aeaf-4da4-4ea2-bd2f-\
6f691c0dd8fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"trainigDataset", " ", "=", "  ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{"\"\<happy\>\"", "->", "happyFaces"}], "|>"}], ",", "\n", "\t", 
      RowBox[{"<|", 
       RowBox[{"\"\<neutral\>\"", "->", "neutralFaces"}], "|>"}], ",", "\n", 
      "\t", 
      RowBox[{"<|", 
       RowBox[{"\"\<sad\>\"", "->", "sadFaces"}], "|>"}], ",", 
      "\[IndentingNewLine]", "    ", 
      RowBox[{"<|", 
       RowBox[{"\"\<angry\>\"", "->", "angryFaces"}], "|>"}], ",", 
      "\[IndentingNewLine]", "   ", 
      RowBox[{"<|", 
       RowBox[{"\"\<surprise\>\"", "->", " ", "surpriseFaces"}], " ", 
       "|>"}]}], "\n", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7073141929169617`*^9, 3.707314271354303*^9}, {
   3.707314547648836*^9, 3.707314548636009*^9}, {3.707441950679007*^9, 
   3.7074419519076157`*^9}, 3.707497880774413*^9, {3.707572771569483*^9, 
   3.7075727786237593`*^9}},ExpressionUUID->"f78b0f6d-74f3-42cd-bf8a-\
4a6751174ada"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{85., {3., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{74., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 15, 17668060428242626317, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{83., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 15, 17668060428242626317, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{62., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 15, 17668060428242626317, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{111., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{111., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[17668060428242626317 === $SessionID, 
   Out[15], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.707499619154113*^9, 3.707576722888617*^9, 
  3.7076781996293583`*^9, 3.707689581821109*^9, 
  3.707689668986367*^9},ExpressionUUID->"d438a3cb-3f18-4f29-a4b7-\
7cdc815a6042"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainData", " ", "=", "   ", 
   RowBox[{"Reverse", "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Thread", " ", "/@", " ", 
      RowBox[{"Normal", "[", "trainigDataset", "]"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.707497890110211*^9, 3.7074978968633633`*^9}, 
   3.7075767279474277`*^9, {3.707689956700157*^9, 
   3.7076899624319*^9}},ExpressionUUID->"09e919a8-5e36-4853-8f72-\
ecb02c3ff626"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/adendek/Documents/Wolfram \
Mathematica/Intern/project/DeepLaetitia/scripts/smileDetector/datasets/train.\
mx\>\"", ",", "trainData", ",", " ", "\"\<MX\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7076785635488243`*^9, 3.707678567924436*^9}, {
  3.7076899494088163`*^9, 
  3.707689950528651*^9}},ExpressionUUID->"6acab0c5-ce3b-4877-8cea-\
aee5bb736e46"],

Cell[BoxData["\<\"/Users/adendek/Documents/Wolfram \
Mathematica/Intern/project/DeepLaetitia/scripts/smileDetector/datasets/train.\
mx\"\>"], "Output",
 CellChangeTimes->{3.707678201986349*^9, 3.707678571462655*^9, 
  3.707689584488017*^9},ExpressionUUID->"cea3850d-5fa2-49bd-9f8e-\
4abc92ffeaec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7076899330092907`*^9, 
  3.707689940328549*^9}},ExpressionUUID->"6ca84c0b-2ba6-4a92-b96e-\
5d2986270d0b"],

Cell[BoxData["\<\"/Users/adendek/Documents/Wolfram \
Mathematica/Intern/project/DeepLaetitia/scripts/smileDetector/datasets/train.\
mx\"\>"], "Output",
 CellChangeTimes->{
  3.707689937835391*^9},ExpressionUUID->"59229a18-11be-4fe1-a99e-\
995f4b6792a0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"emotionTypes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<happy\>\"", ",", " ", "\"\<neutral\>\"", ",", "\"\<sad\>\"", ",", 
     "\"\<angry\>\"", ",", "\"\<surprise\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707437472803968*^9, 3.7074374892505693`*^9}, {
   3.707441434606262*^9, 3.707441462393368*^9}, 
   3.707576732632545*^9},ExpressionUUID->"3e29c916-470c-4416-8f33-\
ef8d243e90b7"],

Cell[CellGroupData[{

Cell["Import test dataset", "Subtitle",
 CellChangeTimes->{{3.7074370165653677`*^9, 
  3.7074370258862762`*^9}},ExpressionUUID->"d2c029b9-7801-410a-924e-\
08c2e01e9295"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<../datasets/Test/Happy/*.png\>\"", ",", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"happyFacesTest", " ", "=", "   ", 
   RowBox[{"ParallelMap", "[", " ", 
    RowBox[{"Import", ",", " ", "files"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7073901096634293`*^9, 3.707390127609375*^9}, {
   3.7074366224178467`*^9, 3.70743662284581*^9}, 3.7074367364168797`*^9, 
   3.707503807338533*^9},ExpressionUUID->"a26fbbb5-caef-4309-aa5f-\
eeceb641a211"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"files", "=", 
     RowBox[{"FileNames", "[", 
      RowBox[{"\"\<../datasets/Test/Neutral/*.png\>\"", ",", 
       RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"neutralFacesTest", " ", "=", "   ", 
     RowBox[{"ParallelMap", "[", " ", 
      RowBox[{"Import", ",", " ", "files"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.707314552108762*^9, {3.707314621786484*^9, 3.7073146605114717`*^9}, {
   3.707390101399653*^9, 3.7073901031402473`*^9}, {3.7074366249159946`*^9, 
   3.707436634641383*^9}, 3.707436680268516*^9, 3.707436737333061*^9, 
   3.707503809730153*^9},ExpressionUUID->"0ca318ad-ccf4-473d-8219-\
9265a583e8e6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<../datasets/Test/Sad/*.png\>\"", ",", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sadFacesTest", "=", "  ", 
   RowBox[{"ParallelMap", "[", " ", 
    RowBox[{"Import", ",", " ", "files"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.707314552108762*^9, {3.707314621786484*^9, 3.7073146605114717`*^9}, {
   3.707390101399653*^9, 3.7073901031402473`*^9}, {3.7074366249159946`*^9, 
   3.707436634641383*^9}, 3.707436680268516*^9, {3.707436738209115*^9, 
   3.7074367488743067`*^9}, 
   3.707503811328157*^9},ExpressionUUID->"af17c70b-3489-4991-8d2c-\
cf9005d0770a"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"files", "=", 
     RowBox[{"FileNames", "[", 
      RowBox[{"\"\<../datasets/Test/Angry/*.png\>\"", ",", 
       RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"angryFacesTest", " ", "=", "   ", 
     RowBox[{"ParallelMap", "[", " ", 
      RowBox[{"Import", ",", " ", "files"}], "]"}]}], ";"}], 
   "\n"}]}]], "Input",
 CellChangeTimes->{
  3.707314552108762*^9, {3.707314621786484*^9, 3.7073146605114717`*^9}, {
   3.707390101399653*^9, 3.7073901031402473`*^9}, {3.7074366249159946`*^9, 
   3.707436634641383*^9}, 3.707436680268516*^9, {3.707436738209115*^9, 
   3.7074367554786873`*^9}, {3.7075038130160837`*^9, 
   3.7075038172045507`*^9}},ExpressionUUID->"57e07ed0-02bc-4f3b-8789-\
204b65dd79a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<../datasets/Test/Surprise/*.png\>\"", ",", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"surpriseFacesTest", " ", "=", "   ", 
   RowBox[{"ParallelMap", "[", " ", 
    RowBox[{"Import", ",", " ", "files"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.707314552108762*^9, {3.707314621786484*^9, 3.7073146605114717`*^9}, {
   3.707390101399653*^9, 3.7073901031402473`*^9}, {3.7074366249159946`*^9, 
   3.707436634641383*^9}, 3.707436680268516*^9, {3.707436738209115*^9, 
   3.707436763748465*^9}, 3.7075038213823957`*^9, 
   3.707511530991522*^9},ExpressionUUID->"21fdf2df-597d-45fc-b986-\
1ec78790ab8b"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"testDataset", " ", "=", "  ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{"\"\<happy\>\"", "\[Rule]", "  ", "happyFacesTest"}], " ", 
       "|>"}], ",", "\n", "\t", 
      RowBox[{"<|", 
       RowBox[{"\"\<neutral\>\"", "->", " ", "neutralFacesTest"}], "|>"}], 
      ",", "\n", "\t", 
      RowBox[{"<|", 
       RowBox[{"\"\<sad\>\"", "->", " ", "sadFacesTest"}], "|>"}], ",", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{"<|", 
       RowBox[{"\"\<angry\>\"", "->", " ", "angryFacesTest"}], "|>"}], ",", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{"<|", 
       RowBox[{"\"\<surprise\>\"", "->", "  ", "surpriseFacesTest"}], " ", 
       "|>"}]}], "\n", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.707314672001156*^9, 3.707314685844714*^9}, 
   3.7074374600343037`*^9, {3.707442403160041*^9, 3.707442410173647*^9}, {
   3.707442675365808*^9, 3.707442698487261*^9}, {3.707497856789001*^9, 
   3.707497858354815*^9}, {3.707504190993807*^9, 3.707504199898314*^9}, {
   3.707504232617568*^9, 3.7075042796284723`*^9}, {3.707504343565795*^9, 
   3.707504359718582*^9}, 3.707510196114584*^9, {3.707577195791094*^9, 
   3.7075772030315228`*^9}},ExpressionUUID->"a7dd5d6b-ae75-4c08-b4ca-\
8e65398c6610"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testData", " ", "=", "   ", 
   RowBox[{"Reverse", "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Thread", " ", "/@", " ", 
      RowBox[{"Normal", "[", "testDataset", "]"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.707497862980954*^9, 
  3.707497871152746*^9}},ExpressionUUID->"c74ef737-2f55-47c8-a44f-\
255849b80d6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/adendek/Documents/Wolfram \
Mathematica/Intern/project/DeepLaetitia/scripts/smileDetector/datasets/test.\
mx\>\"", ",", "testData", ",", " ", "\"\<MX\>\""}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.707690018018117*^9, 
  3.707690028902326*^9}},ExpressionUUID->"f80d9058-5357-4bbb-ac99-\
1c9d92c0be0a"],

Cell[BoxData["\<\"/Users/adendek/Documents/Wolfram \
Mathematica/Intern/project/DeepLaetitia/scripts/smileDetector/datasets/test.\
mx\"\>"], "Output",
 CellChangeTimes->{
  3.707690236454726*^9},ExpressionUUID->"96923d82-d9eb-4343-a4f2-\
31b8cfbef905"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"imageDim", " ", "=", " ", 
  RowBox[{"ImageDimensions", "[", 
   RowBox[{"happyFaces", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.70744131590068*^9, 
  3.7074413283550043`*^9}},ExpressionUUID->"511bbf8c-1ea7-49e2-bc43-\
fee51f80c423"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"48", ",", "48"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7074413297697477`*^9, 3.707504143589876*^9, {3.707504370255247*^9, 
   3.707504372128503*^9}, 
   3.707577224561854*^9},ExpressionUUID->"08876ddc-1fb9-4487-bfd3-\
8ed9fb4c0f39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"convNet", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetChain", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"20", ",", "5"}], "]"}], ",", "Ramp", ",", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{"2", ",", "2"}], "]"}], ",", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"50", ",", "5"}], "]"}], ",", "Ramp", ",", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{"2", ",", "2"}], "]"}], ",", 
        RowBox[{"FlattenLayer", "[", "]"}], ",", "500", ",", "Ramp", ",", 
        RowBox[{"Length", "[", "emotionTypes", "]"}], ",", 
        RowBox[{"DropoutLayer", "[", "0.2", "]"}], ",", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Output\>\"", "\[Rule]", 
       RowBox[{"NetDecoder", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Class\>\"", ",", "emotionTypes"}], "}"}], "]"}]}], ",", 
      
      RowBox[{"\"\<Input\>\"", "\[Rule]", 
       RowBox[{"NetEncoder", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Image\>\"", ",", "imageDim", ",", 
          RowBox[{"ColorSpace", "\[Rule]", "\"\<Grayscale\>\""}]}], "}"}], 
        "]"}]}]}], "]"}]}]}], "\n"}]], "Input",
 CellChangeTimes->{{3.7073145070090017`*^9, 3.7073145155962687`*^9}, {
   3.707389985324773*^9, 3.707389985847752*^9}, {3.707390034936595*^9, 
   3.707390081602446*^9}, {3.707437429671797*^9, 3.707437505349424*^9}, {
   3.707440833700927*^9, 3.707440850589036*^9}, {3.707441228929391*^9, 
   3.70744122934334*^9}, 3.707441333967062*^9, {3.7074414891404037`*^9, 
   3.707441495592485*^9}, 3.707441526652679*^9, 3.707442629384074*^9, {
   3.707490351135975*^9, 3.7074903532873363`*^9}, {3.707577229666965*^9, 
   3.707577244359692*^9}},ExpressionUUID->"e03cb1de-351d-45b8-8be4-\
0e2dc4422839"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{20, 1, 5, 5}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {48, 48}, 
               "$OutputSize" -> {44, 44}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 48, 48}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 44, 44}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {20, 44, 44}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 44, 44}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 44, 44}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 20, "$InputSize" -> {44, 44}, 
               "$OutputSize" -> {22, 22}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 44, 44}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 22, 22}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{50, 20, 5, 5}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               20, "$GroupNumber" -> 1, "$InputSize" -> {22, 22}, 
               "$OutputSize" -> {18, 18}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 22, 22}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 18, 18}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {50, 18, 18}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 18, 18}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 18, 18}, NeuralNetworks`RealT]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 50, "$InputSize" -> {18, 18}, 
               "$OutputSize" -> {9, 9}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 18, 18}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 9, 9}, NeuralNetworks`RealT]]], 
           "7" -> Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {4050}, 
               "$InputSize" -> {50, 9, 9}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 9, 9}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{4050}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{500, 4050}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {500}, "$OutputSize" -> 500, "$InputSize" -> 
               4050, "$InputDimensions" -> {4050}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{4050}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{5, 500}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputDimensions" -> {5}, "$OutputSize" -> 5, "$InputSize" -> 
               500, "$InputDimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]],
            "11" -> Association[
            "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
             Association["DropoutProbability" -> 0.2], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]],
            "12" -> Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {48, 48}, "ColorSpace" -> "Grayscale", 
              "ColorChannels" -> 1, "MeanImage" -> None], 
             NeuralNetworks`TensorT[{1, 48, 48}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association[
             "Labels" -> {"happy", "neutral", "sad", "angry", "surprise"}, 
              "Dimensions" -> 5], 
             NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"48\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"44\"", "\"44\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"44\"", "\"44\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"22\"", "\"22\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"18\"", "\"18\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"18\"", "\"18\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"9\"", "\"9\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4050\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{41.66015625, {6.4609375, 11.0302734375}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.707577244883374*^9},ExpressionUUID->"f54f42ed-aa8b-4131-9562-\
133551fdab30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NetGraph", "[", "convNet", "]"}], "\[IndentingNewLine]"}]], "Input",\

 CellChangeTimes->{{3.707439732545598*^9, 
  3.707439740535471*^9}},ExpressionUUID->"f47abe58-961b-4a36-b5d6-\
29e5f4050e25"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetGraph`selection = None}, 
        DynamicBox[GridBox[
          Map[List, {
            ToBoxes[
             
             NeuralNetworks`Private`NetGraph`netLayerPlot[{{1, 2}, {2, 3}, {3,
               4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {9, 10}, {10, 
              11}, {11, 12}, {13, 1}, {12, 14}}, 
              Dynamic[NeuralNetworks`Private`NetGraph`selection], False, {
              "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", 
               "Input", "Output"}, {
               Hue[0.61, 0.75, 1], 
               RGBColor[0.29, 0.29, 0.83], 
               RGBColor[0.38759999999999994`, 0.57, 0.], 
               RGBColor[1., 0.4, 0.], 
               GrayLevel[0.4], 
               RGBColor[0.96, 0.15999999999999992`, 0.15999999999999992`], 
               RGBColor[0.5, 0.32, 0.99], Null}, {1, 2, 3, 1, 2, 3, 4, 5, 2, 
              5, 6, 7, 8, 8}, {
              ConvolutionLayer, Ramp, PoolingLayer, FlattenLayer, LinearLayer,
                DropoutLayer, SoftmaxLayer, Null}, {
               NeuralNetworks`TensorT[{20, 44, 44}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{20, 44, 44}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{20, 22, 22}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{50, 18, 18}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{50, 18, 18}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{50, 9, 9}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{4050}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{1, 48, 48}, NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]}, None]], 
            If[
             IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
             ItemBox[
              NeuralNetworks`Private`NetGraph`vpathInfo[
               Part[{
                 NeuralNetworks`NetPath["Nodes", "1"], 
                 NeuralNetworks`NetPath["Nodes", "2"], 
                 NeuralNetworks`NetPath["Nodes", "3"], 
                 NeuralNetworks`NetPath["Nodes", "4"], 
                 NeuralNetworks`NetPath["Nodes", "5"], 
                 NeuralNetworks`NetPath["Nodes", "6"], 
                 NeuralNetworks`NetPath["Nodes", "7"], 
                 NeuralNetworks`NetPath["Nodes", "8"], 
                 NeuralNetworks`NetPath["Nodes", "9"], 
                 NeuralNetworks`NetPath["Nodes", "10"], 
                 NeuralNetworks`NetPath["Nodes", "11"], 
                 NeuralNetworks`NetPath["Nodes", "12"], 
                 NeuralNetworks`NetPath["Inputs", "Input"], 
                 NeuralNetworks`NetPath["Outputs", "Output"]}, 
                NeuralNetworks`Private`NetGraph`selection], 
               Association[
               "Input" -> 
                NeuralNetworks`TensorT[{1, 48, 48}, NeuralNetworks`RealT]], 
               Association[
               "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
               Association[
               "1" -> Association[
                 "Type" -> "Convolution", "Arrays" -> 
                  Association[
                   "Weights" -> 
                    NeuralNetworks`TensorT[{20, 1, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 1, "$GroupNumber" -> 1, 
                    "$InputSize" -> {48, 48}, "$OutputSize" -> {44, 44}], 
                  "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{1, 48, 48}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{20, 44, 44}, 
                    NeuralNetworks`RealT]]], "2" -> 
                Association[
                 "Type" -> "Elementwise", "Arrays" -> Association[], 
                  "Parameters" -> 
                  Association[
                   "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 44, 44}], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{20, 44, 44}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{20, 44, 44}, 
                    NeuralNetworks`RealT]]], "3" -> 
                Association[
                 "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                  Association[
                   "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 20, 
                    "$InputSize" -> {44, 44}, "$OutputSize" -> {22, 22}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{20, 44, 44}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{20, 22, 22}, 
                    NeuralNetworks`RealT]]], "4" -> 
                Association[
                 "Type" -> "Convolution", "Arrays" -> 
                  Association[
                   "Weights" -> 
                    NeuralNetworks`TensorT[{50, 20, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "InputChannels" -> 20, "$GroupNumber" -> 1, 
                    "$InputSize" -> {22, 22}, "$OutputSize" -> {18, 18}], 
                  "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{20, 22, 22}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{50, 18, 18}, 
                    NeuralNetworks`RealT]]], "5" -> 
                Association[
                 "Type" -> "Elementwise", "Arrays" -> Association[], 
                  "Parameters" -> 
                  Association[
                   "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 18, 18}], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{50, 18, 18}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{50, 18, 18}, 
                    NeuralNetworks`RealT]]], "6" -> 
                Association[
                 "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
                  Association[
                   "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Channels" -> 50, 
                    "$InputSize" -> {18, 18}, "$OutputSize" -> {9, 9}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{50, 18, 18}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{50, 9, 9}, 
                    NeuralNetworks`RealT]]], "7" -> 
                Association[
                 "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
                  Association[
                   "Level" -> DirectedInfinity[1], "OutputSize" -> {4050}, 
                    "$InputSize" -> {50, 9, 9}], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{50, 9, 9}, NeuralNetworks`RealT]],
                   "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{4050}, NeuralNetworks`RealT]]], 
                "8" -> Association[
                 "Type" -> "Linear", "Arrays" -> 
                  Association[
                   "Weights" -> 
                    NeuralNetworks`TensorT[{500, 4050}, NeuralNetworks`RealT],
                     "Biases" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 4050, "$InputDimensions" -> {4050}], 
                  "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{4050}, NeuralNetworks`RealT]], 
                  "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                "9" -> Association[
                 "Type" -> "Elementwise", "Arrays" -> Association[], 
                  "Parameters" -> 
                  Association[
                   "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                  "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                "10" -> Association[
                 "Type" -> "Linear", "Arrays" -> 
                  Association[
                   "Weights" -> 
                    NeuralNetworks`TensorT[{5, 500}, NeuralNetworks`RealT], 
                    "Biases" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputDimensions" -> {5}, "$OutputSize" -> 5, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                  "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                  "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]], "11" -> 
                Association[
                 "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
                  Association["DropoutProbability" -> 0.2], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
                  "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]], "12" -> 
                Association[
                 "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
                  Association[], "Inputs" -> 
                  Association[
                   "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
                  "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]]]], 
              Alignment -> Center], Nothing]}], 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{900., {93.12548828125, 100.87451171875}},
         TrackedSymbols:>{NeuralNetworks`Private`NetGraph`selection}],
        Initialization:>{NetGraph}],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.707439742501799*^9, 3.7074409388838463`*^9, 
  3.7074412368900747`*^9, 3.707441339389162*^9, 3.707441473910932*^9, 
  3.707441534140358*^9, 3.707442637711287*^9, 3.707490359536701*^9, 
  3.7075043835102453`*^9, 
  3.707577247958583*^9},ExpressionUUID->"2ee4a93d-cddf-40c6-a7f3-\
d014c7e0e90b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"toPreserve", " ", "=", 
   RowBox[{"{", " ", 
    RowBox[{
    "\"\<TrainedNet\>\"", ",", "\n", "\t", "\"\<BatchLossList\>\"", ",", 
     "\[IndentingNewLine]", "    ", "\"\<RoundLossList\>\"", ",", "\n", "\t", 
     "\"\<ValidationLossList\>\"", ",", "\[IndentingNewLine]", "     ", 
     "\"\<ValidationLossSeries\>\"", ",", "\n", "          ", 
     "\"\<LossEvolutionPlot\>\"", ",", "\[IndentingNewLine]", "     ", 
     "\"\<RMSGradientLists\>\"", ",", "\n", "          ", 
     "\"\<RMSGradientEvolutionPlot\>\"", ",", "\[IndentingNewLine]", "     ", 
     "\"\<RMSWeightLists\>\"", ",", "\"\<RMSWeightEvolutionPlot\>\""}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707439969494165*^9, 3.7074400083625813`*^9}, {
   3.7074403186534863`*^9, 3.707440376536631*^9}, {3.707490532092198*^9, 
   3.7074905539907312`*^9}, {3.707509158434037*^9, 3.70750916738237*^9}, {
   3.707509323880095*^9, 3.707509325813838*^9}, 
   3.707510690394309*^9},ExpressionUUID->"04e7bbf3-be61-47f0-8916-\
4120eb288419"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lossFunction", " ", "=", " ", 
  RowBox[{"CrossEntropyLossLayer", "[", "\"\<Index\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.707440018856639*^9, 
  3.7074400401846447`*^9}},ExpressionUUID->"80951f7d-d232-46c0-a95f-\
ffa946bf765e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["CrossEntropyLossLayer", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"TargetForm\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Index\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"TargetForm\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Index\"", "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  InterpretationBox[
                  "\"tensor of rank \[GreaterEqual] \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\"", 
                   StringForm["`` of rank \[GreaterEqual] ``", "tensor", 1], 
                   Editable -> False], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  InterpretationBox[
                  "\"tensor of \\!\\(\\*RowBox[{\\\"\\\\\\\"bounded \
integers\\\\\\\"\\\"}]\\)\"", 
                   StringForm["`` of ``", "tensor", 
                    StringForm["`` ``", "bounded", "integers"]], Editable -> 
                   False], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Loss\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("CrossEntropyLossLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7074399955414762`*^9, 3.707440042433096*^9, 
  3.707504392149178*^9, 
  3.7075772521243*^9},ExpressionUUID->"a70b10ef-903b-42c8-97cd-36d55a4be927"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "outputDir", "=", " ", 
   "\"\</Users/adendek/Documents/Wolfram \
Mathematica/Intern/project/DeepLaetitia/scripts/smileDetector/models/shallow\>\
\""}], ";"}]], "Input",
 CellChangeTimes->{{3.70750896199702*^9, 3.707509003491007*^9}, 
   3.707509039208815*^9, {3.707509090134487*^9, 
   3.7075091077711973`*^9}},ExpressionUUID->"fce9bd6a-da4f-48c0-8265-\
8d13c63614d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainedConvNet", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{
     RowBox[{"trainedConvNet", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "trainData", ",", " ", 
     "lossFunction", ",", "toPreserve", ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", " ", "10"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Directory\>\"", ",", "outputDir"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", "testData"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BatchSize", "\[Rule]", "64"}]}], "\[IndentingNewLine]", "]"}]}],
   "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.70731453102015*^9, 3.7073145413797083`*^9}, 
   3.7073146943891973`*^9, {3.707389508399935*^9, 3.7073895907803173`*^9}, {
   3.707389727385975*^9, 3.707389791893075*^9}, 3.707389881160714*^9, {
   3.707439756291876*^9, 3.707439760396021*^9}, {3.7074398184754868`*^9, 
   3.7074398228583317`*^9}, {3.707439897272149*^9, 3.707440001939941*^9}, {
   3.707440035357946*^9, 3.7074400472686777`*^9}, {3.7074400986567*^9, 
   3.7074401257776814`*^9}, {3.707440159954259*^9, 3.7074401957163363`*^9}, {
   3.707440227169876*^9, 3.7074402317766123`*^9}, 3.707440267207116*^9, {
   3.707440395715621*^9, 3.7074403997205477`*^9}, 3.707440430627945*^9, 
   3.707490559572377*^9, {3.707504440027403*^9, 3.707504463352991*^9}, {
   3.7075045203386507`*^9, 3.707504536693829*^9}, {3.70750456948346*^9, 
   3.707504583672534*^9}, {3.7075061189470587`*^9, 3.707506124466634*^9}, {
   3.707506174995223*^9, 3.7075061960079193`*^9}, {3.707508701560802*^9, 
   3.707508759995194*^9}, {3.707508832633132*^9, 3.7075088919564753`*^9}, 
   3.7075089845839252`*^9, {3.7075091375241747`*^9, 3.70750919083492*^9}, {
   3.707509236740555*^9, 3.7075092831352673`*^9}, {3.707509330384348*^9, 
   3.707509345791576*^9}, {3.707509731462963*^9, 3.707509758193243*^9}, {
   3.707509847163744*^9, 3.707509869760954*^9}, {3.707510017091606*^9, 
   3.7075100316604767`*^9}, {3.7075102717337713`*^9, 3.707510272597258*^9}, {
   3.707510438807695*^9, 3.707510457761853*^9}, {3.70751055378057*^9, 
   3.707510577704571*^9}, {3.707510628835763*^9, 3.707510634086252*^9}, {
   3.707510679851293*^9, 3.707510695476012*^9}, {3.707512393824586*^9, 
   3.707512398970127*^9}, {3.707513573940907*^9, 3.707513579281006*^9}, 
   3.7075196995556707`*^9, {3.707578174527547*^9, 
   3.7075781994335957`*^9}},ExpressionUUID->"1b0b5bc5-954e-495c-9b47-\
3ea4a1be0cca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"trainedConvNet", "[", 
   RowBox[{"[", "6", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707519711613863*^9, 
  3.707519712060804*^9}},ExpressionUUID->"9357191f-5bcb-4cbc-81df-\
c280ca480951"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     AbsoluteThickness[1.25], {
      InsetBox[
       FormBox["1", TraditionalForm], 
       Offset[{-2, 0}, {378, 0.2875}], {1., 1.}], 
      InsetBox[
       FormBox["2", TraditionalForm], 
       Offset[{-2, 0}, {756, 0.2875}], {1., 1.}], 
      InsetBox[
       FormBox["3", TraditionalForm], 
       Offset[{-2, 0}, {1134, 0.2875}], {1., 1.}], 
      InsetBox[
       FormBox["4", TraditionalForm], 
       Offset[{-2, 0}, {1512, 0.2875}], {1., 1.}], 
      InsetBox[
       FormBox["5", TraditionalForm], 
       Offset[{-2, 0}, {1890, 0.2875}], {1., 1.}], 
      InsetBox[
       FormBox["6", TraditionalForm], 
       Offset[{-2, 0}, {2268, 0.2875}], {1., 1.}], 
      InsetBox[
       FormBox["7", TraditionalForm], 
       Offset[{-2, 0}, {2646, 0.2875}], {1., 1.}], 
      InsetBox[
       FormBox["8", TraditionalForm], 
       Offset[{-2, 0}, {3024, 0.2875}], {1., 1.}]}, {
      InsetBox[
       FormBox[
        TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], 
       Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
      InsetBox[
       FormBox[
        TemplateBox[{"10", "\"0\""}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm], 
       Offset[{3, 0}, {0, 0.}], {-1, -1.}]}, {{
       Hue[0.083, 1., 1.], 
       LineBox[CompressedData["
1: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
+aoMxXJtagPOdF//lUGxp9dm3ezmyv8B4dxP3Q==
        "]]}, {}}, {{
       Hue[0.59, 0.9, 0.9], 
       LineBox[{{379, 1.1183113099451043`}, {757, 1.076298948143535}, {
         1135, 1.0464080866885241`}, {1513, 1.0644483438008492`}, {
         1891, 1.052158314498387}, {2269, 1.1420980369636917`}, {
         2647, 1.219806924328698}}]}, {
       Hue[0.59, 0.9, 0.6], 
       PointBox[{{379, 1.1183113099451043`}, {757, 1.076298948143535}, {
         1135, 1.0464080866885241`}, {1513, 1.0644483438008492`}, {
         1891, 1.052158314498387}, {2269, 1.1420980369636917`}, {
         2647, 1.219806924328698}}]}}}, ImageSize -> {500, 200}, Frame -> 
    True, Axes -> None, AspectRatio -> Full, PlotLabel -> 
    FormBox["\"rounds\"", TraditionalForm], ImagePadding -> 1, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
      ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, 
    PlotRange -> {{0, 2673}, {-0.5, 0.25}}, 
    GridLines -> {{378, 756, 1134, 1512, 1890, 2268, 2646, 3024}, {{-1., 
        GrayLevel[0.3]}, {0., 
        GrayLevel[0.3]}, {-0.6989700043360187, 
        GrayLevel[0.85]}, {-0.5228787452803375, 
        GrayLevel[0.85]}, {-0.39794000867203755`, 
        GrayLevel[0.85]}, {-0.30102999566398114`, 
        GrayLevel[0.85]}, {-0.22184874961635626`, 
        GrayLevel[0.85]}, {-0.1549019599857432, 
        GrayLevel[0.85]}, {-0.09691001300805638, 
        GrayLevel[0.85]}, {-0.04575749056067506, 
        GrayLevel[0.85]}, {0.30102999566398114`, 
        GrayLevel[0.85]}, {0.47712125471966244`, 
        GrayLevel[0.85]}, {0.6020599913279623, 
        GrayLevel[0.85]}, {0.6989700043360187, 
        GrayLevel[0.85]}, {0.7781512503836435, 
        GrayLevel[0.85]}, {0.8450980400142567, 
        GrayLevel[0.85]}, {0.9030899869919434, 
        GrayLevel[0.85]}, {0.9542425094393249, 
        GrayLevel[0.85]}}}, PlotRangePadding -> {0, 
      Scaled[0.05]}, PlotRangeClipping -> True, Background -> GrayLevel[1], 
    FrameStyle -> GrayLevel[0.5], FrameTicks -> None],FormBox[
    FormBox[
     TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.9, 0.9]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.9, 0.9]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.9, 0.9], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> 
                   Hue[0.59, 0.9000000000000001, 0.6000000000000001], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "Hue[0.59, 0.9, 0.9]"], Appearance -> None, BaseStyle -> {},
                  BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.9, 0.9]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Hue[0.59, 0.9, 0.9], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "Hue[0.083, 1., 1.]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.707519712406686*^9, 
  3.7075823590768147`*^9},ExpressionUUID->"772d4a7c-0634-4d5f-b069-\
64c33a834b94"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.707519704129546*^9},ExpressionUUID->"b1e4080a-5c82-43fa-8a28-\
d5ecffe00db5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainedConvNet", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<validation Loss\>\"", "}"}]}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.707518942978619*^9, 3.7075189585437307`*^9}, 
   3.707519016027577*^9, {3.707519334729845*^9, 3.707519345887074*^9}, {
   3.707519385260818*^9, 3.70751942191759*^9}, {3.707519456281024*^9, 
   3.707519478840571*^9}, {3.707519508845305*^9, 3.7075195594352818`*^9}, {
   3.707519725077158*^9, 
   3.707519750259017*^9}},ExpressionUUID->"1f346f42-bcad-432c-be9a-\
30b6b98b08cc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{379., 1.1183113099451043`}, {757., 1.076298948143535}, {
         1135., 1.0464080866885241`}, {1513., 1.0644483438008492`}, {1891., 
         1.052158314498387}, {2269., 1.1420980369636917`}, {2647., 
         1.219806924328698}}]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 1.0377381448065155`}, 
     PlotRange -> {{0, 2647.}, {1.0464080866885241`, 1.219806924328698}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 1.0377381448065155`}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 2647.}, {1.0464080866885241`, 1.219806924328698}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"validation Loss\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.707519517656156*^9, 3.70751955984494*^9}, {
   3.7075197256353693`*^9, 3.7075197511519136`*^9}, 
   3.707582363461977*^9},ExpressionUUID->"71fa4c66-06c8-4399-b852-\
c8f2952b9ac0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"net", " ", "=", " ", 
  RowBox[{"Import", "[", "\"\<]\>"}]}]], "Input",
 CellChangeTimes->{{3.7075827126086903`*^9, 
  3.707582725173567*^9}},ExpressionUUID->"9aaa920e-43cb-4a56-a65d-\
08ecae1372c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"trainedConvNet", "[", 
   RowBox[{"[", "8", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707518785370439*^9, 
  3.707518879239171*^9}},ExpressionUUID->"e4cbb9ba-6d46-4a93-b2db-\
d9467095a092"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
         "]]}}, {
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
6K2zqC1bIcQRJ7M77yokzP8ADyuFEg==
         "]]}}, {
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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

         "]]}}, {
       {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
         "]]}}, {
       {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
Nr+uco0IRoSD4lA+hf8P0c+nng==
         "]]}}, {
       {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1Vns0VdkfR0K43HvOuSIhenrEYMZbvqmkkohKqJFSQpNnQqGXR3lUXg01
Kg1F6YlR+CbkFSOVUkkhJSpxzzmXot+d9au91l77j732Xnt/vt/PQ9N791of
CTExsVbR/G/9OYoWDaYSi1j8bD4+aavfb5NnZVp7oJFBuSlXIj+kfbGpn9fZ
aZQg/LHP2ISMXvOIeSBA4+SP7OK7YzYWp9vXV4IQJWbpjMsVfbM5fETJ+K8I
Bje4GxUHa323sX283jJiPo0hRZY2N86Lgd8yMiN0x8/7xUFlidRcr34aldaV
3LnuLwEKUt0t1DQGHUxjynr1p0DokkUyekU07v/rUYXSmylwBmaun7Rn0TnJ
UFfyiCS8ajjrfcKQxYI7T5WaZk6FJx9sj7SNC1DDfrW5UuFUGPlSA/xI5sf7
peBuyd1FYlEMRsaMV/sXSsHfuTvh1yUMxp3wt4jSkIbNUzpzOa9p1LspKWWS
Ig3ka0nliA00nugNibJlpeGGREvSpA+L14t3p+t7yEDueXHz3AkaG+qsw0Nv
y0BvQufla/+O4vDNhxP7+dOANY3IG/GkcUzv5L6CgGngIt6Rs3eS/oHfNNAV
9xz87CzAlhnDH9K5svAqt7TFZYDG44en/NO9SRZ8HK4LXfqFOHtlZof7RVnw
qwfLqGQWNSZbms2GZSH4lD8vUJHBnA65sfzf5MD4Lf+BkQmD7ron7Fv3ysFG
5TM5NR00+jf8U/WoXA4i5d09FB7R+PCfJ4JnQjlwWjuguPgpjQyn/MC33+Sh
qVatTNyCwbpRRRf3IHmYXM8dSUikf9RXHjjJt++tSR7FynqLTwt65WFpi5v9
0FkBXlxcU3dfhQMlb+OOxa4dxQ5Ogu+YIwfGXxSq/zJOIyfYyPLRQQ68NvZ7
WjYiQMfLKct8SjhAaYbWFz5gcaG1viv2c+Br8404qxwaeUOU0rCSAjTEHs64
asrgEtdvJlPtFMDSTrNnD8nghca8PXKhCmDYeMi5s2kEA2yPVyqcU4CxJ+r/
1vJoLB0+bjCjRQFkO9aeaPtIY9gdJyszoQJQ/YY5PUaCH/2pCOu1PFo3XGTw
qurlsvZVitCuvrPCPYXG72LO371CFWF5QF2eWjODKy4VF849rQibfcs61NpG
schKy3dBjSIcpff4Zj+nUZ68Fx44oAhXLwWsCJZhcXTy9saD0lzIlNeX8aim
0SlAp5lW4ULwsGUA3KBxY/aVc3w9LryxjWq80kXjarv7dX3WXMi1ChOmBwsw
Qrt+zGcNF8Qj0iqHAlk8ZuTzMseLC26KR1WszFjkBBCDCUFcaDUX6+0U9dfg
y/mHDQ5ygRv1YPJbEI2qyr3vT5zkws0HGVPqEgQ/+McF75U2h1J6RHhop6ed
vMEF28cLd2kYMZg/e+XzX+9xYTl0lbf4MbiQt+BL9kMuPPPcuV7/GI3mrXfO
3n/NBQ2yuMM3mcE7M9LPlH/mwp/vG3fccBKg5uIdiWGTXDgZOT/Nwo/Gxo45
gq/yPChJiPOREeFjs0Hg6ajKg6vBbRfC/QXYb6Bl/Ic2D1ylsooKOgWoVvSt
w9OUB09ebn3Z9geNntLns1WX8SDoBKtvcWcUifd37xWt5cGLkVuLpUX8sDJy
iFfw4sG+daa3jsbRqO04m1q2iwfbdXtiDP8W6c31q4lOkTxYMkb3WQfSuDR2
74RhPA8Uwp6XJ6jSP/SHB9a7zfv3uzHocyZfIuosD+Zt05yUaaDxYJ93ct9l
Hgx5177qfUjjYx9m2oJyHtzqG+TOy2VQNk+42a6OB5Wnre2o9TTaVQ74wUMe
iDcHffQzorHd5qTk9C4evNRfNK9xNY1eQZu+Nr0X/ffXrxyilEHmaPH0TQIe
tMUT0zhhDHL1DFVbv/PA62jwp6u7aKzynFutLkfAA87ZP7te0hjqW1C1RomA
Z3uOWSxCGgM7Ru9t0STAb6Z6u4vrKP6JBeHr9Aj4JX/7yczZQuytmIjVNSWg
Kfe93OBcFoUXpKP7FhOgE5il5adBo3DVW5kDDgRMM7ug3l3FoF+osFR8AwE+
NqGE7VsaddWUVHZsIeAju717WcRPfSZAUPPGkNSh0fC26vyeMAJIRbnMkoeM
SA/iu4UxBHQuX9Q+O4/GIXKjD5NIwLoNbd6rLwmwJ8fktxdpBBx7v3/0JpfB
vy2MGwrOEDD1sOfSDsVRTPMZTvMsICB01ULlbjsaPZaj7Pg1AhqVYxgVgQBr
ne7mxN4mwMJuju1QJoNS68RvDtcQ4NBd8e5ejwAN7bLLV7YQ4Nqe18zoMnju
QgM/tYOAxROqz/WkWUy+OU23qpsARyKzWELUv56HjN2fvSeA+h5gu30Ti1lv
ksRffSHAYNbSJfpXBbjMum/fv+ME8ItTjNTn0Xgs+e+5V6aQYHWQvyt7vwCL
l39eGy5PQlT4q+hEcRrLAvM36vNJ8Glo7nEcotGlIzGpXY2EbZGnpkw1E/Eh
YqnVtnkkjJaVSjm3//Q3Eozj7u/9lk/jqptfVjqbkqC5VLPdVaSPA5nBi6/Y
kPB20DHBWaRn2nOk+9jlJPh+StpSX8fgO+2RCEMnEjZuVak/+5+e/H7P3t2N
BLz11VbNkkZbfa/0YC8SZt4YL88S+dP1kRm5kb4klB/1nKNTyGBzacml4EAS
PMaTFGbV03gzMGTUfS8J9uPrs3Vn0OjdoHXbOJaERre63zuO0Njnp20xEU9C
zEBdxwU9kT8OpxSXpZIg4/EhOkvkz/5u0s5bs0jo9RGXPt3DYMbciY1iuSQ4
LZOfqFpAYzg/Ryw1nwSJiemJJiJ/PxP7JFKxmITEgIHK6c8YHNsSMnGghITM
h/Wtt4ppJOSmV/RXkFB5f6ascZcANyfYDVjXkvBtoe7DhngG1ctDSuObSegz
iMitIgQorS7pWttOQkm9UPZ5kABbt7h9Ge0k4VDZsdLnYz/zAwmuKTIOwRSL
nt49vXrvSZA8VaibqMPgnHDxNJPPJHDXjfB6DBn8tKuWNmZIWBIVxky+FqL7
yAuTuRMknNVV6/GRF+LCd6qxspIUlEVXDDwfZTDb8cB4rywFy3ytKsRFecNF
zKz1Oo+C3Q+8lR6L/MfJ4KxWqDIFTPJqbr3hGNpWu6jralAQXc5uU/suyiMR
uu865lJQesmt2vkNjePCJefD9Sggxup+83jA4I4MiVCOMQXVKVs+N/GF6Ckz
I/aUOQWfslW4XxpEeUSYMqAMFBgeDNd2FeUt5d8r2lPsKDh6K7Wh6ziDB+s3
bBp3oCD/mm60QJzBlMCwQg8XCjinchIOR7FovzLp+Y2NFPgnfq2LKWAw6kkE
R8yLgomF56O35Aswr++I95LtFBj1942JG7FYYrNduC+AgvuuIVreMQze1bX9
eDmYgvnGbtmnRPz+/WnJ5kd7KVj9S27SCjlRPa882TkcTcEityaPbpH+/j+/
UeAQ05TuPkqj/YenVQrHKBg78kfcv+YCnPnCDbgnKGic5zTvjCeDhyUbm2Sy
KMi79VnwV7wA4yNr9wpPU+CbmL+tM1qA3Pigbd3nKXh3J3KFSzSNv2w6VFB5
kQJr/3SZB/WifvvHyiOtmILrvfdnwy4WLf2CT3ndouD4l9OJ9Kcx/LU9OXzu
bQq6JlptHPaMo5t9KrcHKfCsiNk5ZjuGjiHcqMw6Ct426pwcShWibqpdq20z
BbM4a04ee8HgtzxJzXdtFCyVGoobrBnHtsuViYc6KGirNi+y02PxxtU4deWX
FARPzeTiatH5emX6whsKNIwuVLaL8CxWe6Sl846CwS5pR/t9DG59UVFRMETB
dMe24Pt/svhUKv6p2ggFsPfKk6BVLL5yS4lPYin4aDIUY10jRE3Jrtej3yi4
Eni+wlSUx28H6rEuEnxYfO381stCFk2G+rsuS/PB7PGwSsMOFr0dtS9OyvOB
X7Q+8FE+gyZptb4rCD7cj99gkGTFoJmfjVHydD5EJqsbmcb+zNd8kH3dUNL0
jsXq2YcXiGnxwWnqzbtFXizu3EbvNZjPh7A5jeWfOmmMa8lScdPjw+Clo9JN
HBZdTqerRhryIePcdsvoPSwOOz9KzTDhg1GGStMuLwZ3i3+NK7Tkg4ZVqETm
FZE/ZITwyoEPwtk6+iVyLH5V2GFTvYwPPuGl8vNlhBhafm9WzUo+ZHk/PmfQ
zKKOh1ld1Ro+1GrNW1XSO47/A2sdcow=
         "]]}}, {
       {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
bfhfmFVasg==
         "]]}}, {
       {RGBColor[1, 0.75, 0], PointSize[0.004583333333333334], 
        AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
         
         "]]}}}}, {{}, {}}, {{{{{GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, 1.3650981412132572`}], 
               Offset[{0, 0}, {5.4411860352265125`, 1.3650981412132572`}], 
               Offset[{0., 0.}, {5.495574771116239, 1.3650981412132572`}], 
               Offset[{0., 0.}, {5.495574771116239, 1.3650981412132572`}], 
               Offset[{0., 0.}, {5.549963507005966, 1.3650981412132572`}], 
               Offset[{0, 0}, {5.737840361102678, 1.3895885419250718`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {5.737840361102678, 
                1.3895885419250718`}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                1.3895885419250718`}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                1.3895885419250718`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, 1.3650981412132572`}], 
               Offset[{0, 0}, {5.4411860352265125`, 1.3650981412132572`}], 
               Offset[{0., 0.}, {5.495574771116239, 1.3650981412132572`}], 
               Offset[{0., 0.}, {5.495574771116239, 1.3650981412132572`}], 
               Offset[{0., 0.}, {5.549963507005966, 1.3650981412132572`}], 
               Offset[{0, 0}, {5.737840361102678, 1.3895885419250718`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {5.737840361102678, 
                1.3895885419250718`}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                1.3895885419250718`}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                1.3895885419250718`}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{70., 8.000000000000016}, {5.737840361102678, 
                1.3895885419250718`}], 
               Offset[{70., -7.999999999999984}, {5.737840361102678, 
                1.3895885419250718`}], 
               Offset[{10., -7.999999999999998}, {5.737840361102678, 
                1.3895885419250718`}], 
               Offset[{10., 8.000000000000002}, {5.737840361102678, 
                1.3895885419250718`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"1", ",", "\<\"Weights\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "cad6376f-b3eb-43ac-be9e-453e7fc4086e"],
              Text[{1, "Weights"}]],
             BoxRotation->0.], 
            Offset[{40., 8.881784197001252*^-15}, \
{5.737840361102678, 1.3895885419250718}], {0, 0}]}], GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, 1.922094073908087}], 
               Offset[{0, 0}, {5.4411860352265125`, 1.922094073908087}], 
               Offset[{0., 0.}, {5.495574771116239, 1.922094073908087}], 
               Offset[{0., 0.}, {5.495574771116239, 1.922094073908087}], 
               Offset[{0., 0.}, {5.549963507005966, 1.922094073908087}], 
               Offset[{0, 0}, {5.737840361102678, 2.0176716874414375`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {5.737840361102678, 
                2.0176716874414375`}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                2.0176716874414375`}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                2.0176716874414375`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, 1.922094073908087}], 
               Offset[{0, 0}, {5.4411860352265125`, 1.922094073908087}], 
               Offset[{0., 0.}, {5.495574771116239, 1.922094073908087}], 
               Offset[{0., 0.}, {5.495574771116239, 1.922094073908087}], 
               Offset[{0., 0.}, {5.549963507005966, 1.922094073908087}], 
               Offset[{0, 0}, {5.737840361102678, 2.0176716874414375`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {5.737840361102678, 
                2.0176716874414375`}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                2.0176716874414375`}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                2.0176716874414375`}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{64., 8.000000000000014}, {5.737840361102678, 
                2.0176716874414375`}], 
               Offset[{64., -7.999999999999986}, {5.737840361102678, 
                2.0176716874414375`}], 
               Offset[{10., -7.999999999999997}, {5.737840361102678, 
                2.0176716874414375`}], 
               Offset[{10., 8.000000000000002}, {5.737840361102678, 
                2.0176716874414375`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"1", ",", "\<\"Biases\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "a7a406f9-70b2-4acd-94d0-9177a1711d44"],
              Text[{1, "Biases"}]],
             BoxRotation->0.], 
            Offset[{37., 8.215650382226158*^-15}, \
{5.737840361102678, 2.0176716874414375}], {0, 0}]}], GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -1.0513038891333797`}], 
               Offset[{0, 0}, {5.4411860352265125`, -1.0513038891333797`}], 
               Offset[{0., 0.}, {5.495574771116239, -1.0513038891333797`}], 
               Offset[{0., 0.}, {5.495574771116239, -1.0513038891333797`}], 
               Offset[{0., 0.}, {5.549963507005966, -1.0513038891333797`}], 
               Offset[{0, 0}, {5.737840361102678, -1.1225735454490366`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.737840361102678, -1.1225735454490366`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -1.1225735454490366`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -1.1225735454490366`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -1.0513038891333797`}], 
               Offset[{0, 0}, {5.4411860352265125`, -1.0513038891333797`}], 
               Offset[{0., 0.}, {5.495574771116239, -1.0513038891333797`}], 
               Offset[{0., 0.}, {5.495574771116239, -1.0513038891333797`}], 
               Offset[{0., 0.}, {5.549963507005966, -1.0513038891333797`}], 
               Offset[{0, 0}, {5.737840361102678, -1.1225735454490366`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.737840361102678, -1.1225735454490366`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -1.1225735454490366`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -1.1225735454490366`}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{70., 8.000000000000016}, {
                5.737840361102678, -1.1225735454490366`}], 
               Offset[{70., -7.999999999999984}, {
                5.737840361102678, -1.1225735454490366`}], 
               Offset[{10., -7.999999999999998}, {
                5.737840361102678, -1.1225735454490366`}], 
               Offset[{10., 8.000000000000002}, {
                5.737840361102678, -1.1225735454490366`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"4", ",", "\<\"Weights\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "7755f027-ff1b-476e-9cfb-d5c4ba6fc3c9"],
              Text[{4, "Weights"}]],
             BoxRotation->0.], 
            Offset[{40., 8.881784197001252*^-15}, \
{5.737840361102678, -1.1225735454490366}], {0, 0}]}], GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, 0.4533929648030759}], 
               Offset[{0, 0}, {5.4411860352265125`, 0.4533929648030759}], 
               Offset[{0., 0.}, {5.495574771116239, 0.4533929648030759}], 
               Offset[{0., 0.}, {5.495574771116239, 0.4533929648030759}], 
               Offset[{0., 0.}, {5.549963507005966, 0.4533929648030759}], 
               Offset[{0, 0}, {5.737840361102678, 0.7615078890303294}], 
               Offset[{5., 1.1102230246251565`*^-15}, {5.737840361102678, 
                0.7615078890303294}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                0.7615078890303294}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                0.7615078890303294}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, 0.4533929648030759}], 
               Offset[{0, 0}, {5.4411860352265125`, 0.4533929648030759}], 
               Offset[{0., 0.}, {5.495574771116239, 0.4533929648030759}], 
               Offset[{0., 0.}, {5.495574771116239, 0.4533929648030759}], 
               Offset[{0., 0.}, {5.549963507005966, 0.4533929648030759}], 
               Offset[{0, 0}, {5.737840361102678, 0.7615078890303294}], 
               Offset[{5., 1.1102230246251565`*^-15}, {5.737840361102678, 
                0.7615078890303294}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                0.7615078890303294}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                0.7615078890303294}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{64., 8.000000000000014}, {5.737840361102678, 
                0.7615078890303294}], 
               Offset[{64., -7.999999999999986}, {5.737840361102678, 
                0.7615078890303294}], 
               Offset[{10., -7.999999999999997}, {5.737840361102678, 
                0.7615078890303294}], 
               Offset[{10., 8.000000000000002}, {5.737840361102678, 
                0.7615078890303294}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"4", ",", "\<\"Biases\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "ca3ea5da-45d4-41e5-ad94-59059f96a0a6"],
              Text[{4, "Biases"}]],
             BoxRotation->0.], 
            Offset[{37., 8.215650382226158*^-15}, \
{5.737840361102678, 0.7615078890303294}], {0, 0}]}], GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -3.258029333870919}], 
               Offset[{0, 0}, {5.4411860352265125`, -3.258029333870919}], 
               Offset[{0., 0.}, {5.495574771116239, -3.258029333870919}], 
               Offset[{0., 0.}, {5.495574771116239, -3.258029333870919}], 
               Offset[{0., 0.}, {5.549963507005966, -3.258029333870919}], 
               Offset[{0, 0}, {5.737840361102678, -3.2580307221800613`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.737840361102678, -3.2580307221800613`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -3.2580307221800613`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -3.2580307221800613`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -3.258029333870919}], 
               Offset[{0, 0}, {5.4411860352265125`, -3.258029333870919}], 
               Offset[{0., 0.}, {5.495574771116239, -3.258029333870919}], 
               Offset[{0., 0.}, {5.495574771116239, -3.258029333870919}], 
               Offset[{0., 0.}, {5.549963507005966, -3.258029333870919}], 
               Offset[{0, 0}, {5.737840361102678, -3.2580307221800613`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.737840361102678, -3.2580307221800613`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -3.2580307221800613`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -3.2580307221800613`}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{70., 8.000000000000016}, {
                5.737840361102678, -3.2580307221800613`}], 
               Offset[{70., -7.999999999999984}, {
                5.737840361102678, -3.2580307221800613`}], 
               Offset[{10., -7.999999999999998}, {
                5.737840361102678, -3.2580307221800613`}], 
               Offset[{10., 8.000000000000002}, {
                5.737840361102678, -3.2580307221800613`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"8", ",", "\<\"Weights\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "3d243bfc-6b8f-462f-be55-e7ca5d505ca3"],
              Text[{8, "Weights"}]],
             BoxRotation->0.], 
            Offset[{40., 8.881784197001252*^-15}, \
{5.737840361102678, -3.2580307221800613}], {0, 0}]}], GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -1.680592816877991}], 
               Offset[{0, 0}, {5.4411860352265125`, -1.680592816877991}], 
               Offset[{0., 0.}, {5.495574771116239, -1.680592816877991}], 
               Offset[{0., 0.}, {5.495574771116239, -1.680592816877991}], 
               Offset[{0., 0.}, {5.549963507005966, -1.680592816877991}], 
               Offset[{0, 0}, {5.737840361102678, -1.7507721765434232`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.737840361102678, -1.7507721765434232`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -1.7507721765434232`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -1.7507721765434232`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -1.680592816877991}], 
               Offset[{0, 0}, {5.4411860352265125`, -1.680592816877991}], 
               Offset[{0., 0.}, {5.495574771116239, -1.680592816877991}], 
               Offset[{0., 0.}, {5.495574771116239, -1.680592816877991}], 
               Offset[{0., 0.}, {5.549963507005966, -1.680592816877991}], 
               Offset[{0, 0}, {5.737840361102678, -1.7507721765434232`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.737840361102678, -1.7507721765434232`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -1.7507721765434232`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -1.7507721765434232`}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{64., 8.000000000000014}, {
                5.737840361102678, -1.7507721765434232`}], 
               Offset[{64., -7.999999999999986}, {
                5.737840361102678, -1.7507721765434232`}], 
               Offset[{10., -7.999999999999997}, {
                5.737840361102678, -1.7507721765434232`}], 
               Offset[{10., 8.000000000000002}, {
                5.737840361102678, -1.7507721765434232`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"8", ",", "\<\"Biases\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "7b1e2053-3cc4-4ea9-9bd1-265e23e456da"],
              Text[{8, "Biases"}]],
             BoxRotation->0.], 
            Offset[{37., 8.215650382226158*^-15}, \
{5.737840361102678, -1.7507721765434232}], {0, 0}]}], GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -0.4408696364415303}], 
               Offset[{0, 0}, {5.4411860352265125`, -0.4408696364415303}], 
               Offset[{0., 0.}, {5.495574771116239, -0.4408696364415303}], 
               Offset[{0., 0.}, {5.495574771116239, -0.4408696364415303}], 
               Offset[{0., 0.}, {5.549963507005966, -0.4408696364415303}], 
               Offset[{0, 0}, {5.737840361102678, -0.4945164340168474}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.737840361102678, -0.4945164340168474}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -0.4945164340168474}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -0.4945164340168474}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -0.4408696364415303}], 
               Offset[{0, 0}, {5.4411860352265125`, -0.4408696364415303}], 
               Offset[{0., 0.}, {5.495574771116239, -0.4408696364415303}], 
               Offset[{0., 0.}, {5.495574771116239, -0.4408696364415303}], 
               Offset[{0., 0.}, {5.549963507005966, -0.4408696364415303}], 
               Offset[{0, 0}, {5.737840361102678, -0.4945164340168474}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.737840361102678, -0.4945164340168474}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -0.4945164340168474}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.737840361102678, -0.4945164340168474}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{75., 8.000000000000016}, {
                5.737840361102678, -0.4945164340168474}], 
               Offset[{75., -7.999999999999983}, {
                5.737840361102678, -0.4945164340168474}], 
               Offset[{10., -7.999999999999997}, {
                5.737840361102678, -0.4945164340168474}], 
               Offset[{10., 8.000000000000002}, {
                5.737840361102678, -0.4945164340168474}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"10", ",", "\<\"Weights\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "207c26ab-156c-44b5-a723-4a1653c6afab"],
              Text[{10, "Weights"}]],
             BoxRotation->0.], 
            Offset[{42.5, 9.43689570931383*^-15}, \
{5.737840361102678, -0.4945164340168474}], {0, 0}]}], GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, 0.36659620965561474`}], 
               Offset[{0, 0}, {5.4411860352265125`, 0.36659620965561474`}], 
               Offset[{0., 0.}, {5.495574771116239, 0.36659620965561474`}], 
               Offset[{0., 0.}, {5.495574771116239, 0.36659620965561474`}], 
               Offset[{0., 0.}, {5.549963507005966, 0.36659620965561474`}], 
               Offset[{0, 0}, {5.737840361102678, 0.13351232905360585`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {5.737840361102678, 
                0.13351232905360585`}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                0.13351232905360585`}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                0.13351232905360585`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, 0.36659620965561474`}], 
               Offset[{0, 0}, {5.4411860352265125`, 0.36659620965561474`}], 
               Offset[{0., 0.}, {5.495574771116239, 0.36659620965561474`}], 
               Offset[{0., 0.}, {5.495574771116239, 0.36659620965561474`}], 
               Offset[{0., 0.}, {5.549963507005966, 0.36659620965561474`}], 
               Offset[{0, 0}, {5.737840361102678, 0.13351232905360585`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {5.737840361102678, 
                0.13351232905360585`}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                0.13351232905360585`}], 
               Offset[{10., 2.220446049250313*^-15}, {5.737840361102678, 
                0.13351232905360585`}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{69., 8.000000000000016}, {5.737840361102678, 
                0.13351232905360585`}], 
               Offset[{69., -7.999999999999985}, {5.737840361102678, 
                0.13351232905360585`}], 
               Offset[{10., -7.999999999999998}, {5.737840361102678, 
                0.13351232905360585`}], 
               Offset[{10., 8.000000000000002}, {5.737840361102678, 
                0.13351232905360585`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"10", ",", "\<\"Biases\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "4415af76-189d-4585-9c14-f3d530fa8522"],
              Text[{10, "Biases"}]],
             BoxRotation->0.], 
            Offset[{39.5, 8.770761894538737*^-15}, \
{5.737840361102678, 0.13351232905360585}], {0, 0}]}]}}}}, {{{}}}}, {{}, {}}, \
{{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.1959798200108147, -4.2561601513228045`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 103.54450254459562`}, {All, All}},
  ImageSize->450,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.11099742018311629`, 
   5.327876168789581}, {-4.1422570199956645`, 2.919737122286969}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {7.003065458786462, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {7.090076835776092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {7.170119543449628, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {7.24422751560335, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {7.313220387090301, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {7.3777589082278725`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}, {{-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.707518799976943*^9, 3.70751887976186*^9}, 
   3.7075823717810707`*^9},ExpressionUUID->"36aa61df-bc98-4e3b-a91d-\
8a6ca3dda528"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedConvNet", "[", 
  RowBox[{"[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7075196108939533`*^9, 
  3.707519612136156*^9}},ExpressionUUID->"9cf82dab-cd98-4584-a508-\
24202a4730db"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
         "]]}}, {
       {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
ZlVlDiLo6c0qOPKag/8FRxeyXw==
         "]]}}, {
       {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
h2dLLAj8H8XKuso=
         "]]}}, {
       {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1Vgk0VfsXFkLume695xqjEmWKkCENdkKXeiIqifekRHiPDM/QZColREql
pEE0iCQNqHaikpfCM1RKD829iELG//mv5Z21zjrrW3ufb+/97XP2b8/wDlrl
IykhIVHH3f9//ndlnmypP67Fx+75Q2PWBu+shtc0GI2I+ciTuhz9KeOb1ZSC
+aHSfv/Z+63WpdfWng7no0nKvwNL8KeV8fCDDSMclpyuO8S7NGJ1tHxUwdmd
j2vdjQtDNMat/PSNpxlZ8jH00gKrq2ckoHdb4P4+3f/4J8EyveijltP4qLC6
tLw4QBLEtW6bi6bwcYX5rhudBlKwkn93oUIHgztONlYo/CMFXikX5RIfM+ic
bKQnvVsadIViH+crDOaXtyg8njoZ7otDn885yOA08S/zFS5OhuOPvKtkspmJ
/GUgyLvR92QWg9G7hu4FXJSBnPSn+6l4BvekB1humyYLl1wfDBpuZ1C/RFrG
LFUWEnacVfs7jMH0ztBt1gOyYPu8dtWmSAaLC4MOGayXg6Xrrm3y2Mngo+pF
EWFlcpAacpP94M5gT0n96A7RFMgr1vqSZMPgT/2D2/MDp4CbBWXao8tM6DcF
fD3j11yiGHyi0vPpECMP8Tfm7s7vpTEtQepmu6c8aHY+iXO9RuNMh8xm9/Py
8C1UNdHzBI3Txp7UWvTIg4UHvWefD43Hm3k/80x5cCVult9RXxrd9dLFdZE8
aHZqsjntTGPAo5t3Gm/xQDfieMWcnTTW32z63jrIg7ogz2ffd9PYT96KHTEl
QDFcrKgZSGN1H+3ivpWATzt0AtLt6Yn+ErBzRcWFGA7ffmj5VbuTAIPkhmd9
G2k8v+R+9QNlEv72nqzotpbGZnKv309HEnZeFW054kQjGWK8oDGOhG75Jj9r
axodC1JtfUpJ+ItX8lqsQeOcRQaud9+RUNqrLKmkSSP/C6vQo0BBrqxxf+1C
Gpe6jphNtqPAtWn310gTGnNrzv7JC6NguqWh1F6axkDrtNvUaQpyhrxL1nyn
8HpPmqHKEwrU33pnRTVTGF7utNBikIK/NbaUxl6jJr5PGjIWBYyH51JYpFpw
o2E5DW0dYLHgNoXjEs7jXmE0PDz41l9LkUb7C4UXtU7QULo7VOZAKo2XFmr4
ad+noSatNVWymkZCWBkR/JGGwHgmQqaSxr6xsnVxsgwsykm+sriYRqdA3dof
ygw4uVqVb0yjcV3W5dMifQY2u0q1ayfR+Ivdg+quRQzIJ9c25QbTGKXz8KfP
SgZuTImUfyqmcb+xT9txLwauXVg9rW8ep2eg4PPerQxclQkLlLag8XPb7ATD
OAZWmE4VzeL0U1Xq/JB+kAGVC/OqwpbTE/8fA1H9AW/jFtMYrnMo4+BVBjRz
56h+nkpj3kyHF/MqGWhfWmZ5zJDrB1/7W1Y9Awpru/m+CjTOrys/9eANh2ty
mher0Fiucij7VjcDDuZJ+OIzhTOW+O4LH2Pgg/OJo684e02z5vdhgg9fVcR2
LiSNVmu/eziq8iGpLT7tuRyN7ww1TP7Q4cNQQHV/Khdf7dJIs4c5H34qJhO5
M2n0kD2TpWrLh9evtss6mdMo+ICVl1bxwa7MtlXKiMaFxisSKS8+iLsDl68f
pVDHcSZr+zsfVvbVrd/xL4WhxUX7nKL5cPVTt9TNtxTaxESOGiXy4aRhYcOM
Ympi/vChrfTxxR2xFPpk50luO8WHDBm/a4kXKYzr8k7pKuCDrGZvS95TCv/2
6Z+ifYsPXnmur1ecplD+7OCvdtV82BOcJzMpmkK72x/9oZ4Pd6xNm9XTKGyw
Oiit+IoPtJ9u0WgchV5bPYcff+DDWdEdZtN2CvuTChU9v/OBWPtq28soChl9
I9W6cT4wf55665pF4R0PrXvqPAE4P0yq1kygMMwv/85KBQG8/Gtsi5c/hcHN
fZUbZghgKHRNgU88hcfu5kes1heARmtIQM0aCjsrRmP0zAVg3icrZTCXwsFc
2Z1dSwRwbfpZmToVDi9/Kxe7QgDx+l0fS9Up9A8bvD5prQAUwlbbX5GnUE9N
Qdl3gwDIkcgShVFyYj4LYPdOkxz3PhKNylRnd4QLwGnobEHmCMnNg8T2wV0C
2FJ76espBQq/CNf59O8TwFRP16duJhR2HDczfZkhgLKby2e9XkThOUuTR/nZ
AuhKWCDI5PwzfHoyPPIF8OyYV4z9MInrl92VH7oigA9huUG+MhRWOeHxmDIB
NFKtNZ4iCmVWTyrpuS8APYN/3igrU2hkl3XL4Qmn14M1Xl8lKDyd+0h0oJnz
98/T9eTip5RM0bvTLoAFLRJvroop9Ig3cW/9IAB/Qbq5+mIKj/yTPOn1NwFc
Spe5W2VJoe2iru1PhwTw22Z+kaYFhftTzmldlhKCY83bT1ILKCxc1r0qghDC
3jVzPhzSpfBGcN46A5EQJM9MtpurTaFL877kBjUhjNiLl3rMpLAmymbhpllC
uJ8/buj6LzlxvglhTNo9bbiCxOUl3xyczYVgv1B26arrJH7MDFly2UoInUkq
hrO4enQ0ZbsGlglBKeqVWxrXz/c6vVFGTkIw9Zncoc3Vs+63SrG7mxBqdDrL
Z3H1Wht4HQrxEsLzFb7Bnlz84l6VnGg/IWx4cG9UbiqFtddLL4QEC0FG9K1X
MInCkuDQPvdIIfjtaUxqfk6i9yONMpMYIbRWyxmVc/l0+etYjiYKISneID3z
JIn6PamFNw4IISg9bF5vNokBbrLOG48I4eZ3adU/TpF4WGt0nUSOECqTtRZ8
KiAxQnRc4kCeEKZtUGsz5fiyY5qi6UIh0H8Yvwjg/H9uCB2NLeX02RPbveQY
iQKeYsW7CiF8PLDKfG4Kib/utfu4qIrTp9r8VFoGieq3Qq8n1gpBTXDFLDmQ
RFl1adeqBiHwDGMszG1JrNvg9q3vuRC07NqW2JqQE/uDEBSrBpP+NCTRw7uj
U/+DEI4MiHPVrEjUjJiUYdYthBxpuRvFFiR+/b3qh0m/EAYeGrYIgUT33pdm
WqNC6ND3XpS5jMQ571Vj5KVZqAo6OVzH2bMcY4c65VkYGljuG2pPoouERV0x
n4W2ust3exeT6GR4SiNMiQXj7vrJv3LY+p6Lut40FsSzbYqWrSYxOkrvfbMW
C0bWzl5PbUgcGlx6JkKfhcV/yuxT0iTR97BkGGnCwtk4cXguhz3kVGKOzuf4
jFzS+iRILB5M/agELCjlVtWnjRGo9FtFQ6odCx1FZQaGlQTGPVzrObSC4/PT
nDT5NIGpweEX17uw0P9t9mKfMgLFDskvrq5j4dqurRu/tRC4rSmKlPBiITP8
92cxTQSe7drtvXQzC4PxMipGnQSWWm0e3B7IgurRqVGr5EhEPet/C0JY6PsM
W3/KkPhbS+mvjZEsTE+/P3aGw4LLTVt6drLg4mtj4CVPTuxvLFwu+ByT85yL
/6nlDrWfBbP22ZbvThE49aUbMOkspPIdirUPEpggXfNY7ggLVl/H6+3PEZgY
XRU5eIKrbwrzy2UOM4lbN7WfYeHN5RlZv5cQONczPv/2eRbmzvwscbiBwOyb
C9dnFLJg2D81Z+MrAhf4hxz1usZCa8a92+a3CJzXkBKhVcbCizNJylfyCHQT
H2A67rKgnGZm4x9PoGMosy2zmoWDI/yi2J0E6h2wq7OuZUE7x+b+pwQCR85K
z3j/jAXJ8bSkzq0EPiu4vS++mYVN4s6/zBYTeLVoj7pSGwub7zyguuy49x8q
/cj9h4UEiaPiQ74EFqo1aui+Z0G4yzrrsCuBG19WVOR/YeHHH9rZIgcCW2QS
W9R6WZBS8/+cxfm/dktNTB5gAY13XkkIJXCG9Ks3fSNcf80HnjttI7AsWH/A
RVIEikZuplVhBJp9efeqQFYEyv5d9TM5Pm9HnfNjhAhiNU29z9ty9owqP3uB
CIq7qVgPKwIt/K2MUxRF8PRGUFC9GzGxX4vA82a2xuhKAu/NTNCW0BDBd0Hf
sSuKBG7Z9CPScLYI7Pb3lVq+5uGeJ0eU3fRFIAh+lyL3hYcuJw6pRhuJwFhv
+bTgTzzscW48cNhMBHWO7Xu3ShEYNGl4z8UFXD4bXc6VjvPw3OFQ/i0QgXx6
2Y72Lh4OU75W92xFkPpF8sSyVh6G3aqcft9BBGe0teyePeOh7nqL6jsrRfDV
rKtc6SUP/wesq5l1
         "]]}}, {
       {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1Vgk01mkXR+K/8r7v//9StkqZskwloVK5JFOSJfXZG0SLNAplaaaQLGVJ
aCFfkjAtSlJZyiUKxRRF29QUkUYhkjXf+51TzznPec499z73udvzu3eGl/86
HxkpKalGyf7/+WP9bn33vWEXiz2LR76Zz+0w9W5foT3awSI96VLYh5Q+05o6
Vdf49h/8QdMjQoFW9hsWDRI+fjXDYdMnb6IWpb9iUWa6zgh9YcxUu8agx+QF
i44uCwoCNCdML6W/+/NlK4uBF0xMr2ZLgVVcxpa+5h/6pWEZk3g07C8WlTYU
lxVulwGliIvr3etZtDbef6Nt7iT4s9BG8Ws1i3/8t7lc6c0koKqUVldUsGgf
r68re1AWFrt8zsgrZTGvrFWpXm0ylKUIbrcUszht1drFSucnwwfVY2nuV37Y
LwdSP+8oij3PYtj+kcrt5+Wg4MGiQ49zWIxO3r5k7zR54NhxG4MsFvWKZOWM
EuVBf/yU0UA6i8ltgXvNv8pDd0bT80OpLBYW+KfOdSVgkt8f3P5EFmtrlgUH
lRJQ8oUtfhDLYm/Ro/E/xCSk+ySX+h1gcVjv6O95fiT0pHyqIPb9iB8Jdaei
1uuFsNig0vshVUDBWh23TwW7WDwSNenma3cKluUT2gPbWZxpdazFJZ+CwCaF
5uTNEv++Ndxf1EsB65CqtsuDxYwWejjXkIZ/dFKcnzux6KKbvKoxhAarexuc
ou1Z3F5783ZzCQ06oZV3L1mx+Ojmk4GnQzRwzW1d1StYHGRLIsYMGeD7C34a
WMpiTb+ig8suBsw3OksNGP7ILwOqIbPyXeexeOvekk9z2hhQxNcbLeawmG92
p+buVBbq2Ub/+dNZbGFjtw7bsOA+kasxocwiG7DApDmShfuuHtG/CVi0uZi4
0qeYBcPMdTKVBIs/L5u7vqKDhbe7yzh/aRaF3bxSr5ICtP03tDRuhMEV68eM
JlsqwBKNbtUF/Qzm1J3dQwcpwIe8cBe/fxn0Mz9yS+GMAigaHDy8uZ3B671H
5qk0SPiTzpWP/M3g7jK7pYuGFKC8a23ellbme30qQpLdCecvDxm8rHrxRtMa
RVi/eNWChHoGJ6TsJzyCFOFkwqbFw1UMrv6z4LzWKUUwGSi7E1HK4IWlmlvn
3FEEodL0J1KFDDJcVfDOLkXYobwsaXceg/3fSp0j5QWw4XPGoP9pBu38dO5/
mSoA04Q/TPAYg87pl86I9QRwV14VIxIZXGt5t6Z9mQDMHvr25UczGKp9b9jH
VgDXKS5+234GDy/weZnhIQAUHUrNDmaQ9RP9G7tLAA/0LwRE+zP478vZUfMi
BaDTLUMabGZQdUrb++SjAph18rj6cTfm+/8TwIDXthP+DpJ4aKemHL0qkZ8h
jzJWDObOtHq+sEoAFbFHYnaZMvizcE5f+iMBWM8ICF24kMHFjWVZd/8RwMdN
V+7O12awTCU1s6RHAOmB/XJhGgzOMNsSt/ubAE56vy1YyTFY1zJrYJQRwq2j
RoZZBIOmjgNuNqpCeF3ja643QWPHPE2D37SFoPLU64HOII3qF8Za3IyF8ML3
hmj2Rxrd5LPTVVcK4YvZVxuZdzSK3mPVhXVCwKMCBaVXNC5dYB2j4CGEKZXT
cHIrjdo2M/mVO4SS+n5YJ/qLxsDCy3F2YUKQ0T3b97yGRovwkHH9GCH0HmR0
fMvp7/gjBOkn562zi2j0ycyV2ZslhF/CYyuqL9AY2e6V0H5RCKknPhx3y6Hx
sc8gOadECGVHHtUqZ9JInR3aaFkjBNHEMUWXNBotb3X5wiMhuE4vpf3jaWwy
PSqr/LcQPmWuJhZG0uixy320/r0QCossrl8OpnHwUIGy+4AQBpWWGzTsoFGg
p6/aOCGRHyuOl/Om8babVqUGLQL7nmtFc11oDNqad9tWSQTJ3uFX+2xp3NnS
X+U5QwSmnn0HEi1oPFmRF7xBTwTHDz1vaDamsa18PFzXWARROVXv4/RoHMqR
39duJoKhblF6s6aEXvOOiLAWwZS94mu8Co2+QUPXpR1FcKj/huo+IY266kpT
t3iK4OaG2eNPCfo7Potg+5hFQO8EhfqlqrPf7hbBwuy8oMyvlAQPYl4P7ReB
5kiUmkEPhd2cs89gnAiUe8YP9Lyj8G2GkeGLFMn7Zw9ZvnlB4bklBrV5mSKI
H41E/SYKU3x6U9zyRODxvnCKSx2Frr9UUCNXRGBs0hmgVElhtR1mhJeKYDBm
TY7lTQrlNkgX9d4Rwcntvvn+lyX2WKaXWDWIgIh5p7onj8IzObXipBYRYKau
R9ZpChOKSN3bryXxsNOd2X+cQrcDBi5P34sgMDdCJfIIhcffxEu/6hPBxU3y
eevjKFy5rP33v0ZE4Jil9UwUSeHhhHNalyZxMJRU73AqjMKCX3rWBTMcyOTL
P+sKoPDGzlznuWIOHFOu7NrtS6FDS1x8kzoHlo+la9w9KKwLtVjq/RMHCpXn
ps/9D/W9v3EwfaRyTt0aCtcU9VnZG3NQH/BsR4QZhV3HAswumXJwatstNYtF
FGrPkm//+gsHXq1bUrPnUdip/TlU344D2ysD99fNptD516pVLk4Sec+Z5urT
KDSf65Ea4MGBv2XtG38lCgs/q5wO28rBJoXx3EkKFN6/XvxnwE4OfA3Ly5In
U1i0M7DfJYSDlK+7oleNk+hVq1lqEM7B5nePY72/kNjuq71kPEbiT3pnzYGP
JOr1JhbcSOLgoFNj5at3JG53krffdJyD32D0ns4rEtO0xp2lTnPwYKmWuUYL
icHiDKmkXA7MDqrMX9JIYmb4kzDFAg7ahhcf8L9L4rBn4HhEMQfWjhWvm26T
KKKVyzvKOVBiZr8Pu0HixljLrmXVHEgZjb1RuEKiRkng9Zj7HOzouL02LZ9E
eQ3Z9dVNHMwQZgxpnCGx0dOpr/8ZBxcCU3u00snv88P/9dF96Skkunm9bdN7
z4HFyOjr0AQSZwVLpxj1cNAw9rhEM4bETzuqvxgMcvBcs+jttnASXT6/MNIa
52DqGe8GnTASf+5UDadkeTAaOFdsG0hiuk3ESBvFQ6PYkJzmR6KD1KLGQiEP
dzzTpiZ6k2g3L0szaAoPQ6NOqTruJJpXOmjoTpPQRo+f2PyHxLBQ3c4WLR6K
6s33nbIhcWRoRXawHg9xmwpPXrYkcUuaTBBrwENs533u4XKJ/YRK+InFPDi/
miX41ZjEwqHErinAw6tEt/ys+SRO+bW8KdGSh09ynv9o6ZAYec/RfcSah7xl
UhH2M0lM3Ln7vKsDD8PbPPvM1EhcZRX//KozD2ceh18OEZO490koK+XBg8Xe
evMBBRLPth/0WrGZh6AELmcrQWKx6eah3/14aDGo6lSTIRF1zT9eDODBuLTV
sXaUwF9bizc2h/AQHfa2fMMXAkWXnmzr3cfDbu/lPWmfiO/zGw+h/Zbg20ng
qg+ttxUO83DafnbE9dcEqr1wAkEyD2qetntcnxIYJVtXTxznQflkR5b1IwJj
wqpDhk7xkNEbm3WsnkBBzC7v19k8NI9LvfSuJnC++4G8W/k8/PUmO1mugsDM
m0tdUwp4OLI4o/ZdCYEmvgEnPK7x8HFjuG3KNQIXNiUEa5XycPSa+sOllwl0
WpUkeFvBQ1X7M7eZ5wm0CRTsPVbDw+HQtfKFOQTqJlk2mt/nYWyW+579pwkc
Oys7o/MhD7Idnmt/Sifw4cVbcQdaeLhoG5UalEbg1cvRGlNe8lDrUyrvcERy
/96ULzlveBj9xvCPDxFYoN6sqdPJw1VrjQ/Hogjc9KK8PK+bh4N68n3EPgJb
5WJa1T/zUBndPegRTOArp8SY+K+SfEWFL6/3J3CG7N//9I/xYLc51nz/NgJL
d+p9dZARg05FWv74JgKNujv+vigvBhOHDtVDGwn0stHO/8ZI6JBnAitnCT+l
eutqkRj2XE4LUl5P4CJf0wUJymIY/ti1b58N8X2+FsN546nTN64msHJm1Bwp
TTGoXU+i4ywI3Ob9JWTebDFk2Ds6xpsSGN1wfKqTnhja9TjtFUsIdDiVqhqm
L4aeBrehjoUE9to3J6UZicFz3wyTD/MI9JcejT5vIoZIJfVL5roEnksLFJaA
GDzUNp4Y/InAUYUtppUrxeC1IdesWpPAoJKq6XesxHDr0nPHBg0CdVwX1dy2
FcP95OVxeqoE/g+V9roa
         "]]}}, {
       {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
frdR
         "]]}}, {
       {RGBColor[0.363898, 0.618501, 0.782349], PointSize[
        0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1Vgk0llsXfqcv48c3vJ9EowazQiElm0quW0oqmcqQJg0yROg3/iGhkAbN
RJmHS0hsRdGgolRXJcONug0iQuj//rV01jrrrLP22mc/+9nnPGfPctu/3oMi
CKJRPP+//h5PzZ4tm9HEwa+LR8bNdd6bVsjN++vwXQ7K0LmBH5O+mb7K4LXq
4W/7oOmFM7oam8o5qB/3+YcZDpu6uQ2uUSjkIDVTY0Qme9T0cpWNt+d1Dto5
6OV5q/wy1R4QtFakcdAne4lp0RUCrAaWP7a4+Pt8Epgy/sm4ZA4qbCy5WehJ
wWh/v+aWoxxcbRhyo1OHhjnGqVbLwjl4+EJzpUI7DdzOpB8Hgjloc0xXk/kv
Aydr0rZfOcjBzJsvFO5P5YBPV22b634OzrBcs1ghiwP5SnZ2Sz1/458E1MMS
XpU7BwNDRmo8syZBs9CryXErB4+c8DQOmiEBtw2cHgw5clCrmJlkEC8B2peO
2O3exMETnT5B5j8koDXc/2q/DQcL8/Yn6zhKQnLChTq7NRysrzPx962QBBn/
un/9VnCwt/jp2GGRFNR694eKlnFwWCsxOHOPFEzeUv1e0eg3f1Iwapzi1qbH
wUdKvR+TedKw5WDlqagFHDweSZe1OUuD+ySpU6VaHJxtldLicE0adJ6b5Oyb
J85v/NEDo15psJz0dofMTA6mtsgMZyySgabe5sWaShx00Dxh2RggA2VSMN7D
46BnfVlVc7kM/JNruf6HFAeflj3//nJIBoz0kiKVKQ4OcsvDRhfJwqv2J186
fzJY1y9v63BAFljXfpPD35iJ+srC+qHFyo3dDN66Z/xFrVMWQGnJK9V2Bq+Z
3am7O4ULlx6uqTN/zWALN3rnsDUX9sc8Py37kkGut96S5nAunDhoWZ7wmEHr
nPiVHiVceL9mzWxhHYPaJjobqt9zQX3tDFaqkkH+J1ahV0EOKlN2dmreYHD5
hlEDjoUcmAQcKmrIYzC9Ie2gjK8cLK0tGT9yjcE95sdvyV2Wg0LXBYpBGQyW
9h6fr/RIDpIKCqdmXmLQ7+a6pUZDYn/dZsr/NDNxP+XhViD/05RkBvOVc240
/SkP2Taz6VfHGfxF2Pxy8ZWHlOQo2ccxDP5xPS9r7jl5aFmX/DYrlMHspSo7
1e7Ig2ZV3FH5AAZlhbf9vT7IwyQHgR+xn8H+8Qr7cAkeyAjqVrlvZ3DdHo0H
A1N4MCIt8+3xVgbtz+ZeFmnxIDhVwf20I4NrLO7WdZnwQFKkavPTjsFD6veG
PdbywKNj+Z5EGwZj9Txep7rwgBcSXBG6UsznHsG/0Qd4kL2+u/aqMYP/vlaN
nB/Og5exjvXpegwqK3b2nEjkQeaztR1X1JmJ98eDyIF/NO1miflQT05KLOJB
Cnf6fi8FBjNmW/298DYPclS9FmlzxfXgq307+5QHXCIvZdkkBhc33rx09x0P
oprTSgWjNN5USj5f/pUHrwvVbNP6aJxltiPGb5wH6htXZDl9obGhZc73n7J8
8Ppr8SHbjzSa2n13slbmw5HOCyM/O2h8P19Ff586H3iH2p/VtdI4LXu0xcmQ
D6lfw/nzntHoJHHlrPJKPrhrch6XPqBR0IO3s9fzIW1TYNW9OzQu1VsdJefC
B4vG3Mmvq2hUt57NrtzLh5NFSxUNK2n0KcyPWRfIB6PRyK3a5TSuCA0Y043i
Q2L7oER+MT2hP3wYan75szqXRo/zGVTQJT745rQ/WZlBY3iXW1xXDh/qZ3VL
N12k8ZnHoJRaOR8+hfEMo87QKJ02tMWijg/OQaUP1VJotLj1YTc85cNohUT2
leM0NpkmMpPf8IFp9Iy/F0ujywHnn/d7+MAfdPxQEUHj4NG8yc7f+dDuJznH
8SCNPC1d5cZffEhZXXBkoSeNVU5za6bLCMC3aerzODcafXdmVq1VEMD1mvvH
nO1p9Grpv+06SwCyZnfO6FnTeKY603+jlgBauEYDOito7KwcC9U0FMAu1Y5l
tcY0DqVL/KfLTADFxoGGXvri/Z//SIatFoCR3I/r7Vo07vYdKiXtBHBL8p21
+jwaNacpTNnhKoCxHVrvF82kJ/RZAMfajD1SFWnUrVBW7fATgHKcimo0jxbr
QVTbUIgAvqwwHiyQoPGT0N5jMEYAin8mnHtA0NiRarCoNUkA7lHeL/yGKbxq
rF+feV4ABYunPS3oozDJozfJKVPs771FfeNnCh1XVUuPFIjjpymFuXRTWLsO
U0MrBDDAVO8OaKdw0kayuPeOAJSCnm7itlKoa3G23OqRAJoiTg+qNlN4Ob1e
lNAiAM2UedJ7H1EYVyylWdUmAD95ycs37lHoFKHv8LJHAG/i/KLHkMJT7cfI
t98E4Ny184RMJYUrTbqCH48I4HSSwWWTMgpj467OzaWFcDd9g+WnYgrzVn1d
7y8rBLMKcn5wLoU3vDLsdURCCG1jj/HSKbRtiTnWNE1sty5Jjj1DYcOhFUu3
zRNCsPa+4uJ4auJ/E0I0/+boskgK/yz+ZmVjKASHBcvfJgdT+CHF2yzXVAgH
ZBzTaT8K1edIdP1YJYRzn85USuylsFu975DuOiFwX2j4TPWg0H7rbUuHzUIw
lCsK42yl0FzHJdnbRQiv3sTpfbWjsLBP6WLgTiGMLQmOK7Cm8EFpyXVvLyGc
N8sy+NuCwmIvn36HACFsUz1geNyUQrd6lQr9UCHsWDW/KNuQwq7d6sZjUULI
dnWv8VpAoVZvfN6NBCEsN7tR/U2NQs/NEjbup4Qg7K8MTZpJ4cm5Y/bERSFY
9TkpXpxCob8olUjIEMKGhvdLY0UUng99HiifJwSJch+9PnkKh119xsJKhODX
tu+NqhSFApnJle8rhSDHce9VYyjcEm3xwaRWCCEV23ak/SJxerlPadQDITS3
Wf26NEyixHRmQ22TOP/NRjW/+klsdN38rf+VEGbunjxu/pmc6B+EYD4YK+Xb
TaKTW0enVo8Y/0fDIqsOEuf4k0kGX4WwSc85eflrEr/srR3QHxTC6KM/Rk40
k+jQ12owd0wISRrl16rqSdTuVg6VZliIfH69emU1iWetw0Y6pVlIn+9q61xK
oi1h1FjIZ6H6XIN2Wz6J6+ZfUvFVZOGvC9FjokwSzWtsp2vOYMEmOMS7L5XE
wEOa3S1zWVh21HpvXRKJI0PLr/hrseBkMlPfP47EHScpX64+CwdXCHLro8T4
JZVCTy9m4WxSTPKGMBILh+I/KAILP9s/hhgEkqi4tbIp3oIFj9XTVXq8SQy/
Z+c8spqFsrOrixr2kBjv5ZflaMuCXs3hVU92kGhpdezvInsW5i302CXrSmLQ
80NcwoWFqRFZehscSUzr+q/b8u0sNF4Ie+e+kcQS0+1DwXtYqNz2rDN6DYmo
af45x5uFHh1YwLUgceuLki3NASyESuSodCwjUZD7fFfvf1j4+m5bX5gROdG/
sdC5SHrfH3ri+B9fVMnFsnBcvmKavzaJU1s3A+8ECw0flPfKa5AYyTTclzzF
QmB+UPy5eSRGBdYGDJ1jQSol4OtsFRJ5UQe2tV1hIfFpyK6SaSQucI7IvHWN
heFbaiZfJ5N4vmypY1IeCyXaiRrf5Ulcstv7tMtfLDBd/hwZCRIXNsX5z60Q
88l9Pv5ijMDNlgm8jmoWRkcWRHAGCLT24QWl1LFQIFKRHvxMoGaCRaP5Axb2
/G3Usr2HwNE0Zlb3EzH+q8qx3u0EPsm5FRPRwgJX6tYu61cEFuUfma74moXS
0DCJhU1i/3uKA+ntLHwuiEj+dJ/AvGnNKhrdLAhOekZL1hHo3lpZmfmJFXMw
8v3fagJfTIp6Ma2PhTiLj8PtFQS+3RwfdewHC+U9abczSgicxbx51z/KwiuL
omUP8wms8NL6YUuJ4KhKV9WbLAINPr1/kyMhgpf54WeirhLoZq1+bVxWBG80
zxLsJbE9qXbnHwIRRBxsmit5jkCj3aZ6cZNFgElLJkedIib6axF4OEQmmCQS
WDM7Uo1QEUG9i4B+F0fgrm0DAfNVRdBv71AWFUPgkUenpmzWEkFrydEZDyMJ
tD2XrByoK4LYG7TunFACe22aE04aiODg/oXlrUEE7id/HslaIoKO1IzqR/4E
Xj3pwy8HERzKzZ+t40vgT7kdpjUrReAVIt3uup9A3/LbM+9YiWDcf6aH+y4C
NRyN6qrWiqCw4914uDuB/wP+fK1a
         "]]}}, {
       {RGBColor[1, 0.75, 0], PointSize[0.004583333333333334], 
        AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
YRSB/wOEiMdh
         "]]}}}}, {{}, {}}, {{{{{GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -2.6081746940010255`}], 
               Offset[{0, 0}, {5.4411860352265125`, -2.6081746940010255`}], 
               Offset[{0., 0.}, {5.495574771116239, -2.6081746940010255`}], 
               Offset[{0., 0.}, {5.495574771116239, -2.6081746940010255`}], 
               Offset[{0., 0.}, {5.549963507005966, -2.6081746940010255`}], 
               Offset[{0, 0}, {5.751794418573752, -2.5531684000059482`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -2.5531684000059482`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.5531684000059482`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.5531684000059482`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -2.6081746940010255`}], 
               Offset[{0, 0}, {5.4411860352265125`, -2.6081746940010255`}], 
               Offset[{0., 0.}, {5.495574771116239, -2.6081746940010255`}], 
               Offset[{0., 0.}, {5.495574771116239, -2.6081746940010255`}], 
               Offset[{0., 0.}, {5.549963507005966, -2.6081746940010255`}], 
               Offset[{0, 0}, {5.751794418573752, -2.5531684000059482`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -2.5531684000059482`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.5531684000059482`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.5531684000059482`}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{64., 8.000000000000014}, {
                5.751794418573752, -2.5531684000059482`}], 
               Offset[{64., -7.999999999999986}, {
                5.751794418573752, -2.5531684000059482`}], 
               Offset[{10., -7.999999999999997}, {
                5.751794418573752, -2.5531684000059482`}], 
               Offset[{10., 8.000000000000002}, {
                5.751794418573752, -2.5531684000059482`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"1", ",", "\<\"Biases\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "11714ea4-a98d-4f69-8640-0e9505872917"],
              Text[{1, "Biases"}]],
             BoxRotation->0.], 
            Offset[{37., 8.215650382226158*^-15}, \
{5.751794418573752, -2.5531684000059482}], {0, 0}]}], GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -2.2869730651392715`}], 
               Offset[{0, 0}, {5.4411860352265125`, -2.2869730651392715`}], 
               Offset[{0., 0.}, {5.495574771116239, -2.2869730651392715`}], 
               Offset[{0., 0.}, {5.495574771116239, -2.2869730651392715`}], 
               Offset[{0., 0.}, {5.549963507005966, -2.2869730651392715`}], 
               Offset[{0, 0}, {5.751794418573752, -2.280914943158795}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -2.280914943158795}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.280914943158795}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.280914943158795}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -2.2869730651392715`}], 
               Offset[{0, 0}, {5.4411860352265125`, -2.2869730651392715`}], 
               Offset[{0., 0.}, {5.495574771116239, -2.2869730651392715`}], 
               Offset[{0., 0.}, {5.495574771116239, -2.2869730651392715`}], 
               Offset[{0., 0.}, {5.549963507005966, -2.2869730651392715`}], 
               Offset[{0, 0}, {5.751794418573752, -2.280914943158795}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -2.280914943158795}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.280914943158795}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.280914943158795}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{70., 8.000000000000016}, {
                5.751794418573752, -2.280914943158795}], 
               Offset[{70., -7.999999999999984}, {
                5.751794418573752, -2.280914943158795}], 
               Offset[{10., -7.999999999999998}, {
                5.751794418573752, -2.280914943158795}], 
               Offset[{10., 8.000000000000002}, {
                5.751794418573752, -2.280914943158795}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"4", ",", "\<\"Weights\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "6c22e383-d4c6-44df-aebf-8bc83d9e800c"],
              Text[{4, "Weights"}]],
             BoxRotation->0.], 
            Offset[{40., 8.881784197001252*^-15}, \
{5.751794418573752, -2.280914943158795}], {0, 0}]}], GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -3.4819807700176773`}], 
               Offset[{0, 0}, {5.4411860352265125`, -3.4819807700176773`}], 
               Offset[{0., 0.}, {5.495574771116239, -3.4819807700176773`}], 
               Offset[{0., 0.}, {5.495574771116239, -3.4819807700176773`}], 
               Offset[{0., 0.}, {5.549963507005966, -3.4819807700176773`}], 
               Offset[{0, 0}, {5.751794418573752, -3.638540307475443}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -3.638540307475443}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -3.638540307475443}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -3.638540307475443}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -3.4819807700176773`}], 
               Offset[{0, 0}, {5.4411860352265125`, -3.4819807700176773`}], 
               Offset[{0., 0.}, {5.495574771116239, -3.4819807700176773`}], 
               Offset[{0., 0.}, {5.495574771116239, -3.4819807700176773`}], 
               Offset[{0., 0.}, {5.549963507005966, -3.4819807700176773`}], 
               Offset[{0, 0}, {5.751794418573752, -3.638540307475443}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -3.638540307475443}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -3.638540307475443}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -3.638540307475443}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{64., 8.000000000000014}, {
                5.751794418573752, -3.638540307475443}], 
               Offset[{64., -7.999999999999986}, {
                5.751794418573752, -3.638540307475443}], 
               Offset[{10., -7.999999999999997}, {
                5.751794418573752, -3.638540307475443}], 
               Offset[{10., 8.000000000000002}, {
                5.751794418573752, -3.638540307475443}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"4", ",", "\<\"Biases\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "1d87a9b9-e9fe-4deb-9474-c23642611a9b"],
              Text[{4, "Biases"}]],
             BoxRotation->0.], 
            Offset[{37., 8.215650382226158*^-15}, \
{5.751794418573752, -3.638540307475443}], {0, 0}]}], GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -3.0132685396403978`}], 
               Offset[{0, 0}, {5.4411860352265125`, -3.0132685396403978`}], 
               Offset[{0., 0.}, {5.495574771116239, -3.0132685396403978`}], 
               Offset[{0., 0.}, {5.495574771116239, -3.0132685396403978`}], 
               Offset[{0., 0.}, {5.549963507005966, -3.0132685396403978`}], 
               Offset[{0, 0}, {5.751794418573752, -3.0959266955052627`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -3.0959266955052627`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -3.0959266955052627`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -3.0959266955052627`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -3.0132685396403978`}], 
               Offset[{0, 0}, {5.4411860352265125`, -3.0132685396403978`}], 
               Offset[{0., 0.}, {5.495574771116239, -3.0132685396403978`}], 
               Offset[{0., 0.}, {5.495574771116239, -3.0132685396403978`}], 
               Offset[{0., 0.}, {5.549963507005966, -3.0132685396403978`}], 
               Offset[{0, 0}, {5.751794418573752, -3.0959266955052627`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -3.0959266955052627`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -3.0959266955052627`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -3.0959266955052627`}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{70., 8.000000000000016}, {
                5.751794418573752, -3.0959266955052627`}], 
               Offset[{70., -7.999999999999984}, {
                5.751794418573752, -3.0959266955052627`}], 
               Offset[{10., -7.999999999999998}, {
                5.751794418573752, -3.0959266955052627`}], 
               Offset[{10., 8.000000000000002}, {
                5.751794418573752, -3.0959266955052627`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"8", ",", "\<\"Weights\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "8363f968-7f3a-42a1-b993-425d219de93a"],
              Text[{8, "Weights"}]],
             BoxRotation->0.], 
            Offset[{40., 8.881784197001252*^-15}, \
{5.751794418573752, -3.0959266955052627}], {0, 0}]}], GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -3.388383016989858}], 
               Offset[{0, 0}, {5.4411860352265125`, -3.388383016989858}], 
               Offset[{0., 0.}, {5.495574771116239, -3.388383016989858}], 
               Offset[{0., 0.}, {5.495574771116239, -3.388383016989858}], 
               Offset[{0., 0.}, {5.549963507005966, -3.388383016989858}], 
               Offset[{0, 0}, {5.751794418573752, -3.367257570232124}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -3.367257570232124}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -3.367257570232124}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -3.367257570232124}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -3.388383016989858}], 
               Offset[{0, 0}, {5.4411860352265125`, -3.388383016989858}], 
               Offset[{0., 0.}, {5.495574771116239, -3.388383016989858}], 
               Offset[{0., 0.}, {5.495574771116239, -3.388383016989858}], 
               Offset[{0., 0.}, {5.549963507005966, -3.388383016989858}], 
               Offset[{0, 0}, {5.751794418573752, -3.367257570232124}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -3.367257570232124}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -3.367257570232124}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -3.367257570232124}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{64., 8.000000000000014}, {
                5.751794418573752, -3.367257570232124}], 
               Offset[{64., -7.999999999999986}, {
                5.751794418573752, -3.367257570232124}], 
               Offset[{10., -7.999999999999997}, {
                5.751794418573752, -3.367257570232124}], 
               Offset[{10., 8.000000000000002}, {
                5.751794418573752, -3.367257570232124}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"8", ",", "\<\"Biases\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "ca89542d-af9b-4d5c-9e62-5d15c112100a"],
              Text[{8, "Biases"}]],
             BoxRotation->0.], 
            Offset[{37., 8.215650382226158*^-15}, \
{5.751794418573752, -3.367257570232124}], {0, 0}]}], GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -2.048589698064767}], 
               Offset[{0, 0}, {5.4411860352265125`, -2.048589698064767}], 
               Offset[{0., 0.}, {5.495574771116239, -2.048589698064767}], 
               Offset[{0., 0.}, {5.495574771116239, -2.048589698064767}], 
               Offset[{0., 0.}, {5.549963507005966, -2.048589698064767}], 
               Offset[{0, 0}, {5.751794418573752, -2.0089271716196837`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -2.0089271716196837`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.0089271716196837`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.0089271716196837`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -2.048589698064767}], 
               Offset[{0, 0}, {5.4411860352265125`, -2.048589698064767}], 
               Offset[{0., 0.}, {5.495574771116239, -2.048589698064767}], 
               Offset[{0., 0.}, {5.495574771116239, -2.048589698064767}], 
               Offset[{0., 0.}, {5.549963507005966, -2.048589698064767}], 
               Offset[{0, 0}, {5.751794418573752, -2.0089271716196837`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -2.0089271716196837`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.0089271716196837`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.0089271716196837`}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{75., 8.000000000000016}, {
                5.751794418573752, -2.0089271716196837`}], 
               Offset[{75., -7.999999999999983}, {
                5.751794418573752, -2.0089271716196837`}], 
               Offset[{10., -7.999999999999997}, {
                5.751794418573752, -2.0089271716196837`}], 
               Offset[{10., 8.000000000000002}, {
                5.751794418573752, -2.0089271716196837`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"10", ",", "\<\"Weights\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "151afcdd-ebb5-41d0-a679-80fa2a241e3b"],
              Text[{10, "Weights"}]],
             BoxRotation->0.], 
            Offset[{42.5, 9.43689570931383*^-15}, \
{5.751794418573752, -2.0089271716196837}], {0, 0}]}], GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -2.9420048105812433`}], 
               Offset[{0, 0}, {5.4411860352265125`, -2.9420048105812433`}], 
               Offset[{0., 0.}, {5.495574771116239, -2.9420048105812433`}], 
               Offset[{0., 0.}, {5.495574771116239, -2.9420048105812433`}], 
               Offset[{0., 0.}, {5.549963507005966, -2.9420048105812433`}], 
               Offset[{0, 0}, {5.751794418573752, -2.8246464042669026`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -2.8246464042669026`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.8246464042669026`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.8246464042669026`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.4411860352265125`, -2.9420048105812433`}], 
               Offset[{0, 0}, {5.4411860352265125`, -2.9420048105812433`}], 
               Offset[{0., 0.}, {5.495574771116239, -2.9420048105812433`}], 
               Offset[{0., 0.}, {5.495574771116239, -2.9420048105812433`}], 
               Offset[{0., 0.}, {5.549963507005966, -2.9420048105812433`}], 
               Offset[{0, 0}, {5.751794418573752, -2.8246464042669026`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -2.8246464042669026`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.8246464042669026`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -2.8246464042669026`}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{69., 8.000000000000016}, {
                5.751794418573752, -2.8246464042669026`}], 
               Offset[{69., -7.999999999999985}, {
                5.751794418573752, -2.8246464042669026`}], 
               Offset[{10., -7.999999999999998}, {
                5.751794418573752, -2.8246464042669026`}], 
               Offset[{10., 8.000000000000002}, {
                5.751794418573752, -2.8246464042669026`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"10", ",", "\<\"Biases\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "c08b645a-db80-4ad4-aba3-8059e0b2f063"],
              Text[{10, "Biases"}]],
             BoxRotation->0.], 
            Offset[{39.5, 8.770761894538737*^-15}, \
{5.751794418573752, -2.8246464042669026}], {0, 0}]}]}, {GraphicsGroupBox[{{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.436653640569035, -1.4755142236487069`}], 
               Offset[{0, 0}, {5.436653640569035, -1.4755142236487069`}], 
               Offset[{0., 0.}, {5.436653640569035, -1.4755142236487069`}], 
               Offset[{0., 0.}, {5.436653640569035, -1.4755142236487069`}], 
               Offset[{0., 0.}, {5.436653640569035, -1.4755142236487069`}], 
               Offset[{0, 0}, {5.751794418573752, -1.4758968149344707`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -1.4758968149344707`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -1.4758968149344707`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -1.4758968149344707`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             BSplineCurveBox[{
              Offset[{0, 0}, {5.436653640569035, -1.4755142236487069`}], 
               Offset[{0, 0}, {5.436653640569035, -1.4755142236487069`}], 
               Offset[{0., 0.}, {5.436653640569035, -1.4755142236487069`}], 
               Offset[{0., 0.}, {5.436653640569035, -1.4755142236487069`}], 
               Offset[{0., 0.}, {5.436653640569035, -1.4755142236487069`}], 
               Offset[{0, 0}, {5.751794418573752, -1.4758968149344707`}], 
               Offset[{5., 1.1102230246251565`*^-15}, {
                5.751794418573752, -1.4758968149344707`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -1.4758968149344707`}], 
               Offset[{10., 2.220446049250313*^-15}, {
                5.751794418573752, -1.4758968149344707`}]}]}}, {
            {GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], EdgeForm[None], 
             PolygonBox[{
              Offset[{70., 8.000000000000016}, {
                5.751794418573752, -1.4758968149344707`}], 
               Offset[{70., -7.999999999999984}, {
                5.751794418573752, -1.4758968149344707`}], 
               Offset[{10., -7.999999999999998}, {
                5.751794418573752, -1.4758968149344707`}], 
               Offset[{10., 8.000000000000002}, {
                5.751794418573752, -1.4758968149344707`}]}]}}, {
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             EdgeForm[None]}}, {}, InsetBox[
            RotationBox[
             InterpretationBox[Cell[BoxData[
               FormBox[
                RowBox[{"{", 
                 RowBox[{"1", ",", "\<\"Weights\"\>"}], "}"}], TextForm]], 
               "InlineText",ExpressionUUID->
               "d62d5585-954d-4474-bc18-e2fa3e2f22ce"],
              Text[{1, "Weights"}]],
             BoxRotation->0.], 
            Offset[{40., 8.881784197001252*^-15}, \
{5.751794418573752, -1.4758968149344707}], {0, 0}]}]}}}}, {{{}}}}, {{}, {}}, \
{{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.1959798200108147, -4.574957324383338},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 104.69902944419388`}, {All, All}},
  ImageSize->450,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.11099742018311629`, 
   5.327876168789581}, {-4.525759814847867, -1.4755142236487069`}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {7.003065458786462, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {7.090076835776092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {7.170119543449628, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {7.24422751560335, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {7.313220387090301, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {7.3777589082278725`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}, {{-3.912023005428146, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.02\"", 0.02, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.20\"", 0.2, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.199705077879927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.8971199848858813`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{3.707519612669869*^9, 
  3.707582374555114*^9},ExpressionUUID->"cae93d57-5df0-41e5-8e79-\
293c33b36f72"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7075189798929234`*^9, 
  3.70751901380672*^9}},ExpressionUUID->"4df53ae5-56a2-4080-9a87-\
6a83d5c8c327"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cnMeasurments", " ", "=", " ", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{
    RowBox[{"trainedConvNet", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", "testData"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.707519812858131*^9, 
  3.707519847711134*^9}},ExpressionUUID->"bd8f16e2-eb90-41a2-9c2d-\
52919c2e4ba9"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Net\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["6022", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Net\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["6022", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    RowBox[{
                    "0.5823646629026901778`5.517748402535373", "\[PlusMinus]",
                     "0.006355676925553954`2."}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.707519913119314*^9, 
  3.7075824425108347`*^9},ExpressionUUID->"23aeecf3-8dea-448f-8f9e-\
d7cf2f1c73cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cnMeasurments", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Accuracy\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Accuracy\>\"", "\[Rule]", "2"}], "}"}], ",", " ", 
    "\"\<AreaUnderROCCurve\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.707519977400236*^9, 3.707519983950048*^9}, {
  3.707520344376042*^9, 3.707520389126408*^9}, {3.707582514323606*^9, 
  3.70758251471698*^9}},ExpressionUUID->"ea1ae656-80a1-44f0-bd77-\
6d7269c65004"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5823646629026902`", ",", 
   RowBox[{"{", "0.7808037196944537`", "}"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"happy\"\>", "\[Rule]", "0.9025436998537146`"}], ",", 
     RowBox[{"\<\"neutral\"\>", "\[Rule]", "0.8215210682360918`"}], ",", 
     RowBox[{"\<\"sad\"\>", "\[Rule]", "0.7921507114456896`"}], ",", 
     RowBox[{"\<\"angry\"\>", "\[Rule]", "0.7959000093396256`"}], ",", 
     RowBox[{"\<\"surprise\"\>", "\[Rule]", "0.9281613252224703`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.707519985772545*^9, {3.7075203585267153`*^9, 3.707520389860004*^9}, 
   3.7075824454525948`*^9, 
   3.7075825158626747`*^9},ExpressionUUID->"b2154a92-4c14-40a9-af79-\
e79a6997ded3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cnMeasurments", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.707520005438817*^9, 
  3.707520046538107*^9}},ExpressionUUID->"91699998-95d2-4170-abd2-\
6eb0734e306f"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJwtT2tIkwEAnJqtDMvpyD/m2yxDs4wxlDgRY9WHrAyb2hazfKHV1IIoo2Q4
TUJFl+ZqhWlUPhIzdSPBTaX5SNGiMh/TLdfU7fu+zB9m1rIhHhzcwXHH+V2Q
xKc5MRgM501uaIf4fEeCxrituMtZQCEtQrTOOb2IPPml8OMRNG6r3e8JbSQC
Xjro1jMWwB45kcQpoKHMZHbs8qVhjAmU+AutqFGwBqIzaJTItoRqeihkE8cu
j6Vb4BVE/OzaTqKFq7hzUGwE0TD9thk38EHTaeLHUSBYcp6oZhGB0VziTPAs
7ueGt4ke2vOFPElTlRm9rzvVmUsfEec9eH0wi4Ka89itm2kB/xlzWtRhgBNn
Tr/iQmJM0igu8zdhRaEYHHjUi2xpNULYNPq0RFx/MYk6ecVEMGce0/JGT4OK
BC9K06PaPQ+5rL5v1foJ2uGOSMkBEoksaUppqwn+Gu2/3lUdzu3QCVUTVvCX
RGHhxBxinYdzTv5R4fdOg+/Qmr33nVOpIGoB9P7yRHPWBILa/jpOjVLoE3Pu
vpBZcZ7e2qytNkHqEXYxdsb+q+2sj7J7Hu1VhTZ+wTi4IzxXaSeJrPT+vLJ2
A/zq6nW1y9cgcamc4XtSqP7auuauXsC+bsWbWwlT+CF4XqtSUfhirojMDbHC
BSGygoY57KErA2JsFCpMRwTcQyQKT3HzHRPMYGxgCcab7BaecXLTMxhN7x/U
Jh+m4LYSykoIW8Sv5bEi5V49RpPKmclmCuJt3ikNk1aku8566a9+x9Ehz1dP
iuy7JZZUS44FMTVXhLTOiNhWDyX3KQUuGlMkny1Y94lnpw5/w38KjCuo
   "], {{0, 0}, {5, 
   5}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1320", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1320", "\" examples of \"", "\"happy\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.7025013304949441`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.7440811724915445`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.7226936764303312`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{1320, " examples of ", "happy", " correctly classified"}], 
         Row[{"Precision = ", 0.7025013304949441}], 
         Row[{"Recall = ", 0.7440811724915445}], 
         Row[{"FScore = ", 0.7226936764303312}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["167", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "167", "\" examples of \"", "\"neutral\"", 
             "\" misclassified as \"", "\"happy\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.08887706226716338`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.1354420113544201`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          167, " examples of ", "neutral", " misclassified as ", "happy"}], 
         Row[{"Column fraction = ", 0.08887706226716338}], 
         Row[{"Row fraction = ", 0.1354420113544201}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["192", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "192", "\" examples of \"", "\"sad\"", "\" misclassified as \"", 
             "\"happy\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.1021820117083555`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.15396952686447474`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{192, " examples of ", "sad", " misclassified as ", "happy"}], 
         Row[{"Column fraction = ", 0.1021820117083555}], 
         Row[{"Row fraction = ", 0.15396952686447474`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["145", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "145", "\" examples of \"", "\"angry\"", "\" misclassified as \"",
              "\"happy\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.07716870675891431`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.15474919957310565`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{145, " examples of ", "angry", " misclassified as ", "happy"}], 
         
         Row[{"Column fraction = ", 0.07716870675891431}], 
         Row[{"Row fraction = ", 0.15474919957310565`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["55", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "55", "\" examples of \"", "\"surprise\"", 
             "\" misclassified as \"", "\"happy\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.02927088877062267`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.06618531889290012`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          55, " examples of ", "surprise", " misclassified as ", "happy"}], 
         Row[{"Column fraction = ", 0.02927088877062267}], 
         Row[{"Row fraction = ", 0.06618531889290012}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["155", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "155", "\" examples of \"", "\"happy\"", "\" misclassified as \"",
              "\"neutral\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.10258107213765719`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.08737316798196167`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          155, " examples of ", "happy", " misclassified as ", "neutral"}], 
         Row[{"Column fraction = ", 0.10258107213765719`}], 
         Row[{"Row fraction = ", 0.08737316798196167}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["726", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{
            "726", "\" examples of \"", "\"neutral\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.4804765056254136`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.5888077858880778`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.5291545189504372`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{726, " examples of ", "neutral", " correctly classified"}], 
         Row[{"Precision = ", 0.4804765056254136}], 
         Row[{"Recall = ", 0.5888077858880778}], 
         Row[{"FScore = ", 0.5291545189504372}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["371", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "371", "\" examples of \"", "\"sad\"", "\" misclassified as \"", 
             "\"neutral\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.24553275976174718`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.297514033680834`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{371, " examples of ", "sad", " misclassified as ", "neutral"}], 
         
         Row[{"Column fraction = ", 0.24553275976174718`}], 
         Row[{"Row fraction = ", 0.297514033680834}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["199", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "199", "\" examples of \"", "\"angry\"", "\" misclassified as \"",
              "\"neutral\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.1317008603573792`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.21237993596584845`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          199, " examples of ", "angry", " misclassified as ", "neutral"}], 
         Row[{"Column fraction = ", 0.1317008603573792}], 
         Row[{"Row fraction = ", 0.21237993596584845`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["60", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "60", "\" examples of \"", "\"surprise\"", 
             "\" misclassified as \"", "\"neutral\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.03970880211780278`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.07220216606498195`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          60, " examples of ", "surprise", " misclassified as ", "neutral"}], 
         
         Row[{"Column fraction = ", 0.03970880211780278}], 
         Row[{"Row fraction = ", 0.07220216606498195}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["89", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "89", "\" examples of \"", "\"happy\"", "\" misclassified as \"", 
             "\"sad\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.10671462829736211`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.050169109357384445`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{89, " examples of ", "happy", " misclassified as ", "sad"}], 
         Row[{"Column fraction = ", 0.10671462829736211`}], 
         Row[{"Row fraction = ", 0.050169109357384445`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["157", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "157", "\" examples of \"", "\"neutral\"", 
             "\" misclassified as \"", "\"sad\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.1882494004796163`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.1273317112733171`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{157, " examples of ", "neutral", " misclassified as ", "sad"}], 
         
         Row[{"Column fraction = ", 0.1882494004796163}], 
         Row[{"Row fraction = ", 0.1273317112733171}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["431", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "431", "\" examples of \"", "\"sad\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.5167865707434053`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.34562951082598237`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.4142239308024988`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{431, " examples of ", "sad", " correctly classified"}], 
         Row[{"Precision = ", 0.5167865707434053}], 
         Row[{"Recall = ", 0.34562951082598237`}], 
         Row[{"FScore = ", 0.4142239308024988}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["126", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "126", "\" examples of \"", "\"angry\"", "\" misclassified as \"",
              "\"sad\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.1510791366906475`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.1344717182497332`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{126, " examples of ", "angry", " misclassified as ", "sad"}], 
         Row[{"Column fraction = ", 0.1510791366906475}], 
         Row[{"Row fraction = ", 0.1344717182497332}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["31", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "31", "\" examples of \"", "\"surprise\"", 
             "\" misclassified as \"", "\"sad\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.03717026378896882`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.03730445246690734`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{31, " examples of ", "surprise", " misclassified as ", "sad"}], 
         
         Row[{"Column fraction = ", 0.03717026378896882}], 
         Row[{"Row fraction = ", 0.03730445246690734}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["111", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "111", "\" examples of \"", "\"happy\"", "\" misclassified as \"",
              "\"angry\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.13997477931904162`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.06257046223224352`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{111, " examples of ", "happy", " misclassified as ", "angry"}], 
         
         Row[{"Column fraction = ", 0.13997477931904162`}], 
         Row[{"Row fraction = ", 0.06257046223224352}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["97", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "97", "\" examples of \"", "\"neutral\"", 
             "\" misclassified as \"", "\"angry\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.1223203026481715`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.0786699107866991`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{97, " examples of ", "neutral", " misclassified as ", "angry"}], 
         Row[{"Column fraction = ", 0.1223203026481715}], 
         Row[{"Row fraction = ", 0.0786699107866991}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["162", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "162", "\" examples of \"", "\"sad\"", "\" misclassified as \"", 
             "\"angry\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.2042875157629256`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.12991178829190056`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{162, " examples of ", "sad", " misclassified as ", "angry"}], 
         Row[{"Column fraction = ", 0.2042875157629256}], 
         Row[{"Row fraction = ", 0.12991178829190056`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["384", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "384", "\" examples of \"", "\"angry\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.4842370744010088`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.40981856990394877`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.44393063583815023`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{384, " examples of ", "angry", " correctly classified"}], 
         Row[{"Precision = ", 0.4842370744010088}], 
         Row[{"Recall = ", 0.40981856990394877`}], 
         Row[{"FScore = ", 0.44393063583815023`}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["39", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "39", "\" examples of \"", "\"surprise\"", 
             "\" misclassified as \"", "\"angry\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.04918032786885246`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.04693140794223827`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          39, " examples of ", "surprise", " misclassified as ", "angry"}], 
         Row[{"Column fraction = ", 0.04918032786885246}], 
         Row[{"Row fraction = ", 0.04693140794223827}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["99", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 4.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "99", "\" examples of \"", "\"happy\"", "\" misclassified as \"", 
             "\"surprise\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.09850746268656717`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.05580608793686584`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          99, " examples of ", "happy", " misclassified as ", "surprise"}], 
         Row[{"Column fraction = ", 0.09850746268656717}], 
         Row[{"Row fraction = ", 0.05580608793686584}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["86", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "86", "\" examples of \"", "\"neutral\"", 
             "\" misclassified as \"", "\"surprise\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.08557213930348259`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.06974858069748581`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          86, " examples of ", "neutral", " misclassified as ", "surprise"}], 
         
         Row[{"Column fraction = ", 0.08557213930348259}], 
         Row[{"Row fraction = ", 0.06974858069748581}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["91", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "91", "\" examples of \"", "\"sad\"", "\" misclassified as \"", 
             "\"surprise\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.09054726368159204`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.07297514033680834`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{91, " examples of ", "sad", " misclassified as ", "surprise"}], 
         
         Row[{"Column fraction = ", 0.09054726368159204}], 
         Row[{"Row fraction = ", 0.07297514033680834}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["83", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "83", "\" examples of \"", "\"angry\"", "\" misclassified as \"", 
             "\"surprise\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.08258706467661692`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.08858057630736393`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          83, " examples of ", "angry", " misclassified as ", "surprise"}], 
         Row[{"Column fraction = ", 0.08258706467661692}], 
         Row[{"Row fraction = ", 0.08858057630736393}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["646", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{
            "646", "\" examples of \"", "\"surprise\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.6427860696517413`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.7773766546329723`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.7037037037037037`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{646, " examples of ", "surprise", " correctly classified"}], 
         Row[{"Precision = ", 0.6427860696517413}], 
         Row[{"Recall = ", 0.7773766546329723}], 
         Row[{"FScore = ", 0.7037037037037037}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 4.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1774", "\" example\"", "\"s\"", "\" of class \"", "\"happy\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.7440811724915445`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1774, " example", "s", " of class ", "happy"}], 
        Row[{"Recall = ", 0.7440811724915445}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 3.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1233", "\" example\"", "\"s\"", "\" of class \"", "\"neutral\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.5888077858880778`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1233, " example", "s", " of class ", "neutral"}], 
        Row[{"Recall = ", 0.5888077858880778}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1247", "\" example\"", "\"s\"", "\" of class \"", "\"sad\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.34562951082598237`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1247, " example", "s", " of class ", "sad"}], 
        Row[{"Recall = ", 0.34562951082598237`}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "937", "\" example\"", "\"s\"", "\" of class \"", "\"angry\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.40981856990394877`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{937, " example", "s", " of class ", "angry"}], 
        Row[{"Recall = ", 0.40981856990394877`}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {5.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "831", "\" example\"", "\"s\"", "\" of class \"", "\"surprise\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.7773766546329723`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{831, " example", "s", " of class ", "surprise"}], 
        Row[{"Recall = ", 0.7773766546329723}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1879", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"happy\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.7025013304949441`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1879, " example", "s", " classified as ", "happy"}], 
        Row[{"Precision = ", 0.7025013304949441}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1511", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"neutral\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.4804765056254136`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1511, " example", "s", " classified as ", "neutral"}], 
        Row[{"Precision = ", 0.4804765056254136}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "834", "\" example\"", "\"s\"", "\" classified as \"", "\"sad\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.5167865707434053`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{834, " example", "s", " classified as ", "sad"}], 
        Row[{"Precision = ", 0.5167865707434053}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "793", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"angry\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.4842370744010088`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{793, " example", "s", " classified as ", "angry"}], 
        Row[{"Precision = ", 0.4842370744010088}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {4.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "1005", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"surprise\""}, "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.6427860696517413`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{1005, " example", "s", " classified as ", "surprise"}], 
        Row[{"Precision = ", 0.6427860696517413}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{4.5, 
       FormBox[
        RotationBox["\"happy\"", BoxRotation -> 0.], TraditionalForm]}, {
      3.5, 
       FormBox[
        RotationBox["\"neutral\"", BoxRotation -> 0.], TraditionalForm]}, {
      2.5, 
       FormBox[
        RotationBox["\"sad\"", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"angry\"", BoxRotation -> 0.], TraditionalForm]}, {
      0.5, 
       FormBox[
        RotationBox["\"surprise\"", BoxRotation -> 0.], TraditionalForm]}}, {{
      4.5, 
       FormBox["1774", TraditionalForm]}, {3.5, 
       FormBox["1233", TraditionalForm]}, {2.5, 
       FormBox["1247", TraditionalForm]}, {1.5, 
       FormBox["937", TraditionalForm]}, {0.5, 
       FormBox["831", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["1879", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["1511", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["834", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["793", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["1005", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"happy\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"neutral\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"sad\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"angry\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"surprise\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.707520049677795*^9, 
  3.707582445786907*^9},ExpressionUUID->"fefca50d-1ebe-4d80-929f-\
d57f736fe285"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cnMeasurments", "[", "\"\<ROCCurve\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7075201031381407`*^9, 
  3.7075201107374897`*^9}},ExpressionUUID->"26d5a71e-4dab-4a1c-9331-\
e3116d2b52d7"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"happy\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx13QWUJce1YG2RZVnMzMzMlGK0mJksspiZmZmZmZmZmaHVXNXF1WKWPDfO
js6d0zHj9a816/vfe3KrKypvZpwdeWfb9YBNdx9rjDHGOGuaMcZI/+//7z8b
j7i//5YjV6v+b29a+8htxh3x06PbjfY/37V22w3bdr879Z6j/e/vU/v0f311
4AXzHTja//3Btad/5dR9n3zj0NH+eUfUvv/YRfcauvtRo/3zj6m92tLf7Db+
OMeP9t93Yu2eX155YLpNThrtv//k2o99etVCC994ymh/nlNrn/DQAfesNvK0
0f58Z9Re9/w159tq5TNH+/OeVXuKfWa4Y5/zzh7tz39O7YFrfzfnid+cO9q/
z/m175jzjZsvXeCC0f79Lqz91IkbXrj5cxeO9u97Ue2ZD1jug0FtF432739x
7VN2mHPivSe8ZLS/D925/iQb/LDEpaP9/egNlv/9nOO2u2y0vy/98Lztb//z
lMtH+/u7ovY003z4r4vvvmK0v88rax/7j2fWmfHjK0f7+72q9tAfbjvj9t+u
Gu3v++raaw278PVFZ7tmtL9/fc+Hx7T+G64d7eehJ31hjzXWPPC60X4+19c+
7L5NTvngiutH+3ndUPvra1Z8eZsXbhjt53dj7Vleu2SMgw+5cbSfp950xX/N
usw/bxrt56tPfeT46s+rbxrt562fmP/HHV9a+ObRfv6666a9jz/9Zc16uKX2
jNMNvm79LTXrQ2/U+tNO2q1ZL7fWPumfb3/z2XGa9aMfTX/8yW4bbT3p1g9r
hp1v06wvPd1+868w13K3j7be9Pqx4G6vbvvkkbuGfL1wNbpZj3fUPn67qY5+
YGfN+tQPfnz2VYf+qFmvd9Yevu4YTy13pmb96qleOuzLv2e4qzbrWa+zbPoJ
a9a3bv3hpjlr9btrs971fXN/vvSGX2jW/z21009zin00vw968vgDan4/7q29
xrlLX3bdxZrfF33E2Pc+uuvc99Xm90ffdfRsn87ztOb36f7a33x3+Q+9G2h+
v3RrcU7x8FDN79sDtVcdctLiRxym+f3TT9/zx7zXj/NgbX4f9WZ7Pv7kiRtq
fj917+wHrbPblZrfV33aoAW+XHOY5vf3If95V4/Yc94FNb/P+sktbvpl/MM1
v9+jvHLhTSbb/oy+FzS//7q1uFsr+OHaXA/0qWd+dPvDm2muD3qm+IFrrhf6
8f+t9foRHZrrxyO1N3pmzC23XUxzPdFdhz/bvuIxmuuLPrn105zltcY/L643
eob+xf4x1iSP1ub6ox+9q/fStq011yO94e5pBT1aPTtorRPmnXPtwlyvdMes
u7b+kZrr12O1T/xmxtbfmOZ6pqe78otP9j9Rc33Tj2x28W6bvK253ul/p3+9
KR/3nxfXP52uflPvqLke6tYPb/Lf7tBcD/W0qx1384DvNNfHJ2o/9Ncyiz+/
guZ6+UT++9yw8HpPff/Sjadprqd6+KHpF1xzfdXHpcvjdE/W5nqrp45fSM31
Vz9wx8AxFrhPcz3WrV/mCyf6RXN9fqr2sJk3m/XbVTTXa33M1xO1/sia67ee
8vI3W2tacz3XcXmb+enaXN/12hOtvNPRe2mu93rIm7/2b/+w5vqvj4oLhubz
4Jnak6+y/8Szr6X5fND3psvlhZrPC73mE8MX6vjqmWrt/0z633fX2awwnyd6
0MHXP/fWHM/W5vNFH7HwNhvcu5/m80ZP1j3FwPOf0Hz+6Ltve3/fg8Z8zn9e
fB7p1Xc568/N1td8PumB6df3Ms3nlT68tTqmG6z5/Hq+9iSXPtX6hNF8nuk7
Nzp0hUEHaz7f9GoTLPLOi89qPu/0gNe7tr1l3Bdq8/mnDz351u7TNtZ8HupY
TldrPh8b/7zfpht//TbN5+WLtW9Ml4NpNJ+fer8n35hyvBU1n6d6ualv2/63
nTWfr3rc+BfQfN7qjz/aqXfA3ZrPX33DIist+d4Hms9jve950x/7/I+az+eX
asev73Saz2v9j3U/m+CmlTWf3/rj1qfpxbtpPs9165fpmlPO1Hye63123a91
SdR8vutlXlxvgT0+1nze63FmnveQrX7RfP6/XPuj9Os2o+Z+QF/31bCxll9V
c3+g/xt/AM39gl6m9ds64zma+wc99g9Ht66YmvsJ/eHGW8/+v0819xf62vuX
+u+3v2nuN16pHb8uM2vuP/TSrf/rj1fX3I/osd58b9VX99Lcn+gP5rrnrMfO
09yv6GtPSX9hmvsXnT7Nrvyi8eeL+xm9VFyhNPc3r9Ye87pZW5ckzf2Ofv/3
v77dZy3N/Y++ZusBy+6wj+Z+SMev64Wa+yG9ZHygae6PGn++gw+ZdLGvNfdL
+r0P0g+48eeL+6fXal/d+tucYk7N/ZTe45wJOsdZV3N/pZfo6lzk5/0091t6
jLVby+lizf2XfvfWW1748gnN/Zi+aqz0N6a5P2v8+XbesbXkXq/N/Zpu3Txd
ce/cmvs3/b8Z0oLU3M/pd476ee4LDtTc3+n4171Mc7+nd1/qoccPelpz/6cX
u+T8v3cdrLkf1H+3Vtfm47xRm/tD/c6G6Q5Nc7+oW//yrRsUzf2i/s/46Qqm
uX/UcTt4peZ+Uv/12vP3jf+c5v5Svz3HtT/9MVRzv6kvP+molfrGfbM29596
t8Fbtj5SNPejetH08bOx5v5UtxZ7645Ic7+q30q3c1e/me+vtyrM/ay+fMu0
YjX3t3rXuABo7nf1IpOfseTp/3qrNve/+o8D/nPsEQtr7od1XC4309wf68sW
mGXCbY/U3C/ruB27TnP/rBfu+Kp1h6K5n278+dZIN5ya+2ud7o5mmfDt2txv
60vHSBcszf23jl/nLTX343qhZxdsfaRp7s/17+l26gbN/bpOV6PPXm38+eL+
XV/y2atfv96luZ9v/PmWuHn2Jyd+pzb393rBi074711LaO739W9peW2tuf/X
r/07XWA1zwP64runaV0hNM8Heqfxfjpr/zfeqRbb5rhLT/3ftoV5XtCtm5vW
HZ7m+UH/mm63Jnu3Ns8T+rXZzttltaU1zxc6/jq20zxv6B3jgULz/KHT1Xrq
2zTPI/qXK9MHhOb5RL/68+DWCtA8r7xXO24HptA8v+gdWj+tActqnmf0/JMe
eeO7O2ieb/TP+23R+dzJmucd/co7iy/6wB2a5x99wXzpv0DzPKTT3epF32me
j96vPV98oGmel/RPq6UnJM3zk375xtOu2H1nzfOUvqD16bXlaZrnK73d9qvM
s87dmuctPe/TM7XuqDXPX/rHaf54fP4fNc9jH9SOy+d0muczff4nj6010cqa
5zW9bXwAa57f9DwXHPj5yDM0z3P6x94NZh56r+b5Tsfjw0eNP1887+nz7hzv
/ld+1jz/fVh7obiB1zwP6nT3vdmsmudD/dvOH778zuKa50U9ZJK0YDXPj/r1
9PG+leZ5Ut+7X3pC0Dxf6ktmPGfT+4/VPG/qo+IG68O8v7FjYZ5Hdfrbv+Em
zfOpXqt1dzDtox9WE81z2E4zb7dLYZ5f9YKtp9ULX9c8z+r4uP5K83yrf11q
jvlP7tE87+rBbZO1HhE+zPcbuxXmefij2vHXN6nm+Vi3bn6n6p1d87ysL/5u
4FP/WUrz/KzT1Wrg2prn6Y+qk2+659Cjl969cHwcb6t53tZr/n1X64qqef7W
C9x35bprn6B5HtfxuH2R5vlc/zr+4Rcte6vmeV0Pav3bPvS45vldt26Wvprv
Lc3zvL4nfZwO0Dzf64tan+4z9Gue93V62rxkjI9r8/yvd0yPy1No9gP0Gp/8
OeFpc2n2B3RrcT341zKa/QLdevjb/PD1NPsH+pf08be9Zj9Btz5Mr93zAM3+
gn5lpdtXGXKSZr9B350edy/V7D/o+GnfrtmP0Ievd/CC6z2l2Z/QO8QFTLNf
oVePDyTN/oWOX/9vNfsZjb+/cdMd5Se12d/4JN9P7Vn45/T4OpVm/0OnT9+Z
59Xsh+hXWk+Hly+v2R/Rd73Usf4kG2j2Sz6pfp5h2FmfT7Z34fh42kmzn/JJ
vr7+t3As14M1+y16+/cfWeaoUzX7LzoeTy//pNrn8mlvWLxv38Lsz+h544ZY
s1+jJxlwwhzDn9Hs3+h097rd+5r9HJ12Vz4dotnf0S+nv84fNPs9+s7Ll3/k
tX98Wpv9Hx2Pm9Nq9oM+zZ83+xc+LG5YPq0OPHOebdf+z4GF2T/S290ybusj
59P8eXFQ7btfe/k/P21ycGH2m/Sqm6Y7OM3+k553zLYRs+6q2Y/SE8cDuWZ/
Sqer0eRnfJo/Lw6p3T7WjgfcUh1am9+fwwqzv6XjcfQqzX6XfunZ6w8f+17N
/pduPey1PmA1+2Gaj1/N/pg+9K3/tj5BNPtlett4oNLsn+l0N7vjeJ/VZj9N
z5MeJ6fX7K/piU6b6/uNFvqsmmWV347aZKHDC7P/9ln+/T+i8A9LpL+Qz6r4
dZz+yMLs1+mv08fFppr9O/3iRemGQbOfp9PVf/EjNPt7+ryR77euEJ/l689R
hdn/04ekx8drNfuBOj0dXnu/Zn9Qs6Gj2S/Uc8flSrN/qCeMH7BmP1F/P96e
fx3/q2Z/8fPq0qcXueC+8Y4u/NUT6YZHs//4eb5e6vd/efuq7X4+pnA8Ls6k
2a/8PF9vji1821TpJ/R5Nd5Se9z6r7bjCrO/qc99NT2gf56vT8cXZv/z82r1
g8d84ImPTigcvz6ba/ZHdfrl2HRPzX7p5/n6dmLt57d6/5uHB5euPuo78p2j
Ps/Xv5MKs9+q54pfiM+r7eMHVJr9WB2Pm9dr9mf19+l2+SHNfq3+8tz0gPZ5
vh6eXJj9XM2PS7O/q29rPX3e0Pl59dule3fs/F5p9n/1OVcd2voE0ewHf1H7
oNhg1OwP661+2aT1hKHZL9Yrxy+4Zv9Yz7nFIqf+voZmP1nH9vFWmv1l/d3D
E77bs7dmv1l/sUva8dTsP3+RP29OKZx2awaer9mf1re2rhZb3KTZr9Znp9uJ
RzT71/rAmdIdpGY/W28VFyTN/rZe6ZhL1l62R7Pf/UV1+RJP9C7zauk54gZf
sx/+Zf58PbXw+OnxftIvqyU+Huf7iZ8pzf65/vaMnZa4eXbNfrqOj6ulNPvr
Ot0dXrK2Zr9d35K2e7fV7L9/mT/vTit81urpE1uzP68PiAuwZr9eb5keLy/S
7NfrFeMBRrN/r+Ny9bhmP//L6sMDN/2l/SHN5/Hphf91/ys/D35Ts/+vR6bt
3QGaeYCOp/E+zXxAP/v0BcPWHeOr2swL9M3p8WhyzfxAnzlt+gDQzBP0AWn5
L/NVtd8kN/757J2a+4szCjN/0FvEA5tmHqFju3Z7zXxCp93NmQ7QzCu+qia4
v2/MS28oPV7r0+bykzTzDB2365dq5hv60yFpQKGZd+hn0l/3U5r5h04/rSPf
0dyOfpXvf84sHNuxA7+q7vz3Cv/c5/LSzE/0/vFAqpmn6M3XT0/8X+f7kbMK
M2/RcXs3lWb+8nW1Zs+ZE652XunZYsNZM5/R/9x679f+vbxmXqP7xk3/C1/n
+5+zCzPP0Z+m7didNPMd/XTazjno6yr96ac7tTTzH926uW59QmnmQTo+7i/X
zIf0fgelJzjNvEin1X/VM5r5kU67RZO9r5kn6VmPf+/Ms4do5ktf5/vD0rEd
8YNm/qTTZucx/xhQm3mU/iR9vEwzoGr9ck3z7dHnFGZepVsX19YVQzO/0jd0
pg0CzTxrQL5fLX36Fbu3fuSaeZfeN9297KKZf+l4nD1UMw/Ty9262L/fPH1A
NeMbB7X+v3MLMy/Ts8QPUDM/0+nq8dQ9A/L9tX569xdmu36v8wozb9O9D6Yb
Js28TX8c29Oa+Ztu/exOmGO4Zh43IN+/l47Hp58GVFuNk+6Izy/M/E6ftm/a
8P+mNvM8Hb8u03+TnwdKM+/Tm7x92STjLqSZ/+llY8Fq5oE6tk830cwH9Thx
Q6iZF+qedLt8+DfVjzdvu+C/t7ygNs8fpZkv6o+WTBtAmnmjjh/PNZr5o77+
4jTQ0Mwj9amrpicOzXzym+qtWT+98qK5LyzM9t83+XmpNH98vUn8Qmrmm3qZ
dDv3q2beObD2THHDq5l/6hh/zqSZhw6sWr/8M/x1U+nubdMGlWZeqtPd9zSr
aeanA/PzX+nYLtpcM18dWO2Rfj1muqjwdXumO0bN/FXH7cNRmnnswPw8WXrv
uOBo5rV64zT+vF4zv9VLxw39wOrR899MP+HCzHf1jB9PO/d/XhmYnzdLM//V
Y8d2hmYerLsWSf9Gmvmwjo+r3zXz4kG1Hz8vDUw18+NB1djp8WPKiwtfm8ad
s2jmyzrGF4tr5s06TfMeXGNQfj4uzTxabxQPKJr5tF7q12O7btpbM6/WcXk7
VjO/HlRtstDUc99zQemxtkwTYs18W6fNtgluGpSfX0sz/x5UpbvtqSe4pHBs
tz+imY/rx1q/jX+9Nig/T5Zmfq6viccpzTx9UDXynd0WOPl0zfNm6ZNeHHv3
/u5B1UrXjJ/ueAszjx+Un0dL7xUPcJp5/eDaG8489N7Bk2jm93rJ2HDVzPMH
V+f+96FFW7c4tXneLD1D2v5dUjP/12PGQFLTA+i4/d9G0wfodDe3/L6aXkA/
mn6cx2v6gcHV18tt/cirv2qePy+rPd+//rfUooeWjvHuRZr+YHB+Xi194mXp
gVXTJ+g903bj44OrI7+87clrRpamX9AbxAazZnw6OD9PXl779TvigaUwt6ea
/mFwfv7UUx3xw3MHj9A8H15RePoY8Gr6Cc0pxCG16SmGVLutdfUqg3bRPM+V
PiQ2zDT9xZDq4alWfWXdgaVjXDr5kPz8d2XtMdo71nxs69L0GzpuJ2fQ9Bz6
vR3SHYCm7xiSnw9LrxIDOE3/MaTaiA+cwo+k7bllNH2Ibn0YpQlwbXoRfdUz
acNC048Myc+fVxWOcelmmr5En5huB7fX9Cb6h5fSBX9Idf0pS61/7kal6VGG
5OfT0nvEAEPTq+jYTjtS06/o1sPGMf8+SdOz6BdmiQe+2vQseokIBoZUvZt+
817rkaYwvcuQ/Dx8de0VZj9l49YaLnx7ur27TtPH6OniB6jpZYbk59HS5x6X
NnA1/cyQ6qzv5vvk/ZdKx3bak0Py82dpehudpv3fvzSk+vLFD7dYfqVrCtPj
6PZT0g31kPz8WZpeZ0g1z4VHpCtUbZ4Xdbo7m2zJawtvwwC5Nttt+t24vdP0
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
j4keqs3+W+kpI9hvqzZuPQ19vqBmf64055v0Gen2ZOz22px30r9/vPonf06o
Of/UXsWffn3N/p7+ZYz4Cy4cx1Wm1pyfas/7dzr9sPc4q3SM32dpz/tvOsU+
q95ZmvNYOu2mth4h836dPjg+8EpzXqs97+fpNXngLfxG2s5cTHOeqz3vz+m0
u/bxOA/XZn9O9y3z6hT3zaHZj9Mv9uz34xmrlV4+gnDNebH2vF+nL71hms92
3aX0fenjaw3N+TKdnpZv2aA97/fpvTZ76bGVTtTs/5XmfJqO2mJLzXk1HePy
ndsrxhOa/cTSnG9rryZ5ZsrWE3Tpo1dKxXJ73n8szXk43Xdp3PDW5nxcezV8
//iNrs1+ZemdI+DVnKfTn6Rfr9Paq8dnTw9wpTlf1573Nx+pfXZ6PJhes39Z
eq1r3t5w3fM15/Paqx1bn347Llc6jt9c0Z73N0tznq+9isfjrTX7m6Vj3Huj
5vxfe/WP7ydu/UQ0+5ua/ESzv1n6xpseXOPvuzTnCdure7dJHxilp0jbGY+0
5/3R0pw/bK9OTP+4TzT7ozqW+/ea/dJHa8flcDLN/qn+I308LqrZT9Xp02LS
jTT7q/rmC7dv/Ypr9lv14WuMe9Pr52r2V0ufvnEEptW6vz5w0k33lObATnve
Ly0df32vac5ntlcz8Rdem/1V/d1OY6++VVfpff933rkj32/P+6k6XQ0XH++x
2ux36ivfSDdQpTkfqjkO1Z73Q0tzfrS92pcNl8KbxXhWc760Pe+nai74mv1V
PUWalp9S+vV/pMBEc161Pe+/6hGX/3X6kTdrPm5KL5ce339or9JvX2vN1ma/
tTTnYdur8//eeJ2Fh2j2Y0tHPvxXe7VL3PBp9mcfrx2PKzOV5nztiLx/q/81
/Ybdz6+o2c/V8Xi9XelZ+AvN+7P6wZPSD7g053l1Wo2XTTIi7+eW5jyvjuNg
02rO9+qj4sCE5nzviOrUyJc0+8V6q64f0x144d6908BqRN5P1guk7eEvSnNe
WO+UHt+WHJH3l0tznnhE9b/04/9Js//8ROHIl1fSnDfWa8YBS815Yx352caa
88cjqricTKnZ39a3p4+HJUovGD/gEXn/uzTnmUdUcfuyqWZ/XMft7UGlb0jj
pF0156FH5P3u0pPHBsWIarbY4NXsf+vWzVq6Ia3N/rdOuzPfvFea89U6bkcP
G5H3y0tz3lpHPn38iOra9LfXq9lP11FvT/BkbfbLS3N+e0S1Ogu28D5xQE9z
nlsPTtPnC0fk/Xc9zQSXfLb2upr9dJ0uFrPvpdlPL815cb1pOh53teb8+Ijq
+YPTFVazH1/6tTReuGVEdfHcsaFXm4+H0pxHH1HF3dOrmv18vdz5w5c9f3jp
ZeOCMCLv9+uJVks7Sk8V5rz7iLz/Xzo+Hh8bUQ35aem0Ymuz/68fvWtI6wlN
s7+vYztlR81+v053G58ep9n/14tEHlea8/kj8jxAjxUbOJp5gI7t9K9LR47+
woi8v6/vTv96v5Xm/L++aNl0AG1Engc8XTuW/7Sa+UBp3h8wotokXV6X1swD
Sv8jBt6a9w2MqOZKH9dblD4yjiuOyPMEHbdzh2rmC/rdOC6gmTfoG+PxrzS5
/Ig8b9CxXfCRZj6g144NdM18QM/ADWVt9vdL98Q4QPN+Bb1jHKgfUfWPOKb9
3YU0+//65avnat0ylOb9DCPy/r++bMMPbj95n9Jxef15RJ4PlOb9Djpy/P9p
3vfQUfvJa9OBJ837HzqqvfkFqM28ofQCsWGreV9ER7VSPGBq5hE6Pe1N8aZm
PqHbZjp8vv4Rpa9Pxztn6MjzitK8n0LHduycHdWTH8UGcGHeX9GR5xulY1q3
UEd1zmnpA0sz7yjN+y90/HGW6ah2ig2u0rwfoyPPR/QSravRNruWjpx9lY48
PynN+zU6qvR0tuRJmvmK/nrzA1u3hJp5S+lBY6SCs6O6f7x0w6yZv+gYHwzU
zGP0FgfGHWhh3v+hN4kbnI48v3muMO8H0a+m46fba94XomN7aHfN+0M6qlju
M2jmQ6Xv3jEdwO2o4vK3fGneP9KR5z/6w/Txto1m3qPjdufI0jMR3OT5jeY4
S2ned6IvSjn2SR153qPXj8ez0rwPRY8TgbTm/SgdeT5U+oh4oYfm/SkdVTz+
f1o6jrde25HnSzq2a37QzJueL8z7WHQ8Xt7WUb2eth8n18yfdGxfL1aa97no
dJpl0Qc68nxK7xcDJ808qjTvg9FrxAClo1qVG+7CvC9GP5Hy4Zc68nxLx+o4
rzTvl9HzR8Cked9MR56H6c50+udezXxMP/vbjq0rVGleT9eR52WleZ9NR9W6
eUkXjNrMw/Ru8UD/Qm3mYbr1YThg7Hk18y+d/rSD1tLMu/SgY2MFFOa4b0ee
h+k4DXhqad7Ho7md78jzs9K8r6ejai3OHQ+4RTM/Kx1vrxrZUW1z5b0rr/dy
ad7v05Hna7r1LzvLXEM187bS/40b/I58ju3FwrwvqCPP40oPTLnsWJ1V91fp
A0Mzn9Ofph//zJp5nX7uvLThU5r3EXXmeZ6Oy89KmnmevmjVNOHSzPf0Menj
bnvNvE/v3rpa/L2PZv6nN0q3W8do5oE6PR19ebZmPqg5HqWZF5bemIFfbd6/
1FnF7vBdmnli6RjPTtlZ/RyPV5r5oh4yaXoCLM37nTrzfLF0HOeeubN6uzv+
gYV5H1Rnnj/qdDh17w7NPLJ03L7M01nF9tHPmnmlPuPImw9bY9yXajO/1Ael
7cipNPNLvV38wmjmmTq2s5cszfut9ExxgKYzzyv1wvGAq5lflub9WPrC9Lqg
5TqradlALcz7s/TYKYddTfM+rc48Hy19eDwgdlZjxYBNMx/VvWmcd7BmXqo/
Xzvt2Jfm/V2deX5aOsZdW3RWvC6hNO/76szz1tJxvH3Hzip+3W7UzFt12r35
9QHN/LU07w/rrI6Lj4PSH6bL+Z6deT6r9+QBtDbzWr1JbPBp5rN6+RjglOb9
ZZ15flt69QheO6u4Xf1LM999ufbE363Rc+aEmnlvad6P1ln9mh6PZtDMg/Ww
W/vf2W2B0o+n1y0drXm/WmeeH+t4PF++9HxxoEvzPjYdb787V/N+Nh3b45d3
5vmzTnczrQ/M2syjS/N+Nx3H9W/orGL7ZxvNPLo074PTP6c/7p2d1VkTpg0x
zfxaHxIDldK8T64zz7dL7x3BQGe1Q/wLa+bXpXkfXWfF8XTNfFsvemjaUdDM
tzXjEc18W48zbyzR2syvdX8an31W+pv0uqlnNO/D68zzbv3lgHSDXzryvFc7
83xbx7j0B818W6e7oZ3GfqU28+7SvI+vs7os/etMrpmH6xPihkAz/y6d3mZy
/Hud1d7pcrVYad7315nn46V5fWhnFR9vq2rm5TpuTzYuzfsDO/M8Xcft4U6l
74rXH3TmebqeNG5oNfP10uR0ndXv6XHheM38XbctmzacS8+4c0yU8ny+NO87
1Bek41Lfd1YcD9bM60vzfkQdr+P6Q/O+xK4qTeunuK903K2N05Xn/aV5v2JX
xfaLZv6vz7lxaOsKqukB9GFpO3CApg/QO26edqQ0vYCO7d/fNf3Aq7UXjwdw
TU+gZ4wN3NKpTp1z4q7cG5TmfZJd1bgxUCsd2zPTdOU+QX97WfwF1aZX0Gl3
e9u1S/O+yq7cM+gYX26p6Rt0mvYvtUfpD9LrD2bVvP+yK/cQpVeLA7Sa92Pq
x2aIBVyb92F2VVek8fphmr5Cn/RFuuCVjtedrdiV+wu9TzygluZ9mzpynTW7
cp+hYzndUpr3c3blXkOT52i200tPPHsqhDTv99Qnp8ehrTXv++yq+Hgp/VM6
Xr9LV+4/9ORxQ6TpQfSf6fZxqKYH0fE48V1p3jfalXsRHY+HY7xWm35EP3Vi
+oFpehJ9S9qumEXTj5TeKw6YdFXnLRkbbIV5/2lX7kv0ETGg0fQkOk73b6Dp
S0rHcZNDutg+3UFzg6qXjAd0TY+iZ07b98do+hM9Xuu3c/NzND2K/j5eD6Lp
U0rzvle9IQfEqwFjxwoqzPtgu3LPohkPlo6c4fSu3LvoB55IAwVN76KvSuPf
LzX9S2neR6uXihfydFWn7JN+gJo+Rkdu8Iuml9GxWzTu67XpZ3TkMVOX5n24
XbmnKX1nul29squaP/145tL0NnrKuKBq+pvSvG+3q/o7XR7X0PQ5pWeIF7R1
VfHxuJmm1ynN+3u7qrg92k3T8+i43T249PnnpgCyK/c8+rb0OHSypsfRF8Tr
+TR9jj4qbW/cpOl1NHm6JmfQbAeW5v3EOo6TPKp5X3FX7n300vGAoOl7Ssfr
C5/rqmaNDVlN76PHjwGepv/RMb74qzTvT9YxHn69K/c8b9ROn/bjTKTpe0rz
/uWuKsZlM5beLl7g0JV7oNK8n7mremj9VCBo+iB9TRrvrqDpg/RpaZq/nqYX
0jHO31bTD5V+P16X3VXF2+D2Ls3rGrtyT6Qj3ziq9KpxfL8r90V6wQgMNL1R
ad5H3VVNzYKqTY+kx4gHjNKPfpsGcF25V9LkaaV537WO4wU/deW+qTTvw9bx
esi/uyouX6V5P3Z37p/0c+nj6TNN71R64nhBa3d1R7pdaNf0UPqidHv4o6aP
0vE4MPabhXlfd3fup0qftGEcoKz+w8C9Nj1Vad733V3F4//smn6q9I/pr3M6
zfvAdRz3nqO7WjZukDT9VWneH95dzR4bfJo+S0+Ytoc31vRaOrb3dy6d3i5y
8ILduefSqSb66gBNr6Vj3HSCpt/SjwyODfXa9FuleR96d3VdvB5K03fpMy5J
AZCm7yod+flS3RXjc83tud42Ngw0PZheI+UXAzQ9mF64dTe8Ro+mD9PTplzn
d00f9lbtMblBqk0fpiPXmk7Ti+n4x8+r6cf0C+nHuaymJ9N3pV/XtUvzPvru
3JuVfim9rnTl7uqSdPneStOj6fh43qM077fvzr1a6SXjBa6a9913V3F7dbim
b9Nxu3xa6TvS67426c79m14+PhA0/Vtp3q/fXc0ZGwSaPq709ONHUVZxnEGT
D2m2r0rz/v7u3Nfp2I78WNPXlY7j5Lt1V++k7exhmv5OP5bGEd9pejt9Qxo/
jfF2bfq70ny/gB4jXnjfXcV4cVJNr1ea7x/ormKcO4um39PbxwOKpucrHXny
4ZrvM+iu1ooN8dId6fWvJ2i+76A793+lt40XUGq+D6G7WjQG/KXfS6+/uljz
fQnduR/U00dgpukJ9djxAaLpC3XkUMdqekOdfpgfnFM6vl7gmu7cI+qX4vWQ
pfl+Bx3Hl2/VfN+DnjteiN6d+0Z9z93pP5q+UZN3asZNpfk+ie6KX/fSV6f8
7/Hu3EfquFx/WZrvo+jO/aTeNAIoTU+pV+QXtvBE6fWvL3bn3lLPHQ9Y79Sm
vyzN92F0V/H4M3XpE+OFWd25v9TxuDq3psfUsd2wVGm+b6M795r6vbT9s4am
19RPpO3EzUvzdaSa7+/ozn2nvilt/+6m6Tt1bP8foukzdYxvTtb0mprXoWv6
zNJ8HUR3tU5s8Gn6Tb14DKxL830k3bnv1OQXpTn+qvm+ku7cg+q4Gn+g6UN1
5ECDNX1o6X/zwvHqq7Njw702fWhpvi+lu3ol5WR/a3rRd2vft3LaEdP0oqVf
TLnaL5rvX+muIo+csfQS6fWwY/Tk3lSnq8m2C2r6Uh1/fSto+tLSfN9LT7V5
Wv7ra/pTvXL8F2r6Uz0vN5S16U913K4cpelRddxOnln69vQ4Mb7m+2h0vI5p
ip7cs5bm+2l6Kl5vXTq+nmNGzffX6DjeN5fm+2x6ci+rP0iPh3doetnSh8QL
hnuqp+L4kKan1Wz/aPra0nyfTk8V23efa/rb0iNWjOCsiu3Xdk2fW5rv59Hb
pNezrqr5fp6eauf4gNb0u6Xj8r5eT7VebNC8V5jv9+nJfa5eMgZuml5Xx/h0
jtJ8AUhP7nd1jL8X1/S7OvKJ1UrzfUM9ue/VA1Ies4mm99Wv/RoD8cLxdSY7
9OQeWD+Q8rUDNT2wjrrhBE0fXJrvQ+qp0mGLRS4oPXc6rrVHT+6F9b4xEND0
w3rLCFZK831LPbkX1qtEgKrpgzXLUdMH6ynYcKlNL1z6qnXTCxp7qvg46dH0
xKX5PqieqiPdHvxResLYEOzJffH7hfn+qJ7qo3S7N37pE3ghd+6R9TPpcWH6
0nzfVE/ulXU8/s2n6ZNLx4/jnJ4qHteX1fTLpfk+q54qtk/W0fTNelcuOLXp
mfW/44FV0y/rpWPAoOmZdYwjTtf0ypqvp9D0y/qHNM67VdMz64FxvL10vK7n
0p7cO+s3Ylxfmu/76sn9s4684xNN/6wjvxmm6aFLx7eVXKf5PrGeKvKu7zX9
tN4/Nkg/qE1PrbeOgbimry7973R85o6earUIMkvzfWU9ucfWcZprEU2freN/
vdL02jp+vBtq+m3dlX7ddtT026VfSF/38GBP9Um6fO6n6bv1c+nj8FhNz63j
duhcTc+t+ToATd+tj44AS9N36//EX1hpvv9NLx7/gj25/9YbckNcmx5cx/bR
V6X5Pjkdr4d9uSf346X5vjk9LRvutfn+uZ4qtgs7Nb25ju3aXzW9+Ye12b/W
9Oaa/WtNf67Zz9b06Jr9bE2frtnf1vTqmv1rTa9emq9H78n725qeXbO/renb
S/N9fj15/1vTv2v2wzU9vGZ/XNPHa/bLNb186f/F11f15P3z0rxetif39Zr9
dU1vr9lv1/T3mv13TY9f+uA4DtOT9+c1vX5pvv+wJ+/fa3p+zX6+pu/X7Odr
en/N/r6m7y/dnr5e49uevP+v6f818wBN/1+a72/syfMBzfkAzbxAc15AMz8o
Hdvjv/fk8wOl+b7Injxv0JwnKB2vrx27N88jNOcLNPMJzXmD0nw/ZW+eX5Re
OS5ovfl8Qmm+z7I3zztKx+tPpurN5xc08xDNeQbNfERzvkEzL/moNucdNPMT
zfkHzTxFcx5CM18pzfdz9ubzEpr5i+b8hGYeozlPoZnPaM5PaOY1mvMUmvmN
5nyFZn6jOU+hmd9ozkto5jma8xKa+Y7m/ETpuWLg2pvnPZrzFZr5Tmm+D7U3
n7/QzH805zE08yDNeQzNPKj0len4wby9+XxGab6PtTfPjzTnNTTzJM15Dc08
qfQEcYCkN5/nKM33v/bm+VPp2E5cvjef/9DMozTnQTTzKc15EM28SnMeRDOv
0pwP0Wx/a86LaOZZmvMjmnmW5jyJZr5Vmu/H7c3nTUrH64LX6M3zsNJ8n25v
Po+imZdpzqOUTrXrNhtovo+3N8/XNOdXNPO2j2tznkUzX9Ocb9HM2zTnWzTz
ttJfptezbNmbz79o5nGa8zCa+Vxpvm+4N5+HKb0+H/h5nqc5L6OZ32nOu2jm
dZrzL5r5nOY8jGYepzn/opnPac7DaOZ1mvMvpfm+5d48z9Ocjyn9fMrH9+7N
8z7N+RnN/E9zfkYzD9Scn9HMBzXnaTTzQc15Gs28UHO+RjP/05y30cwDNedv
NPPB0nxfdW8+n6OZH2rO62jmiZrzO5p5ouY8T+n4Op6De/N8sTTfj61je+qY
3nweSPPxrjn/o5lHas4DaeaTpfk+7t58Pkgzv9ScF9LMMzXnhzTzzNLxeuRT
Nd//3ZvPG5U+Z8jy+/7vPM33g/fm+Wjpv9PrPq7ozeeVPqnN/LQ03y/em88v
lT4ovvC5N89XNeebNPNVzXknzby1NN9n3pvPQ2nmsZrzUJr5rOY8lGY+qzkP
pZnXas5Haea3pSN/vas3n5/SzHc156c081zNeSrNfLc03++u4+tuHu7N5600
82DN+SvNfFhzHkszL9acx9LMj0vzffM6btee7c3ntzTzZs15Ls38WXOeSzOP
1pzf0syjNee5NPNpzXmt0qemr/N8sTfPrzXntzTza835rdLx+t7XevN8W3O+
q3TkmW/35vm25vxX6YfWSN+42Jvn35rzYZrtv9Lx9Tif6DnjAG1vPk+mmZ9r
zpdp5uma82aaebrm/Jlmvq45j6aZr2vOp2nm7Zrzap8WjsvxN715Hq85z6aZ
z2vOt2nm8ZrzbZp5vOZ8m2Y+rznfppnXa867lb4ivq60N8/zNefhNPN9zfk4
zXxfcz5OM+/XnJfTzP815+c0PYDmPF3pTWKA3Jt7Ac15Ok0/oDkfV5pcsDf3
BZrzc5reQHOeTtMfaM7TafoCzfk6TV+gOU+n6QU05+s0/YDmfJ2mJ9Cct9P0
BJrzd6Vf/Tl9IWFv7g005+tKx9cp/dCbewTNeTtNn6A5f6cZF5ZeJg5c9ebz
eZp+QXNeT9MvaM7vlY7L35+9uW/QnO/T9Aua832ankFz3q/03enrccfsy32D
5jzgZ7XpGzTnAzW9g+a8oKZ/KP2f2FDpy+cJS0cuOH5f7iU05w1Lf3Fn+sK0
vtxPlI7TAVP05fOImr5Ccx5R01tozidq+gvNecXS60VA25d7DM15Rk2foTnf
qOk1NOcbNf2G5ryjpt/QbHhoeg7NecjSY8cLqvty76E5L6npPzTnJ0vH1/3O
1pf7EM35Sk0fojlvqelDSh8R/4V9+Tymph/RnM/U9CSa85ilI09boC/3Jprz
mZrepHT3tukLnPry+U1Nj6I5v1k6vv5pyb7cq5TeIQKbvnzeU9OzaI43aPoW
zXlQzceD5nyopn8pPQ0vEM3nQzU9jOa8qKaP0Zwf1fQxpePriVfTZ6fX567V
l8+bavoZzfnT0pFXrd+Xe5rPC/81YXqjdF8+r6rpazTnVzW9jeb8aun4eqjN
+3J/oznPqulxNOdbNX1O6QNjQ1TPHy+U0/F1v7vq69LrV/fsy+dlNX2P5vys
pvfRnJ/V9D6a87Sa/kdznrZ05CD79OU+SHPeVtMLac7bavohzfnb0pPGC+77
cl+kOZ+r6Y0053M1/ZHmvK6mR9Kc3y0dX9d0aF/ulTTnezX9kua8r6Zn0pz/
1fRNmvPAmt6pdBxPP6ovnxcuvVK8cKYv91Ga88SaPqp0fD3xyX35vLGmn9Kc
J9b0U5rjoJqeSnPeWLNdpDlvrOmtNOePNf2V5jyyprfSnE8u/WB6vewZOsbd
5/TlPktznlnTa2nOL2v6rS9qc55Z03Npzjdr+q7Sc8QLmvvyeefSA9PXOV3W
l/svzflnTf+lOf+s6cE056E1fZjmfLSmF9Ocl9b0Y5rz05qeTHOeWtOXac5X
a3ozzXlrTX+mOW+t6c80561Lx3Htq/pyn6Y5j63p1TTnsTX9muZ8tqZnK71x
HKjvy+e3Nb2b5vy2pn/TnOfW9HCa892l4+uvb+nLvZzmvLemn9Oc/9b0dJrz
3pp+TnO+W9PTac53a/o6TX6s6e1Kv5Je/3tHXz4PruntNOfBNT2d5nx46Riv
3tuXezvN+XFNf6c5T67p8TTnyzV93pe16fM0fZ6mz9P0eZo+r/TS8YLZvtzr
lf42fb3YY32539P0e5p+T9Pvafo9Ta+n6fU0vZ6m19P0eZo+T9Pnafq80nEc
/em+3Otpej1Nr6fp9UrvFgcE+3KvVzq+fvyVvtzraXo9Ta+n6fU0vZ6m19P0
epo+T9PnaXo8TY+n6fE0PZ6mx9P0eJoer/Tn6fXDb/blPq90jLfe7ct9nqbP
0/R5mj5P0+NpejxNj6fp8TQ9nqa/0/R2mt6u9Lq8MC/3dprtbE1vp+ntNH2d
pqfT9HOlx44vBNZxHPnrvtzTaXo6TU+n6ek0PZ2mp9P0dF/VpqfT9HSank7T
02l6Ok0/p+nnSh8egX9f7uk0PZ2mp9P0dJqeTtPTaXq60nzdfF/u6zR9Xemu
eD1vX+7tNL2dprfT9Haa3k7T22l6u9JsH/fl/k7T22l6O01vp+nrNH2dpq8r
vX28EKcv93aa3k7T22n6Ok1Pp+npND2dpqfT9HSafk7Ty2n6OE0fp+njNH1c
6anjC0p1HG/+vS/3c5p+TtPPafo5TT9X+qyzUyDRl3s6TU+n6ek0OYympyu9
WrywvD/3dZq+TtPTafo5TS+n6eU0vZymh9P0cJoeTtPDfV2bHk7Tw2l6OE0P
p+nhNP1b6T/T64jH6889nKaH0/Rwmv6t9ONpu2+i/ty/afo3Tf+m6d80/Zum
f9P0b5r+TdO/afo3Tf+m6d80/Zumf9P0bprerXR8G/hk/bl3Kz1ffAFgf+7f
NP2bpn/T9G+a/k3Tv2n6N03/punfNP2bpn/T9G+a/k3Tv2n6N03/pundSsfx
7Bn0tSumDar+3MNpejhND6fp4TQ9nKaH0/Rvmr5N07dp+jZN36a5nSm9RbxA
tz/3bpq+TdO3lY7XF8/bn3s3Te+m6d00vZumZ9P0apo+TdOnDahNj6bpz0q/
lbYnFurPPZqmR9P0aJoeTdOflU7fXrLM4v25R9P0aJoeTdOjaXo0TY9WesX4
Aisdx4lX0A/033Lk5Kv0535N069p+jVNr6bp1UrvFS+s68/9mqZf0/RrpeP1
vOv2556t9Dfp9miD/tyvafo1Tb+m6dc0/ZqmX9P0a5p+TdOnafo0TZ+m6dM0
fZqmT9P0aZo+TdOnafo0TZ9WOr1t4pxN+3OfpunTNH2apk/T9GiaHk3Tn2n6
s9IbxReK9Of+TNOfafozTV+m6cs025GavkzTl2n6Mk1fVjqOo27Xn3szTW+m
6c1Kv3zjaVfsvnN/7s80/ZmmP9P0Zt/UpjfT9Gaa3kzTm5U+lhfO5P5M059p
+jNNf6bpzzT9maY/0/Rmmt5M05tpejNNb6bpzTS9maY30/Rmmt6sdLyud+/+
3J9p+jNNb6bpzTS9maY30/Rlmr5M05dp+jJNX6bpyzR9maYv0/Rlmr5M05dp
+jJNX1Z6ZPp42L8/92aa3kzTm2l6M01vpunLNH2ZpifT9GSanqx0+rQcdHB/
7ss0fZmmJ9P0ZJocQNOTaXoyTT9Wetd4gb+O437H9ue+TNOXafoyTV+m6cs0
PZmmJyv92aZ7Pv7kif25LxtYm75M05dpAiZNX1b6gr/TgW4dr8s9qz/3ZqXH
2nLbxS45vz/3ZpreTNOXaXoyTU+m6ck0PZmmJ9P0ZJqeTNOPafoxTT+m6cc0
/ZimHyv9zJjp/0d/7sk0PZmmJ9P0ZJoNA01PpunHNP1Y6cPiBbz9uScrHcd7
rtXp7QMT3NSfezNNX6bpyzR9maYv0/Rlmp5M05NpejJNT6bpyTT9mKYf0/Rj
ml5M04tperHSNz+Ygnsdr2u9uz/3Y5peTNOLaXoxTS+m6cU0vZimF9P0YpqP
T00fpunDNH2Ypg/T9GGa/kvTf2n6L03vpem7BtWm79L0XZq+S9N3aXouTc+l
6bk0PZem59L0WJoeS9NjaXosTY+l6bFKTzVefINY7rM0fZamz9L0WJoeS9Nj
aXosTY+l6bE0/ZWmv9L0V5r+StNfaforTX+l6a80vZWmt9L0VpreStNbaXor
TW/V+PuO3krTWzX+vqOvavx9x4aEpqcq/f4jyxx16iP9ua/S9FSankrTU2l6
Kk1PpempND2VpqfS9FSankqz3aTpqTQ9laan0vRUml6q9Jnp6z+f7M/9lKaf
0vRTmn5K008Nrk0/VXq1dJzrWf3H4/P/uONL/bmv0vRVmp5K009p+ilNP6Xp
pzT9lKaf0vRTmn5K009p+ilNP1X6sV1TENCfeypNT6XpqTQ9laan0vRUmp5K
01NpeipNT6XpqTT9lKaf0vRTmn5K009p+ilNP6XppTS9lKaX0vRSml5K00s1
/r6jl9L0UaXj9dNv9+deStNLaXopTS+l6aU0vZSml9L0UppeStNLaXopTS+l
6aM0fZRmPKvpo0rP+/RMByz3QX/upTR9lKaP0vRRmj5K00dp+ihNH6Xpo4bU
Zn9I00tp9os0/ZRm/0jTU2n2kzR9lWY/SdNXafaXNH2VZr9J01tp9p80/ZVm
P0rTY5Ueuvt0V37xyaj9Kk2vpdm/0vRbmv0sTc+l2d/S9F2a/a7S16Svt/2y
P/dfmv0wTQ+m2R/T9GGa/TJNL6bZP9P0Y5r9NE0/ptlf0/Rkmv02TV+m2W/T
9Gaa/TdNb6bZj9P0Zpr9OU1/ptmv0/Romv07TZ+m2c/T9Gqa/T1Nv6bZ79P0
bJr9P03fptkP1PRumv1BTf+m2S/U9HCa/UNNH6fZTyy9RTo+N1BPvPeEUzw8
tD/3dJr9R01fp9mP1PR2mv3J0m9OmW6I+3OPp9m/1PR4mv1LTY+n2c/U9Hma
/U1Nr6fZ79T0e5r9T03Pp9kPLc3r4/tz76fZL9X0f5r9U00PqNlP1fSBmv3V
0ivsm95g3p/7Qc1+q6Yn1Oy/avpCzX6spi/U7M9qekPNfq2mP9Ts32p6RM1+
rqZP1GyvaG5/NPu5mn5Rs7+r6RU1+72aflGz/6vpGTX7wZq+UbM/rOkdNfvF
mv5Rs1+s6SE1+8dDa9NHavaTNb2kZn9Z009qNjg1PWXp9O0j8/84ar9Z01tq
9ps1/aVm/1nTY2r2ozU9pmZ/unR8ffev/bnX1Oxfa/pNzX62pufU7G9r+k7N
frem9yy9Vzqe99eo/XBND6rZH9f0oJr9ck0fqtk/1/Shmv10TS+q2V/X9KOa
/XZNT6rZf9f0pZr9d01vqtmP1/SnpWebIX2j6ci8X6/pUTX795o+VbOfr+lV
Nfv7mn5Vs9+v6Vk1+/+avlWz/6/pXTX7/ZreVbP/r+lfNfMATQ+rmQ9o+ljN
vEDTy2rmB5p+VjNP0PS0mvmCpq/VzBs0va1m/lB6wOtd294y7sjc42rmE5o+
VzOv0PS6mvmFpt/VzDM0Pa9mvqHpezXzDk3Pq5l/aPpezbxD0/tq5h+a/lcz
D9H0wJr5iKYH1sxLNH2wZn6i6YVLx9eXTDAyz1c0PbFm3qLpizXzF01frJnH
aPJPzXxG0x9r5jWaHlkzv9H0yZp5jqZX1sx3NP2yZt6j6Zk18x9N36yZB2l6
Z818SNM/a+ZFmh56WOENZx567+BJRuZ5kqaX1syXNP20Zt6k6ak18ydNX62Z
R2l6a818StNba+ZVmv5aM7/S9NiaeZamz9bMtzR9tmbepem1NfMvTb+tmYdp
em7NfEzTd5ce7+1vPjtuypF5fqbpvzXzM00PrpmnafpwzXxN04uXTm8nn2G6
kXn+punJNfM4TV+umc9penPNvE7Tn2vmd5oeXTPP0/Tpmvle6WPS8cGZRuZ+
XTP/0/Trmnmgpl/XzAc1PbtmXqjp2zXzQ03vrpknavp3zXxR08Nr5o2aPl4z
f9T08pp5pKaf18wnNT29Zl6p6es180tNb196yfc+2Hjr2Ufm+aamx9fMOzV9
vmb+qen1NfNQTb+vmY9qen7NvFTT72vmpZqeXzM/1fT9mnmqpvfXzFc1/b9m
3lq6/8h3jvp5bh1fB7TAyHxeQDOf1Zwf0MxrNecJNPPb0rt8+PI7iy86Mp83
0Mx3NecPNPNezXkEzfxXcz5BMw8uPcOxz//44ZIj83kFzbxYc35BMz/WbLdp
lqvmPINmvqw536CZN2vOO2jmzZrzD5r5s+Y8hGYerTkfoZlPa85LaObVmvMT
mvn18Nqcp9DMqzXnKzTza835Cs08W3PeQjPf1py/KJ2uPgcsNzLPvzXnMzTz
cM15Dc18XHNeQzMv15zf0MzPNec5NPN0zfkOzXxdc95DM2/XnP/QzN815ztK
n5+Of608Ms/nNec/NPN5zXkQzbxecz5EM78vnb7t7p7VRubzI5r5vub8iGbe
rzlPUnrMBe67ct21R+YeQHPeRNMHaM6baHoBzXkTTT+gOX+i6Qk051FKx9f/
rD8y9waa8yqa/kBzfkXTI2jOs2j6BM35Fk2voDnvoukXNOdfND2D5jyMpm/Q
nI/R9A6a8zKa/kFzfkbTQ2jO05ROX4592sZ64YXTN4qPzP2E5vyNpqco3fHV
NSu+vM3IfD5H01tozuto+gvN+R1Nj6E5z6PpMTTneTR9huZ8j6bX0Jz30fQb
mvM/mp5Dcx5I03dozgeVvikdP9lxZO4/NOeHND2I5jyRpg/RnCfS9CKa80Wa
fkRz3kjTk2jOH2n6Es15JE1vojmfpOlPNOeVND2K5vySpkfR5FeacYDmfJOm
V9Gcb9L0K5rzTqVTff73riNz36I5D6XpXTTnoTT9i+Z8lKaH0ZyX0vQxmvNT
ml6mrTa9jKaX0fQyml5G08toehlNL6PpZTS9jKaX0fQyml5G08toehlNL6Pp
ZTS9jKaP0fQxmj5G08do+hhNH6PpYzR9jKaP0fQwmh5G08OUnnLg+U9cu+fI
3Mdo+hhNH6PpYzR9jKaP0fQxmj5G08do+hhNH6PpYzR9jKaPKR1fv7TvyNzL
aHoZTS+j6WU0vUzpM5Y8/V9fHTgy9zOafkbTz2j6GU0/o+lnNP2Mpp/R9DOa
fkbTz2j6GU0/o+lnNP2Mpp/R9DOafkbTz2j6GU0/o+lnNH2Mpo/R9DGaPkbT
x2j6GE0Po+lhND2MpofR9DCaHkbTw2h6GE0Po+lhND2MpofR9DCaHkbTv2j6
F03/oulfNP2Lpn9prO944Gys79hQ0vQumt6lsb5jQtFY3xFQNNZ39C6a3qX0
qkNOWvyIw0bm/kXTv2j6F03/oulfNP2Lpn/R9C+a/kXTv2j6F03/oulfNP2L
pn/R9C+a/kXTv2j6F03/oulfNP2Lpn/R9C+a/kXTv2j6F03/oulf2mvTv2j6
F03/oulfNP2LJhDQ9C6a3kXTu2h6F03vouldNL2LpnfR9C6avkXTt2j6Fk3f
oulbNH2Lpm/R9C2lfz/nuO2mOnpk7l00fYumb9H0LZq+RdO3aPoWTd+i6Vs0
fYumb9H0LaUfTcdbjtf7DT/0vk1OGZn7l9LzXHDg5yPPGJl7GE0Po+lhND2M
pofR9DCaHkbTw2j6F03/oulfNP1L6aHLR+CVexhND6PpYTQDZE0Po+lhND2M
pofR9DCaHkbTw2h6GE0PUzp9O+qCF43qYzR9jKaP0fQxmj5G08do+hhNH6Pp
YzR9jKaP0fQxmj5G08do+hhNH6PpYTQ9jKaH0fQwmh5G08NoehhND6PpYTQ9
jKaH0fQwmh5G08NoehhND6PpYTQ9jKaH0fQwmh5G08NoehhND6PpYTQ9jKaH
0fQvmv5F079o+pfG+o7+pbG+Y0Fr+hdN/9JY39G/NNZ3bOBo+hdN/6LpXxrr
Ox7/G+s7fmCa/kXTvzTWd/QvjfUdGxKa/kXTvzTWd/QvjfUdA/3G+uYPVJv+
RdO/NNZ33LA31nc8cGt6lxG16V00vYumd9H0LpreRdO7aHoXTe+i6V00vYum
d9H0LpreRdO7aHoXTe+i6V00vYumd9H0LpreRdO7aHoXTe+i6V00vYumd9H0
LZq+RdO3aPoWTd+i6Vs0fYumb9H0LJqeRdOzaHoWTc+i6Vk0PYumZ9H0LKU3
v3i3Td6+bFTfoulbNH2Lpm/R9CyankXTs2h6Fk3PoulZND2LpmfR9CyankXT
s2h6Fk3PoulZND2LpmfR9CyankXTs2h6Fk3PoulZSk+08k5H73X1qL5F07do
+hZN36LpWzQ9i6ZnKf1GyjlvGNW3aPoWTd+i6Vs0fUvpEy/b8t1bbxnVu2h6
F03vouldNL2LpnfR9C6a3kXTu2h6F03vouldNL2LpnfR9CyankXTs2h6Fk3P
oulZNP2Kpl/R9CuafkXTr2j6FU2/oulXNL2KplfR9CqaXkXTq2h6FU2voulV
NL2KplfR9CqaXkXTq2h6FU2voulVSi+/6qY/rXbnqH5F069o+hVNv6LpVzT9
Sukf09d/3juqZ+moTc+i6Vk0PYumZ9H0LJqeRdOzaHoWTb+i6VdKp1rghIf0
nmuseeBMj4/qWzR9i6Zv0fQtmr5F07do+hZN36LpWzR9S+lZv13lqmeeHtW7
aHoXTe+i6V00vYumd9H0LZq+RdO3aPoWTd+i6VtKf53G1y+M6l00fYumb9H0
LZq+RdO3aHoWTc+i6Vk0PYumZ9H0LKUvWXvZnl9eGdW3aPoWTd+i6Vs0PYum
Z9H0LJqeRdOzaHoWTc+i6Vk0PYumZ9H0LJqeRdOzaHoWTc+i6Vk0PUvpDX5Y
YsrL3xzVt2j6Fk3foulbNH2Lpl/R9CuafkXTq2h6FU2voulVNL2KplfR9Cqa
XqX0P9PXV743ql/R9CuafkXTr2j6FU2/oulXNP2Kpl/R9CuafkXTq2h6FU2v
oulVNL2KplfR9CqaXkXTq2h6FU2voulVSr+43gJ7fPzRqH5F069o+hVNv6Lp
VzT9iqZf0fQrmn5F069o+hVNv6LpVzT9iuZ2RdOvaHoVTa+i6VU0vYqmV9H0
KppeRdOraHoVTa+i6VU0vUpnbXoVTa+i6VU0vYqmV9H0KppeRdOraHoVTa+i
6VU0vYqmV9H0KppeRdOraHoVTa+i6VU0vYqmV9H0KppeRdOraHoVTa+i6VU0
vYqmT9H0KZo+RdOnaPoUTZ+i6VM0fYqmT9H0KZo+RdOnaPoUTZ+i6VE0PYqm
R9H0KJoeRdOfNNZ39CeN9R39iaY/0fQnjfUd/UljfUd/oulPNP1JY31Hf9JY
39GfNNZ33HBr+hNNf9JY39GfNNZ3DJA0/Unpo3+eO028co+i6VE0PUrp9Da6
iQeM6lM0fYqmT9H0KZo+RdOnaPoUTZ+i6VM0fYqmT9H0KZo+RdOnaPoUTZ+i
6VM0fYqmT9H0KZo+RdOnaPoUTZ+i6VM0fYqmT9H0KZo+RdOnaPoUTZ+i6VM0
fYqmT9H0KZoeRdOjaHoUTY+i6VE0PYqmR9H0KJoeRdOjaHqUxvqOHqWxvqNH
0fQomh6lsb5jYNVY3/G4oulRND1KY33HB1xjfUeP0ljf0aNoehRNj9JY39Gj
NNZ39CiaHkXTozTWd/QojfUdPUpXbXoUTY+i6VE0PYqmR9EM6DU9iqZH0fQo
mh5F06NoehRNj6LpUTQ9iqZH0fQomh5F06NoepTSfWl7Z/CoPkXTp2h6FE2P
UvqO36Ybf/22UX2Kpk/R9CmaPkXTp2j6FE2foulTNH2Kpk/R9Cea3kTTm2h6
E01voulNNL2JpjfR9Caa3kTTm2h6E01voulLNH2Jpi/R9CWaAa2mL9H0JZq+
RNOXaPoSTV+i6Us0fYmmJ9H0JJqeRNOTaHoSTU+i6Uk0PYmmJ9H0JI31HT2J
pifR9CSN9R09SWN9R0+i6Uk0PUljfccGc2N9R0+i6Uk0PUljfccCbazv6Eka
6zt6Ek1PoulJGus7epLG+o6eRNOTaHqSxvqOnqSxvqMnaazvuIHR9CSanqSx
vqMnaazv2LDX9CSanqSxvqMnaazv6Ek0PYmmJ2ms7+hJGus7epLG+o4NZU1P
oulJGus7epLG+o4FrelJND1JY31HT9JY37GhoulJND2JpidprO8IDhrrO35g
mp5E05M01nf0JI31HRsGmp5E05M01nf0JI31HQP1xvqOP5CmJ9H0JKV3vm2q
Jbo6R/Ulmr5E05d016Yv0fQlmr5E05do+hJNX6LpSzR9iaYv0fQlmr5E05do
+hJNX6LpSzR9iaYv0fQlmr5E05do+hJNX6LpSzR9iaYv0fQlmr5E05do+hJN
X6LpSzR9iaYv0fQlmr5E05do+hJNX6LpSzR9iaYv0fQlmr5E05NoehJNT9JY
39GTaHoSTU/SWN/RkzTWd/QkjfUdFyRNT6LpSRrrO3qSxvqODTFNT6LpSRrr
O3qSxvqOnkTTk2h6Ek1P0ljf0ZM01nds+Gh6Ek1P0ljf0ZM01ncEDZp+RNOP
NNZ39CON9R0PSI31HRsWmn5E04801ncM8BrrOwb2ml5E04s01nf0Io31HTf4
mj5E04c01nf0IY31HQOoxvqOgbKmD9H0IY31HR+YjfUdN7CaPkTThzTWd2zY
lp5+k8m2P6NvVC+i6UU0vYimF9H0IppeRNOLaHoRTS+i6UU0vYimF9H0Ippe
RNOLaHoRTS+i6UU0vYimF9H0IppeRNOLaHoRTS+i6UU0l0dNL6LpRTS9iKYX
0fQhmj5E04do+hBNH6LpQzQ9iKYH6alND6LpQTQ9iKYH0fQgmh5E04NoehBN
D6LpPTS9h6b30PQemt5D03toeg9N76HpPTS9h6bv0PQdmr5D03do+g5N36Hp
OzR9h6bv0PQdmr5D03doeg5Nz6HpOTQ9h6bn0PQcmp5D03Noeg5Nz1H6kz8n
PG2u70f1HZq+Q9NzaHoOTc+h6Tk0PYem59D0HJqeQ9NzaHoOTc+h6Tk0PYem
59D0HJqeQ9NzaHoOTc+h6Tk0PYem39D0G5p+Q9NvaPoNTb+h6Tc0/Yam39D0
G5p+Q9NvaPoNTb+h6Tc0/Yam19D0GppeQ9NraHoNTa+h6TU0vUZjfUev0Vjf
0Wtoeg1Nr9FY39FrNNZ39BqaXkPTazTWd/QajfUdvUZjffOAXZteQ9NrNNZ3
9BqN9R0DXk2foekzGus7+ozG+o4bVE2foekzGus7+ozG+o4+o7G+Y4Cp6TM0
fUZjfUef0VjfccOl6TM0fUZjfUef0VjfseHfWN9xu6XpMzR9RmN9xwWrsb7j
hkLTZ2j6jMb6jg2yxvqODWtNn6HpMxrrO/7T6/qOX0hNn6HpMzR9Runz7hzv
/ld+HtVraHoNTa+h6TU0vYam19D0GppeQ9NraHoNTa+h6TU0vYam19D0Gppe
Q9NraHoNTa+h6TU0vYam19D0GppeQ9NraHoNTa+h6TU0vYam19D0GppeQ9Nr
aHoNTa+h6TU0vYam19D0GppeQ9NraHoNTa+h6TU0vYam19D0Gppeo7G+o9do
rO/oNTS9hqbXaKzv6DUa6zt6jcb6jhtmTa+h6TUa6zt6jcb6joGMps/Q9BmN
9R19RmN9xwdOY33HDaCmx9D0GI31HT1GY33HwEHTY2h6jMb6jh6jsb7jgqrp
MTQ9RmN9R4/RWN+xYddY37GhrukxND1GY33HH6ixvuMCoekxND1GY33HA29j
fceGlKbHKL3W5uN8scsfo/oMTZ+h6TM0fYamz9D0GZo+Q9NnaPoMTZ+h6TM0
fYamz9D0GZo+Q9NnaPoMTZ+h6TM0fYamz9D0GZo+Q9NnaPoMTZ+h6TM0fYam
z9D0GZo+Q9NnaPoMTZ+h6TM0fYamz9D0GZo+Q9NnaPoMTZ+h6TP6atNnaPoM
TZ+h6TM0fYZmwK3pMzR9hqbP0PQZmj5D02do+gxNn6HpMzR9hqbP0PQZmj5D
02NoegxNj6HpMTT9haa/0PQXmv5C019o+gtNf6HpLzT9haa/0PQXmv5C01+U
5j7229xjaHoMTY+h6TE0PYamx9D0GJoeQ9NjaHoMTY+h6TE0PYamx9D0GJoB
p6bH0PQYmh5D02NoegxNj6HpMTQ9hqbH0PQYmh5D02NoegxNj6HpMTQ9hqbH
0PQYmh5D02NoegxNj6HpMTQ9hqbH0PQYmh5D02NoegxNj9FY39FjNNZ39Bia
HkPTYzTWd/QYjfUdPYamx9D0GI31HT1GY31Hj9FY33EDo+kxND1GY31Hj9FY
37FBrukxND1GY31Hj9FY39FjaHoMTY/RWN/RYzTWd/QYjfUdG8CaHkPTYzTW
d/QYjfUdC1rTY2h6jMb6jh6jsb5jA0XTY2h6DE2P0VjfMaBvrO/4gWl6DE2P
0VjfsV3UWN+xHDQ9hqbHaKzv6DEa6zsG0I31HX8gTY+h6S8a6ztusBvrOx54
Nf1Ff236C01/oekvNP2Fpr/Q9Bea/kLTX2j6C01/oekvNP2Fpr/Q9Bea/kLT
X2j6C01/oekvNP2Fpr/Q9Bea/kLTX2j6C01/oekvNP2Fpr/Q9Bea/kLTX2j6
C01/oekvNP2Fpr/Q9Bea/kLTX2j6C01/oekvNP2Fpr/Q9BeN9R39haa/0PQX
jfUd/UVjfUd/0VjfcQHS9Bea/qKxvqO/aKzv2ODS9Bea/qKxvqO/aKzv6C80
/YWmv9D0F431Hf1FY33HBo6mv9D0F431Hf1FY31HMKDpLzT9RWN9R3/RWN/x
ANRY37FBoekvNP1FY33HwK2xvmMArukvNP1FY31Hf9FY33GDr+kvNP1FY31H
f9FY3zFAaqzvGPBq+gtNf9FY3/EB2VjfccOq6S80/UVjfccGbGN9x4Cksb6j
t9D0FpreorG+4wOgsb6jt9D0FpreorG+Y4Oxsb5jAKDpLTS9RWN9x19oY33H
Ba6xvqO30PQWmt6isb5jA62xvqO30PQWmt6isb7j/6CxvqO30PQWmt5C01s0
1nf0Fo31HdvNmt5C01s01nf0Fo31Hb2FprfQ9BaN9R0PVI31Hb1FY31Hb6Hp
LTS9xcja9Baa3kLTW2h6C01voektNL2FprfQ9Baa3kLTW2h6C01voektNL2F
prfQ9Baa3kLTW2h6C01voektNL2FprfQ9Baa3kLTW2h6C01voektNL2FprfQ
9Baa3kLTW2h6C01voektNL2FprfQ9BWavkLTV2j6Ck1foekrNH2Fpq9orO/4
BWis7/hA0vQVmr6isb5jA6WxvmODs7G+o6/Q9BWavqKxvuMH3Fjf0Vdo+gpN
X9FY37FB0FjfsYGn6Ss0fYWmr2is7/gXaKzv6Cs0fYWmr2is73gAbqzv6Cs0
fYWmr2is7xiwNtZ39BWN9R19haav0PQVjfUdfUVjfUdfoekrNH1FY31HX9FY
39FXaPoKTV+h6Ssa6zv6isb6jr5C01do+orG+o6+orG+o6/Q9BWavqKxvqOv
aKzv6Csa6zsemDV9haavaKzv6Csa6zsGspq+QtNXNNZ39BWN9R03oJq+QtNX
NNZ39BWN9R19RWN9x8BR01do+orG+o6+orG+4wZL01do+orG+o6+orG+Y8O+
sb5joKbpKzR9RWN9xwWrsb7jBkLTV2j6isb6jg2vxvqODWlNX6HpKxrr+//5
/47+H//n/wcSCeHC
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1: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
zGImM5jONKYyhclMYiITGM84xjKG0YxiJCMYzjCGMoTBDGIgA+hPP/rSh970
oic96E43utKFznSiIx1oTzva0obWtKIlLWhOM5rShMY0oiENqE896lKH2tSi
JjWoTjWqUoXKVKIiFShPOcpShtKUoiQlKE4xilKEwhSiIAXITz7ykofc5CIn
OchONrKShcxkIiMZSE860pKG1KQiJSlITjKSkoTEJCIhCYhPPOISh9jEIiYx
iE40ohKFyEQiIhEITzjCEobQhCIkIQhOMIIShMAEIiAB+BdR//zlD7/5xU9+
8J1vfOULn/nERz7wnne85Q2vecVLXvCcZzzlCY95xEMecJ973OUOt7nFTW5w
nWtc5QqXucRFLnCec5zlDKc5xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCd
bWxlC5vZxEY2sJ51rGUNq1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1p
TGUKk5nERCYwnnGMZQyjGcVIRjCcYQxlCIMZxEAG0J9+9KUPvelFT3rQnW50
pQud6URHOtCedrSlDa1pRUta0JxmNKUJjWlEQxpQn3rUpQ61qUVNalCdalSl
CpWpREUqUJ5ylKUMpSlFSUpQnGIUpQiFKURBCpCffOQlD7nJRU5ykJ1sZCUL
mclERjKQnnSkJQ2pSUVKUpCcZCQlCYlJREISEJ94xCUOsYlFTGIQnWhEJQqR
iUREIhCecIQlDKEJRUhCEJxgBCUIgQlEQALwL4L++csffvOLn/zgO9/4yhc+
84mPfOA973jLG17zipe84DnPeMoTHvOIhzzgPve4yx1uc4ub3OA617jKFS5z
iYtc4DznOMsZTnOKk5zgOMc4yhEOc4iDHGA/+9jLHnazi53sYDvb2MoWNrOJ
jWxgPetYyxpWs4qVrGA5y1jKEhaziIUsYD7zmMscZjOLmcxgOtOYyhQmM4mJ
TGA84xjLGEYzipGMYDjDGMoQBjOIgQygP/3oSx9604ue9KA73ehKFzrTiY50
oD3taEsbWtOKlrSgOc1oShMa04iGNKA+9ahLHWpTi5rUoDrVqEoVKlOJilSg
POUoSxlKU4qSlKA4xShKEQpTiIIUID/5yEsecpOLnOQgO9nIShYyk4mMZCA9
6UhLGlKTipSkIDnJSEoSEpOIhCQgPvGISxxiE4uYxCA60YhKFCITiYhEIDzh
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
vvKFz3ziIx94zzve8obXvOIlL3jOM57yhMc84iEPuM897nKH29ziJje4zjWu
coXLXOIiFzjPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7GInO9jONray
hc1sYiMbWM861rKG1axiJStYzjKWsoTFLGIhC5jPPOYyh9nMYiYzmM40pjKF
yUxiIhMYzzjGMobRjGIkIxjOMIYyhMEMYiAD6E8/+tKH3vSiJz3oTje60oXO
dKIjHWhPO9rShta0oiUtaE4zmtKExjSiIQ2oTz3qUofa1KImNahONapShcpU
oiIVKE85ylKG0pSiJCUoTjGKUoTCFKIgBchPPvKSh9zkIic5yE42spKFzGQi
IxlITzrSkobUpCIlKUhOMpKShMQkIiEJiE884hKH2MQiJjGITjSiEoXIRCIi
EQhPOMIShtCEIiQhCE4wghKEwAQiIAH4F1L//OUPv/nFT37wnW985Quf+cRH
PvCed7zlDa95xUte8JxnPOUJj3nEQx5wn3vc5Q63ucVNbnCda1zlCpe5xEUu
cJ5znOUMpznFSU5wnGMc5QiHOcRBDrCffexlD7vZxU52sJ1tbGULm9nERjaw
nnWsZQ2rWcVKVrCcZSxlCYtZxEIWMJ95zGUOs5nFTGYwnWlMZQqTmcREJjCe
cYxlDKMZxUhGMJxhDGUIgxnEQAbQn370pQ+96UVPetCdbnSlC53pREc60J52
tKUNrWlFS1rQnGY0pQmNaURDGlCfetSlDrWpRU1qUJ1qVKUKlalERSpQnnKU
pQylKUVJSlCcYhSlCIUpREEKkJ985CUPuclFTnKQnWxkJQuZyURGMpCedKQl
DalJRUpSkJxkJCUJiUlEQhIQn3jEJQ6xiUVMYhCdaEQlCpGJREQiEJ5whCUM
oQlFSEIQnGAEJQiBCURAAvAvhP75yx9+84uf/OA73/jKFz7ziY984D3veMsb
XvOKl7zgOc94yhMe84iHPOA+97jLHW5zi5vc4DrXuMoVLnOJi1zgPOc4yxlO
c4qTnOA4xzjKEQ5ziIMcYD/72MsedrOLnexgO9vYyhY2s4mNbGA961jLGlaz
ipWsYDnLWMoSFrOIhSxgPvOYyxxmM4uZzGA605jKFCYziYlMYDzjGMsYRjOK
kYxgOMMYyhAGM4iBDKA//ehLH3rTi570oDvd6EoXOtOJjnSgPe1oSxta04qW
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
               
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl3EMUIMuyBdDXtm3btm3btm3btm3btm3b9u2/e/3BXjXLWVVlRkacBA3b
VWwb4H//+9+waP/7379nQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRMXS
/4tODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxkISvZ
yE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylShKtWo
Tg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr3ehO
D3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclMYSrTmM4M
ZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52
sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq17jODW5y
i9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf+M4PfvKL
3/zhP/7y7+UPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxi
EZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKR
mzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGb
OtSlHvVpQEMa0ZgmNKUZzWlBS1rRmjb8+3i3oz0d6EgnOtOFrnSjOz3oSS96
04e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYz
h7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOH
vexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e7
3OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37zh//4
y78ffwACEojABCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu
8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5
yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWo
TwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove9KEv/ejP
AAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7zmM8C
FrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vYzwEO
cojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jPAx7y
iMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84T/+8m/TH4CA
BCIwQQhKMIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQk
IjFJSEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSi
MEUoSjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIx
TWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3fehLP/ozgIEMYjBD
GMowhjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtY
yjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjK
MY5zgpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoz
nvOCl7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+I+//DvwByAggQhMEIIS
jOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM
5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0
oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4Yxg
JKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAl
q1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSn
OM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94
zRve8o73fOAjn/jMF77yje/84Ce/+M0f/uMv/4p9AQhIIAIThKAEIzghCEko
QhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpS
k4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpT
hrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOG
trSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShGM4ax
jGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWs
Yz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zj
PBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9
H/jIJz7zha984zs/+MkvfvOH//jLv0J/AAISiMAEISjBCE4IQhKK0IQhLOEI
TwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhP
BjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8F
KlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc6
0onOdKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYy
iclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJ
zWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconL
XOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zhP/7y75IvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURk
ohCVaEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGay
kJVsZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQ
lWpUpwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCV
bnSnBz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVp
TGcGM5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1s
Zwc72cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1zn
Bje5xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcH
P/nFb/7wH3/5d8EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spOD
nOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa
1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570
ojd96Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxi
NnOYyzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3
e9jLPvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3
uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4
j7/8a+4JQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf
/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7z
WcBCFrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5
wEEOcZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nA
Qx7xmCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/8x1/+NfYF
ICCBCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQg
IYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAg
hShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGN
aEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMY
zBCGMozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jM
EpayjOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwR
jnKM45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe
8oznvOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+4y//mnoDEJBABCYI
QQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJ
SUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQQhSmCEUp
RnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBGNKYJTWlG
c1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYPfelHfwYwkEEMZghDGcZw
RjCSUYxmDGMZx3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJW
sJJVrGYNa1nHejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5w
klOc5gxnOcd5LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCS
V7zmDW95x3s+8JFPfOYLX/nGd37wk1/85g//8Zd/Df0BCEggAhOEoAQjOCEI
SShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJ
KlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkp
SlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta
04a2tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYz
hrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOG
taxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4az
nOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre8
4z0f+MgnPvOFr3zjOz/4yS9+84f/+Mu/YZ4ABCQQgQlCUIIRnBCEJBShCUNY
whGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rS
kZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpR
ngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWtaUNb2tGe
DnSkE53pQle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zk
Epe5wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQT
n/nCV77xnR/85Be/+cN//OXfIF8AAhKIwAQhKMEITghCEorQhCEs4QhPBCIS
ichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJ
zGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUoTwUqUonK
VKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt7WhPBzrSic50
oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxh
KtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr
29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4
zg9+8ovf/OE//vJviDcAAQlEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVo
RCcGMYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxk
Jwc5yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSn
BjWpRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcH
PelFb/rQl370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYz
mcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW72sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nF
be5wl3vc5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv
/vAff/k3wB+AgAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQi
NnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3
echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1
qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33o
Sz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jL
POazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+
9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u
84CHPOIxT3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/wL
7whAQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7x
SUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kp
QEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlA
QxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR/9GcBA
BjGYIQxlGMMZwUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIW
sZglLGUZy1nBSlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5x
mCMc5RjHOcFJTnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGY
JzzlGc95wUte8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zHX/4F9wQgIIEI
TBCCEozghCAkoQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAhiUhM
EpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s5CAnuchNHvKSj/wUoCCFKEwR
ilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerUoCa1qE0d6lKP+jSgIY1oTBOa
0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSgJ73oTR/60o/+DGAggxjMEIYy
jOGMYCSjGM0YxjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM
5axgJatYzRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozj
nOAkpzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe8
4CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNH/7jL/9CuwIQkEAEJghBCUZw
QhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5xiUd8EpCQRCQmCUlJRnJS
kJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJR34KUJBCFKYIRSlGcUpQ
klKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalHfRrQkEY0pglNaUZzWtCS
VrSmDW1pR3s60JFOdKYLXelGd3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJR
jGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWs
Zg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zm
DGc5x3kucJFLXOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYN
b3nHez7wkU985gtf+cZ3fvCTX/zmD//xl3+BfQEISCACE4SgBCM4IQhJKEIT
hrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+CUhIIhKThKQkIzkpSEkqUpOG
tKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8FKEghClOEohSjOCUoSSlKU4ay
lKM8FahIJSpThapUozo1qEktalOHutSjPg1oSCMa04SmNKM5LWhJK1rThra0
oz0d6EgnOtOFrnSjOz3oSS9604e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxj
PBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9
G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwX
uMglLnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4
yCc+84WvfOM7P/jJL37zh//4y7+wzgAEJBCBCUJQghGcEIQkFKEJQ1jCEZ4I
RCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxk
JBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlCUYpRnBKUpBSlKUNZylGeClSk
EpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNaUJTmtGcFrSkFa1pQ1va0Z4OdKQT
nelCV7rRnR70pBe96UNf+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKT
mcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZ
wla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nC
Va5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJX
vvGdH/zkF7/5w3/85V9QbwACEojABCEowQhOCEISitCEISzhCE8EIhKJyEQh
KtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr
2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrV
qE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93o
Tg960ove9KEv/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jO
DGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4O
drKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1u
covb3OEu97jPAx7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37y
i9/84T/+8i+kOwABCURgghCUYAQnBCEJRWjCEJZwhCcCEYlEZKIQlWhEJwYx
iUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQlnSkJwMZyURmspCVbGQnBznJ
RW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCWcpSnAhWpRGWqUJVqVKcGNalF
bepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2tKcDHelEZ7rQlW50pwc96UVv
+tCXfvRnAAMZxGCGMDTa/2fD/x9LXKSa
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.003666666666666667], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{6024, 6025}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"neutral\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx03QOQnd22NeDYtm3byYpt2+7Ydse2bdvq2HanO213x/jCu9caq95R/5n1
n7pVt557z/lO0r33+y7MOWb27oOb94oRLVq0OWmjRdP/+//3r+NVShzst6y+
+n/d3nHcQzuqL4rq8T////6Oi/V5lyjH+iH/8+8f7tjrm9uY31VH/89/fpz6
8adR+cWdC6r/9dyZP/xfBE50jH/+FMeZ5l3Z1bbWNMf475vu+NOT2V7XV7k7
xn//LMe3MzRJWTJstnVFYfx55jre1D11vc2V5jvGn2+B41F7PSclXrTIMf68
i9W4ST8LRMysKZznv6btLwxZ4hh/n6WOk2cu9fVz+mWO8fejf1dNu7jA1eWO
8fdd4Tik588C3QasdIy//yrHT/W/PfVqx/j7r7Z//gbCF/df7vrg4hrH+Pms
dbzn0bZfsfquc4yf13rHK77MXFkx+QbH+PltUOcuPsqZIWMz4Snp+hcfdnaj
Y/x8NzkuszFP72fFNzvGz5cuWGz1scFxtti/X0th/Pzp7FfiR0/oSeP3sdVx
mpbjG+88ROP3s02Vr5KrxMVPbYQTBUWsqzaDxu+PjjGmc+jbttsd4/dJf4//
qMyYwjsc4/dLR7r+6Slj7LQ/zw7C+P3T/oWPPT74gsbnYZfjV5dyZa2/j8bn
Y7fjB81WDgicTOPzsVudujC6avc7nR3j599N+Kp/3LNTWu5xjM8TfWbk2LiZ
8u91jM8XfShueMtTf2h83vY53r6m49bmT2h8/vY7XlvwwfvInTQ+jwccL7qg
Ks8ZT+PzSLs3OTI3V9ODjvH5pMf75nD9CA85xueVHjJ8ee4O/9H4/B52fCzG
9PK/etP4PB9Wazf2yhvzcXfhg3cr+tR9TOPzfcR+PnsK71mu/8JHVLvOi4o8
r9RbGN8HelunA4UDdtD4ftDmj5/sqGN8X+g177OMnzzuqP289hHG94lefvpl
9vsBNL5Pxxwvmrr4VoYmNL5fx1S6LGdK79rdT3hO/XqD+56h8f2jXV+WNCdz
HneM7yM9+e3Z8zEX0vh+0uN2DO/R7AeN7+sJxyMHFUqwqTuN7+8J+/1xc/zS
y6/S2FQDHeP7NEh4cNnAwxH3Tqi7jeNszV11iDC+/ycd94+2sU2Fsift52mo
MJ4PdK/brf/O2kLjeUF3XZp0x/OEp9S+Iut2JPkmjecJ3aHDrQY5R9F4vtCt
c039NMTnlP38DnM8N0mxPd/3DRfG8+i046aR5ddcrE/j+UQ3OPlJJTpB43lE
1568L6hd1jOO8Xyiq9XtuWDXHBrPK7qS+YDSeH6dtd+3EcJl3jx/U70zjefb
WdU/6tp+n24jhYtvW+j6xNN4/p21369RwoUG1MnnXeKcYzwf6byloz0suIHG
85LO8fe06098XtV70O7w7bSjhfE8pTPdHOr6HxrPV1p/W1K9pfG8veA4RTv/
ft1r03j+0olzrE92+DCN5zEdT//1M1x0jOczHeN44s4N3Gk8r+k/E27EWvOe
xvP7kuMftfQH5JJ93tD5D0YdO3p/jDCe9/TnJOWal7pG4/l/yT4Pxgp/11+f
tJdVvIXTT62bPk4Y7wt6xKNnD/s0pPH+oD+V0p+gy/Z5M95xyMB052aUnyCM
9ws9eM2CUSdO0njfXLbPq4nCEX9C670Np/H+8XDcv3vtzDGze6ibjQ5cHPhe
Gu8jOvjG1g/5W9N4P3nY5+Ek4V4F/11tOo/G+8tD7Spc/UrrHZMd4/k4xfHV
meF+mw5I+y3qsGr0ZQ/7/JsqjPch3fXLqf4bv3qoY99O9Fw+m8bzThrvzytq
W+8pQbN7THOM56G0V9tUVa4XoPG+vaKWvqjfd2KV6Y7xPKKn1U4dNjT9DGHX
Dy95RJcr9nkkjfc1/cr1dk6xgsb7+4oadvKdW+8v0q1m5j9d/g6N9zv9NMx9
Xtd/V+zzzd1x9zx7I9s/lMZ64Krjpk38Os8qddU+v2YKY71A3z+mH7A01gt0
g3TrYj/fSGP9QN+a8P3Vr6c01hNXVbOVIwY32Std27fF/hzxrznGeoO+Wuvw
5HpVaKw/6Kp7E7UYMpzGeoS+mKRfnlW7aaxPrtnn1yzhisOv/3fBi8b65Zqq
Fkd9rOEufUb/ulJcd4z1DV2m0qTNCevSWO/Qxza/GV5i4nX7/JTG+oYuHrts
nXZHaaxvaNfLMcOUYBrrnRuOC+nXTyYa650bqvio+MPLdZ0tvKdEQ4/7zWis
h2jXD9f1RKKxPqK3u96uGc/TWC/dsM976exdu1Ws/vGGyh709EuhinMc4/kv
jfXVTZWs9cZR2dPMFd507YLrE0Bj/XXTPv+lM+XP4HqE3VTRbvT9kfojjffD
PGGs32jzOlhMYz13U30oXXJcgnvSac0v+KZ9f8wXxvqOXt66aMdYv24qnx1/
fv3dSeP9sUAY68FbjlOcm1e0YDEa60N6UdaQGM170Vgv0olm1HwxZu0t9TD1
rYmfp0pjPUnPDdm8Z9PDW/b9JI315i11yX3pv+COC4XjNtIrkNv2fSWN9elt
dehrx6lvyy5yjPeZtPuRdq6/8m318OiyqX3jL3aM9x19M2zMFb9R0lj/3rbv
P2n99Eo1mMb6mJ48LsX3Cttvq0s5OsfsFCCN9fNt+75cIvzHe9Cdbq9prK9d
P4/2NWq+bEbj/So9rsbdDbOT3HGM9Tf9Y1feoYdq3FGHluZzb3aJxvtYGuv1
O2rXncQ37hZa6hjva+mR5gNzR22K8TlO7bU03tfSWO/Tn4f4pP1zgMb6/45a
WeFVnctxlwkPeV4pPKc/jf0AbT7+6e46xv6Adtv4dcnQRjT2C7T+tqyedteu
L+iFwy7MrjCSxnpDGvsNunefg+UunaKx/6D97yZwvZJp7D/uOe5qFqg09iP3
1My9W28f95P2Xn71aMk2NPYrdIf/ss5sP5/G/oV+3WlCu6keNPYz9+z6abnj
SX6zEhRtKt36yqtCu7/R2P/ct+snelSGgQ32XKCxPqIHNW8+P2fBFcJP8+gf
8H27fpLG/uq+6j237P0Nq6WbzVvy9GvX+3Y9JY392H3V+UqmJOnirBQ2r9uV
9+16iG71M3qTpcOlsZ+jG7as7/rK0tjf0bdP72zUP9oDu76hG5UIXpTIVxr7
QVrvLpaUfmDXO6sc1+p/79HMxtLYP9LXpnZxrdgf2PWMNPaXdLWgcze9N9HY
bz5QlbceSR79PI31ifSl+noB+kCVfrOy+fj8q4WxX6UrHRrhWnE9tOsPaexn
6TMpH1droWjsXx+qwikmLPu6UrrsmMKpx42gsb99aNcz0sffznG9AWnsf+kS
5gdEY/9Lv2q+pY5rjekY+99HKnf9bs8Gx1ojnMb8wh7Z9ZQ09suPVGbzhZVu
5fq0ZFGP7HqLTnW2YOue72isr9Y6TvQp2SrvhtLYj9PLQ/fNONKOxv78kV2P
ST/J2D6q5gga+/NHKlaBby/bnqWxfpNO3jhe21cLH6nf3TzTPc27zjHWa9LY
79NNp5z0cNtDY///SH1Zc7ldoxU01nfSC4/2dO3AH6mIxzvW3oyx3jHWd9I4
P6D17nKpN43zBDpRWo+/uf97pALiz/OsNkQa5w2P7fqRflttSKbzXtIN9PYu
JY3zCHrO+MxPGhahcT7x2K4XNwjfOmD+Qurp2FadyjSgsV6UxvnGY3X3SIWN
h0/TWD/SV0OzviuQZ6NjrB+l4/qMde3gaJyPPFbnssfOtmOZdK0U+ZLGnfTY
rjelcZ5Cm+XwahrnJY/VsXZhXbNG3+QY61Xpq6Nm+Lm2RI5xnkJHNxuyx2rf
kodb1gySxnnLY7vepbe53s4p30pX9fQ50TKExvkLPTmx3hE8cYzzFvqift1l
pnH+8sSurzcL/x4a/ilJORrnLU/U/Wj3k9/MJV0RCyDHOH+hx72oc6P0wCd2
/U7fXq9KzOhAY/0ujfObJ+p6uaPNqy2lsV6XPh3vW9Hbs2ic9zxRHs9yDf97
S9q1uHf9BZ7Y9T19YciqZef+SeN86Ild328RLjOwecwP55+oM4kSHB9TRhrn
SU/sfoA+sXvCs9IDpUdsijZw+ksa509P7H5AWu/W03x6oo7UfP/l0zYa+wVp
nE/Rn2J2qro30VPHOK+ii5dJuLdy3qfqgE+31IffSOP8ijZPp2o0zrPog2v7
TOzZkcb5Fh15L3Xw91FP7X5GGudftPm6L6FxHvZU7dE/vuRbHWM/JK1XM1n2
0zg/e6p2pKvTukBdGvslesvxM6OCJ0nv6ZEt19EbT+1+it7QtNCq7SekcT5H
h6x4sKCW71O7n6JXR2w81S1CGud3dB78Ax3jPO+Z3R9tE+6lj4/S0Djvo7cX
en3nXzEa53+0/u0va0DjPJB2LVb1I0otn538VZacNPZn0jg/fKYW55rxw7Md
jf2bdFez4adx3vhMzb/8Ld2axdJm+7iOxnnkM7s/o2d37Fe+9U1pr7z6CU3j
vJLOZJZDz+z+Sxrnmc+U/tul/CvdYf76g3HDn9n92nbHU5Y3HveolDTOP2m9
e3Z9wu3+jZ5QzGPtAjca+zl6zL2S5+pvpbG/o0f03ekZ9zWN/R49JFb639eS
7nCM/R49YPO8TNNq09jvSeP8ln714cfUItlonOfSaXPuCveoQON8l25l/vVc
9a30t5KaKI3z3+d2f0n3fDWk0+9jNPaXdNcR/hPPhNHYX+503NEswGnsN+k2
+29dLNlWevmsmJdCBtM4f35u95fST88cyTdhLo3z6eeqRd2K7z4spLEfpZsE
HPh34DqN/SfdYEq2bG6/aexHdwm7Xv76hFfVybSsar6S0jgff273p3SN07G7
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
IY36Ji97/k13u3+jdAIvGufhdJeM+gRHeu+mh6uzffay5+UnHXfSj6uU0qiX
8rbn6XSHU8OCcheVDnk8McbxxN72vJ1uG3v/qBn1aZyv061bBMbx70XjPJ1u
uSXLqmpTpVG/ReeNZVYQjlGv5W3P4+nm79vk3byexvm8dG+zIPVWTSsvOfX3
lDTqv7zteT7deN6dOp2e0jjfpxu+jvnqXBSN835p8/XoRKOejPZfW8b1hKJR
X0bnQIGM0qeLGRKccoz7A7ruyFE/xuSmcX8gjXo1b1X76qHZL6vSuF+gayYP
TVemo3S3f0sn5Dvgbe8f6OpdcuxZPloa9W7e9n6CrnqgQ/nPS2ncV9BVfi2/
3ewgjfsKupL5AdC4v5DeVNz8DRyjvo727vG+SRM/b1VhVdywJIHSqL/ztvch
dLnAquMGRjstnHnlhjN+v73tfYg06vXeqTL6eDIjjfsSaXO8mvadKjX12NoC
ZWnch9AlHkYUmNOcxv2HNOoD6bU//5sfvwSNesF3qljmPOeCB9K4L6GLuHVp
UHsOjfsTutCZ1Z7bt0u/dr1t1zekUX9Ip+3SWi/h7P0KXSDuE7eYl2ncn9D5
WiX83c1TGvWMdOslse5cnfrO3q/QebbVdC05adyXnBFG/eM7lUtv31JIr7hq
Fsz2foXOoU7tn1iYxn2LNOop36lsCz5UeltX+tnXrhvCTr6z9y3SqL+kUd5F
ox6TbmYKkN6pLJ7571foSeP+hs6Uv0enNZNp3NdIo77znUo/en3k97U07nPo
tNefT2x9ksZ9Dp06ZdIkJx7TuN+Rrnuj9MDmMX2U3g2kjKRx/yONelPalEMm
81HJD00tMizeWWHUn9Kz9Os4M436Ux97vyS9M7k+MPdRSf+cvfgoJ437JmnU
q9LXCyytOracj0rc4EvjoorGfRSdcE3hdwva07iPouMH9x4cMZLG/RQdt/Tm
f/WXSKPe1cfeX9Gxp79etGc/jfssOubjFNni3aJxnyUdWKPf1yu1fFT0rA0P
9/ancX9F/xvgXvX6Xxr3V+eEUY/ro8yPOwON+y36V7wfXaeVpnHfJR1Ll3e1
8FH/tS7+0acpjfsw+vv2/lPVABr3WfTXT9uSb5xF435LGvXDPupzVa8tv7dK
69vk1l197H0X/XFhmhIdLtK4/5JG/bGPev+2yZUzr2nch9GRrrdJuq807sfO
Ow7Xx8HJaNyP0aE3fg17XlC6hjmg8rH3Z3RwqtIxS9WhcZ8mjXppHxXYfdCy
pd1p3LfR/of1BQWN+zfa96/PsSZrpLvvvn4rdByNemt6qsf6iSVn+9j7O2nU
W/uodw0z1Dx4nMb9nfQWXY6ywkd5rW3xLNEjadRr+9j7PtozZH5Pt3Aa93n0
qzI3vtyOc0H48uf6wTe2+tj7PvrFjH8z8uWgcf9HuzaDqWdVpnH/Rz/JNmxH
YFsa93/0o0F6w0njPpB+cD7g+tZFNO7/6HsJsrSOvo/GfSB9p22boC43aNwH
0rd2Lh510ZfG/SCtfzqZ/9C4L7zo2Cx/0tG4/6OvLK6U901JGveB9GXvkafK
NaFxP0hfLHSozqr+NO4L6fPjQl5+dadxXyiNen4fdfZW9r4tt9C4T6RPp+nw
4+h5GveJ9Mme+oRR2rweD9PoB/Cx94308aP30w35LP0vty5I97H3j5eE0S9A
Z1GPYm+/Q6N/wEcdjRZ3z4Mk0rg+p7H98bH3ldKdhk4aXDbQRx1uXLV84QI0
7jPpg+vH3p5Xi8b9Jr0/7KjrT0jjvpPeWy4itO4EGvef9O6ZucftWkXj/pPe
+axzgjjHaNyH0ttz6AUnjftNeuuQxwWuhkqj38LH3n9KT5jbKtfUTzT6L+j1
23SBq49q2sXda3GMy8Lov/C196XS587HXJgqsa9qoq8zk9G4L6Ub669rZmn0
c/ja+1Jpcx2VgUa/h69q1NLzxMaCNO5X6Ya/vrve8DTuW+kGW1PV/lObxv2r
9M+oI9935fVV9esVX7i/JY37V7reh0YvOnSncf8qjf4UOn28Ofs/lvJVdVf1
z5JwiDT6VXzt/a10OVOA5avqVJnV++xEGve30uhn8VW1A7cd7DdPum2Fsq4l
sK+935VG/wo9Wh/vdvRVtcyBP437XrpmSa8qt3bSuM+la7z5b+bo49Loj/G1
97vSutojXX9fVX1qmod5rtC4/5VGPw190v18qe6jfVW1fCXTvngojf4a+vlG
fcFOo9/G194v01UfNnF9g2jcN9Nq1IBdpcKlTbvLEhr9O772fpquknnOe/8f
0qn0dn2Tr72/lkZ/j6+qfG1H2WVxPIRLhqVzfQJ97X23NPqBaNPtcYZGf5Cv
MtcPqaSHmQsSX3tfLo3+IV9VIcW7mx+z07hPp8uf+ZV0S1FplNP72vt2afQb
+apyXdO1bVqZxn08XdZsoKT15eIhX197X0+XOdgs5GBbGvf1dOlWg4p17k3j
vp4u9XvumMQjaNzf0yW37bp8fqo0+qV87f0+XaL+tXgDFtG476f1bijjBulH
fRou/i+KRv+Vr60HoIut/rP6zl4a9QF0UZXBd+xpGvUCdJGgMvnz35B+PyVn
rRq/afR7+dn6Aumk5gDMTxVe0GLoq6c06g+k0S9GFzENQjT6x+hG93b3yJbL
TxUqNeTMLF8a9QzS6C+jB+rHT3E/VdBzfvSy72nUP0ijH42e/7f1/WNV/FSB
aXvqBf2WRn+an62XuOLY9cNzPfFp1DPQ5vgxnfS+tEWm/WlAo9+NvqvLqdr5
2foHOu/of9m/5JZGf5yfrY+g82TJ1H9bSRr1EXRu84KhUS8hHeZa7SzuTaOf
jjbVH8P9VK4B+kaDRj0FnTPlsOpHOkqj387P1lvQOc4unNu1P416Czp7t31P
ko6hUS9BZ4t3K8Mldxr1E9L5zQLOT2U9FODaMdOor6D17irzFhr1FnTmP5k/
3ztIo/6CzrS9QsUJ52nUY9AZG7SZXvCONPoP/Wy9Bp3h0/C7b17SqLeQrrui
W4JBC/1U+jWLU84NpFFvQaczFw406i3otMG3t4VEuyqM/kc/W49Bp1kYFL4q
CY36DDq1Ps7IRKNeg071NuuEb/mlTTnIOj9bv0GnnF7J9YalUc9BpyjQLlGr
WtLox/Sz9R7Ss24mHRF9D43+TD+V/PHIlrFa0Kj3oJONWbr+WFca9R90UvOB
k97pE5SvwUk/W/8hjf5PP5XE9W1PMYFGfQideGDICI85NOpFpPXl7fKrfipR
qtiuJQyN+hFp9JPSgaY93U8lNBtsaZS7+9l6EmlcZ9LoP/VTCbpXafTwKI36
Ezp+/A4rJl2mUY9Cxzs82qvwAxr1KXTcNstze3lK53K9HYeG+9l6FTrO38MD
54fSqFehY++4f6Lidxr1J3SshmF/wmJdc4x6FDqmftykoFGfQsdYm3NhvWzS
6L/1s/UqdPRqVV/8KEyjfoWOFtIxy+6KNOpZ6H8Lx/ZuU49G/Yp0jc4Zjpz7
4af+ll55ME4bGvUs9J+3R10rKBr1LfTv6Q+r9BomjX5iP1v/Qutql1RTaNS/
0P89jvfw6gIa9TDS3Ud/7BU7jr/6MUb/H2jUw9Dfs+obWxr1L/S3G513PT4p
jf5nf1sfIz1Nty+n9FdfB45/P+WaNPql/W39DP0l1eqyxZ7QqJ+hP587Pvnd
Oxr1NPSn7voEUnrLHl0g4W/rZ+iP8aOSVvlFo57muuMPhxO0jYxHo56GNuUI
aaTR7+1v623oqL81QhrkolF/Q0fu6FrsV3Hpy1f0Bsrf1ufQEQ0njtmraNTj
0OGf9QUDjfobafSj+6uwtSfjxe9Aoz5H2sezUflCFWn0r9P/vuSKGlnXX4VW
e9r0dF8a9T10SMj71X1GSaP/3d/W/9C6GiPNDGnTntjK39YH0WY7sIRGfRAd
6FVr6MhNNOqFpNF/768CZnQ/k+sAjXog2r/g5OjPzkpXyasriv1tfRDt92Rd
vem3aNQL0a7N0JISL6TR/+9v64lon2zPX/v606gvovXueMlHGvVFtPegJP2r
/qNRb3TDsVfqgkffJ6JRb0Sb68IMNOqPpM311xB/5dmjZ/XG+WjUI0kjz4DW
1YXrJ9LIN/BXbxJMnfunNI16Jvr1Eb2hpVHfRL9qezZDx2Y06p3ol/9edE/Y
hUb9E/1i5+e9ZwfQqIeSXj+s7aiguf7qeaNkn/uNo1H/JI28Btq0Y632V8++
FKqYfrY08hroN9vj+IzdQSO/gf6pl0NH/W29Ff1UfzxX0Ki/kkaeg796Ur33
3dHbaNRjSad/ebxe4sv+6nHotJR5j9Coz6IfLd7k2tHQqNeiH5Y9v839Ho36
LWnkR/irB96vwku9oVHfRd93/1oyIJhGvRd9r5AueJHW3amt7/vb+i1pxEv4
q7tPi1yrHvOmY9R30Xf0cV0yGvVe9G19vZOFRv2XdFuzIfVXt27NWN+0EI16
MPrm4C0B/8rTqA+TRn6Gv7qRRt9Y0agfo69feDOicysa9WP0tZ7fzyfuQaOe
jL6aUC/YadST0VeOFms0YBKN+jLao12jFRnnS4/OUaFvWDCN/A9/W49GX47W
3+vOGhr1afSlXfrCRnpVRb3i8Lf1a9LIF/FXFxtvG5j/BI36NvrC10snXl2h
Ue9Gn1//9s+sR9InW+oKywBb30afq/FfrbLeNOrb6DNhqV07Whr1brR+26z4
j0a92y3Hp8o1yVIrrjTyUgJs/Rttll+paNTD0Sdmzj64LYf084GXZt5MGmDr
46SRxxKgjhfe8a15MRr1c/SxZx5VYlSR/qrLuTMH2Po6aeS7BKij471nHmkg
nWrzwA/tC9DIf6FLmoL5AFuvJ418mAB1JMevB13b0ajPk25hChgClL4tS9aH
Rv0efWhIqS6XRkgjfybA1vdJD9PHic0D1MG0zXYNmkaj/o8213GLpZFnQ5ty
ui4Btl5QGnk2AWp/L71Akz6SecuYuwMCbL2gNPJtaJ12knpcgNqXaNfkCfto
1BdKIw8nQO09dvVmwTPSujq086wAW49I72nvk9TzhjTycwJsvSK9O/qfNnOf
SSfVcTnLA2y9Ir1rd/rN5f2kkccTYOsZ6Z1NyriW0DTqG2n97Vj9h0Z9423H
2zcMHlMnIY36Rml92vtpS4Ay//h0NOof6a3hu+PtzEOjHpLesvR601alaNRD
0q6/7OpY1WnUQ9KbfHSBjjTyh+hG655Fq3SIRh5RgK2HpDfOypi/Ryfpgcf3
nXA/H2DrJWl9epvCjUb9pDTyjgLU+uctz3iMoVFfSa+bMDT60Jk06iul59/X
gSkByhyXLKdRf0mvubN3ycMtNOoxpZG3FKBWD735etIhacRhBNj6TXpVuoDs
RS7QqOekV17SL1Qa9Z30it6Zj85/RaO+k16euMLPikE06j3pZcdbVw//TKO+
k17aYfjctdHvCKO9I8DWc9JLYix+Ui+p9N1/xZ51D6CRJxVg6z2lzfXnxwC1
WJdnZaJRD0ovanq7++4C0sinCrD1oPTC74F725SjUR9KL9ioD/ilE5R4V/nb
Xxr5UYGO85uAARp5UoG23pSeXytrxZMtaNSfSpt29vSBal5Exem9utGoT6Xn
Lmt7N9VgaeRXBdr6VXpOhZEpr02gUc9Kz/Zd4voN06hnpWfp5cRqGvWt9Myi
d8Mf76BR70q7vwguOfUYjfpXesbEWBOKedCoh6Wn58p+7d0DGvWw9LS7lRMt
eivdV6f/5Qm09bLSyPcKVFOHtW9ZJYxGPS09xTwgaNTXSs/Sy59SgWry5WUB
62PfFUZ+WKCtv5XeeSjFjd7VAtUkfb2QkkZ9Lj0xyf0Rv7JJI48s0Nbv0hNO
hJ7fW4RGPS89vmOc2O0r0ajnlb5xSzf8BqpxMXM2il9fGnlngbb+lx6zV604
3YZGPbC0aX/tEKhGN+vo1acXjXphepQ5oKVRP0yP3LRi4I0pNOqJ6RG1j54Y
uZBGPTE9PPLBn1zradQT08OWh9d6todGfbE08tYC1dCK+htHo/6YHuKX60WJ
6zTqj6Vj/VoVUKMfjfy2QDV4TrUsfk+kc6XSFYWBtn5ZGvlugUpXSyzxoVHf
TA98Oe5g1Sga9c7SJl1pOo28uEA1YNKqb+9/0aiPvufYLffxKpvi06iXps12
OS2N+mm6n/mFSZvysiWBtp5aGvly9DTdbrYxUPXNkCDtgRLSyJsLtPXYdB+P
PF06VqVRn0337ltjV8LGNOqzpfXq/Pi+QNUradf3ZztII48u0NZz0z1PTijb
vx+N+m5ar5bSj5a+vGRr9r+nA239tzTy6wJV91gnb96aQaM+nDbX70tp1H/T
Xc2BF436b7rLfwk3vzhAox6c7rw5X4j7ORr14HSnOrWKlb5Nox6c7hjVbUzA
C2mfvWNf1LkRaOvFpZHXRyP+NVDp28ZlATTqy+n2ldbFq/GJRr25NPL9AlU7
/1NNP/2jUX9+33Hbuc9Wb0lMox6dbmMKiGjUp0tnNQt0GnmCdJVvf7/kiqKR
LxioWr9KnD9afhr17nSryQWGHipDo/6dbpmnzpnONWnUw0t3Svpiz6BfgaqF
KWiXRr5hkK2fl56Y70Dn0/GCVPMRU+pd6EKjvp5ulnHDkgEDadTb001dT8eM
46WRnxhk6/Gl1+s/Tpog1aTfi+x3Z9Oo15dG/iJ9rr3uQKSRvxikGuvj7pU0
6v3pRqeSHs2/XdpTt0cUC7L9ANLIawxSDTsX+vnqiPRP3e1YOcj2D0gj3zFI
NYhdr/rsSzT6C+j65kCCRr8BXa/FtCdBb2j0H9B1f27MsDKERj8CXWfLue61
vtHoT5BObwooglTtuq/2fon5wDH6F+hauvwuOY1+BmnkVwapmrq8PSuNfge6
RuUi02MUptH/QFcPqO/6kdLoh6CrmQILGv0RdNUSMzoka02jX4JWrzdvu9SD
Rv8EXWXKhfBBQ2n0U9CVXX/aLJNp9FfQlR58G39/Po3+Crqi3n6spdFvQVfI
VCxRod3S5XXcXNsg249Bl7/asKXnCRr9GbTrZbh+7lVp5IsG2f4NukzymQHl
H9Po16BLn95aKNSbRv+GdFsTUBWk9Gnh6gga/Rx0SbOBotGv8VAY+adBqsSB
H7G+x5U25QXDg2z/Bm2uX1PT6N+gi/0qvqJVTmnkqQbZ/g666NbGXrGKS69K
UPlskyk08laDbD8IXaSeXuHR6A+hC3+YNbBHQ2mdBrdmQZDtH5FGnmuQ0tV1
KdrT6C+RNvFQa4NUwSoefzz60Og/oQuYC24a/Sh0/vk/F2SbTqM/hTbl6oul
kTcbZPtXaPP12ij9tZUOXKGRT0ub5fyJINv/QueZ2rR3kf00+mHo3PkGHvQ6
Q6M/hs71cM63+Tdp9MvQOUftrFLpOY3+GTpHZt1xQKN/hs5uGhZo9MfQ2dx+
p6n/l0Z/zCPHyebMP/Q7No3+GHrRW7MAdIx+GTqpLi9LKY38Xrrk7CHVL1+h
kecbZPttaHOckoFGvw2d5OV11SG7dAszzodGPnCQ7b+hFxR45l8iH41+HDqx
KcCi0Z9Dz3/8oaBfaRr9OnTC3P8enqkkjTicINvPQ88bk3jEkho0+nvoBPcy
putXXxp5xkG230d66VPdoB+k5mYtcL5qM2nkHwfZ/iDpIxG64CFI6duedG1p
9A/Rc27UjvWhM41+ImnkJ9O6u65Y7GAVL0Or3Td70egvome7nl6bBtDoL6Lj
egz9MGo4jf4iaeQtB6tZqUzFnmP0H9Fx+i4sl2cqjf4jeuY5c+HpGP1H0h90
OXQKGnnOwSp20n1Tni+UTqrjE7IG2/4k2l2X+6yg0a9Em+3kehr9S/SM+C8G
dNxGo5+JjtkpIFmpvTT6m6SRNx2sph/+dNz1inaMfic6Rqzori0YjX4nelob
cwLtGP1P0kWa5Q9NXDhY6erwpdelkVdNNzYL7mDbH0VP/VtQlwg4Rv+TNPKt
g1W05hVCqz2l0R9FT9lRV5cECw+c/rL5ljrBtn+K/vdDH+DR6KeiJzfs9fxW
MI3+KfrvpuFjN0fR6KeiJ32emnnMVxr9VPSf2os9mvym0U9FT0QBvGP0U9G/
I/fH/xefRr8UPUH/eJLR6JeiTflBWhr9UtLIE6fNdUbLYDVeL4+z0Oivon9W
DFrTKbc08siDbf8VPW7Rl8qlC9Hov6L/84vhl6ik9P4TusGORp55sO3Posdi
AewY/Vr0jzn6AUyjf4se41X4wbI6NPq3pO8+6Dh00uBg9b1YpWFujWn0d9Gj
Z9RPU6OVNPLTg23/F61vEzJ0pNEPRo8q2Kfzp+40+sPor5NGxrjTj0a/GD3y
yfSdW4bQ6B+TDgvWgc/B6kvupfXHjqbRX0aPcH07mk6i0V8mjXx4OkH0hJ7J
5warz/cOLs3nTqMfTRp58sFqeLYLZaLNp9GvRpv2kaXS5uO0ikYePV3XFGQE
2343aeTVB6th+jp0DY1+N/pjhpAcszbT6H+T7qvb5Y4Eq6GDTEW1Y/TH0R88
YrmVOUijX44eggtVx+ifo9/3zX4s8ByNfjp68PmibS5codE/R+vq6OW3afTP
0YPM8oBGPx0deVJ/IWj0x0kj3z9YDUzQLzijN43+OelZvXTHS7CK6DR63ucA
Gv1ztNsRd32j5xj9dHR4rOVPt36i0T9H92+7dfS4/2j0z9Fh+w5nbB7tiTDm
E9C7JlXpMe0ejXkEwbb/TvqGidOmMY8gWPX7d/FS/rg0+vXo0Ob6RI1G/x5t
yulT0ejPo0P0dU9GaX16nDqYxryCYNvPR/dp9KPJ7Bw0+vno4M1xvnTJT6O/
j+6NBgDH6PeTjq3Lh74Eq6A6OSslLUujH5Duta64T1BlGv2B0pi3EKwCo9SM
izWlc5nAvhDHmLdA1zANmCG2f1Aa8xhClK52XtmARn8hHbCi472BzaV76Pja
TCG2/5DuEdp/SK12NPoPaf9KY1Nl7kqjH5HuvnjW6S+9afQn0n7++g8gjXkS
9LQi2VrNzB9i+xnpbmW3R9s+gkZ/I+079+j28eNp9DvSXb0v120xTRrzKEJs
PyTtU1wX1NHoh6TN9nsxjf5I+p0uD14pbba3ZUJs/yRtjpc30OinpL0nx5s4
ZzuN/kppzM8IUZ2eptE/Isfov6S98uhPLI1+TFrv3pKdkfbo+uBi+po05m+E
2P5NaROX0IzGfI4Q9fZ+tcQhl6RN/GPnENv/KY15HSGqQ/amRy7doNEPSnuO
6Nxq1X0ay2O6/a0BugNGOKtrd/7NjcZ8jxDbT0q/yTh+Q21PGv2k0lVMIFqI
aocLaMfoN5XG/JAQ9frKqsCvIdKdvKPXmTszxPan0m3T7Jxz/z2NflX6VT9d
0SqN+SQhtp+V1i/zCX+kJ5oXaIjtb30qjPkmIeplMt0ASqP/lW7d8136Qglp
9MPSL/TrKgWN/ljalDemk9bpu5m3hNj+Wfq5Pu7LSqOflm55NN3euXlo9NPS
z2Lnbdy9MI3+WrpFu9Kfypei0W9LP92vD2ilMb+FPpdfrwBCbH8u3RwbWsfo
z6WftNBPNGnMewmx/bnSntV1Q2GI0tW5q5vQ6N+lH/+ckGdIaxr9vHRTNEg4
Rn8v/WjLmkFZe9Lo95XG/Bn6Z4fSD3/eClGuh1uK7/1p9APTD+uePPlgKI1+
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
qvTcaZ1P371NI2+VTmDitGi0t0nP1vHhzyMUymto5LPS8UzDlbTZHr2NsPmt
9OxHq+oWCKSR50rHzbUzInoEjXxXepa+ffhEI++VjmMOGGnkvdIzs5gTY8fI
f6VjD3s3oWtcGnmwtPv1yGzlktDIh6VNe0pqGvmw9IwBJqDFMfJi6ZiX07ne
GDTyY6V3ZVq54YwfXdY0qEao6SnzHlmZX/pGaV3BHWHzZ6Vb63jJbxEqRh+d
iEQjn5aedtYU2DhGXi2tv52Zq9DIr6Wnduuqj9AcI8+WjnZiUOC9BjTybekp
+IA5Rt4tba7D2tHIv6UnH1rzuEVXGhdQ9N8Yu0cW7EMjH5ee1Ppk+piDaOTl
0ua0cwSN/Fx64p8n3Y6Op5GnS/9u6ht77jQa+brSQY1rxm30J0JN2P5+T7c5
NPJ3aRPvuJhGHi89voE58XeMfF7afD030Mjrpcd9ylfh8nbpkZ6HfD/GjHQc
2xQAR9o8X1p/mFbto5HvS49FoIRj5P3SPyJauFYE0iu+6AFkkTYPmB5Ttfud
LJdp5AFLm/ietJHq+7Ihg77dkD6euHMD9yyRNj+YHo0CB8eIU6PR/kgjX5ge
ZY6HaOQN07q7rqUfjbxheiT+A46RPyxdc+3t3AVyR6ovs3UAJo18YnqEPj34
RiOvWPppHn1gHak+F/VfeOyPdA8zIIL+bBLT6Wn3Ri+6oCJt3vE7x8Onfywx
LxaNvGNaFyt3T0gj/5gepuOMUtDIQ6ZN+UR6GvnI9FAdV5uVRj4y/SGX3gDT
yEumh4wxNz6OkY9Mv7/b6tCQUjTykunBWXvqkn/HyE+mdVpu1urSKdr59+te
O9LmK9OD0PDvGPnKdGR6vQKkka9MD9Tl/q1p5C3TZnnZiUbeMj0AF9KOkb8s
vTVQP1AiVXifWw8Lu0mb8astIm1eM+127sVw1zvcMfKbabNbGkMjz5nu3910
4DpGvjMdekIHCtLIe6b7xU8Wq+cCGnnPtGmnX04j/5k21x/raOQ708ExdQUs
jbxnunebesuv7JY25fft6Wbzljz92pXW1aJr+0TavGg6aG+bcmsPSQ/Z3ne2
GhRp86Rpfdgz9CSNfGk6sJneMNHIm6Z77pimb/AcI3+aDvix+NaPOzTyqGnE
6dFoj6X9TXkejbxqGr9+GvnVtF9tveKmkWdNd1v76neRSOloJlAq0uZdS5vr
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
J4ebSf5jdlSfLyMD6I4/vTmcRtYtzsPWn8M6jr4QW48OS50tcAm2Ph1uqg+A
sfXpsNvU8gN7rMbWq8O6HXodtn4dnnNfFjBg69nhJvJ6eSu2vh1O7e59MN1O
bL07fMNbnqBj699hubv6sA9bDy+qvU/XyjYwtcOjsS6AxtbLw6n0AA+2fh6W
Zc/FT2Lr6eGg/HJFg62vhxs1nj4s8QVsvT2cUj/gsfX3sOVKseWusOURsPX5
olqPD2R0eHjpQCe2fh9OoeO12MZHsNTHgsKw9ftwwJBDpaM/xdbzw54rTibs
+QJb3w/rNuVwbL0/fOWzPADE1v/D/vL4OgJbDxA3rPXYK30kth4gTjbgVc5J
X7H1ALFc7X34ga0PiP1OfznbOtrTv7Y+IG4Q8Tv4XExsvcCoHhqW9dah7A6P
pOnj9C4RB1tPEF+umrji8vjY+oJ4Vm85wIGtN4jry/GgZNh6g1Edv9eMbR3y
OTz0rzMFth4h1nXxbtj6hHimrLNKh61XiOvJuGEmbP1CLHWuoKzYeob4YsC/
odFzYusZ4hkHJBiBrW+I6+qBfGy9Q6zjGIWx9Q+x3t7+g61/iKd36B6evgS2
HiKuow9gsPUQsXxbfSyHrY+Iz4eNatumIrZeIp6WQBY8YOsn4trFZsYqWR1b
TxFLHGR5LWz9xKie/00OiDs8zk1auDZJPWx9RTxVXjc2xNZXxLV0YTS23iLW
9dfNsPUVsa7/aRHVeSWvXtLxp7+IpzSTOwRsPUZcc+zpoNntsfUZcTz9C8fW
a8Rnbtwo1asbtn4jnizbf3ti6zniGjoAiq3viPXr1wdbzxHLdpQMvtj6jnjS
6m+ek4di6z3i6s7frk8jsPUfcRxd8IitB4lPZZcbamx9SDyxrpw4xdaLxP/6
Zuy1Yhq2fmRU70keWtHTw+Gh43ezorrGkrLpv1R1/OlNYn08GYCtP4knSM5q
NrYeJa4m64TnY+tTYl1/shBbrzKqb+dfExlc2+Fxol+N5vmWYutZ4vHB8gIW
W68SVz3Z5FeMNdj6ldjlXSvnHR22niXWbbubsPUt8Tg5TrINW+8SV5H/eSe2
/iWWbSIZ92DrX+Jjh8e8mrwfWw8Tj30lgQlsfUxcSQ/MRnUX/YFw/Oll4hjl
ZYMVtn4mPtp5sXups9h6mniM3yqXlRew9TWjWvOPzRweenw/FFt/E1teG1su
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
X7GOC3zDehzgB9bb/1/4///v//sf/vf/ASvpdn8=
         
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1: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
h9nMYiYzmM40pjKFyUxiIhMYzzjGMobRjGIkIxjOMIYyhMEMYiAD6E8/+tKH
3vSiJz3oTje60oXOdKIjHWhPO9rShta0oiUtaE4zmtKExjSiIQ2oTz3qUofa
1KImNahONapShcpUoiIVKE85ylKG0pSiJCUoTjGKUoTCFKIgBchPPvKSh9zk
Iic5yE42spKFzGQiIxlITzrSkobUpCIlKUhOMpKShMQkIiEJiE884hKH2MQi
JjGITjSiEoXIRCIiEQhPOMIShtCEIiQhCE4wghKEwAQiIAH4F1H//OUPv/nF
T37wnW985Quf+cRHPvCed7zlDa95xUte8JxnPOUJj3nEQx5wn3vc5Q63ucVN
bnCda1zlCpe5xEUucJ5znOUMpznFSU5wnGMc5QiHOcRBDrCffexlD7vZxU52
sJ1tbGULm9nERjawnnWsZQ2rWcVKVrCcZSxlCYtZxEIWMJ95zGUOs5nFTGYw
nWlMZQqTmcREJjCecYxlDKMZxUhGMJxhDGUIgxnEQAbQn370pQ+96UVPetCd
bnSlC53pREc60J52tKUNrWlFS1rQnGY0pQmNaURDGlCfetSlDrWpRU1qUJ1q
VKUKlalERSpQnnKUpQylKUVJSlCcYhSlCIUpREEKkJ985CUPuclFTnKQnWxk
JQuZyURGMpCedKQlDalJRUpSkJxkJCUJiUlEQhIQn3jEJQ6xiUVMYhCdaEQl
CpGJREQiEJ5whCUMoQlFSEIQnGAEJQiBCURAAvAvgv75yx9+84uf/OA73/jK
Fz7ziY984D3veMsbXvOKl7zgOc94yhMe84iHPOA+97jLHW5zi5vc4DrXuMoV
LnOJi1zgPOc4yxlOc4qTnOA4xzjKEQ5ziIMcYD/72MsedrOLnexgO9vYyhY2
s4mNbGA961jLGlazipWsYDnLWMoSFrOIhSxgPvOYyxxmM4uZzGA605jKFCYz
iYlMYDzjGMsYRjOKkYxgOMMYyhAGM4iBDKA//ehLH3rTi570oDvd6EoXOtOJ
jnSgPe1oSxta04qWtKA5zWhKExrTiIY0oD71qEsdalOLmtSgOtWoShUqU4mK
VKA85ShLGUpTipKUoDjFKEoRClOIghQgP/nISx5yk4uc5CA72chKFjKTiYxk
ID3pSEsaUpOKlKQgOclIShISk4iEJCA+8YhLHGITi5jEIDrRiEoUIhOJiEQg
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
zje+8oXPfOIjH3jPO97yhte84iUveM4znvKExzziIQ+4zz3ucofb3OImN7jO
Na5yhctc4iIXOM85znKG05ziJCc4zjGOcoTDHOIgB9jPPvayh93sYic72M42
trKFzWxiIxtYzzrWsobVrGIlK1jOMpayhMUsYiELmM885jKH2cxiJjOYzjSm
MoXJTGIiExjPOMYyhtGMYiQjGM4whjKEwQxiIAPoTz/60ofe9KInPehON7rS
hc50oiMdaE872tKG1rSiJS1oTjOa0oTGNKIhDahPPepSh9rUoiY1qE41qlKF
ylSiIhUoTznKUobSlKIkJShOMYpShMIUoiAFyE8+8pKH3OQiJznITjaykoXM
ZCIjGUhPOtKShtSkIiUpSE4ykpKExCQiIQmITzziEofYxCImMYhONKIShchE
IiIRCE84whKG0IQiJCEITjCCEoTABCIgAfgXUv/85Q+/+cVPfvCdb3zlC5/5
xEc+8J53vOUNr3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1ucJ1rXOUKl7nE
RS5wnnOc5QynOcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnawnW1sZQub2cRG
NrCedaxlDatZxUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCdaUxlCpOZxEQm
MJ5xjGUMoxnFSEYwnGEMZQiDGcRABtCffvSlD73pRU960J1udKULnelERzrQ
nna0pQ2taUVLWtCcZjSlCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREYykJ50
pCUNqUlFSlKQnGQkJQmJSURCEhCfeMQlDrGJRUxiEJ1oRCUKkYlERCIQnnCE
JQyhCUVIQhCcYAQlCIEJREAC8C+E/vnLH37zi5/84Dvf+MoXPvOJj3zgPe94
yxte84qXvOA5z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUuc4mLXOA85zjL
GU5zipOc4DjHOMoRDnOIgxxgP/vYyx52s4ud7GA729jKFjaziY1sYD3rWMsa
VrOKlaxgOctYyhIWs4iFLGA+85jLHGYzi5nMYDrTmMoUJjOJiUxgPOMYyxhG
M4qRjGA4wxjKEAYziIEMoD/96EsfetOLnvSgO93oShc604mOdKA97WhLG1rT
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
kQqUpxxlKUNpSlGSEhSnGEUpQmEKUZAC5CcfeclDbnKRkxxkJxtZyUJmMpGR
DKQnHWlJQ2pSkZIUJCcZSUlCYhKRkATEJx5xiUNsYhGTGEQnGlGJQmQiEZEI
hCccYQlDaEIRkhAEJxhBCUJgAhGQAPwLpH/+8off/OInP/jON77yhc984iMf
eM873vKG17ziJS94zjOe8oTHPOIhD7jPPe5yh9vc4iY3uM41rnKFy1ziIhc4
zznOcobTnOIkJzjOMY5yhMMc4iAH2M8+9rKH3exiJzvYzja2soXNbGIjG1jP
OtayhtWsYiUrWM4ylrKExSxiIQuYzzzmMofZzGImM5jONKYyhclMYiITGM84
xjKG0YxiJCMYzjCGMoTBDGIgA+hPP/rSh970oic96E43utKFznSiIx1oz3/D
o21pQ2ta0ZIWNKcZTWlCYxrRkAbUpx51qUNtalGTGlSnGlWpQmUqUZEKlKcc
ZSlDaUpRkhIUpxhFKUJhClGQAuQnH3nJQ25ykZMcZCcbWclCZjKRkQykJx1p
SUNqUpGSFCQnGUlJQmISkZAExCcecYlDbGIRkxhEJxpRiUJkIhGRCIQnHGEJ
Q2hCEZIQBCcYQQlCYAIRkAD8C6h//vKH3/ziJz/4zje+8oXPfOIjH3jPO97y
hte84iUveM4znvKExzziIQ+4zz3ucofb3OImN7jONa5yhctc4iIXOM85znKG
05ziJCc4zjGOcoTDHOIgB9jPPvayh93sYic72M42trKFzWxiIxtYzzrWsobV
rGIlK1jOMpayhMUsYiELmM885jKH2cxiJjOYzjSmMoXJTGIiExjPOMYyhtGM
YiQjGM4whjKEwQxiIAPoTz/60ofe9KInPehON7rShc50oiMdaE872tKG1rSi
JS1oTjOa0oTGNKIhDahPPepSh9rUoiY1qE41qlKFylSiIhUoTznKUobSlKIk
JShOMYpShMIUoiAFyE8+8pKH3OQiJznITjaykoXMZCIjGUhPOtKShtSkIiUp
SE4ykpKExCQiIQmITzziEofYxCImMYhONKIShchEIiIRCE84whKG0IQiJCEI
TjCCEoTABCJgwP8fi/7n8z/85Q+/+cVPfvCdb3zlC5/5xEc+8J53vOUNr3nF
S17wnGc85QmPecRDHnCfe9zlDre5xU1ucJ1rXOUKl7nERS5wnnOc5QynOcVJ
TnCcYxzlCIc5xEEOsJ997GUPu9nFTnawnW1sZQub2cRGNrCedaxlDatZxUpW
sJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCdaUxlCpOZxEQmMJ5xjGUMoxnFSEYw
nGEMZQiDGcRABtCffvSlD73pRU960J1udKULnelERzrQnna0pQ2taUVLWtCc
ZjSlCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCecpSlDKUpRUlKUJxi
FKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREYykJ50pCUNqUlFSlKQnGQk
JQmJSURCEhCfeMQlDrGJRUxiBPi/ie7/Znr/m+r8b67vv8mu/2Z7/pvu+O/5
/n9PeP97xvffU57/zvn/O+n976zvv9OeAP8LEDKlsQ==
               
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl3EMUIMuyBdDXtm3btm3btm3btm3btm3b9u2/e/3BXjXLWVVlRkacBA3b
VWwb4H//+9+waP/7379nQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRMXS
/4tODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxkISvZ
yE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylShKtWo
Tg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr3ehO
D3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclMYSrTmM4M
ZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52
sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq17jODW5y
i9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf+M4PfvKL
3/zhP/7y7+UPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxi
EZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKR
mzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGb
OtSlHvVpQEMa0ZgmNKUZzWlBS1rRmjb8+3i3oz0d6EgnOtOFrnSjOz3oSS96
04e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYz
h7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOH
vexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e7
3OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37zh//4
y78ffwACEojABCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu
8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5
yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWo
TwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove9KEv/ejP
AAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7zmM8C
FrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vYzwEO
cojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jPAx7y
iMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84T/+8m/TH4CA
BCIwQQhKMIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQk
IjFJSEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSi
MEUoSjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIx
TWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3fehLP/ozgIEMYjBD
GMowhjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtY
yjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjK
MY5zgpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoz
nvOCl7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+I+//DvwByAggQhMEIIS
jOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM
5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0
oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4Yxg
JKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAl
q1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSn
OM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94
zRve8o73fOAjn/jMF77yje/84Ce/+M0f/uMv/4p9AQhIIAIThKAEIzghCEko
QhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpS
k4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpT
hrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOG
trSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShGM4ax
jGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWs
Yz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zj
PBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9
H/jIJz7zha984zs/+MkvfvOH//jLv0J/AAISiMAEISjBCE4IQhKK0IQhLOEI
TwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhP
BjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8F
KlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc6
0onOdKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYy
iclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJ
zWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconL
XOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zhP/7y75IvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURk
ohCVaEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGay
kJVsZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQ
lWpUpwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCV
bnSnBz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVp
TGcGM5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1s
Zwc72cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1zn
Bje5xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcH
P/nFb/7wH3/5d8EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spOD
nOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa
1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570
ojd96Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxi
NnOYyzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3
e9jLPvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3
uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4
j7/8a+4JQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf
/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7z
WcBCFrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5
wEEOcZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nA
Qx7xmCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/8x1/+NfYF
ICCBCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQg
IYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAg
hShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGN
aEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMY
zBCGMozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jM
EpayjOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwR
jnKM45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe
8oznvOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+4y//mnoDEJBABCYI
QQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJ
SUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQQhSmCEUp
RnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBGNKYJTWlG
c1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYPfelHfwYwkEEMZghDGcZw
RjCSUYxmDGMZx3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJW
sJJVrGYNa1nHejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5w
klOc5gxnOcd5LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCS
V7zmDW95x3s+8JFPfOYLX/nGd37wk1/85g//8Zd/Df0BCEggAhOEoAQjOCEI
SShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJ
KlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkp
SlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta
04a2tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYz
hrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOG
taxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4az
nOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre8
4z0f+MgnPvOFr3zjOz/4yS9+84f/+Mu/YZ4ABCQQgQlCUIIRnBCEJBShCUNY
whGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rS
kZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpR
ngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWtaUNb2tGe
DnSkE53pQle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zk
Epe5wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQT
n/nCV77xnR/85Be/+cN//OXfIF8AAhKIwAQhKMEITghCEorQhCEs4QhPBCIS
ichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJ
zGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUoTwUqUonK
VKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt7WhPBzrSic50
oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxh
KtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr
29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4
zg9+8ovf/OE//vJviDcAAQlEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVo
RCcGMYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxk
Jwc5yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSn
BjWpRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcH
PelFb/rQl370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYz
mcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW72sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nF
be5wl3vc5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv
/vAff/k3wB+AgAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQi
NnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3
echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1
qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33o
Sz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jL
POazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+
9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u
84CHPOIxT3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/wL
7whAQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7x
SUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kp
QEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlA
QxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR/9GcBA
BjGYIQxlGMMZwUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIW
sZglLGUZy1nBSlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5x
mCMc5RjHOcFJTnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGY
JzzlGc95wUte8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zHX/4F9wQgIIEI
TBCCEozghCAkoQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAhiUhM
EpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s5CAnuchNHvKSj/wUoCCFKEwR
ilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerUoCa1qE0d6lKP+jSgIY1oTBOa
0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSgJ73oTR/60o/+DGAggxjMEIYy
jOGMYCSjGM0YxjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM
5axgJatYzRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozj
nOAkpzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe8
4CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNH/7jL/9CuwIQkEAEJghBCUZw
QhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5xiUd8EpCQRCQmCUlJRnJS
kJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJR34KUJBCFKYIRSlGcUpQ
klKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalHfRrQkEY0pglNaUZzWtCS
VrSmDW1pR3s60JFOdKYLXelGd3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJR
jGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWs
Zg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zm
DGc5x3kucJFLXOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYN
b3nHez7wkU985gtf+cZ3fvCTX/zmD//xl3+BfQEISCACE4SgBCM4IQhJKEIT
hrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+CUhIIhKThKQkIzkpSEkqUpOG
tKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8FKEghClOEohSjOCUoSSlKU4ay
lKM8FahIJSpThapUozo1qEktalOHutSjPg1oSCMa04SmNKM5LWhJK1rThra0
oz0d6EgnOtOFrnSjOz3oSS9604e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxj
PBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9
G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwX
uMglLnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4
yCc+84WvfOM7P/jJL37zh//4y7+wzgAEJBCBCUJQghGcEIQkFKEJQ1jCEZ4I
RCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxk
JBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlCUYpRnBKUpBSlKUNZylGeClSk
EpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNaUJTmtGcFrSkFa1pQ1va0Z4OdKQT
nelCV7rRnR70pBe96UNf+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKT
mcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZ
wla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nC
Va5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJX
vvGdH/zkF7/5w3/85V9QbwACEojABCEowQhOCEISitCEISzhCE8EIhKJyEQh
KtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr
2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrV
qE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93o
Tg960ove9KEv/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jO
DGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4O
drKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1u
covb3OEu97jPAx7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37y
i9/84T/+8i+kOwABCURgghCUYAQnBCEJRWjCEJZwhCcCEYlEZKIQlWhEJwYx
iUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQlnSkJwMZyURmspCVbGQnBznJ
RW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCWcpSnAhWpRGWqUJVqVKcGNalF
bepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2tKcDHelEZ7rQlW50pwc96UVv
+tCXfvRnAAMZxGCGMDTa/2fD/x9LXKSa
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.003666666666666667], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{6024, 6025}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"sad\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx03XOQXd22NvDY7Khj2+abGdu2bdu201HHtm3b7KDTdnds3T3nM7/1VJ1R
3/nn1q/uqZyke++1JsZ4RtYuA5t0jxEtWrTZaaJF0//3f/8zs8/YQumH5lf/
60mDtkSPV7OOgsv/f9zGcadm5aPXONr1f/7/fRw3uhYnevd+g/7nvz9UBS58
3aWZRzXH+P/XFR7kNzB67r8jHOPPH+N40d8X0UMXjneM/71Jjlslzjr5abIp
anm2xH/e524sjP+9qfbv08xxqT+7bxyP1Uq415rmk4+1nu4Yf78ZjkflnTN5
xaZZjvH3neN41vFzk0eFz3WMv/98xyurf5rcusRCx/j3LHL8JDRF5bUVF9t/
X1th/PuWqBfP6yyb4NtB+HWRQhcT+9P49y11HDCyVuUJM5c5xr93uf15dXb8
n9fn/dnednGMn183xwtqXEk1o34P4YhzXS5G5fdwjJ+fh/339RL+HHt85Y4P
VjjGz3el49/1Vly8P2yVY/y8VzuOtexg5Upp1zjGz3+Nent46djQ072FE726
ffHAWU/H+P2sdZwyW1DlrF3W2Z93X2H8/tarIlm7+tbL1194QYlovrVibnCM
3+8G+/MeIOxmfoEbVKWaq7K3qjdIGL//jY49xqbrfHL7Rvv7Guw49M+kZ7Nj
DhHG52OT43Trc2/8MJrG54Ved6mEb956mx3j80ObH0emLY7xedpiPy/S2+I3
7Lz6PY3Py1bH+Qq22/joEo3PzzbH+xr19k2wnMbnhy42bETWqj23O8bniT62
YmrnsWV3qMVHes0+fWqoMD5vO+zne5jjcn0bVYgcPFy43OlFGw8n3Gk/3yMc
+2Ut8y5T3pHC+PzS57zX+oa/2Wk/r6OE8fnepea+yLypkY90lRi7s+Y4sMt+
XkcL4/uwWxVfGLf5lBVjhK/lPNG53ZTd9vM81vGr6u/iHmkwThjfn9328zze
8bTfz04Fxp4gXKf21Y3Lmu1xjO/bHvt5pwscPtc/zdmJwvf6PfK9k2uv/bxP
Esb3lW6y6G3W2D9ofF/3qbASTRflOCX97HBE5/9u0/j+7rffp8nCbZ7/2Dh8
7X6lkl3vfXa5NL7vBxwPHB/zw7PSB+z3Y4rjpeHlqrYYLI3nAV00aYLknzbQ
eB7QnzYkc/1XDtrPtzSeFwdV8LV9Gd7Vmyp8tFiaxvmH0nheHLTfB+mRVzIO
rvmaxvPkkOOyLXIs7lqdxvPlkCq/KdvXmXmmCf8Kzndw4j4azx/67OiiD9ek
OewYzyN6YsIyH45PovF8ol3/2ORPQmk8r444jlm4etH3TY7Y77s0nl/01Qt1
Gyc6Q+N5dkQtGu9xP0us6cIzmzQZnCfnUfu8oANaJdh58i2N58cMYTwf6doB
rRZXW0DjeUknHNHxYKdvNJ6fxxzfjdvj4bhONJ6n9MJV/T6svHlMlSkxYUqT
0zSeVzOF8fylXR+m5EeLHXeM5zGdwvxCj6t5ST+2DfeQxvP6uH3+zXLsE9a9
5LQhNJ5/0k8bTGocGeuEKnnNK0nGBrOF8bynV/jMGBx/wAn7vKRnb6wfcjTv
HGE8/+nWQ+YvzvmcxvP+pOP05oF70j5vpfE+OKnejLt4sUHsuY7xPJZ+s3z1
w/Y7abwvTqqirUquCfah8bye53hG8Z3DJp2RNl9Ht1OO8X6hXV/+5B5jabxf
6Ox19xU9FEDj/XLavh/mO37p+mmnXSkd+PpI43v1abxvTtv3xQLHhcIW5T40
lMb7g55yNVb0ug0XCm8fcHpw2LHT9n0ijfcV3TvapcVxspxR5uuaapFjvE/o
VBW/tq44VRrvOzr/khsHs82m8X47Y9830pHZ7z+s+PGMOp//wLUEH2i8fxYL
43141vH+o08/tGl7VvVJ26f48w403kfSeH+eVSnj5tiw+Q6N99USYdfDP/nI
KzTet3RxL7+iSwueU+c+v0k0qByN95U03sf0lz6hjfd7nFO9/FaMrrCDxvtM
Gu/vc8rtQeOgeKmXOsb7TPr473eDb/+j8X4/73j0gq+Lg3vReL/T5bP8ORjz
EY33/QXH//SPKyON9/sFdeZswqZPp0r7uH56GZtcsO9LaawHLqgeu6+e3/hB
+mKfePH3zKCxXrhg32/LHCdbNbHAgI403l/0qRllV5W7S+P9tdxx92GfYsct
L73pcMK05U5fsO83OmmXvUMe75DG+oWe+jtJ3hvvLtj3oTTWMxfVyYY9365P
7eEY7yu6639Z6/WbRuP9RSfO/+pEmY/S3aq7uZYsNNZHF+37aoVw9QWpXK9g
Guuni+q4+/KcsTvReJ9J53ru7nplXFSd4zRc8vAujffdSmGsv+i4WTK4HjkX
VcLP8f6tLU/j/SiN9dpFddT3Ut8+O6VDemV2feRprOcuOb7penplyE9jfXfJ
vm+ld/3MuWpXRxrrPXpu1bw7yyyjsf6j+80rcPLaDRrrQbr+08I3m/2hsT68
7LhQJv2EobFepJP2LBU6qMdl1en+uBel0qxyjPWANNaX9Pv9ZX/8XX1ZJThb
qnrM6TTWD9JYj15WR3a9P3j/I431wWrHHVbuyuTZicb6gI43o9vcXvdorBfW
CD/8XiH+/Ps01r/0IdfbN32sK46xHqaXztG/oCvq0NBM30tUkMb6mB72uEbZ
0v2v2PUI3a7zi27Rd0ljPX3Frldo83VI4+kY6xf6QIV6FVdPl26eQb9xaazP
6VLd67du+ozG+vyKXa9IpzEL4quOsR6nv39tOnqgorE+p71Uy9l/hl5VbfPF
2d3jkzTW7/SpWW1Wzd1x1a6X1jqO7X4hTfHO0ljv02tcq8G0b2is/6/a9RS9
P/aYaf/uSY/Tj5fk1+x6a50w9g90+67dbpascU21/lT8w+0K0thfXLPrNTqm
b2T7lbtorN/ovfe23+rmvt4x1m/SFff09Lo85ppqeaZz6aIzaKzfpLG/oTOb
BcQ1FX1X+i1/PtFY720Qxn7nmnp2u0+8wCI01oPS0SoO+PHWn8b+6Jrafel6
xds9pX319sL9umPsn+hL94el/V2Pxn6K3uyudyTX7fpSGvur62rSyRzDD66j
sd6kmx+YvHvFU+lprt2S+zEa+y26+64JtbeF0dhv3bDrVzrfdm/f8Yk2CtfQ
y6/MN+z6lXa93Ny7VZXG/o3OXWF670tNaezX6HjTZ41uNOuGXQ/TT5atbFBn
jDT2dzfs+lg69O7c2d5naOz/bqidc79MK3JQ+lZq/QmhsT+8adfb0rs7Ltn5
M+dNpVcvqUOksX+8adfbmxw3Hb3/w+9MNNbfdJ5BifL4N6ex3qb/9Ojd4eY8
6Xk7lp+c1eamXY9LY396Uz1qf23Z/svS/V3fjtQLb9r1Or29Wfbby3/SWL9v
FsZ+l25QztNry+WbanzdSdHHFZXG/vamXX9LF566PrTYdxr731uOk93Z9ONC
gVuqSZU3pbv0orFep3OXLTeg1npp7J/pDyn1G4bGfpp+pB/fy2/Z9T79u/CK
LYWeSWP/TR/etidv31u37PpfGvvzW+phrs8vUybeIrzsnV6w3LL7BWns1287
Hl7mcO2ZxWns32+rbRkbJ/9VlcZ+gx6bcl9N3zHSLVxvz1S9aOzf6dK3Tvbe
7Hnb7leksZ+/rRolTDjh+kFpd/NAo7Hfv233O9I/2l6YfT72HZUzRq8je0No
7Ie2CmP/f0f9/H4lbGlmGvsj+v67rFnHtKCxX5J+ueXyqvrl7qgtQRNadppP
Y78kjfMG+nTktZ2vBtxRo9+8ml/jCo39FN3gSZkrBX5J47zijt1vbXOsv61u
xaQ9S+lfyB27H5PG+QY9fuLdm9+e0zjPuKO+X/xY5Ecv6Q43HnhNT3TX7u/o
uyf0X5DGfk8a5yO0Sq53dDTOQ+gsZsNP4/zjrtq0f8/aq8+ko29+Gb/ILhrn
I3ftflLaL/xN2nPed9WobfGf7E683TH2k9I4X6Ev6+1Minuq/toeCZZUk8b5
yj27H6WzLbtcadRY6S3jA8q+rEnjPOae3a9KT78WXLvXuHvq25wsIzscorGf
lcZ5zT11Z/L4vdVCpXskDW/99QCN85p7dr+7Q7hmq6je0wJpnOfcUxtHvfTP
l4XG/pgeMbB0uuQtpfPox3+6+3a/LI3zofuqbo9ljb7Nl44f9nn2hgY0zo/u
2/2ydFix76sKTb2vsrT/MOPNFWmcN9G3x/7aeeb4fbt/pb80bXD28i9pnE/R
e678PVkngsZ51QPH5jgp2QO7H97p+Fad3Z92FpPG+RZdeneM/ofzPbD7Y3p9
5Xj5FvWmsV+mh5Xp3mnEBmmcjz2w+2e6duFLHu2e09hP05lyZb5bJckux9hf
058yjIuZtzqN/TZ9I4VX2aTjpLc3jDX8ZzUa53MP7P5c2h0LZMc4r3ug1iUo
NejLIRr7eXpo9KXbXoXS2I/vdlzr+7vXF7NIz1oZ17WCpXEeSP/QxwFLH9j9
ujTO82i9W0q9j8b5Hf1yeqK17W88UBnf1UuxoyWN/b80zvvoOvmSbN3iR+O8
74H6GLiz9oIFNM4L6Ouv40wadlX69L2ke8N/0zjfe2jPF2jPx12PtflN47xh
j7DZfqWhcT74UA2+dSGiUnEa5xPSnmnMgsMxzg/pRGdSXr1Q96GqcTFj9tx9
pHG++NCeV9DpT4xpnXij9PhOqfUW2Z4/SOP8kY6M5e7agtE4b3yo3u97vvDT
c+kOevm5+qE9r5DG+eRDdXVrCdcTYK9jnGfQqz0X/z5fncZ5hfS9+uldS0Qa
55kP1cClUcW2jaNxvkFXm1O397zD0upjBr2kcIzzT3q/RybXK+mhPQ+Rxvno
Q5V28o71Q8JonIfscxw1MvazVllpnIdIZ8EDWl0e0CWRakXjvIRe1f18lZwL
aZyfSOO89pEa0C7D6ITXpM3yISON81w6+rTsiSuVeWTPY+iqZkMpjfPeR/a8
Zr/w4Dw5U81s8ki513kW+Ly4NM6HH9nzHGm/O7kyutZsKrJS8Qzn+tA475HG
+TLdxPwPPlKXSi9qsmUjjfMfaZxH05dTmRM2taJQ5Kw5L2icF9HH3LZ2PBH3
gDDOs+nip/KX3Hyaxvn2I3u+RGdZ8HhM/uw0zpvoufFjeKyrKL2lQ8H/wp7S
OC+nU5oDWxrn54/s+RT9dVqRg8nb0DhfojtF63hn2nAa50v07bHzg78tonHe
RJf8djpG3z3S07cXqT8qwWN7HkVvGBKW0fs6jfMlOkGUe9nG/jTOm+jhvWs2
u/JXGvcFj+3500HHbwOGu1aENM6jpL/ULdb8fA4a9w2PVZ1OW+bsKknj/Ik+
8urR1oyNaZxH0ZlbRr+4qB+N8yh69qPCr2POonH+RH+u3+HbiM00zpuke7wv
3j6OonE/8lh1uDnPLeyc9LNlJbvXb/3Ynk/RN6udLtj+JY3zKbr4hdBaD77Q
OK86JIz7lsdqnf5xJadxnkXHP15j4rEC0jXLlu6/bOhje95FDy02fHXeWjTO
v2jvvZuPenalcR4mjfsf+vibMsNfzX+sauV99CDpRGnc/zy252fSeaaUG59t
B437G3plLn2gSeM+57E6vCVaxJTVNM7f6IxZCsf9epTG+Zt0/Nv/zT/wmsb9
0GM1a037bL0f0jivoz+mnvff6wga53d0+yWnWjWMd9gxzuukRw9Uy799fayu
Jw4deim7NO6nnjgOS2H+BHu+J437qyeq2Ow0C0sqGud50m1OVNk6Pf8T5Rmr
xq4dbaRx3/XEnv/RcV2ry/QjaJwHSt9uV23vnepP1OBfm3wWLJbG/dkTe/5H
vx7x8Ff0vTTOA6X1pyVFpyeqxsd/qYffoHEeKI37N3rP1ppn24x5og72L1Qs
xF8a92u0uV5b9sSeJ9IZQtvVb/uPxnniEWHczz1RZruTjsb5ofT8qDp3Q/Y9
UR/enpxauRSN80Vp3PfRf5bUc71haNz/0QNKN3gzwp/G/R/t/aph4Nk/NO4D
nzpuqK8v3J+qtm1D1h1pTOO8Uxr3h/T5HE1dr5Cn6tqz1Kdy96dx3imN+8an
qkiT6k9Xz5Iu4nqbuv7J9jyUXnN36PvEW6RxX/nUnofSsWtvSjj5vPSG/i1i
v+zx1J6PSuN+86kadOWB6zdO4/xUOjk2hOql+le551ca56lHHVfXr5fkNM5X
6f2l2o2qX5DGeas07ltpc9y8hsb96lOV7tCcpRdqSX9s0zbj/qNP7fmtNO5j
n6ppBU/uK96Nxnku/W5H8M1tE2mc79Ktc6QOTLuGxnmudJd/7XJ+vf9UXVlf
Ldr8Y9K4D6YfbzYLRHseLI374KfKtRlPH+0RjfNiepXHxlJDI2mcF9OxzAP+
mGOcH9MD5v/t1zqHdNVanUpOi/XMnidL4z6aPqKPAzPRuJ9+prziFZx1R0nr
3YlbWRr31fTykuYBYc+jpXH/TLs+/M039Kdx3/xMVZ3WdrNqS+P8mt73b/a5
QyOkR0zo1T545jN7vk27jz3hlXMJjfNueurXoM8r99I4r6Zdm4tkiW7SOJ+m
W0VWzT8xQBr35c/seTV9qdcQ1yuHxvn1ceGgbH26F9pE4z79mSoYsKFz9/TS
La/37T/8DI379Gf2vFsa//VnakVHfWApjft3ukwyc6LnGPfv9I4jg6bXSfjc
Me7jn9vzdDrGqz8r6jaRTosLX8e4v39uz9/pfi30DlPa9XBc/kLRuO9/bs/j
6ecP29wrOpvGeTxduf7s0C1baJzPS//cOHxt5jY06gnoPjVGbu0x7Lnac+N4
LPcLNM7z6TTVgjLPfSWN+gP6VdiovXsXPLfn+9KoN6DrLhxz9POO52ry+ZTl
/36lcd5/Qhj1Cc9VhF6eu9G4D5A+U3zc2fKXaRzX0gVejL865Q2N+gZ67Thz
geUY9QwvVItjgwcHFJQ2xzFuNOoZXtj7Cfpi0Q3zWtaWnuD627QsQKP+gda3
Ietq0KiHoDsmmREZ2OmFve+g85sDGxr3HdKop3ihPPL8ufTfJBr3HXS0Lfm9
D6yhcd9B983c5kf24zTuN6TvH5r5pcBYGvUZL5RrsZNyxSMa9yHSlVriG1Up
9fHCCaJo3HdIo77jhdq1OLDO+PgnhQ/8mhP79P4X9n5EGvUgL1SqxCl7vM9B
435EOuuGeYlj3KLx+KBdi5VUtQNo1I+8UBNnVZnctRKN+xbpGKELMy76S6O+
xEuFxRzs+awtjfsZafPXcadRf+Klmk1cf7z2SBr3OdL+RZcWzFTcS53/effR
mSU07nfovCN+RxbeR+O+Rxr1KF5q2Yd88TffpHEfRP/rp1dQ0k3NgQON+hUv
e39E9w6ZqWZHO+UY90n0E319kF76yhiP/1yvdMeof/Gy9090RXPAJF0is75R
pFH/4mXvq+idbVIs9msivVWXA3h62fssadTP0KnMAp9G/YyXSvGs8p7mA2jc
d9ETGg+6fmM2jfstOuTOOr/yW2ncd9FNa939s+8Cjfsv2vVldM/2msZ9GJ1H
5Sux/BuN+7HTjs3xQwoa91/0n5L6xkl6hrmuolEv5GXvu+ieB49Oj6pN4/5L
+uuBdd2ThnupRwX0gkYa9Ude9v6LrrDD7cyTSTTuw+jt2Ss/r+lJ436Mdls/
8OOp49I9m5sdm2PUO9HmujkzjXomuta6zbpCwN6v0ePSrUtc6DGN+zY6ePmd
PBujaNy/SaNe6qXSu+uUCc4Im+OZZjTqqei8wdvmDxnw0t7X0Wfm5e04MyeN
+zs6V7xWY35WonE/Ry+eOmN5/3Y07ufoX3+PHPAZKY36rpf2/o7uMcb/dtOl
0q7NpuuB8tLe50mj/otOUGTX2mibX6oHX5IHX9snjfowesyT3Vtrnn1p7/vo
8oMrxSh3i8Z9nzTqyV6qrREDMu4NpHH/RyfrtbZMluhnHeM+kDb/3Aw07gel
w83y8KUK7PBzQJwy0qhfe2nvE6XN7vzDS9XwZZ45o5vSuE+URr3bS3WqeUvX
P5HGfaP0nYsHzmZI9Mox6uNeqZwPp1/oOIfG/SS9sJ6+AaBx/0j/vO73tfpF
6Qo9Dl3tmuuVvY+URj0evTfBkbu7KtGot6PNP78Njfo7ekFTc6KtulVN7nby
tTTq8+i/304ETlxIoz7vlb0vpe+fUwULfKdxf3pOeKDnKV2RpszxaAoa96v0
lqOeXd0K07hfpZMUvT1heh0a96306D0/Vn3vTuP+VRr1hPTbSme+JL7ySvnn
znO072Qa97V0g80tHnh7SqMekW4UePZPM28a9Yi0rjb0/P7K3vfSJzJND298
gsZ9Lp199eE4Vx/TuN+l56fSO2oa97vSqHd8rb4vSvbf7gTnhYvq60a31/b+
Vxr1ja+V/ulnykXjPlh646NLqfIVfK3uzuw/dHFladQ/0m640Lf3x9Koj6Sn
pNef4NeqdEzPBbHaS6Mekv50/nrBf2Nf2/toetOEWztHjqJx/0wnNgeWNO6j
6ZHDc/u030/j/pn2e9/814NbNO6j6Xr9pqWuFkTjfpp+NdRr5atoFxzj/ple
fHBQruVJpFHf+dreT9M19OsxA437avpXAb1joHF/TR/oU+r+xdI07qOlzfGc
B4160teqx4677cZWl34Sz1xo2ftsOn1Qt7ASTWncb9MPsv8eGdVJGvWqr+39
t7S5zblFo571tZreeWnsHQNo3JdLH21sKlxU+fX5lnYeR+M+nX7vWr2mn0Pj
fl0a9bJ0zq/3m3f5R6Me9o3amq71vicraNzPS3usNgfIqk2r9+UXbKVxX08n
85h5s+ZhGvf39NXHmVpGv0jjPp8ek/xYwKl7NO736SIN6w8Z9loa9bx0HPW4
+/viNOp76ZH+T/qXbvDG1gvQgfMC/hUMk0Y98BtbT0CvvqV/oDTqCWjX5iP9
xtgXHaO+QDp45rPhE3rRqDd+o2Lr68cU0q1wIGXrE6RRj0ybX+faN+rU1Mql
UmalUa8gjfrlN2rgxReX7xaiUc9A5/g3sPHMCtJlh7+a71oiOEa9M41ysTe2
HoJ+WSHu20p1aNRH0AvHrOv3s6U06qPf2PoJutqJkj8Pd6dRT0H/+HLH9cag
UV9B7y/eLVXuyTTqLaTTYcOnupkLXWnUa9NzuvhszRPH2zHqtelfcfz2Dszi
bes5pFGv7a3S7l9SZLUnjXoP+n5E3nNNd9Go75Duu9v/6LFyNOq/vdW0fBfr
Jj5Bo/5D+nVDs2BRZXu18rp2lUZ9CB219V2PSY9p1IvQW/xnfC7rS6N+RBr1
596qddZMUz5FSdf7HHS12kBvW29CJ+l4NOne3zTqTS45vuxZb22PBDTqT+jR
+njXnUY9Cl3IXNBIo/7d29anSJ9dGaJPBJV/c7caS4tLoz7e29az0CuX7nxc
rzKN+ha6wcNKneM0pFHvIm2qxTZ7q5hJX0SdbyeNenxvWx8jvc7XfCHUiXoD
x43uQ6M+hu4/J06C4qNo1MdIo76fxvGzt8p+Y+2KiOnSqP/3tvUx9IvYJXNu
Wyo9Md+7yO0fvW39jDT6Aeh3995/iUr01jH6AehOQz/+KZn7rZpf9c6hjhtp
1OPQVSd3rZR2P436HPr7OX1ASqMeh977e3Hbebek0X/w1tbr0F3K5Q2t/oJG
/Y70gzT6xoNG/wJdWW9X2tLoX3ir3EddGPEvkEY9EH33aMtYJz9JH+z0LVXC
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
qnQ3YoYXNPKR6Gkp6k394U0jH4k2q6dAGvlIdNnG/skOR9DIS6JTomHRMfKT
6KgFuuCNRp4SfbNgje61o78QbmQCb0NtvhK95U7yArni0chXoif0ffMxRlJp
zCcMtXlLdGu9vUlFI1+JLoEfsGPkLdE6TWVVdunZujx6eajNU6JDgxLqHZ8w
5iOG2nwlWh/mNSlKI2+JXpdj85rCZaQvFlid9M6mUJvHRI82DVo08pjopigA
cIx8JrpQ9DiuJZI05jnSP/7qF0CozXOi4+vrwabSmP8YavOeaP+Ka8dPbCNd
1AQy0pifGGrzoehzb3pVa9eZRj4UvXJciYRle9HIh6L1bjrVQOk+mz3XlLoV
avOj6Aanbq/8OFwa8xxDbb4Unae1eQMLbzLjkENt/pQ0xnvQL2vqAYahKub3
Lrn2TKWRT0V7e5gGGcfIp6JNOehiGvlT9FL9cVlJI49KGvMlQ9UA3Z61nkZe
FV3LrX2831ulTZzkh1CbX0VnP5jn/os9NPKs6D8NPy8/ephGvhWtq62WnKKR
dyWNeZWh6vD8udkHXqSRhyVdN2L97it/Q9X8ArpigkZeljTmX4Y5nnpuQ+GQ
hGGq1+1s+l/oGOVNdFVzXEEjX4vOiAMdYczXDLN5W/T37dNjn/eXNsv5tGE2
j4vWaRFrwmjkc9F7AzMsHfWBRl4XPWtaSOvm32nkddFdsh/JUuwfjXwuL8f/
oeHAMfK6aPfOdfeFJ6KR10Wb6/gUNPK56Ls67iYdjXwuesd/JqHIMfK66Cmv
9QJUGvNM6U9ddIAPjfmmYTbfi24/tvqi8oWlC+j4peJhNv+L1k9P91LSmG8a
ZvPBaLeTrzN+qSDdLe4WNaJSmM0PoyN1NW1VGnli9PWvQ3fvq0MjX4zepMu1
G9PIG6PH68dxK2nMXw2zeWO0a2/7r1pHGvljdLEhpmPHMfLH6ETJ9YkYjTwy
Oni/+YI5Rj4ZfalB7PQnxkjrt8Wq+jTmxYbZPDNa364tm0wjr4weOc9zx+BZ
NPLLpM141DZhqkn+XgMbLKSRb0ab4z0PacyvDbP5Z3RcFIw4Rv4Z7Rf39uWA
zdKJJ2y77dMzzOaj0We2ecy5uItGPhq9onqXxusO0shLo12LI32E5Bj5aXQ9
E9hFI0+Nzp3NJFg4Rr4arbsbkt+lkbcmjfm6Yeq1KWehsd2Urq7b3YeHqeN/
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
ADJs+lhxOy18w6afFR9vKAPX2PS14vI5TqRM2IBNfyteIuO6Mdj0uWJ93NmG
Tb8rHjnla7k6u7Dpe8Uv28gLEDb9r7a2e/152pJmFrfWjke/5TuITR8sPhpf
tOPsI9j0w+Kyx2cd/HUcm75YHDlfApyw6Y/FabQAC5s+WeyvA23Y9MtiPW69
gk3fLDb1ddjUkdi6sHt8Y6fWFrdDGo+NTZwiNnE92PTTYtmuGfwIm35anErS
EZ5i01eLfR9MXdr0JTb9tfjxxrhk+95g02eLW2hADjb9tni/jHd8xKbvFhfX
AQds+m/xQuvfbt8EbPpwcfJ9b+Kf/MSmHxfLNFOrRM//2fTj4ocddu47lBSb
flzcVH+B2PTjYkn7ikyNTV8uLnr65fM06bDpz8UhMn6eEZs+XayP81mw6dfF
Wh+V3dY1Jf7O0/K3bxffk/janNj072KN38iLTb8u3rmyseuyAtj06+LCvjFR
GRyx6du1tZcu0FvcgutkSzK2GDZ9vPhPZtnIw6afFw/QBShs+nrxbbleKI9N
fy+uP37j7Eou2PT54u0tJbABm35fXEALJWwdoIWWlr/9v3j2ezmgxKbvF/86
WDf3xzrY9P/ivrPXBXZpgE0fML7RKePTC42x6QfGdUsPr1+tOTZ9wXiLjDe1
wqY/GOuPUxts+oSx1re0x6ZfGH+XeMmO2PQN416u0riCTf8wltu/K97Y9A3j
WvoCik3/MJbt7c19sekjxpJ2lGcgNn3EeLqsWwzBpo8Yf5XX2WHY9BPj7i+q
vu/jj01fMY6VdriRtpb2yYBBlr99xthtcqqd9cZi02eM5e1w+3hs+o2xQ2Fp
oMSm79jWMV2+2qfxs74/fJbAc2z6kG2tcTujrO8TR+WBApu+ZNxN1tfnYNOX
jC/Kddo8bPqTsdanLsCmP9nWr52+hZWeYHHTuoZwbPqVcTaJj4vCpm8Zy78t
dCk2/cv4wyBJlLB1ikXfPA9Ns/ztZ8addcILm75mfC6dPFFi09+MK2sANDZ9
zni1jPttwabfGWfRhWds+p6xpPdH7Mam/xlbcpbbZrcfmz5o3PFNaDb/Q9j0
P+PTe36OeH4Umz5o7KIXitj0QeMV7U/VPHoGm35oLNs+5S5g0xeNx8r60GVs
+qPxWznOuYZNnzQ29YXY9EtjE7eOTRwndtZ4KGz6p/HS5HMTTj7Gpo/a1gWS
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
5Lr/J9bX/d/4///f//sP////AAUvpfg=
         "], {{{}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwl3EMQIEuzBtB/bNu2bdu2bdu2bdu2bdu27TvvTLzFiY7e1K6jq7IyvwQN
21VsG/B///tfAEZE+//nv/dABCYIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGx
9P+iE4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4GMZCIzWchK
NrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1
qlODmtSiNnWoSz3q04CGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje6
04Oe9KI3fehLP/ozgIEMYjBDGMowhjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYz
g5nMYjZzmMs85rOAhSxiMUtYyjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trOD
nexiN3vYyz72c4CDHOIwRzjKMY5zgpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob
3OI2d7jLPe7zgIc84jFPeMoznvOCl7ziNW94yzve84GPfOIzX/jKN77zg5/8
4jd/+I+//Pv4AxCQQAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCT
WMQmDnGJR3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc
5CYPeclHfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rU
pg51qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSm
D33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZzGYO
c5nHfBawkEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nGdnawk13sZg97
2cd+DnCQQxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucZ1bnCTW9zmDne5
x30e8JBHPOYJT3nGc17wkle85g1vecd7PvCRT3zmC1/5xnd+8JNf/OYP//GX
fz/+AAQkEIEJQlCCEZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1zi
EZ8EJCQRiUlCUpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKR
nwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGf
BjSkEY1pQlOa0ZwWtKQVrWnDvw1cO9rTgY50ojNd6Eo3utODnvSiN33oSz/6
M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOaz
gIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOA
gxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CH
POIxT3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/zb9Acg
IIEITBCCEozghCAkoQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s5CAnuchNHvKSj/wUoCCF
KEwRilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerUoCa1qE0d6lKP+jSgIY1o
TBOa0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSgJ73oTR/60o/+DGAggxjM
EIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwS
lrKM5axgJatYzRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGO
cozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57y
jOe84CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNH/7jL/8O/AEISCACE4Sg
BCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+CUhIIhKThKQk
IzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8FKEghClOEohSj
OCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOHutSjPg1oSCMa04SmNKM5
LWhJK1rThra0oz0d6EgnOtOFrnSjOz3oSS9604e+9KM/AxjIIAYzhKEMYzgj
GMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStY
ySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJ
KU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkveMkr
XvOGt7zjPR/4yCc+84WvfOM7P/jJL37zh//4y79iXwACEojABCEowQhOCEIS
itCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4KUpKK
1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglKUorS
lKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rSita0
oS3taE8HOtKJznShK93oTg960ove9KEv/ejPAAYyiMEMYSjDGM4IRjKK0Yxh
LOMYzwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt
61jPBjayic1sYSvb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucovb3OEu97jPAx7yiMc84SnPeM4LXvKK17zhLe94
zwc+8onPfOEr3/jOD37yi9/84T/+8q/QH4CABCIwQQhKMIITgpCEIjRhCEs4
whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrS
k4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShLOcpT
gYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rTgpa0ojVtaEs72tOB
jnSiM13oSje604Oe9KI3fehLP/ozgIEMYjBDGMowhjOCkYxiNGMYyzjGM4GJ
TGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtYyjKWs4KVrGI1a1jLOtazgY1s
YjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjKMY5zgpOc4jRnOMs5znOBi1zi
Mle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoznvOCl7ziNW94yzve84GPfOIz
X/jKN77zg5/84jd/+I+//LvkC0BAAhGYIAQlGMEJQUhCEZowhCUc4YlARCIR
mShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZ
LGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkq
VKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2tKUd7elARzrRmS50
pRvd6UFPetGbPvSlH/0ZwEAGMZghDGUYwxnBSEYxmjGMZRzjmcBEJjGZKUxl
GtOZwUxmMZs5zGUe81nAQhaxmCUsZRnLWcFKVrGaNaxlHevZwEY2sZktbGUb
29nBTnaxmz3sZR/7OcBBDnGYIxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrX
ucFNbnGbO9zlHvd5wEMe8ZgnPOUZz3nBS17xmje85R3v+cBHPvGZL3zlG9/5
wU9+8Zs//Mdf/l3wByAggQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3o
xCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezk
ICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSg
JrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b2tKO9nSgI53oTBe60o3u9KAn
vehNH/rSj/4MYCCDGMwQhjKM4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCaz
mM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vY
zR72so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWuco3r3OAmt7jN
He5yj/s84CGPeMwTnvKM57zgJa94zRve8o73fOAjn/jMF77yje/84Ce/+M0f
/uMv/5p7AhCQQAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQm
DnGJR3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYP
eclHfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51
qUd9GtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCTXvSmD33p
R38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZzGYOc5nH
fBawkEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nGdnawk13sZg972cd+
DnCQQxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucZ1bnCTW9zmDne5x30e
8JBHPOYJT3nGc17wkle85g1vecd7PvCRT3zmC1/5xnd+8JNf/OYP//GXf419
AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4J
SEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUo
SCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhI
IxrThKY0ozktaEkrWtOGtrSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMgg
BjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIW
s4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5z
hKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOE
pzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+MkvfvOH//jLv6beAAQkEIEJ
QlCCEZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1ziEZ8EJCQRiUlC
UpKRnBSkJBWpSUNa0pGeDGQkE5nJQlaykZ0c5CQXuclDXvKRnwIUpBCFKUJR
ilGcEpSkFKUpQ1nKUZ4KVKQSlalCVapRnRrUpBa1qUNd6lGfBjSkEY1pQlOa
0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSkF73pQ1/60Z8BDGQQgxnCUIYx
nBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGc
FaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5wlGOcZwT
nOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nCU57xnBe8
5BWvecNb3vGeD3zkE5/5wle+8Z0f/OQXv/nDf/zlX0N/AAISiMAEISjBCE4I
QhKK0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpS
korUpCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpS
itKUoSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK
1rShLe1oTwc60onOdKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorR
jGEs4xjPBCYyiclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWs
YS3rWM8GNrKJzWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zh
LOc4zwUuconLXOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt
73jPBz7yic984Svf+M4PfvKL3/zhP/7yb5gnAAEJRGCCEJRgBCcEIQlFaMIQ
lnCEJwIRiURkohCVaEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCW
dKQnAxnJRGaykJVsZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZy
lKcCFalEZapQlWpUpwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0
pwMd6URnutCVbnSnBz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxn
AhOZxGSmMJVpTGcGM5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcD
G9nEZrawlW1sZwc72cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIX
ucRlrnCVa1znBje5xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5
xGe+8JVvfOcHP/nFb/7wH3/5N8gXgIAEIjBBCEowghOCkIQiNGEISzjCE4GI
RCIyUYhKNKITg5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxk
IjNZyEo2spODnOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSi
MlWoSjWqU4Oa1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIz
XehKN7rTg570ojd96Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJT
mMo0pjODmcxiNnOYyzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vY
yja2s4Od7GI3e9jLPvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jK
Na5zg5vc4jZ3uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3
vvODn/ziN3/4j7/8G+INQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQl
GtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb
2clBTnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrV
qUFNalGbOtSlHvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93p
QU960Zs+9KUf/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nB
TGYxmznMZR7zWcBCFrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFO
drGbPexlH/s5wEEOcZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1u
cZs73OUe93nAQx7xmCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37x
mz/8x1/+DfAHICCBCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICax
iE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nI
TR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahN
HepSj/o0oCGNaEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f
+tKP/gxgIIMYzBCGMozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzm
Mo/5LGAhi1jMEpayjOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvay
j/0c4CCHOMwRjnKM45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP
+zzgIY94zBOe8oznvOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+4y//
wjsCEJBABCYIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlH
fBKQkEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+
ClCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a
0JBGNKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYPfelHfwYw
kEEMZghDGcZwRjCSUYxmDGMZx3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQ
RSxmCUtZxnJWsJJVrGYNa1nHejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBD
HOYIRznGcU5wklOc5gxnOcd5LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc8
5glPecZzXvCSV7zmDW95x3s+8JFPfOYLX/nGd37wk1/85g//8Zd/wT0BCEgg
AhOEoAQjOCEISShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCIS
k4SkJCM5KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpT
hKIUozglKEkpSlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOE
pjSjOS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4Sh
DGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUs
YzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzj
OCc4ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5
L3jJK17zhre84z0f+MgnPvOFr3zjOz/4yS9+84f/+Mu/0K4ABCQQgQlCUIIR
nBCEJBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGc
FKQkFalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwS
lKQUpSlDWcpRngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0
pBWtaUNb2tGeDnSkE53pQle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxk
FKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQV
q1nDWtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSn
OcNZznGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95
w1ve8Z4PfOQTn/nCV77xnR/85Be/+cN//OVfYF8AAhKIwAQhKMEITghCEorQ
hCEs4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSk
IS3pSE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pSh
LOUoTwUqUonKVKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt
7WhPBzrSic50oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj
GM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetY
zwY2sonNbGEr29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjP
BS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8H
PvKJz3zhK9/4zg9+8ovf/OE//vIvrDMAAQlEYIIQlGAEJwQhCUVowhCWcIQn
AhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0pCcD
GclEZrKQlWxkJwc5yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKUpwIV
qURlqlCValSnBjWpRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3p
RGe60JVudKcHPelFb/rQl370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nE
ZKYwlWlMZwYzmcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRm
trCVbWxnBzvZxW72sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWu
cJVrXOcGN7nFbe5wl3vc5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77w
lW985wc/+cVv/vAff/kX1BuAgAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJR
iEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nI
Sjayk4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahK
NapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3
utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSm
M4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNraz
g53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnOD
m9ziNne4yz3u84CHPOIxT3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+84Of
/OI3f/iPv/wL6Q5AQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlB
TGIRmzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKRmSxkJRvZyUFO
cpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1q
UZs61KUe9WlAQxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60ZkudKUb3elBT3rR
mz70pR/9GcBABjGYIQxlWLT/z4cfzv8B91Cl3Q==
               
               "]]}]}, {}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl3EMUIMuyBdDXtm3btm3btm3btm3btm3b9u2/e/3BXjXLWVVlRkacBA3b
VWwb4H//+9+waP/7379nQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRMXS
/4tODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxkISvZ
yE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylShKtWo
Tg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr3ehO
D3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclMYSrTmM4M
ZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52
sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq17jODW5y
i9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf+M4PfvKL
3/zhP/7y7+UPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxi
EZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKR
mzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGb
OtSlHvVpQEMa0ZgmNKUZzWlBS1rRmjb8+3i3oz0d6EgnOtOFrnSjOz3oSS96
04e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYz
h7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOH
vexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e7
3OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37zh//4
y78ffwACEojABCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu
8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5
yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWo
TwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove9KEv/ejP
AAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7zmM8C
FrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vYzwEO
cojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jPAx7y
iMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84T/+8m/TH4CA
BCIwQQhKMIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQk
IjFJSEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSi
MEUoSjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIx
TWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3fehLP/ozgIEMYjBD
GMowhjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtY
yjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjK
MY5zgpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoz
nvOCl7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+I+//DvwByAggQhMEIIS
jOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM
5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0
oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4Yxg
JKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAl
q1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSn
OM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94
zRve8o73fOAjn/jMF77yje/84Ce/+M0f/uMv/4p9AQhIIAIThKAEIzghCEko
QhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpS
k4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpT
hrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOG
trSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShGM4ax
jGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWs
Yz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zj
PBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9
H/jIJz7zha984zs/+MkvfvOH//jLv0J/AAISiMAEISjBCE4IQhKK0IQhLOEI
TwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhP
BjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8F
KlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc6
0onOdKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYy
iclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJ
zWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconL
XOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zhP/7y75IvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURk
ohCVaEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGay
kJVsZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQ
lWpUpwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCV
bnSnBz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVp
TGcGM5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1s
Zwc72cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1zn
Bje5xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcH
P/nFb/7wH3/5d8EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spOD
nOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa
1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570
ojd96Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxi
NnOYyzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3
e9jLPvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3
uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4
j7/8a+4JQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf
/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7z
WcBCFrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5
wEEOcZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nA
Qx7xmCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/8x1/+NfYF
ICCBCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQg
IYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAg
hShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGN
aEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMY
zBCGMozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jM
EpayjOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwR
jnKM45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe
8oznvOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+4y//mnoDEJBABCYI
QQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJ
SUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQQhSmCEUp
RnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBGNKYJTWlG
c1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYPfelHfwYwkEEMZghDGcZw
RjCSUYxmDGMZx3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJW
sJJVrGYNa1nHejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5w
klOc5gxnOcd5LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCS
V7zmDW95x3s+8JFPfOYLX/nGd37wk1/85g//8Zd/Df0BCEggAhOEoAQjOCEI
SShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJ
KlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkp
SlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta
04a2tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYz
hrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOG
taxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4az
nOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre8
4z0f+MgnPvOFr3zjOz/4yS9+84f/+Mu/YZ4ABCQQgQlCUIIRnBCEJBShCUNY
whGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rS
kZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpR
ngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWtaUNb2tGe
DnSkE53pQle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zk
Epe5wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQT
n/nCV77xnR/85Be/+cN//OXfIF8AAhKIwAQhKMEITghCEorQhCEs4QhPBCIS
ichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJ
zGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUoTwUqUonK
VKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt7WhPBzrSic50
oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxh
KtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr
29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4
zg9+8ovf/OE//vJviDcAAQlEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVo
RCcGMYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxk
Jwc5yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSn
BjWpRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcH
PelFb/rQl370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYz
mcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW72sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nF
be5wl3vc5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv
/vAff/k3wB+AgAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQi
NnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3
echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1
qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33o
Sz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jL
POazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+
9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u
84CHPOIxT3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/wL
7whAQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7x
SUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kp
QEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlA
QxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR/9GcBA
BjGYIQxlGMMZwUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIW
sZglLGUZy1nBSlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5x
mCMc5RjHOcFJTnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGY
JzzlGc95wUte8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zHX/4F9wQgIIEI
TBCCEozghCAkoQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAhiUhM
EpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s5CAnuchNHvKSj/wUoCCFKEwR
ilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerUoCa1qE0d6lKP+jSgIY1oTBOa
0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSgJ73oTR/60o/+DGAggxjMEIYy
jOGMYCSjGM0YxjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM
5axgJatYzRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozj
nOAkpzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe8
4CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNH/7jL/9CuwIQkEAEJghBCUZw
QhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5xiUd8EpCQRCQmCUlJRnJS
kJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJR34KUJBCFKYIRSlGcUpQ
klKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalHfRrQkEY0pglNaUZzWtCS
VrSmDW1pR3s60JFOdKYLXelGd3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJR
jGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWs
Zg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zm
DGc5x3kucJFLXOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYN
b3nHez7wkU985gtf+cZ3fvCTX/zmD//xl3+BfQEISCACE4SgBCM4IQhJKEIT
hrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+CUhIIhKThKQkIzkpSEkqUpOG
tKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8FKEghClOEohSjOCUoSSlKU4ay
lKM8FahIJSpThapUozo1qEktalOHutSjPg1oSCMa04SmNKM5LWhJK1rThra0
oz0d6EgnOtOFrnSjOz3oSS9604e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxj
PBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9
G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwX
uMglLnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4
yCc+84WvfOM7P/jJL37zh//4y7+wzgAEJBCBCUJQghGcEIQkFKEJQ1jCEZ4I
RCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxk
JBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlCUYpRnBKUpBSlKUNZylGeClSk
EpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNaUJTmtGcFrSkFa1pQ1va0Z4OdKQT
nelCV7rRnR70pBe96UNf+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKT
mcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZ
wla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nC
Va5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJX
vvGdH/zkF7/5w3/85V9QbwACEojABCEowQhOCEISitCEISzhCE8EIhKJyEQh
KtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr
2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrV
qE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93o
Tg960ove9KEv/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jO
DGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4O
drKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1u
covb3OEu97jPAx7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37y
i9/84T/+8i+kOwABCURgghCUYAQnBCEJRWjCEJZwhCcCEYlEZKIQlWhEJwYx
iUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQlnSkJwMZyURmspCVbGQnBznJ
RW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCWcpSnAhWpRGWqUJVqVKcGNalF
bepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2tKcDHelEZ7rQlW50pwc96UVv
+tCXfvRnAAMZxGCGMDTa/2fD/x9LXKSa
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.003666666666666667], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{6024, 6025}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"angry\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx03QVQVlvbPnC7PSqo2N3drcvubmzFDhS7RexOFDGwE7tRFBEDFVQUUaS7
7a7vWevas6/5v2v+Z87MN7/3e+MIz7P3ivu+7tKjpvYekyFdunRrbNKlk//3
//fX9d9VH/RY2Ev8vx5pusCvOyfnNJn4P/9/B9Pxv75es3s763/+/fNNt/m5
fs+6XYv/5z+/VJzy+tD/8v3K4n/dc2E+rzenlpnGf/8K04sXhJxPzbHaNP73
1pp2n3/sUPqJ603jf3+j6dRm1x+tHb35f/73txhurHn5zX1382/fKhx71k+f
rV8bzfjn3Wa6aDP579huGv/8zqYv3JhwudKnHabx53Ex/vc6ae7UtMeZC2V2
mcaf19V0pEe9Y8167zaNP/8e03ObFNl/f+le0/h57DOdx+OfS8/zbqbx89lv
+sWejx2nvKfx8zkgJhUa0L92sZ6a9w0Z065OtoOm8fOiJxZ73epbyUPGn7+P
Zvw86QYhnVvcbHhYOK+2dg/b0F8zft6HjX8+W83p93g2WdrjiGn8Pmi/wbUa
th93VHh9f5p+/b8hmvH7ol2KHqqbc8kx0/h9HTc9+m2BWs92HDf+vCM04/d5
wnTN3aurOZ+h8fs9afrXoF+VBt2n8fs+Zfp+EfvyJcNo/P7dTW8Njigd88Vd
zKp3/9SeayM14/Nx2vRQ1z4lTuQ+YxqflzPG78NOc+VB8p/grGl8nmj1by9x
zjQ+X3RESmD2hSdpfN7OiXWTD/ef8WG0afy+x5ref9gpfecq4zXf75pn9bAG
503j80m7u3fM0sr7vPH7n6AZn98LprfkclpetjuNzzM9Z/KNDFmCaXyeL5oe
+uSzY8IYGp9vuk21Gv8efaDx+b4kLoeMcC9lN0lzpfXjFp1eROPzTv+Xsv/X
puyXjc/jZM34PtCfuwTPm+5M4/txWTzOLwZ8222vOfiU9fe+pa+YxveF9srZ
bXbD0zS+P/SRSSs/F2581TS+T1eNz+s009OO/pd+XJLudY9vT//tQ+P7d820
Q9Uf78N6XjM+vw6mF3gv6h+wcrpmfD/pAevqTL0TQuP7et10s+RJqYfG0/j+
Xjc+vzM0l+ki/8Q0vt8eprOdCksc70jj++4hVoSlnGpedqbmtByFxnfJdcM0
ngf0i4m94qq70Hg+0PLbl7fcTeP7pRvPD9qtik/Ux7M3xeafg9OfuD3LNL6P
szXj+XJT7C74uH/+IXNM4/s3V/OKtX9GBDb1NI3nET0pqUH41Qc0nk+3TPfs
PM3yL90SR+o0cV/yXTeeV3SDkyfeLgyn8fy6bbpYjmjb4ZNoPM/oDOoLTuP5
5mX6c0yVqltbeRnf53ma8fzzEue6n0ifvH2+5vjtHSYuW0Xj+ehlfL8XaH7T
dvSJmX5e4sZE+QVaaBrfZ914XnqJeytXud/xW6RZPa6s75jG8/SO8X1dbPrZ
wa/pq09cYhrfX0fNtw/vrTjAlsbzmL7Q12NsRzcaz2P6SKagI41jaTyfvcWU
8AtVuy7T7XLpk+UnTuP57W08H+gZUya+WtprqWk8L3Svs3w7ijnQeP57i7m/
Si+9WtJJ8+L81e1yX/U2ng/0ojVvqqam6sb7w9v4/i/T7ODT6eDf395imc2W
V2Vu6sb75q5pu5ljI9+1pvH+uWt8/5ebXn2k49KBa2l833X3L7esVORqGu+v
u2JD3XTVNg5cobnTS7fhAf403m+0el3l9zGeJ/S2O1df3a2wUjPefz7G80V3
zXpvQi8N8hEuPaYu/fGZxvNnlem9oRWq1bxL4/mx2vShSWGvRm+h8X3Wjfev
jzj+w3mp6/A1pvH9pk+v6lbtWfW1msvEfCl2dL+P8f3Wjfe5j7hYIHNQ5t80
vu/rNBfYbjVkZ5yPuHbo5tKmj3Tj/X/PeD6s15ytrXxj0Vgf0L8+yQXCPeFZ
e2Y1BxcazxPdWE/Qlpdl4UnX7om7t6sGHR27wTSeL/TDbtFLQ+ptNI3nDe33
1rWaVcZNpvH80Y31Ch3RZ8XAIX9prF/uixcTegd1eK77RcaDO7u1pbG+oe9f
vPWqxVoa6537xvNps+mUX5nu3Oqh+7qdXHDQWB/dN55X9DvvETveXNHtLv9x
Cz4wjfUU7WZ5GlkNobF+emA8/+gPa25O+lx8i+atM2pbfgQ01lv0irLdrb7E
01h/PTQ9Ry1AaKy3aMvLbXPQDBrrL3po3cNPH15/aDyfdWN99lB87lmoVZ4V
NJ7PuntGe/3n8e+h+GYzs2CVFN1Y3/mabrMttNupdjTWe3QDtaCgsd6jK38q
+GTDc1/jfbBVM9aDdDH547d5ZBrrQ/q/PnJFQ2O9SKfPOGXNyEM01ouPxI+w
p8lt++j+fGHNw96JNNaTj03HjzqatW1NGuvLx8b7jP59pOqd4R66g63utq8/
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
6h/onZnbTbDtSaMeQvfJ1vLEKFLMWfz+brOhutE+E2nUT9ADvu0uUWoijXoK
utG0DvMyzqFRX6H7mLrejBSFEj9aPmE06i90o/+RPuTq4fctlUb/YSSW/5t1
77+/tPjMf5FGvYZu9CtGiTfBndac3kujnkP3XrkcyRslrlt2C5tP0qjv0I3+
Rdq1hGxgiRK7nuxvMfMqjfoPen67rrsG+NCoB6EH3fr2qclzGvUhtDxdKhFG
o15EN/oho0RRdUGhe0fnoFyJdaOM+hL6V6WfGWO/0agvod8eODLsYaZ7mtFf
GWXUn9A35fI3H416FHqPPL4qQaM+Rfe22fI3FiUW5jpuP70qjXoVeuiKPr79
GtGoX6Gb//1btnE7GvUrtDz9LtabRr0K/fddvzf/htGoT6HDxss3Bo16FfpW
pHwh0KhXod0GDUw8sUI3+kujjHoWeolcjm3VvVm2A/SPMupd6OFdz+6b5kaj
3kU3+lejRMt7g370cadRD0OXapGlb8PruuVt2dDxUUZ9DC1vw4rcp1EvQ0fW
HJr9bwCN+hjd6KeNEneOZxsdGU6jfoY+UPrSLZ8UGvU0tJPr8MLHf9Cor7lv
epR1zpnrstCot6HV8sKaRn0NXTbzqMq9S9Got6EzLs69vH513aq6cF6UUY9D
y9vyQk1o1OfQPlNHN/7dnka9Dn04IY9lxUWjfodePvJGmvcIGvU79JjgsZ2O
TqFRz0O362N1eM18GvU9dPknnn8nr6JR76Mb/c5RIot8/W3XvbLCjd3910UZ
9UF0nKc88KJRL0TLahubM7rRP00vk+Uoe6KM+iL62NlJE3560Kgv0o1+6yix
qpKNT+gDGvVH9LgD3iXuvKRRj0R3LCJvvGnUJ9GVthV+uSqNRr0SnS3XvRqT
ftGoX3qgecliWUEdJRKXT1vTPRuN+iTaVz5uC9CoV6Ll07ZAGRr1SvTad9N3
fa9Bo35JN/rFo8RE9UKnUd9Ed4707X67o+6FJ/Oue3w7yqh/0o1+8yhRddCs
Ewf70aiPonO+KJVp5Sjd81RDXJRRP0Und3kybMJU3Sg3jjLqp3TPyiArrqLE
E58517su1I3+dnp6jbGWf6Qoo/6Kdm9eNn+tNTTqsWj1uNqhG/3yUUa9Fj2l
5nzfrwd1Tx1U/dHNzNFGPRfd7Xj5csFndaP/np4s26Nsoo16L7p66eeLPW/S
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
pRv5yXGi6xUbWQJiGv1duh/L9tRpNPKV48TN6fIHpPthcdnRFWf0h9HVat61
6biaRr8YvSdZHljS6AejVfmpM41+MHqRPC7fTaM/jE4tVUReCZpGvxg9NHTq
fMfjNPrHaL9d9yp+PEOjf0w38qbjRPP+RQPtLtPoJ6NPWzk4Bd7Qrcp9tsYZ
/WZ0iaf3a3bwptF/phv51nFi47pi8ojVNPrR6L8d5AkXjf402h4FEabRr0aH
eRWPzR1Co39N951ZE7rPO2x5Hy+asXVJFI3+Nvp2Y1/xIUE38rnpW3L5cjnO
6Ieja34tIbe8ptEfpxt53nHC7cJM15dfaPTP0Xmmqht30+in033D71uqwwPL
+7xqqS9XMwRoRl54nNFvR7+Ln3WwcnYa/XW6ES8bJ0Ycftxjdx7dyB+PM/rx
6GeyXLag7kvlZWBFnNGvR7dUBdg0+vd0I888Tpx782TA+zI0+vvoUjvKZB5V
mUY/n+7zvbqFxv2ikTceLzb3nnvhRU0a/X+6Ty+SBYjxIn0e/+HtGuhG3jit
0ipKxBv9g7TD47K5rzaj0U9IR66a51GpDY3+Qt3IK48X8nbetRON/kNabQ97
6j4m281rxRv9iXRtz/lyy2ga/Yr0wXnPpr4bQqN/UTfy0eOFFb7wptHPSDt9
XGB5hdLob6Qtz0J5wWEa/Y70qEkVy1+ZTaPfkQ6ouEj+rfmwTNtuFW/0Q9Jt
YgKW7FpGoz9SN/Le48XF/ZWq51yrW5U39Yk3+il1I++dVtPiRseLsnJ7s5lG
/yWtyoF30OjHpNX1wF7dyJOPN/o1afW0PKTbVS6fZtPIj483+jvpmO6Bm9qc
pNHfSffNWbX55XM0+j1pnweyIItG/yctq/lcPGn0g9KHW1Zrl8OHRn+o7p3n
Vw72XUUjvz5e5P+zVH4CTaOflF6hlvM0+kvpL7OqdxseRKPflB4jV/OhNPpP
6cC017IizDT6Uel2p2r0u5REox+VvjxueYYKH2j0p+pW8dO74kUFdWBAo1+V
3hGhGjRMo3/1hekse1fkWJCJRj+rbuT/x4vZtm+vpuTQvTm7TFyON/pfabWc
zUejH5ZWp1k2NPph6QfyeqIEjf5YumGXOlMulqPRL0sfy7q6SPmqujGvIN7o
p6Vl9f+O2jT6a3VvqC8LGuLFKse6s7I1otFvS39rpp7gptF/S49XD2wa/bj0
68v1Fg3tQqP/lu6oLhx1Y/5CvNGfS1+rERHUciCNfl26UnL9FReG6V4zUnb8
xRv9u7oxzyFeuBxbV6fcGN2Iu4o3+n3p7KMjw50n0ej/peeVargh63Qa/cB0
Ysj6JvPm0ugPpm13RcUnLabRL0z79mvkPGQFjf5hurHVxtb+62j0E9Mn5et+
K43+YboICiZNo5+YXiuvP9xo9BfTsrtv+xEa/cb0RK8mR7K40+g/1o15Gpb3
+UK1QjKN/mTdy2T8xvt40aVx3L/EazT6lekbX5qeHnybRr8yXfXClkF+92j0
L9O77VWFr2bM94g3+plpvH5o9DfTC3BgZBr9znTKIdlQRaP/Wbdj7Pc1NTMk
iCEjWnhmjqPRH00/KbZ94pwUGv3SdLM3iTaJH2n0R9PuzuLeoB80+qXpYr2d
pz/5R6N/+qXpDf8ll2yRhUb/NP3nUUu/s7lo9FPTU+Tj1Fo35qckGP3WtCpf
Lkyj/5rulq51YKZSNPqxac+b6oVrGv3ZdI15qTUTqtHo19atyketE8S++uqC
3zT6uen/PrqsfdyYRj83vfhMWsPmLWn0d9NpE9vGnmlPo9+btizWtpbqRqP/
m34qHw99aPR/02J/u9SMg2j0f9Nnh+x2nTVCN+bLJBj94XTJwh86xI+l0S9O
bwps/2XgFBr94/S/LXsOPppBo59c97zmqypXKp8gpqkCZN2Yd5Ng9JvTETk6
/jntSKP/nO75YO/Jkqto9JfT8vRsywYa/eW6Z8vjgAYJQn1dttPoN6dVubMr
jf5zOt/1z8Pj9tPoP6eXzuqce+AxGv3o9Ifa+z18T9PoP6dHpn2RHRmm0Y9O
Pz8pDxBp9KfTrdCQqBnzhRKM/nX6QtlvUzc/0D3duYBvqY4JRn87XSaia/EM
/jT63emt6uNCo/+dzmD7fU5sMI1+eHp6AdlxTaMfnpablYfxNPrh6T4bfyxp
kqYb85MSjH55+m7nHtXdP9Pon6frZj0SXPwXjX56+tDdn6s2pQ80jX562lot
uHSrcSy2CUa/Pb2smTohM43+e/qz/HHkp9GPT4+W5c5FafTn0y8djiU9KE2j
P59uW+PPzsaVaPTr05eSelu2LDT692lZTVisPo1+ftrZ7q/bxqa6MY8qwej3
pzOX6itfIabR/0/PCjnx06EjjTwAOtbl37Ho7jTyAXRPVhfElvep+otGfgB9
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
Rp4gffuFx5emp2nkC+rOogIUk0StzXkPnb5II1+Q3t91bM+SHjTyBnVnluNp
tiSJvNlv/tnsRSOPkHa8Jwt4aOQN0u+XqgekabTf0ygHpnF9Qz9Xyw8a+YR0
q6vjR/hG6M44RVbUJxn5hfT5GbdyN42nkWdIl66V/4Z7Ko18Q1qmLZX4TCPv
kJbpIJt/6k6v/oUkIw+Rnj6mwN306UNMIx+Rjio9adqMrDTyEeneaAA1jbxE
WpXH5qeRl0ir12MR3el29Txf0p1WcWmXkox8Rfqgtaywp5G3SFs/s3lxqiKN
/EV62fopjsVr0MhjpD91vFt9Uz0a+Yy6f/vYpN/jSf+yrH4G3U8S8mWTrimN
/Eb6xR17uUU3jTxHus1in/oxHWjkO9KXmqjEGdPIe6TLyXLQvjTyH+ntF1VB
vWnkP9KZ1IEEjTxIeiYCrEwjH1K3rJ4s9NTyfk24326jPY38SN3fZbtJUJLo
d6TYp38zaeRL0vdGTt/vsIBG3iRdv4RKTDON/ElaVof2XU0jj5IusHOGjFTT
/LWYDChMMvIqaVUu6Uwjr5L+Kh+vu2nkVdJjVQAMjfxK+tVqVcBlGnmWdHv1
gtUtp2f0Tkwy8i7pK+lnX5t2mUb+pe5PcvzWR8v79tbjMVE3dH+Qv76fSUZe
Jr1zfmnrvt408jPprA3neN17SKMBgZ7z6cmUhk9p5GnSKO+jcXxL4/FBI2+T
flDJf9b6KBp5m3Sj2LJl/ybQyN+kjx+QDbc08jjpQrgANI18Tlp2r/X5TSOf
k5aXGz4ZQk0jr5Mev+3ZigbZdb+bWa/lhozJRp4n/aZHhbrH89DI76Q7yfK1
gjTyO+nr8utRjEaeJ115RUXLjlV3Wg4Z8Jds5H3Su1otSrCvTCPvk87+N8A5
oiaN/E96vkelNr0b0Mj/pJNmywYMGnmg9CAcYJlGPij96J0MfKORD0qr+K2e
NPJCaVWO1Z9GXihdVP76h+hWcY0Fko08UXpdpGM6ezsa+aK6kxqEX31QPFn8
2vtKJlqaRt4oLdNKek3TnfjEO3xFhWQjj1R3/KijWdvWpFW7UaNk8bagU7a7
s2nkl9JdXgRdrreIRp4pfXOTCvwxjTxTupoq4KORb0rvyaYWaKaRd0qrcqMd
NPJPafXj2Usj/5ROaR58L+wQjTxUeujPmjN6nqSRj0r7XVlRyvscjbxUuvmM
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
6KIhIeltytKYD0X38Vj1ukcFGvOi6HUudSyvFBrzoui7s0NX3KlGY34U/auv
vECmMU+Krqv+ojFPip6kAq5pzJeiD71bHXG4MY15U7Sq/m9GY/4Und89bEPB
ljTmUdFd164Z3aMNjflU9PLx9Zqubk9jXhV9s7088aQxv0q3TC/7cYuepBpK
UsXncmsTfnSlMe+KribLSXrSmHdFq3FSfWjMv6JV3HB/GvOwaNXdY0tjPhat
2p2G0piPRbdVgT005mPRCxs1eLDKjsZ8LPpyQVnASWNeFp36ed3MHxNozM+i
y1t2D3Wm0JinRQ+V5RPTaMzXop03rf9+aAaNeVu0n+yum01j/hYt0/QLzKcx
j4turhbMuic4Fsk6+1mqMa9Lt4r/fZMqLF+GPqscaczzok/HyYBKGvO96Fif
Del+rKQx74surhqUaMz/ovsvjT49cQONeWD0Rlk+sJnGfDDdY90j+3+MTBX3
ZTftNhrzw+i/Mk54J415YnQDGY/jSmO+GG0v26H20pg3Rh+9IgsKdI9ufW/x
uSR6lCpgTzXmk9Fh2+UHhsa8MrqgCoinMb+M7t4rtvHEkzTmmdEra8qAABrz
zGh1fX6Oxnwz+ltyrGf+SzTmm9E1H23e3u0qjXln9LjjTSet9KAx/4x2WxnX
6rYnjXlodNDoLYW+e9GYj0bnadPsXS0fGvPS6A7qwJrG/DR6iRrYRGN+Gq3S
K/xozFOjMQ6exnw1GuOtaIxroBFHTCOuj3ZR8Tc05rHRz1Q7FY35bHQ2a7nC
oTGfjW75IaHXhBga89rouU+3VToYT2N+G31Opssk0ZjnRss/rXUajflutLre
/EBj3hs9UAW+0pj/Rm+uIG98acyDox9mkg1/NObD0bJattZfGvPi6MZ3kkLH
p48xjflxtIOb86UDmWjMk6NPyDSorDTmy9GRlrebdU7dI2U5z296eKZpX5My
pRnz6OjCTXY06vofjfl0dC9VAEJjPh2txmHlpzGvjlbxxDY05tfRKk6nKI15
drRqxypBY74dPWHqzpYHStOYd0erNLdyNObf6R7q2qfEidxpIriqnNhAYz4e
bZVDdjDQmJdHd05ovXt5DRrz8mgneT1Vm8b8PNrjsEvHr/VozNOjPzrJCwka
8/XoKmqgGY15e/QoNeGMxvw9WqUntqIxj4+Wp2NW7WjM56NzqIYBGvP66NbX
2lZc3oXG/D56wY53f252pzHPj74or1960ZjvRyfLcVn9aMz7o8vK+OOBNOb/
0YNVgTSNeYD0Ntm+NYzGPEBa3r5YjaIxH5DOqAKUacwLpC2L+4vLxtOYH0jP
UA2xuofUath+XME0Y74gfaqtTFCkMW+QVtcL02nMH6SLpf+Ye9wsGvMH6b7h
e2Lc5tKYP0ivl+nDC2jMI6R9dn/ckm8JjfmE9O95sqCHxrxCup56wNOYX0hP
VgNJaMwzpA/n35fyeR2N+YZ0yEcZKENjviGtjr+30ph3SKtxWM66B6mGiDRj
HiKt4o9daMxHpD1lXM8eGvMS6S+y/cuNxvxEunqlzo+dDtKYp0iPySIr1mjM
V6T3xsgLJRrzFulAbzngj8b8RTr3gS/lx56lMY+RVse/F2jMZ6RVmv9lGvMa
aVn9m/c6jfmNdGrhA46dbtKY50iX/95lgNNtGvMc6WGvvla/4U1jviO9w/I2
/3yPxnxH3bZD/jpHV0wT/lu7vq3mS2P+I51FFcDTmAdJt1AHGLoHfIz0PFAr
zZgXSc9W49VpzI+kMT6LxjgIGnHKNOIJacT30Ghnp9EeRmP+JC13b5+iaMyj
pO+P6j6uWhyN+ZT0v5Y/mo9JpDGvkm5YUn7jacyrpKfK6TrvaMyvpI/J47lP
NOZZ0uHX5QucxnxL2kYN3KEx75LuMftnO4/fNOZf0vJ07tM/GvMwY03friNP
9GnMx6S/5f3lOzqLbjVepXGaMS+Tlmkae7PTmJ9Jq+lYuWjM06T3y3avvDTm
a9Kv5fGVNY15m3ReOU6rII35m3RHdeFHYx4n7agGZNKYz0lfy9B7SdVSNOZ1
0u8jZOAojfmdtEy/+b+27jqq6rRr47hid2Bj69hYGCDqUexWxMBuxw6wAzvG
QsXGQgU7EbsdbERB7C5U5GC3Pmfv2zVf13te16z1rs963n9mhF/de1/XyiLY
9HlibbMrjk2/J5aw4/TO2PR9Yl1vKotN/yfWzzEu2PSB4prZfnY8UAmbflA8
6v3GCm/dsOkHxbuuykIDNn2h+MVO+UCFTX8oLjBv0/7AWtj0iWJvDdjHpl8U
z2/0q2f6htj0jeJzxSVgAZv+UazrPM2x6R/F+rmhpb29bE9XeT3if/eTYq3X
ao1NXynWeOd22PSV4kcSB9QRm/5SnKuzPLFh02eKPXVgDpt+U/yPkzywYdN3
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
Xvd/4v////7fP/zv/wPVlW7l
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1: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
h9nMYiYzmM40pjKFyUxiIhMYzzjGMobRjGIkIxjOMIYyhMEMYiAD6E8/+tKH
3vSiJz3oTje60oXOdKIjHWhPO9rShta0oiUtaE4zmtKExjSiIQ2oTz3qUofa
1KImNahONapShcpUoiIVKE85ylKG0pSiJCUoTjGKUoTCFKIgBchPPvKSh9zk
Iic5yE42spKFzGQiIxlITzrSkobUpCIlKUhOMpKShMQkIiEJiE884hKH2MQi
JjGITjSiEoXIRCIiEQhPOMIShtCEIiQhCE4wghKEwAQiIAH4F1H//OUPv/nF
T37wnW985Quf+cRHPvCed7zlDa95xUte8JxnPOUJj3nEQx5wn3vc5Q63ucVN
bnCda1zlCpe5xEUucJ5znOUMpznFSU5wnGMc5QiHOcRBDrCffexlD7vZxU52
sJ1tbGULm9nERjawnnWsZQ2rWcVKVrCcZSxlCYtZxEIWMJ95zGUOs5nFTGYw
nWlMZQqTmcREJjCecYxlDKMZxUhGMJxhDGUIgxnEQAbQn370pQ+96UVPetCd
bnSlC53pREc60J52tKUNrWlFS1rQnGY0pQmNaURDGlCfetSlDrWpRU1qUJ1q
VKUKlalERSpQnnKUpQylKUVJSlCcYhSlCIUpREEKkJ985CUPuclFTnKQnWxk
JQuZyURGMpCedKQlDalJRUpSkJxkJCUJiUlEQhIQn3jEJQ6xiUVMYhCdaEQl
CpGJREQiEJ5whCUMoQlFSEIQnGAEJQiBCURAAvAvgv75yx9+84uf/OA73/jK
Fz7ziY984D3veMsbXvOKl7zgOc94yhMe84iHPOA+97jLHW5zi5vc4DrXuMoV
LnOJi1zgPOc4yxlOc4qTnOA4xzjKEQ5ziIMcYD/72MsedrOLnexgO9vYyhY2
s4mNbGA961jLGlazipWsYDnLWMoSFrOIhSxgPvOYyxxmM4uZzGA605jKFCYz
iYlMYDzjGMsYRjOKkYxgOMMYyhAGM4iBDKA//ehLH3rTi570oDvd6EoXOtOJ
jnSgPe1oSxta04qWtKA5zWhKExrTiIY0oD71qEsdalOLmtSgOtWoShUqU4mK
VKA85ShLGUpTipKUoDjFKEoRClOIghQgP/nISx5yk4uc5CA72chKFjKTiYxk
ID3pSEsaUpOKlKQgOclIShISk4iEJCA+8YhLHGITi5jEIDrRiEoUIhOJiEQg
POEISxhCE4qQhCA4wQhKEAITiIAE4F94/fOXP/zmFz/5wXe+8ZUvfOYTH/nA
e97xlje85hUvecFznvGUJzzmEQ95wH3ucZc73OYWN7nBda5xlStc5hIXucB5
znGWM5zmFCc5wXGOcZQjHOYQBznAfvaxlz3sZhc72cF2trGVLWxmExvZwHrW
sZY1rGYVK1nBcpaxlCUsZhELWcB85jGXOcxmFjOZwXSmMZUpTGYSE5nAeMYx
ljGMZhQjGcFwhjGUIQxmEAMZQH/60Zc+9KYXPelBd7rRlS50phMd6UB72tGW
NrSmFS1pQXOa0ZQmNKYRDWlAfepRlzrUphY1qUF1qlGVKlSmEhWpQHnKUZYy
lKYUJSlBcYpRlCIUphAFKUB+8pGXPOQmFznJQXaykZUsZCYTGclAetKRljSk
JhUpSUFykpGUJCQmEQlJQHziEZc4xCYWMYlBdKIRlShEJhIRiUB4whGWMIQm
FCEJQXCCEZQgBCYQAQnAv3D65y9/+M0vfvKD73zjK1/4zCc+8oH3vOMtb3jN
K17yguc84ylPeMwjHvKA+9zjLne4zS1ucoPrXOMqV7jMJS5ygfOc4yxnOM0p
TnKC4xzjKEc4zCEOcoD97GMve9jNLnayg+1sYytb2MwmNrKB9axjLWtYzSpW
soLlLGMpS1jMIhaygPnMYy5zmM0sZjKD6UxjKlOYzCQmMoHxjGMsYxjNKEYy
guEMYyhDGMwgBjKA/vSjL33oTS960oPudKMrXehMJzrSgfa0oy1taE0rWtKC
5jSjKU1oTCMa0oD61KMudahNLWpSg+pUoypVqEwlKlKB8pSjLGUoTSlKUoLi
FKMoRShMIQpSgPzkIy95yE0ucpKD7GQjK1nITCYykoH0pCMtaUhNKlKSguQk
IylJSEwiEpKA+MQjLnGITSxiEoPoRCMqUYhMJCISgfCEIyxhCE0oQhKC4AQj
KEEITCACEoB/YfXPX/7wm1/85Aff+cZXvvCZT3zkA+95x1ve8JpXvOQFz3nG
U57wmEc85AH3ucdd7nCbW9zkBte5xlWucJlLXOQC5znHWc5wmlOc5ATHOcZR
jnCYQxzkAPvZx172sJtd7GQH29nGVrawmU1sZAPrWcda1rCaVaxkBctZxlKW
sJhFLGQB85nHXOYwm1nMZAbTmcZUpjCZSUxkAuMZx1jGMJpRjGQEwxnGUIYw
mEEMZAD96Udf+tCbXvSkB93pRle60JlOdKQD7WlHW9rQmla0pAXNaUZTmtCY
RjSkAfWpR13qUJta1KQG1alGVapQmUpUpALlKUdZylCaUpSkBMUpRlGKUJhC
FKQA+clHXvKQm1zkJAfZyUZWspCZTGQkA+lJR1rSkJpUpCQFyUlGUpKQmEQk
JAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC4QlHWMIQmlCEJATBCUZQghCYQAQk
AP/C6J+//OE3v/jJD77zja984TOf+MgH3vOOt7zhNa94yQue84ynPOExj3jI
A+5zj7vc4Ta3uMkNrnONq1zhMpe4yAXOc46znOE0pzjJCY5zjKMc4TCHOMgB
9rOPvexhN7vYyQ62s42tbGEzm9jIBtazjrWsYTWrWMkKlrOMpSxhMYtYyALm
M4+5zGE2s5jJDKYzjalMYTKTmMgExjOOsYxhNKMYyQiGM4yhDGEwgxjIAPrT
j770oTe96EkPutONrnShM53oSAfa0462tKE1rWhJC5rTjKY0oTGNaEgD6lOP
utShNrWoSQ2qU42qVKEylahIBcpTjrKUoTSlKEkJilOMohShMIUoSAHyk4+8
5CE3uchJDrKTjaxkITOZyEgG0pOOtKQhNalISQqSk4ykJCExiUhIAuITj7jE
ITaxiEkMohONqEQhMpGISATCE46whCE0oQhJCIITjKAEITCBCEgA/oXWP3/5
w29+8ZMffOcbX/nCZz7xkQ+85x1vecNrXvGSFzznGU95wmMe8ZAH3Oced7nD
bW5xkxtc5xpXucJlLnGRC5znHGc5w2lOcZITHOcYRznCYQ5xkAPsZx972cNu
drGTHWxnG1vZwmY2sZENrGcda1nDalaxkhUsZxlLWcJiFrGQBcxnHnOZw2xm
MZMZTGcaU5nCZCYxkQmMZxxjGcNoRjGSEQxnGEMZwmAGMZAB9KcffelDb3rR
kx50pxtd6UJnOtGRDrSnHW1pQ2ta0ZIWNKcZTWlCYxrRkAbUpx51qUNtalGT
GlSnGlWpQmUqUZEKlKccZSlDaUpRkhIUpxhFKUJhClGQAuQnH3nJQ25ykZMc
ZCcbWclCZjKRkQykJx1pSUNqUpGSFCQnGUlJQmISkZAExCcecYlDbGIRkxhE
JxpRiUJkIhGRCIQnHGEJQ2hCEZIQBCcYQQlCYAIRkAD8C6V//vKH3/ziJz/4
zje+8oXPfOIjH3jPO97yhte84iUveM4znvKExzziIQ+4zz3ucofb3OImN7jO
Na5yhctc4iIXOM85znKG05ziJCc4zjGOcoTDHOIgB9jPPvayh93sYic72M42
trKFzWxiIxtYzzrWsobVrGIlK1jOMpayhMUsYiELmM885jKH2cxiJjOYzjSm
MoXJTGIiExjPOMYyhtGMYiQjGM4whjKEwQxiIAPoTz/60ofe9KInPehON7rS
hc50oiMdaE872tKG1rSiJS1oTjOa0oTGNKIhDahPPepSh9rUoiY1qE41qlKF
ylSiIhUoTznKUobSlKIkJShOMYpShMIUoiAFyE8+8pKH3OQiJznITjaykoXM
ZCIjGUhPOtKShtSkIiUpSE4ykpKExCQiIQmITzziEofYxCImMYhONKIShchE
IiIRCE84whKG0IQiJCEITjCCEoTABCIgAfgXUv/85Q+/+cVPfvCdb3zlC5/5
xEc+8J53vOUNr3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1ucJ1rXOUKl7nE
RS5wnnOc5QynOcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnawnW1sZQub2cRG
NrCedaxlDatZxUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCdaUxlCpOZxEQm
MJ5xjGUMoxnFSEYwnGEMZQiDGcRABtCffvSlD73pRU960J1udKULnelERzrQ
nna0pQ2taUVLWtCcZjSlCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREYykJ50
pCUNqUlFSlKQnGQkJQmJSURCEhCfeMQlDrGJRUxiEJ1oRCUKkYlERCIQnnCE
JQyhCUVIQhCcYAQlCIEJREAC8C+E/vnLH37zi5/84Dvf+MoXPvOJj3zgPe94
yxte84qXvOA5z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUuc4mLXOA85zjL
GU5zipOc4DjHOMoRDnOIgxxgP/vYyx52s4ud7GA729jKFjaziY1sYD3rWMsa
VrOKlaxgOctYyhIWs4iFLGA+85jLHGYzi5nMYDrTmMoUJjOJiUxgPOMYyxhG
M4qRjGA4wxjKEAYziIEMoD/96EsfetOLnvSgO93oShc604mOdKA97WhLG1rT
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
kQqUpxxlKUNpSlGSEhSnGEUpQmEKUZAC5CcfeclDbnKRkxxkJxtZyUJmMpGR
DKQnHWlJQ2pSkZIUJCcZSUlCYhKRkATEJx5xiUNsYhGTGEQnGlGJQmQiEZEI
hCccYQlDaEIRkhAEJxhBCUJgAhGQAPwLpH/+8off/OInP/jON77yhc984iMf
eM873vKG17ziJS94zjOe8oTHPOIhD7jPPe5yh9vc4iY3uM41rnKFy1ziIhc4
zznOcobTnOIkJzjOMY5yhMMc4iAH2M8+9rKH3exiJzvYzja2soXNbGIjG1jP
OtayhtWsYiUrWM4ylrKExSxiIQuYzzzmMofZzGImM5jONKYyhclMYiITGM84
xjKG0YxiJCMYzjCGMoTBDGIgA+hPP/rSh970oic96E43utKFznSiIx1oz3/D
o21pQ2ta0ZIWNKcZTWlCYxrRkAbUpx51qUNtalGTGlSnGlWpQmUqUZEKlKcc
ZSlDaUpRkhIUpxhFKUJhClGQAuQnH3nJQ25ykZMcZCcbWclCZjKRkQykJx1p
SUNqUpGSFCQnGUlJQmISkZAExCcecYlDbGIRkxhEJxpRiUJkIhGRCIQnHGEJ
Q2hCEZIQBCcYQQlCYAIRkAD8C6h//vKH3/ziJz/4zje+8oXPfOIjH3jPO97y
hte84iUveM4znvKExzziIQ+4zz3ucofb3OImN7jONa5yhctc4iIXOM85znKG
05ziJCc4zjGOcoTDHOIgB9jPPvayh93sYic72M42trKFzWxiIxtYzzrWsobV
rGIlK1jOMpayhMUsYiELmM885jKH2cxiJjOYzjSmMoXJTGIiExjPOMYyhtGM
YiQjGM4whjKEwQxiIAPoTz/60ofe9KInPehON7rShc50oiMdaE872tKG1rSi
JS1oTjOa0oTGNKIhDahPPepSh9rUoiY1qE41qlKFylSiIhUoTznKUobSlKIk
JShOMYpShMIUoiAFyE8+8pKH3OQiJznITjaykoXMZCIjGUhPOtKShtSkIiUp
SE4ykpKExCQiIQmITzziEofYxCImMYhONKIShchEIiIRCE84whKG0IQiJCEI
TjCCEoTABCJgwP8fi/7n8z/85Q+/+cVPfvCdb3zlC5/5xEc+8J53vOUNr3nF
S17wnGc85QmPecRDHnCfe9zlDre5xU1ucJ1rXOUKl7nERS5wnnOc5QynOcVJ
TnCcYxzlCIc5xEEOsJ997GUPu9nFTnawnW1sZQub2cRGNrCedaxlDatZxUpW
sJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCdaUxlCpOZxEQmMJ5xjGUMoxnFSEYw
nGEMZQiDGcRABtCffvSlD73pRU960J1udKULnelERzrQnna0pQ2taUVLWtCc
ZjSlCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCecpSlDKUpRUlKUJxi
FKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREYykJ50pCUNqUlFSlKQnGQk
JQmJSURCEhCfeMQlDrGJRUxiBPi/ie7/Znr/m+r8b67vv8mu/2Z7/pvu+O/5
/n9PeP97xvffU57/zvn/O+n976zvv9OeAP8LEDKlsQ==
               
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl3EMUIMuyBdDXtm3btm3btm3btm3btm3b9u2/e/3BXjXLWVVlRkacBA3b
VWwb4H//+9+waP/7379nQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRMXS
/4tODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxkISvZ
yE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylShKtWo
Tg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr3ehO
D3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclMYSrTmM4M
ZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52
sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq17jODW5y
i9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf+M4PfvKL
3/zhP/7y7+UPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxi
EZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKR
mzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGb
OtSlHvVpQEMa0ZgmNKUZzWlBS1rRmjb8+3i3oz0d6EgnOtOFrnSjOz3oSS96
04e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYz
h7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOH
vexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e7
3OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37zh//4
y78ffwACEojABCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu
8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5
yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWo
TwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove9KEv/ejP
AAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7zmM8C
FrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vYzwEO
cojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jPAx7y
iMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84T/+8m/TH4CA
BCIwQQhKMIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQk
IjFJSEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSi
MEUoSjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIx
TWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3fehLP/ozgIEMYjBD
GMowhjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtY
yjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjK
MY5zgpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoz
nvOCl7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+I+//DvwByAggQhMEIIS
jOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM
5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0
oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4Yxg
JKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAl
q1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSn
OM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94
zRve8o73fOAjn/jMF77yje/84Ce/+M0f/uMv/4p9AQhIIAIThKAEIzghCEko
QhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpS
k4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpT
hrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOG
trSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShGM4ax
jGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWs
Yz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zj
PBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9
H/jIJz7zha984zs/+MkvfvOH//jLv0J/AAISiMAEISjBCE4IQhKK0IQhLOEI
TwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhP
BjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8F
KlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc6
0onOdKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYy
iclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJ
zWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconL
XOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zhP/7y75IvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURk
ohCVaEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGay
kJVsZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQ
lWpUpwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCV
bnSnBz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVp
TGcGM5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1s
Zwc72cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1zn
Bje5xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcH
P/nFb/7wH3/5d8EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spOD
nOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa
1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570
ojd96Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxi
NnOYyzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3
e9jLPvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3
uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4
j7/8a+4JQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf
/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7z
WcBCFrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5
wEEOcZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nA
Qx7xmCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/8x1/+NfYF
ICCBCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQg
IYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAg
hShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGN
aEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMY
zBCGMozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jM
EpayjOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwR
jnKM45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe
8oznvOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+4y//mnoDEJBABCYI
QQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJ
SUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQQhSmCEUp
RnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBGNKYJTWlG
c1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYPfelHfwYwkEEMZghDGcZw
RjCSUYxmDGMZx3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJW
sJJVrGYNa1nHejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5w
klOc5gxnOcd5LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCS
V7zmDW95x3s+8JFPfOYLX/nGd37wk1/85g//8Zd/Df0BCEggAhOEoAQjOCEI
SShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJ
KlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkp
SlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta
04a2tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYz
hrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOG
taxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4az
nOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre8
4z0f+MgnPvOFr3zjOz/4yS9+84f/+Mu/YZ4ABCQQgQlCUIIRnBCEJBShCUNY
whGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rS
kZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpR
ngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWtaUNb2tGe
DnSkE53pQle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zk
Epe5wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQT
n/nCV77xnR/85Be/+cN//OXfIF8AAhKIwAQhKMEITghCEorQhCEs4QhPBCIS
ichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJ
zGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUoTwUqUonK
VKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt7WhPBzrSic50
oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxh
KtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr
29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4
zg9+8ovf/OE//vJviDcAAQlEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVo
RCcGMYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxk
Jwc5yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSn
BjWpRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcH
PelFb/rQl370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYz
mcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW72sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nF
be5wl3vc5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv
/vAff/k3wB+AgAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQi
NnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3
echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1
qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33o
Sz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jL
POazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+
9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u
84CHPOIxT3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/wL
7whAQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7x
SUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kp
QEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlA
QxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR/9GcBA
BjGYIQxlGMMZwUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIW
sZglLGUZy1nBSlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5x
mCMc5RjHOcFJTnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGY
JzzlGc95wUte8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zHX/4F9wQgIIEI
TBCCEozghCAkoQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAhiUhM
EpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s5CAnuchNHvKSj/wUoCCFKEwR
ilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerUoCa1qE0d6lKP+jSgIY1oTBOa
0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSgJ73oTR/60o/+DGAggxjMEIYy
jOGMYCSjGM0YxjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM
5axgJatYzRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozj
nOAkpzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe8
4CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNH/7jL/9CuwIQkEAEJghBCUZw
QhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5xiUd8EpCQRCQmCUlJRnJS
kJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJR34KUJBCFKYIRSlGcUpQ
klKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalHfRrQkEY0pglNaUZzWtCS
VrSmDW1pR3s60JFOdKYLXelGd3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJR
jGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWs
Zg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zm
DGc5x3kucJFLXOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYN
b3nHez7wkU985gtf+cZ3fvCTX/zmD//xl3+BfQEISCACE4SgBCM4IQhJKEIT
hrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+CUhIIhKThKQkIzkpSEkqUpOG
tKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8FKEghClOEohSjOCUoSSlKU4ay
lKM8FahIJSpThapUozo1qEktalOHutSjPg1oSCMa04SmNKM5LWhJK1rThra0
oz0d6EgnOtOFrnSjOz3oSS9604e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxj
PBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9
G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwX
uMglLnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4
yCc+84WvfOM7P/jJL37zh//4y7+wzgAEJBCBCUJQghGcEIQkFKEJQ1jCEZ4I
RCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxk
JBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlCUYpRnBKUpBSlKUNZylGeClSk
EpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNaUJTmtGcFrSkFa1pQ1va0Z4OdKQT
nelCV7rRnR70pBe96UNf+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKT
mcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZ
wla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nC
Va5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJX
vvGdH/zkF7/5w3/85V9QbwACEojABCEowQhOCEISitCEISzhCE8EIhKJyEQh
KtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr
2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrV
qE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93o
Tg960ove9KEv/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jO
DGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4O
drKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1u
covb3OEu97jPAx7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37y
i9/84T/+8i+kOwABCURgghCUYAQnBCEJRWjCEJZwhCcCEYlEZKIQlWhEJwYx
iUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQlnSkJwMZyURmspCVbGQnBznJ
RW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCWcpSnAhWpRGWqUJVqVKcGNalF
bepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2tKcDHelEZ7rQlW50pwc96UVv
+tCXfvRnAAMZxGCGMDTa/2fD/x9LXKSa
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.003666666666666667], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{6024, 6025}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{"\<\"surprise\"\>", "\[Rule]", 
    TemplateBox[{GraphicsBox[{{}, 
        GraphicsComplexBox[CompressedData["
1:eJx03WW4FMfa7nFcgru7u7sMHhyCu7u7BHd3d5cEd3f3TQIEd124O5ypuuf0
vw99nf3lvX7vZifFWjPdJc9zV7ImHas0DxEsWLBRcYIFM//3//efen+3jlN+
W1Xf/+umjkcPSJzizeT2v/z3XR2/jVkiUZJlvX758/0cR+3ed2qTIoN++d8P
cbziVo3ZuTIP/+WfN9Jx4bLZFoZLOOaXf/44x22vhv73eaiJv/z7JjneGuVt
9f/6TP7l3z/FcYiSty/vfzP1l/FMd1zhzzN1/24945fxzXQ8c93Om1Nuz/pl
vHMc37+/onG/mnN/Gf88x1niT7vf4uz8X/4+Cx3vSXMgx8rFC3/5+y1y3PRg
nvcJby765e+72HH4+mu3Toq35Je/P173MWWvMNWX/vLzwNUmz8nXZ+KyX34+
yx1/yRj968tTy3/5ea1wvPDYyN3Nwq785eeHSzX52e9Ksb9++Xnip9+6+yr2
//uXn+8qx5NmPAt2aMeqX37eqx3nyW5+Qqt/+fmvcXzj9JUhq7Ou/eX3gQe3
rFwyWbt1v/x+1juOOahpyFNV1//y+8ItzyZuNuz1+l9+fxsc70xw9bBvwoZf
fp84Uutpqb5k3PjL7xc33Fp5+OaTG3/5fW9yvDFkxEcdWm365fePQ/9x7Pd0
YTb/8nnAteYPXnlvCdbnA696Wij8/KJbfvm84B95P7eudQvr87PV8R/+0Ufv
h/V5wkv/7ZjhTPxtv3y+8IekGcaO2I71edvuuEyHh8+K1sD6/OG5uxZV+PYW
6/O4w/HLcOYHivX5xMVqxI3SOcvOXz6veNoS8xfA+vzucvz41fj/PWiD9XnG
Bez/YPcvn288bkzoyXWWY33esfltxSyx55fPP86Rum/Vc3ewvg97HQ/vmmfz
qAFY3w98xfzjE+375fuCM0Ze2/3HTqzvz37H+9bkbFsvI9b3Cbe2Hyis7xc2
n5bYJ7G+b3i3+fXGPfDL9w83L70q4/mWWN9HHNl+ALC+n3j7tBb+X8HBX76v
uHHBw3taVcP6/uII95K9KLkE6/uM/T98/y/soO/n2JAjP/jS+X61vu+HHDfI
eqNisKJY338c9r/8A25MwHoe4A39zCcc6/lw2HGdlB9uzciE9bzA/l+e/0eM
9fzAazpvKFLlFNbzBNuvU/wjjvV8wcH2tVsUsTXW8wb/1fzk+SfbsJ4/uGrE
tCGOhTnqWM8j/G3jsOxLq2M9n/Cy2veaDFqK9bzClYIVndLgLdbz65jjT8vn
HypQDOt5hhebj+skrOcbLveutv83gPW8O+74/ext1f7NjPX8w/OLxhq2vh/W
8xD//rjLlnGnsZ6P+LV5XCU44VjPy//rfB77f7ixS7fBep7iEtfHlEq1A+v5
ip8PftIjRLiTjvW8xTPS/e7/FWI9f3GR/y39b/cyrOcxDvL/02e/w3o+n3I8
JVGjvD2LYz2vsf16T8Z6fuOHbRLMynYH63l+2vGEaL1PRM6K9XzH+bZf+vy0
P9bzHt9tkDP9iTNYz3881vzxhGd8+/4K8fDTy2Ie6/2Ac61+OXpIW6z3Bb5Z
pcKuRjux3h945Oe//d/Ys471PsHmp5ugFtb7BV8r1aL8p+VY75uzgb9PGY+H
Pj/U9+J7rPfROceZpyZbs7EE1vsJ28fhFKz3FR5453qk9nex3l//cxzLfH3i
Yr3PcBv/0zVGEaz3G94b9GelwS2x3nc4xt6/Hvk/co71/sOtJl0e0HAr1vvQ
9eebhY179gbW+xFHy5t7fcHQ5x3rfYlbRLBvSMd6f+Jd/m9rvGpY71McZePB
XiP7YL1fsX8wUT8uxnrf4h21kppHumO9f11/PmOlohdeY72P/3FsH0fxsN7P
eNs/q/1vJKz3NY64/Fr4pK2w3t+4Ue/fFo+fgPU+x1vK58v/fSvW+x3/5v+H
t72J9X53/fm309v4P3KO9b7Hm44eCVEmE9b7H/sfbuaN4FjzgX99hTuFSv9u
QiWP67dP4f9KY80XsHl7T12CNX/AYewH3PXn7XwC13207mvnN1jziwuO15vH
fzys+QYONT6S+Y0Hng9VHDdMEHLbxzg1PNb85ELg71/b49r2F441f8Frzdd5
ItZ8BoewP2Cs+Q2uee342PC3XH/eznfw6rVmQBcda/6Dgw9OvedhJqz5EK5u
/4M1P7roW/AjZO33Let5/Hda+8QM/Dwbeqz5FP751UyILvpedhrc73Pdxh5r
voX9L4NEi05dDPx+mnis+RheuTiq/yvl+vN2fnbJ8XfzOo+PNV/DVewEB2v+
dsk34e7gip+GNPN4ecJ5/eu2xprfYfv4nHgp8Plp4bHmf7jyoS9r826/5MtS
bUiSj6taOtbvo7XHmi/iZdPNBAZr/ojNTytW2P8caz6JKxYa0XNoZqz5JV4S
1T6xHGu+iT/eMxMOrPkntm+vpVjzUbxodLHLhU9jzU9df75+505r3mLNVy/7
zh0Z8ur9v208ttOvBFjzWbwg1LmF/n+lY81v8bv/vvs/YVjzXWxfT5Ow5r/Y
fjq2Y82H8Zs/Rgf3f4Uda37s+vOpdszaFPaKY82X8ZxPj7Ilz3Il8H1s57Hm
z/iV+fjVwJpP45ILSpr/ha9DnqEH3n1t77Hm23hWl25f2i/Dmn9j/8tr8vXT
WPNxXDzeP+nLvbsSeD509Fjz9auOZ5rpcAKs+Tt+ti9L3bTFsebz2Hwb/G9A
x5rfX/WNqFbsxOdJnTyebl7/k7Hm/zgo3+4U3XZgrQewL9LTXXdvXw08zzp7
rPXCVV/NcQezfU7VxeOp/tnQH+GuBZ5HXmt9gZ9sKu3/EWCtN7D9etfEWn9c
86U5Wmz2px1dPTaz+3n9sdYn+FGmi5sjLMdar+ACwUP5HxFY6xc88UL2B4/f
uf68/Qtdd/zALF8SYq1vcP4+E2MdLY613sHjK5oZNNb653rg+dzNYzvdmoy1
PsJ5/bPFaDux1kt47PFyPfxzfMdaP+E7c/70T0lv8Oft+gnn7vjX8vpZsdZT
N3wffxwM8alCd4/HmMdlzRuB90cPj7X+uuE7lqd42493vDYvA/+MLPC+6emx
1ms455Nc/hFird/wqN12geCb0enQvx+693Ks53Vvj7Xew/7F04Lh77HWfzd9
Lf8qXvBD+D89zq4JvGOtD/GI3K/PNS2BtV7E18PbCbNjrR+xnf5OwVpPYv/L
wDzSHGs9ia/6R5P4Ltb60vXnNaFzrPXmrcDz3esh6X9r/DUr1nr0li/P3UNL
38/r41jP874eX/5uJ0yOtX695QuToESk99n6Odbz2etM5m03AGu9iwcttRMQ
x1r/4ks9jxzYchZrPYwz6IXvu1T1cPd3R/o71vN6gMdaP9/2VS2V/OXnjAMd
6/nrdRH7ALnt29WkyZLPH7Cex4M81nocB31Ke2Rgcqz1OfYvZv1LYKz1+m1f
igGLa37e77XvdM36L8tgreex/brVx1rf3w68HwZ7PNX/7anfGWv9jwuHNzMY
rP0AbKcnM2/7xsy5G+HzaK+1X4CnXDdfuNuB94nX2k/AhUrdT1Vg/23f223J
93+qNsRj7TdgLe9uB57fXms/Ak+OZ/5GWPsTuKD9AmHtV9zx1b3QpNunxEMd
6/nrtZkdxo1yx3fo1eK0nx57rf0OPKlG7cXnkmPtf9wJPL+HeVxgf6cXw3Nj
7Y/gh+lG5i9c9o4vQ6R71z9u9Fr7J3iieZzWx9pPuRN4Pwz32GwurO58xzcl
XYpJH/t6rf0X/KCF+QFj7cfcCbxf8NeSTUt+LDXC4wlmOjsLa//mTuB9gpua
r2vUkY71fvHa7o6svuM71f/emg9XvdZ+EL6/JGbI0fux9ofuBN4/ozzWdgDW
6+eOL8ecFE0+LMV6no/22D8Z80/Rsfab8L3bdfwfcaz9p7u+Oduaxv7QAev5
j0NeWHLyfd4xHo8r2yVHyyhY+1c4j90gwtrPuht4n+C2r+71fx9irMd3zWo8
993A+8Rr7Ydh/2IvzriyWPtjd33/REyZ4/1pr/OY13cDrP0zfMf8uDpj7afh
MYd/fN04DGt/7W7gfTfOcf50zR69m+51brM8mnU38H7yWvtzd32LSy6d867R
eMd6f3l9e0Ym/xsZaz/vru+3JvcrvUs/wWO7OtyPtd+Hc9ntpLuB9yHu0j9l
qHfvsN6PEz3WfiG+daFrr98f3/W1r5D9eu+GXms/EY8qbH7CWPuL9xzntBsy
9wLvX6+1/3jPt6hula29D2O9n/HF1l0m9k43yWP/ZLxe+xRY+5f3Au9fHL7X
5Da9x3s9ss/5lSnzYO133gu8b3Gh4RtL9H6L9b6c7Ljz1H8S967ldQ6zuimL
tX96L/D+xMsWv/nUa4/XdvrZ4F7g/YmvrI/+b6/kUzzW/uu9wPvT65Hm69cF
a38WZ0+e5Urw4fd8kfZlX9NrBNb7Ehc9U2VEr2dY78+pjrtf69K41x9ea/8X
2+2CWfcC71evtT98z/fXk8kFem3Fep/iGx83xuqVYJrHI96bDSOs/WWcrWF3
/5QGa7/5XuB9i6OF+fdlz4FeazsWa38aD8++tPr0x/cC719cMubbEz0feK39
7HuB9/F0x72Tx1jasyzW+xavyZqjf891Xme1G0r3Au9jfKdw1Vo9Y85wrPcv
jlWha/aevbHex7hM3SkRe970Wvvv9wPv65ke2+l41Pu+fq03PexRHOv97bX2
7+/7NvT8d3+PlVjva6+HdTQ7Mlj7/fd9D4a9nd0j0izHen/jeFNjdO/RBet9
jisszlGpx39em0931zxY5wXYHBalL3c/8D6f7bHOD+77Bq2vmq5HQa+HmuVj
g/uB9z/esrdryB6LsOYDXus8AtvXV5f7vienp9zoHmaOY73/caJrm7Z1b+u1
zjPuB+YH+I8n/07q/j+vrwwwbyys8w88xGzvzcY6D8GZqpodnPuB+cZcj3Ve
gi/vXja7x4H7vmEf37btnstrnadgHYfcD8xH8PbQMUt1n401f8DPYuRM2v0n
1nxinsda3uOMdsPrvi9p8mpfujXzWuc59wPzD6//+/y0/9xv933Vsna70O0E
1nwEjyw8dW23zPM91vnQg8B8Be8uv3lktylY8xP8qo55wGPNPxZ4bJevUR/4
UrZ+V7Bbfaz5CfY/fOJ0O+i1zqtwhjPx40RI+SAwn/Fa51n4Um6zI/TAZ19X
MRZ6rPOuB4H5jtcDF5ZZ17vcA9/tMn8/yFcKaz6Dv1Te+c+OXl7r/OxBYH6D
Y9Y6uS/fKq8zmO2chg8C8x+cueHV1TtuYM2HcOkWQbPyRV3ksc7nHgTmQ15f
NNO5Lg98Tdp/Gb6jGNZ8yWud5z3w9e32W7d83bHmS14PsBt4WOd/OL3Zjp/9
wDe9T/zGO1Zgzbfw+sHpK+a76rXOC/GF9XszRF77IDA/81rniQ98J0flL7Aj
4mLHmr/h+xPLps3n87p/fLNj9SAwf/Na55EPfD9m1Im1ozPW/M7rdHYDEOv8
Epu3X84nD3xxF7QJkW+p1zrfxP1qJqz39NuDwHwRZ1/+58vtl7Dmj17rfPSh
r/ya0dfzhl/iWPNJ3GLz7BPbC2DNF/HAXX9vzdsBa/6IZx/cuWT7Qqz5pNdp
zfZS1Ie+zSdOTsz7L9Z802ud5z70nf3f1X7bQy91rPkofvxfUJu8ebHmn16b
06faKR/6Qtz6UnN7G6z5KE748LeSeed5rfNk3NduCD4MzF9x7ufxs28/hzWf
9Vrn0Q99ld+lT5I3xDLHmq96neZH77HHy2GdVz/0tfmaP+L2nF7b7dyGWOfZ
uK9ZHnV9GJgP46Ehyn3O0xJrvovnh6/7cNssrPkv3h617b95Tnut8/OHgfkw
/idOn/3bfmDNj5d7nNpuoGGdtz/0PUs8Zk2ebFjzaa/t8d5srPN53MduID30
hUk9Z/a2pljzcZw006oReaZ7rfP7h4H5udep/LO/mAexzvcf+vLn3NVt23Gv
VQ6Bdf7/MDDfx9UKnGqc5yvW/H+F4w7FrlXclglrPeD1n+VyPR/85KFvZJmn
BfI08lr1Bg8D6wevU9oNjoe+xZW/pt022WvVJzwKrDfw7poRYuc5grXewJca
mF841npjpeNXzTO8yp3ea7s9HPVRYD2Cf2tf4MbWeljrEa9VP4F72w2FR76U
3cqdzD0Ba/2CC/epu23rAa9Vf4FTvJmcqFHeR4H1DK41uO3S3O+w1jd/eaz6
jUe+LqP6TNqaGmv9g8dOHNM/d22vTXVHnPJY9R+PAuslvHzGnLZbx2Ctn/D+
+atq5d6LtT7CV5ftKrn1Fdb66G/H71afyp47Bdb6CEfefC3J1upY6yWcdtfT
iLlHet3LHEc1xKpneRRYX+FiB79+3rLTa7u90fVRYH3ltephHvnqnYjwKNdz
r8/MfFWh0IhHgfXYKsc9/pfgwpYkWOszPPG/DAdyVcFan+G/bxZYu2Uo1nrN
a9XnPPIdflBuTq5tWOsvfPNZ3ZFbnmCtt1Y7/mSWUwmx1lc4+tc+TbZU9Lqn
XcBh1Qc9CqzHcIYQYyvlGoS1PvM6WbskD1etxaoveuQrGX5uwS2bvD590SwQ
HgXWd7hh1NXpcj3EWu95rXqlR77ecXbH3hJ3jWOt9/CUxKdD5irndQ9bjoZ1
vPkosB702lavPnnkW5Pq+qvN/bxWfdSjwHoRH8v47EbO9VjrR69PRe8Xe9T3
R747Ob6d3HwXa32J7fQg1lrHWl/iWMUSLtv8O9Z6E2cpk3Fyzj+x1p+4TOWC
AzavxlqP4qY1y7fLeQtrfYr7NahXe3O0dY61PsUzmrcrlbME1noVb2jXN8fm
HljrV3yq69ikOf/yWvVnjx3b47tojwPrWfzgz7mRNl/DWr96rfq1x75gRWt8
jxd2vWOtZ/G4Ejff1k7qtfk2fEz5OLC+xfHtghFrvYtXlHtx+0oVrPUvzul/
esdrh7X+9Vr1dvhkJTPheew7UOXHmdrDsNbLXqs+D3fbcbVUi/JY9Xo4sX0B
PvZVrDH88Kz5Xque73Fg/e31CbOd2/Wx71rtyLuubPNa9X+PA+t13Kr+9A3x
zmOt3/H7RolX1g7CWs/jwc2Wz58VcoNjredxlFaZp11JiLWex3P9b994ubHW
9153tQ/Ax750HQsPrl0Ja73vteobH/u2djnaa1YrrP0AXLxHxY5XBnmd2JSf
zXkcWP/j//W+1DzeHK9VP/k4sD+A69svNNZ+AQ4a+LDKrDNY+wO459AOZa48
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
R17BOr/FDU6vH5X2IdZ5Lk559t3Q42+wznfx03N5B7b6iXW+e9jxhvN9+4SL
iHXei3vZHzDW+S8ufDGUf4WBdR6MQ/9Xuv3jbFjnw/jU5bGtRhbGOi/Gk6/+
z7+iwjo/xrWux2x4vCbW+TFOcrNWnVbNsM6P8YNbc/0rTKzzZLz6zu3KK/th
nS/jLvdSli89Guu8Ged70Mq/osY6b/ZaeUvPfD8fri42cgnWeTQ++vhVobTr
sc6n8dignPmO78Y6r8ZV7YQI6/wax7MbwFjn2fj2y2AZVt7FOt/2Oqpp/4/+
zLf8dYnUpV9inX/j9m9HJnv8Fev8+4jjHO9PJxwZDus8HH8xx9+xsM7HvVZ+
1TOf/2EX43gyrPNzPOLLzMitMmOdp+MK366HD1cA63wdx/yRNPTK37HO1/HV
n82Cla6Gdb6OFwX/6+ujRljn67hlyOcfRrTHOm/HmUObHVevTXd+jtTPAufv
+F2Y7v5HGNZ5PN5lHudTsM7n8aDfzA4z1nk9Lh2x6K0Vq7HO33HkyMOu/r4D
6zweX4xidtCxzufxnGiRzo/4B+u83mvllT3zNYnxx+k0t7DO83HaWOYEAut8
H7+MfeVgy09Y5/14S9xEe8OGPupY5/+4r1leRPPaHkfmexaoD8B2uy8xVr2A
18pfw1FsQ/gzX/jET9Y9So9VX4DPJTEnUlj1Bnh6ss7L05TAqj/A9VJsWXSs
MlY9Ak6RypzIYdUn4CepC80M2warXgGvTztoyooeWPUKuEd6c0KJVb+AC2UM
P/rRBKx6Bhwyc4VhI+Zi1Tfgk1nMCS1WvQOemO1in2NbsOofcM0c8Xq2PIhV
D4ET5TIn1Fj1Efh+7kXtV1zDqpfAf+c1Lxivlb/3LFBPgTvbDXOs+gqcp2D7
hiOCH/PYVOfVbvwsUG+BfxTaUCdNZKz6C2yP++J7rTzAZ4H6DDymaL4/WqbB
qtfAfxTvVz5sTqz6DRy3pKnQwKrfwDdLhS7+ewWseg68rHSZwo9qY9V34LZl
zU/U62a24f5ZoP4DZy9/Pmearlj1IPhThVhZjw3Aqg/B+yqZTzRWvQge9odZ
0GHVj+DyVe8kW7EMq54ER69unhhY9SX4co3WcR/txao3wQtqrYkx4hRWfQlu
Xsc80bHqTXDGern8U2qsehP8pn7v0C1fY9WfeK38yGe+HQ3NGxWrPuW44wGN
g39b/htWvQouZT4ucbDqV3DE5mYGg1XPgv9tceb58KxY9S14Vqto/kceVr0L
bmQ3WLHqX3BqWwCBVQ+Dn7e/cTVMU6z6GLypo5mhex25/d0Fx0Zi5W9i+8fn
PgvU1+A/Ozc/X6ovVr2N18rvfOYr0vWv0w9HYtXf4LBmOjINqx4Hn+mR7VDq
xVj1OHhqr+57j67Fqs/Bdf40K1iseh2crO/3zWGOY9Xv4Ef9iq5ffgGrngev
HWB2ELDqe3C3QSeWP3yOVd+DCwyJtHj4F6x6nxOOg9svPFb9Dz5ulqMxsOp/
sH+xOaVFUqx6IFx9dKIJYTJh1QfhBGMbj16eD6teCN8dt2xYqVJY9UN45YQn
Ax9Wwaonwh0nZeo7vCFWfRHONaVzz9TtsOqH8LepW7oc7YVVT4QPTv/cvsUw
rPoiPMpsf07GqjfClWYParZ8Plb9EY4990jDUqu8bmriKNc/C9Qn4evzzIQa
q17Ja+Xd+tcrCyrUGH4Yq34Jt1406Y/U572OZAMingXqm3DWJRfLH72BVd+E
PyyNV7pFEFa9E96zvH7xMB+x6p/wkJWLCi8PedKx6qFwWXNcFhWrPgrbcoaE
WPVS+L817bMOT4dVP4XnrduQIXVur5UX/CxQX4WbbXif+mgxrHornH5TvuQt
KmHVX+HXm/slClMPqx4L+x82cZe3wqrPwv1twQhWvRYusbNMlIeDsOq3cITd
434bPh6rnguf33M+dOo5WPVdeOa+WMGPrsCq98INDtT+1nwzVr0XTnVo3sfQ
B7DqvfDTw3feLDuDVf+FNx5N9aLkVax6MNzreOsnDx5i1YN5rXh7rDxo//rk
5Jr7w95i1Y/h0Kdf30oV7JRj1ZPh02dyXTsS0esmNtDjWaC+DNvHVzysejNc
2/5CsOrPcJJ/g59Zlh2r3gw/vFDyeEkfVr0ZXn1p1KEH5bDqz3DXy2f2DquF
VY+G812NtjNVc6z6NBzsevUtRzpj1avhozdmrW/eH6t+DY+7dWNV6DFY9WzY
Tl9neK0872eBejcc/17zxSWXYtW/4dv3/5r3YD1WPRxe8fD5zGF7sOrjcPvH
2aamOolVL4dz2gkLVv0c/vJ0x+jm97Dq6bw2aYExfvrXJ8+/Dwv9CqveDo94
WXTQsm9Y9XenHVd8PaxvyfBY9XjYbn/E8lr56M8D9Xn42rtIXYclx6rXw4s+
/NEhVRas+jzc6tO01kcKYNXr4cxfrjRrXhqrfg+//5qoUejqWPV8Xtt4zujP
fbu+N667rDFWfR8e/HNZjZIdsOr9cOngQX88+BOr3g9HsRsIWPV/Xitf/rnP
bpdPxaoPxHPDbC1+ZCFWvSBuEu5L4eZrsOoHcbrfCucPvROrnhC/jDA417Kj
WPWFeGuko1lL/otVb4j7Rvkt44NbWPWGuHi0immGPcOqP8ThY0xOnuozVv0h
/l/MS4mOhD7jWPWI2B6vRseqT8T1TTlXEq8b75wXbHDq54H6RZwi/uIoyzJg
1TPioARmgx6rvhGvT5Q+zIMSWPWOuGeSDv4pO1b9Iy6UbOO3lA2w6iFxqBQf
Ph5ug1UfiU+mzP+2WU+sekk8KXX/F6GGYtVPYluuMxGrnhInNn+9eVj1lfh+
hrL+RypWvSVelWn8taFbseotcecs/1xKeQir/hLnzRb7n8PnsOox8Y/sdc40
u45Vn4mP5DQH3Fj1ml7rvofnvjG5zQsFq54TV8mbel+JEGcdq74Tx83fZuf9
yF7b9oH8zwP1n/iWeR0mwKoHxcsKvVmfMi1WfShu58u9+nBOr3U/xfNA/SjO
XvTPFc2KYtWT4s/F9i4OVRGrvhT7//Lzl9bBqifFw0uVmlWiJVY9KS5fevTU
+12x6ktxjLJnJwwdiFVviq+Uiz4m5Tis+lO80CyPZmHVn+IWdgGHVY+KM/1x
s2+oTVj1qV6bNP5XFZ773lZJ3mvpPqz6VbyzWouuJU5j1bPigTX+7nD/MlZ9
K/691ovWQx9g1bviSHWyN0/5Bqu+FV+o26PR4R9Y9a7nHM+uv7NuswhY9a+4
sdk+i4tVD4vTNC5WZWlKrHpY/KLJ8AolsmHVx+LNzU6Wvl8Iq14W92kRucTQ
slj1s7io3fDEqqfF4dpMz3+4KVZ9LT7b9mquZp2w6mvxtPaJs4Xqh1Vvi+t2
bJJx6Sis+luc3ByfTMeqx8WPuwQlv7/Ya90fgxvZwKLngfpdvK5b5sRD12HV
8+LuPbrES7kbq74XF+y1Nebh41j1vjjEn1+iNLuIVf+LT/QpHCHUXaz6Xzyh
3+AwS19g1QPjGgOOBi/xFas++H+OxxcZ9uN1SKx6Ydy5aJpvRX/Dqh/G1U35
alSsemKc126wYtUXYzsdSIRVb4x/lFj3ZlAKrPpjfLfkH6/Op8OqP8ZHSr19
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
Go9tIMb2cVAZKy8a23iual5nqXnt+NjwLwN50rikad+tiZUvjW35bR2svGmv
Q9kLw1760tpfMFYeNZ792gT4YeVTY3u61xQrrxr3sw2NXl8x17EkehnIs8Yv
3mTulakNVr41bmQLNLDyrvE/ZvrYCSv/Ghd/t6jbsq5Yedh4y7suXc/0cI3H
5mO7xvO+uP9viJWXjc3paKJ+WPnZrvF8eNCx5EDXeGyeNu7zYav/E4aVr41N
+s204Vh5267x2AkRVv42/t/HdP5vMFYeNy5mA4lc47H53K7xmPjLKVh53djG
WUzHyu92jce0q8xyjcfmeWNbTjIXK98b2+2gBVj53q7xfLnd5PtirLxvXP/r
hsaplmPlf+NzXwf7ZwCu8dg8cNd4vlX1/8qx8sGxOX2ftw4rL9w1nu/v/TMu
13jsBjee9t1sCGDlh3u9tvuPnUnSvPSFtYHEWPniuPePVv4ZMFbeOA76YQIZ
sPLHcb2fv9UcdxArjxyf/XnNv+LAyifHtnrhOFZeuWs8wcwGmms8Nr8cJw9u
VnhYeeZ4qo2Hxso3d43HxjthxTtgtW9itWfgJ7ac0jUeW06BdVyClY+OTbVH
ortYeemu8YQKU7bkA9d4bH46XhfKBCZi5anjZKHNjpBrPDZf3TWe0KbBFCtv
Hdt//Wus/HXcwxbMuMZj89jxozDPiuX6hJXPjk11TP2vWHntrvGENTuarvHY
wLa7jguGa+hbExwrvx2vNelnobDy3HHS8MELfQ+Lle+OJ4X/p0CqCFh57zjk
b0vyV4jsGo/Nf8f29RENKw8e2zjDmFj58K7x2IAo13hsXjy27QbxsfLjcQHb
MOMaj82Td40n4qgchZJh5cvjxPYAECtvHk+MlCHbuDSu8dj8eRw88rcsW9Jj
5dFjW32VCSuf3jUes3zI5hqPzavHNaJ0zJgpJ1Z+PT4epUiG6nlc47F59q7x
RI2Wvl9+rHx7vCqqWYBh5d3jRDYA2jUem3+Px0cbmvp9caw8fBzMBmJg5eO7
xhM9dcqSZV3jsfn4+F50U9CLlZePq5vto8qu8dj8fNd4TNxvVaw8fWzjfGpg
5evjv007Xh3XeGzePrblc/Wx8vexqe6r3wgrj981nlhr4w9r6hqPLSDEnWIP
iLemBVZeP75r0htbu8Zj8/td44mTLM73dlh5/thu/3fCyvfHeeIeilmhq2s8
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
Hhf4ivX2/zv+///n//sXf///ABeNUXA=
         "], {{{}, {}, {}, {}, {}, {}, {}, {
            EdgeForm[], 
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             Opacity[0.2]], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwl3MMSIAAOQMGxbdu2bdu2bdu2bdu2bdu2Z2d7aw9d+YDUu6WSsFH7Su0C
BQgQICDhogcIMIKRDGcYQxnCYAYxkAH0px996UNvetGTHnSnG13pQmc60ZEO
tKcdbWlDa1rRkhY0pxlNaUJjGtGQBtSnHnWpQ21qUZMaVKcaValCZSpRkQqU
pxxlKUNpSlGSEhSnGEUpQmEKUZAC5CcfeclDbnKRkxxkJxtZyUJmMpGRDKQn
HWlJQ2pSkZIUJCcZSUlCYhKRkATEJx5xiUNsYhGTGEQnGlGJQmQiEZEIhI/+
/32HJQyhCUVIQhCcYAQlCIEJREAC8C9agAD/4S9/+M0vfvKD73zjK1/4zCc+
8oH3vOMtb3jNK17yguc84ylPeMwjHvKA+9zjLne4zS1ucoPrXOMqV7jMJS5y
gfOc4yxnOM0pTnKC4xzjKEc4zCEOcoD97GMve9jNLnayg+1sYytb2MwmNrKB
9axjLWtYzSpWsoLlLGMpS1jMIhaygPnMYy5zmM0sZjKD6UxjKlOYzCQmMoHx
jGMsYxjNKEYyguEMYyhDGMwgBjKA/vSjL33oTS960oPudKMrXehMJzrSgfa0
oy1taE0rWtKC5jSjKU1oTCMa0oD61KMudahNLWpSg+pUoypVqEwlKlKB8pSj
LGUoTSlKUoLiFKMoRShMIQpSgPzkIy95yE0ucpKD7GQjK1nITCYykoH0pCMt
aUhNKlKSguQkIylJSEwiEpKA+MQjLnGITSxiEoPoRCMqUYhMJCISgfCEIyxh
CE0oQhKC4AQjKEEITCACEoB/UfXPX/7wm1/85Aff+cZXvvCZT3zkA+95x1ve
8JpXvOQFz3nGU57wmEc85AH3ucdd7nCbW9zkBte5xlWucJlLXOQC5znHWc5w
mlOc5ATHOcZRjnCYQxzkAPvZx172sJtd7GQH29nGVrawmU1sZAPrWcda1rCa
VaxkBctZxlKWsJhFLGQB85nHXOYwm1nMZAbTmcZUpjCZSUxkAuMZx1jGMJpR
jGQEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdKQD7WlHW9rQmla0
pAXNaUZTmtCYRjSkAfWpR13qUJta1KQG1alGVapQmUpUpALlKUdZylCaUpSk
BMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQkA+lJR1rSkJpUpCQF
yUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC4QlHWMIQmlCEJATB
CUZQghCYQAQkAP+i6J+//OE3v/jJD77zja984TOf+MgH3vOOt7zhNa94yQue
84ynPOExj3jIA+5zj7vc4Ta3uMkNrnONq1zhMpe4yAXOc46znOE0pzjJCY5z
jKMc4TCHOMgB9rOPvexhN7vYyQ62s42tbGEzm9jIBtazjrWsYTWrWMkKlrOM
pSxhMYtYyALmM4+5zGE2s5jJDKYzjalMYTKTmMgExjOOsYxhNKMYyQiGM4yh
DGEwgxjIAPrTj770oTe96EkPutONrnShM53oSAfa0462tKE1rWhJC5rTjKY0
oTGNaEgD6lOPutShNrWoSQ2qU42qVKEylahIBcpTjrKUoTSlKEkJilOMohSh
MIUoSAHyk4+85CE3uchJDrKTjaxkITOZyEgG0pOOtKQhNalISQqSk4ykJCEx
iUhIAuITj7jEITaxiEkMohONqEQhMpGISATCE46whCE0oQhJCIITjKAEITCB
CEgA/kXWP3/5w29+8ZMffOcbX/nCZz7xkQ+85x1vecNrXvGSFzznGU95wmMe
8ZAH3Oced7nDbW5xkxtc5xpXucJlLnGRC5znHGc5w2lOcZITHOcYRznCYQ5x
kAPsZx972cNudrGTHWxnG1vZwmY2sZENrGcda1nDalaxkhUsZxlLWcJiFrGQ
BcxnHnOZw2xmMZMZTGcaU5nCZCYxkQmMZxxjGcNoRjGSEQxnGEMZwmAGMZAB
9KcffelDb3rRkx50pxtd6UJnOtGRDrSnHW1pQ2ta0ZIWNKcZTWlCYxrRkAbU
px51qUNtalGTGlSnGlWpQmUqUZEKlKccZSlDaUpRkhIUpxhFKUJhClGQAuQn
H3nJQ25ykZMcZCcbWclCZjKRkQykJx1pSUNqUpGSFCQnGUlJQmISkZAExCce
cYlDbGIRkxhEJxpRiUJkIhGRCIQnHGEJQ2hCEZIQBCcYQQlCYAIRkAD8i6R/
/vKH3/ziJz/4zje+8oXPfOIjH3jPO97yhte84iUveM4znvKExzziIQ+4zz3u
cofb3OImN7jONa5yhctc4iIXOM85znKG05ziJCc4zjGOcoTDHOIgB9jPPvay
h93sYic72M42trKFzWxiIxtYzzrWsobVrGIlK1jOMpayhMUsYiELmM885jKH
2cxiJjOYzjSmMoXJTGIiExjPOMYyhtGMYiQjGM4whjKEwQxiIAPoTz/60ofe
9KInPehON7rShc50oiMdaE872tKG1rSiJS1oTjOa0oTGNKIhDahPPepSh9rU
oiY1qE41qlKFylSiIhUoTznKUobSlKIkJShOMYpShMIUoiAFyE8+8pKH3OQi
JznITjaykoXMZCIjGUhPOtKShtSkIiUpSE4ykpKExCQiIQmITzziEofYxCIm
MYhONKIShchEIiIRCE84whKG0IQiJCEITjCCEoTABCIgAfgXUf/85Q+/+cVP
fvCdb3zlC5/5xEc+8J53vOUNr3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1u
cJ1rXOUKl7nERS5wnnOc5QynOcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnaw
nW1sZQub2cRGNrCedaxlDatZxUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCd
aUxlCpOZxEQmMJ5xjGUMoxnFSEYwnGEMZQiDGcRABtCffvSlD73pRU960J1u
dKULnelERzrQnna0pQ2taUVLWtCcZjSlCY1pREMaUJ961KUOtalFTWpQnWpU
pQqVqURFKlCecpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQl
C5nJREYykJ50pCUNqUlFSlKQnGQkJQmJSURCEhCfeMQlDrGJRUxiEJ1oRCUK
kYlERCIQnnCEJQyhCUVIQhCcYAQlCIEJREAC8C+C/vnLH37zi5/84Dvf+MoX
PvOJj3zgPe94yxte84qXvOA5z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUu
c4mLXOA85zjLGU5zipOc4DjHOMoRDnOIgxxgP/vYyx52s4ud7GA729jKFjaz
iY1sYD3rWMsaVrOKlaxgOctYyhIWs4iFLGA+85jLHGYzi5nMYDrTmMoUJjOJ
iUxgPOMYyxhGM4qRjGA4wxjKEAYziIEMoD/96EsfetOLnvSgO93oShc604mO
dKA97WhLG1rTipa0oDnNaEoTGtOIhjSgPvWoSx1qU4ua1KA61ahKFSpTiYpU
oDzlKEsZSlOKkpSgOMUoShEKU4iCFCA/+chLHnKTi5zkIDvZyEoWMpOJjGQg
PelISxpSk4qUpCA5yUhKEhKTiIQkID7xiEscYhOLmMQgOtGIShQiE4mIRCA8
4QhLGEITipCEIDjBCEoQAhOIgATgX3j985c//OYXP/nBd77xlS985hMf+cB7
3vGWN7zmFS95wXOe8ZQnPOYRD3nAfe5xlzvc5hY3ucF1rnGVK1zmEhe5wHnO
cZYznOYUJznBcY5xlCMc5hAHOcB+9rGXPexmFzvZwXa2sZUtbGYTG9nAetax
ljWsZhUrWcFylrGUJSxmEQtZwHzmMZc5zGYWM5nBdKYxlSlMZhITmcB4xjGW
MYxmFCMZwXCGMZQhDGYQAxlAf/rRlz70phc96UF3utGVLnSmEx3pQHva0ZY2
tKYVLWlBc5rRlCY0phENaUB96lGXOtSmFjWpQXWqUZUqVKYSFalAecpRljKU
phQlKUFxilGUIhSmEAUpQH7ykZc85CYXOclBdrKRlSxkJhMZyUB60pGWNKQm
FSlJQXKSkZQkJCYRCUlAfOIRlzjEJhYxiUF0ohGVKEQmEhGJQHjCEZYwhCYU
IQlBcIIRlCAEJhABCcC/cPrnL3/4zS9+8oPvfOMrX/jMJz7ygfe84y1veM0r
XvKC5zzjKU94zCMe8oD73OMud7jNLW5yg+tc4ypXuMwlLnKB85zjLGc4zSlO
coLjHOMoRzjMIQ5ygP3sYy972M0udrKD7WxjK1vYzCY2soH1rGMta1jNKlay
guUsYylLWMwiFrKA+cxjLnOYzSxmMoPpTGMqU5jMJCYygfGMYyxjGM0oRjKC
4QxjKEMYzCAGMoD+9KMvfehNL3rSg+50oytd6EwnOtKB9rSjLW1oTSta0oLm
NKMpTWhMIxrSgPrUoy51qE0talKD6lSjKlWoTCUqUoHylKMsZShNKUpSguIU
oyhFKEwhClKA/OQjL3nITS5ykoPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQj
KUlITCISkoD4xCMucYhNLGISg+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMo
QQhMIAKG+9+hmP7D6p+//OE3v/jJD77zja984TOf+MgH3vOOt7zhNa94yQue
84ynPOExj3jIA+5zj7vc4Ta3uMkNrnONq1zhMpe4yAXOc46znOE0pzjJCY5z
jKMc4TCHOMgB9rOPvexhN7vYyQ62s42tbGEzm9jIBtazjrWsYTWrWMkKlrOM
pSxhMYtYyALmM4+5zGE2s5jJDKYzjalMYTKTmMgExjOOsYxhNKMYyQiGM4yh
DGEwgxjIAPrTj770oTe96EkPutONrnShM53oSAfa0462tKE1rWhJC5rTjKY0
oTGNaEgD6lOPutShNrWoSQ2qU42qVKEylahIBcpTjrKUoTSlKEkJilOMohSh
MIUoSAHyk4+85CE3uchJDrKTjaxkITOZyEgG0pOOtKQhNalISQqSk4ykJCEx
iUhIAuITj7jEITaxiEkMohONqEQhMpGISATCE46whCE0oQhJCIITjKAEITCB
CEgA/oXRP3/5w29+8ZMffOcbX/nCZz7xkQ+85x1vecNrXvGSFzznGU95wmMe
8ZAH3Oced7nDbW5xkxtc5xpXucJlLnGRC5znHGc5w2lOcZITHOcYRznCYQ5x
kAPsZx972cNudrGTHWxnG1vZwmY2sZENrGcda1nDalaxkhUsZxlLWcJiFrGQ
BcxnHnOZw2xmMZMZTGcaU5nCZCYxkQmMZxxjGcNoRjGSEQxnGEMZwmAGMZAB
9KcffelDb3rRkx50pxtd6UJnOtGRDrSnHW1pQ2ta0ZIWNKcZTWlCYxrRkAbU
px51qUNtalGTGlSnGlWpQmUqUZEKlKccZSlDaUpRkhIUpxhFKUJhClGQAuQn
H3nJQ25ykZMcZCcbWclCZjKRkQykJx1pSUNqUpGSFCQnGUlJQmISkZAExCce
cYlDbGIRkxhEJxpRiUJkIhGRCIQnHGEJQ2hCEZIQBCcYQQlCYAIRkAD8C61/
/vKH3/ziJz/4zje+8oXPfOIjH3jPO97yhte84iUveM4znvKExzziIQ+4zz3u
cofb3OImN7jONa5yhctc4iIXOM85znKG05ziJCc4zjGOcoTDHOIgB9jPPvay
h93sYic72M42trKFzWxiIxtYzzrWsobVrGIlK1jOMpayhMUsYiELmM885jKH
2cxiJjOYzjSmMoXJTGIiExjPOMYyhtGMYiQjGM4whjKEwQxiIAPoTz/60ofe
9KInPehON7rShc50oiMdaE872tKG1rSiJS1oTjOa0oTGNKIhDahPPepSh9rU
oiY1qE41qlKFylSiIhUoTznKUobSlKIkJShOMYpShMIUoiAFyE8+8pKH3OQi
JznITjaykoXMZCIjGUhPOtKShtSkIiUpSE4ykpKExCQiIQmITzziEofYxCIm
MYhONKIShchEIiIRCE84whKG0IQiJCEITjCCEoTABCIgAfgXSv/85Q+/+cVP
fvCdb3zlC5/5xEc+8J53vOUNr3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1u
cJ1rXOUKl7nERS5wnnOc5QynOcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnaw
nW1sZQub2cRGNrCedaxlDatZxUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCd
aUxlCpOZxEQmMJ5xjGUMoxnFSEYwnGEMZQiDGcRABtCffvSlD73pRU960J1u
dKULnelERzrQnna0pQ2taUVLWtCcZjSlCY1pREMaUJ961KUOtalFTWpQnWpU
pQqVqURFKlCecpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQl
C5nJREYykJ50pCUNqUlFSlKQnGQkJQmJSURCEhCfeMQlDrGJRUxiEJ1oRCUK
kYlERCIQnnCEJQyhCUVIQhCcYAQlCIEJREAC8C+k/vnLH37zi5/84Dvf+MoX
PvOJj3zgPe94yxte84qXvOA5z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUu
c4mLXOA85zjLGU5zipOc4DjHOMoRDnOIgxxgP/vYyx52s4ud7GA729jKFjaz
iY1sYD3rWMsaVrOKlaxgOctYyhIWs4iFLGA+85jLHGYzi5nMYDrTmMoUJjOJ
iUxgPOMYyxhGM4qRjGA4wxjKEAYziIEMoD/96EsfetOLnvSgO93oShc604mO
dKA97WhLG1rTipa0oDnNaEoTGtOIhjSgPvWoSx1qU4ua1KA61ahKFSpTiYpU
oDzlKEsZSlOKkpSgOMUoShEKU4iCFCA/+chLHnKTi5zkIDvZyEoWMpOJjGQg
PelISxpSk4qUpCA5yUhKEhKTiIQkID7xiEscYhOLmMQgOtGIShQiE4mIRCA8
4QhLGEITipCEIDjBCEoQAhOIgATgXwj985c//OYXP/nBd77xlS985hMf+cB7
3vGWN7zmFS95wXOe8ZQnPOYRD3nAfe5xlzvc5hY3ucF1rnGVK1zmEhe5wHnO
cZYznOYUJznBcY5xlCMc5hAHOcB+9rGXPexmFzvZwXa2sZUtbGYTG9nAetax
ljWsZhUrWcFylrGUJSxmEQtZwHzmMZc5zGYWM5nBdKYxlSlMZhITmcB4xjGW
MYxmFCMZwXCGMZQhDGYQAxlAf/rRlz70phc96UF3utGVLnSmEx3pQHva0ZY2
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
RjCcYQxlCIMZxEAG0J9+9KUP/wWAE4eY
               "]]}]}, {}, {}}, {{}, {}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.003666666666666667], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwl3EMUIMuyBdDXtm3btm3btm3btm3btm3b9u2/e/3BXjXLWVVlRkacBA3b
VWwb4H//+9+waP/7379nQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRMXS
/4tODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxkISvZ
yE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylShKtWo
Tg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr3ehO
D3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYyiclMYSrTmM4M
ZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52
sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq17jODW5y
i9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf+M4PfvKL
3/zhP/7y7+UPQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxi
EZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKR
mzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGb
OtSlHvVpQEMa0ZgmNKUZzWlBS1rRmjb8+3i3oz0d6EgnOtOFrnSjOz3oSS96
04e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYz
h7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOH
vexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1uc4e7
3OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37zh//4
y78ffwACEojABCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxiEovYxCEu
8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5
yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWo
TwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove9KEv/ejP
AAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7zmM8C
FrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vYzwEO
cojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jPAx7y
iMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84T/+8m/TH4CA
BCIwQQhKMIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQk
IjFJSEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSi
MEUoSjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIx
TWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3fehLP/ozgIEMYjBD
GMowhjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtY
yjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CDHOIwRzjK
MY5zgpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc84jFPeMoz
nvOCl7ziNW94yzve84GPfOIzX/jKN77zg5/84jd/+I+//DvwByAggQhMEIIS
jOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM
5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0
oCWtaE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4Yxg
JKMYzRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAl
q1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSn
OM0ZznKO81zgIpe4zBWuco3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94
zRve8o73fOAjn/jMF77yje/84Ce/+M0f/uMv/4p9AQhIIAIThKAEIzghCEko
QhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpS
k4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpT
hrKUozwVqEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOG
trSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShGM4ax
jGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWs
Yz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zj
PBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9
H/jIJz7zha984zs/+MkvfvOH//jLv0J/AAISiMAEISjBCE4IQhKK0IQhLOEI
TwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhP
BjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8F
KlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc6
0onOdKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjPBCYy
iclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJ
zWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconL
XOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zhP/7y75IvAAEJRGCCEJRgBCcEIQlFaMIQlnCEJwIRiURk
ohCVaEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGay
kJVsZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQ
lWpUpwY1qUVt6lCXetSnAQ1pRGOa0JRmNKcFLWlFa9rQlna0pwMd6URnutCV
bnSnBz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVp
TGcGM5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1s
Zwc72cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1zn
Bje5xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcH
P/nFb/7wH3/5d8EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spOD
nOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa
1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570
ojd96Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxi
NnOYyzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3
e9jLPvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3
uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/ziN3/4
j7/8a+4JQEACEZggBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4
xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSl
HvVpQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSlG93pQU960Zs+9KUf
/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7z
WcBCFrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5
wEEOcZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nA
Qx7xmCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/8x1/+NfYF
ICCBCEwQghKM4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQg
IYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAg
hShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGN
aEwTmtKM5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMY
zBCGMozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jM
EpayjOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwR
jnKM45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe
8oznvOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+4y//mnoDEJBABCYI
QQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJ
SUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQQhSmCEUp
RnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBGNKYJTWlG
c1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYPfelHfwYwkEEMZghDGcZw
RjCSUYxmDGMZx3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJW
sJJVrGYNa1nHejawkU1sZgtb2cZ2drCTXexmD3vZx34OcJBDHOYIRznGcU5w
klOc5gxnOcd5LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCS
V7zmDW95x3s+8JFPfOYLX/nGd37wk1/85g//8Zd/Df0BCEggAhOEoAQjOCEI
SShCE4awhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJ
KlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkp
SlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSjOS1oSSta
04a2tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYz
hrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOG
taxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4az
nOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre8
4z0f+MgnPvOFr3zjOz/4yS9+84f/+Mu/YZ4ABCQQgQlCUIIRnBCEJBShCUNY
whGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rS
kZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUpQlGKUZwSlKQUpSlDWcpR
ngpUpBKVqUJVqlGdGtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBa0pBWtaUNb2tGe
DnSkE53pQle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jGMZ4J
TGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1s
ZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zk
Epe5wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQT
n/nCV77xnR/85Be/+cN//OXfIF8AAhKIwAQhKMEITghCEorQhCEs4QhPBCIS
ichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJ
zGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUoTwUqUonK
VKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt7WhPBzrSic50
oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxh
KtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr
29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4
zg9+8ovf/OE//vJviDcAAQlEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVo
RCcGMYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxk
Jwc5yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSn
BjWpRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcH
PelFb/rQl370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYz
mcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW72sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nF
be5wl3vc5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv
/vAff/k3wB+AgAQiMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQi
NnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3
echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1
qEs96tOAhjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33o
Sz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jL
POazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+
9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u
84CHPOIxT3jKM57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3f/iPv/wL
7whAQAIRmCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7x
SUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kp
QEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlA
QxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR/9GcBA
BjGYIQxlGMMZwUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIW
sZglLGUZy1nBSlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+znAQQ5x
mCMc5RjHOcFJTnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGY
JzzlGc95wUte8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGbP/zHX/4F9wQgIIEI
TBCCEozghCAkoQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAhiUhM
EpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s5CAnuchNHvKSj/wUoCCFKEwR
ilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerUoCa1qE0d6lKP+jSgIY1oTBOa
0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSgJ73oTR/60o/+DGAggxjMEIYy
jOGMYCSjGM0YxjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM
5axgJatYzRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozj
nOAkpzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe8
4CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNH/7jL/9CuwIQkEAEJghBCUZw
QhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5xiUd8EpCQRCQmCUlJRnJS
kJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJR34KUJBCFKYIRSlGcUpQ
klKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalHfRrQkEY0pglNaUZzWtCS
VrSmDW1pR3s60JFOdKYLXelGd3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJR
jGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWs
Zg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zm
DGc5x3kucJFLXOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYN
b3nHez7wkU985gtf+cZ3fvCTX/zmD//xl3+BfQEISCACE4SgBCM4IQhJKEIT
hrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4xCM+CUhIIhKThKQkIzkpSEkqUpOG
tKQjPRnISCYyk4WsZCM7OchJLnKTh7zkIz8FKEghClOEohSjOCUoSSlKU4ay
lKM8FahIJSpThapUozo1qEktalOHutSjPg1oSCMa04SmNKM5LWhJK1rThra0
oz0d6EgnOtOFrnSjOz3oSS9604e+9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxj
PBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9
G9jIJjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwX
uMglLnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4
yCc+84WvfOM7P/jJL37zh//4y7+wzgAEJBCBCUJQghGcEIQkFKEJQ1jCEZ4I
RCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxk
JBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlCUYpRnBKUpBSlKUNZylGeClSk
EpWpQlWqUZ0a1KQWtalDXepRnwY0pBGNaUJTmtGcFrSkFa1pQ1va0Z4OdKQT
nelCV7rRnR70pBe96UNf+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKT
mcJUpjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZ
wla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nC
Va5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJX
vvGdH/zkF7/5w3/85V9QbwACEojABCEowQhOCEISitCEISzhCE8EIhKJyEQh
KtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr
2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrV
qE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93o
Tg960ove9KEv/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jO
DGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4O
drKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1u
covb3OEu97jPAx7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37y
i9/84T/+8i+kOwABCURgghCUYAQnBCEJRWjCEJZwhCcCEYlEZKIQlWhEJwYx
iUVs4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQlnSkJwMZyURmspCVbGQnBznJ
RW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCWcpSnAhWpRGWqUJVqVKcGNalF
bepQl3rUpwENaURjmtCUZjSnBS1pRWva0JZ2tKcDHelEZ7rQlW50pwc96UVv
+tCXfvRnAAMZxGCGMDTa/2fD/x9LXKSa
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.003666666666666667], 
             AbsoluteThickness[1.6], 
             GrayLevel[0.5]], 
            LineBox[{6024, 6025}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
       DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        AxesOrigin -> {0, 0}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
        Identity, AspectRatio -> 1, Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox["\"Recall\"", TraditionalForm], None}, {
           FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], 
        Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
        Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
         "PointLegend", DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7075201135553207`*^9, 
  3.707582458635538*^9},ExpressionUUID->"f43d3bed-80f4-4e09-9b25-\
e18ab51def27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cnMeasurments", "[", 
  RowBox[{"\"\<TopConfusions\>\"", "\[Rule]", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.707520432452772*^9, 
  3.707520479669445*^9}},ExpressionUUID->"d0ec6224-8adf-4d91-897f-\
104ae4bca717"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"sad\"\>", "\[Rule]", "\<\"angry\"\>"}], ",", 
   RowBox[{"\<\"neutral\"\>", "\[Rule]", "\<\"sad\"\>"}], ",", 
   RowBox[{"\<\"happy\"\>", "\[Rule]", "\<\"neutral\"\>"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.707520438420039*^9, 3.707520479893762*^9}, 
   3.707582531495617*^9},ExpressionUUID->"f0790dc8-2a5c-47e5-b8d5-\
265f7138c6c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cnMeasurments", "[", "\"\<TruePositiveExamples\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.7075207925272417`*^9, 3.707520797902125*^9}, 
   3.707521070575733*^9},ExpressionUUID->"aed3f47c-06df-4576-a9fe-\
2e5b525f0a60"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"happy\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJx92Avs1+MeB/BUS3QZ3deFWpTLqJSVohaJVoqOxKlJqfjTbRWV0YW5prln
EYe5FOaaocIkyiqREdKQapWinZzOsbmd13nep9862znn2f7fPf/v5fm8n/fn
/bk8vzajJg4eW71atWpTarsMHjmt9+TJI2f86Qj/DJkwpeqKCWNG95swdcwV
YyZ3G1XDzY7//vvX/MILL+zfv//ZZ599+umnu1566aXnnnvugDLOP//8QYMG
XXTRRaNHj7744ov9a3L11VdfddVVJu57ec6cOQsXLnz99dfXrVv35Zdfbtmy
ZefOnd9///2ePXtczbdu3erm559/vn79+mXLls2fP98KnTt39u0rr7wyYsSI
k046qU+fPpdccsmwYcMmTpx42WWX+bdnz57dunUD7LzzzoOqb9++/cs455xz
IPHOBRdc4JOxY8dWVVW5umkjU6dOffjhh1999dWPPvqI0V27doHxww8//Pjj
j/v27du7d69/3dyxY8dXX30Fz9tvv/3UU0/deeedTFth06ZN11133WmnnQbV
tddee+utt957771Dhgzp1auXm127dgWgTxm9e/c+66yzevToceaZZ+IBS/D4
auTIkZgZOnQo9kzuueeeF154Yc2aNd9+++3u3bth+Ot/DtiwBM/XX3+9YcMG
eJ5//vm777572rRpgwcP/nMZMXHNNddcf/31M2bMsE2e6tKlS/yFKPC6d+9+
6qmnYrVfv34Yw5LPQyn8/jW3naeffvq999775ptvGMXGT2X8rQwTeBBVwfPp
p5++8847L7300l133cVlNmj9li1bdujQAQM2aGVOZJH1U045BRKQzDmuY8eO
XjPHGHgUhSLv2whX+hbPjz766FtvvbV582bMxEFB8vcy9u/fv68MLqMiBH72
2WcrVqyAh78IwDpWPvHEE5s2bcoQj4RzeFARfkw6deoEyfHHHw9SzzLwGUXR
s42YTJo06aGHHiJOu46bsBHr/wfPxo0bkclf8+bNw3NUweixxx7bvn172oBk
1KhRdNKlDGBCy3HHHXfCCSeQE9jej9r7luFfYiabJUuWkGhoqbjJFYx/lAFS
XBYJUTv1rl27Fj8PPPDA8OHDeeGMM86wU0h47ZhjjuEFkYs0YLgytADTtm3b
k08+OQhBInUwwDYhtttuu42Gv/jiC2D2HzT+K54oHKRt27YhU4i9/PLLjzzy
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
                  "], {{0, 
                  48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxt2QnQV/MeBnBzs9SolGtpuZNSEVmakKJSGCRbq8kylBZpvGkhWTK0jOzM
K7uETPb2MihCKE2WkIpq2jdddScqy/3c89z3P8y9v5nOnP95z/n9nt/zfb7P
93tODXoN7Nz3b/vss8+Qyg6dew5rP3hwz+FdavjRrWxI/35lfXp3KBvap1+f
wS17VXKx2X///ef8l19+2bVr15YtW4YMGdKoUaOjjz7asUGDBvXq1WvSpMnp
p5/eoUOHG2644cEHH5wwYcJrr732xBNPPPDAA36OGTPmueeee+mllxwff/zx
hx9++I477jj77LPz1HHHHVeap2HDho0bNz7mmGOOPfZYF4844ogjjzzSz1NO
OcWxTp06NWvWrF27tjutvnPnTng2btx48cUXH3744SeccIJJ3HbUUUc5P//8
8+GcMmXKhx9++Nlnny1fvnzZsmXffffdN99843zVqlXff//9kiVLFi1aNH/+
/FdffRWkM844o3379i1btvS4dQ877LCDi2HFfxTj0EMPdfGQQw5xDjaQkPgr
2PXr1//pp5927949ceLEunXrQuKio6lOOumk1q1b9+vX75lnnoFkw4YN/yzG
1q1bgd+8efO2bdu2b9/+448/btq0yZU1a9YA+c4779x0002tWrU699xzHZs2
bWohADBw0EEHwQBJ9erVwbP3vxfD3i2HwODBjyVuueUWN4RAsPF2/PHHX3LJ
Jffee+/7779vLUjcCfyOHTscne+oGH5CZRK3rV69et68eSiFp23btlnITqGC
weomd6xcuXJ+ghcehEOgrWuh6dOnn3POObD5K1R2YZITTzyxb9++b7755g8/
/BAwWdrx559//lcxdhXDFXgoEEtQYXLx4sUEdumll7Zr1w7PprJNyoHK0hYF
pkqVKtWLgbpatWohR+D8yfaHDx+eOz2SEIu7yN52221UYRWh2VkxwCjhyQie
bRVDKLFEVzNmzBg5cmTnzp1pCaRmzZo1b95cBJ0kjgkZPAJKQhYFgAivv/76
RBZFSQQ4xe6hhx769NNPRcHeSSXkZISZRNDYXjHCkkeWLl0qBWbOnPnYY4/h
uU2bNmCcfPLJgmKnJcZgAKZq1aoJpZ8S1s0RGPYcBVT0R40aNWnSpE8++cRm
161bR7RBlREY4pifYUaw3LZ+/XrkyEHcwmMSVjBw4EBWIEFatGgRV4laCCwm
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
                  "], {{0, 48}, {
                  48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxd2Q3Ml+MeB/B2jlkT8zjCvM5RUk0Ki+a0iB0TYullGaLW06uVXix5OxNh
5G2kaEVYimqdIiuFJoo5Cu1Eh3mrMy+FUZ1aJ87nXN/zXHt2flv37ue+//d1
fa/v7/t7ua7+OGTsFcN+16JFiwktXa4YPKnn+PGDJ/dt8Ef/MRNGDh/TOLTX
mImNwxvHdxvyew+7/O/ff+9XrVq1fPnyJUuWPP/8888888yzzz7r+tRTTz39
9NNu5s+f79XixYtffPHF5557bs6cOU8++eQTTzzhOmvWLH/62YIFCxYuXOhn
fy32yiuvvPrqq4Z9/fXX33rrrbfffnvdunXvvPPO34pt3Ljxww8/3LRp0yef
fPKPYp9++um2bdu+//77HTt2/PzzzwFjTCOb6LHHHps2bdpfmuzuu++ePn36
vHnzXnjhBYDnzp0LxsyZMx9//HHX2bNn+wpmeGAGxlDwrF69Gpi1a9euKwYV
PO++++577733/vvvb9iw4e/FQALms88++/rrr7/55huQ4DEIMFb68MMP33bb
bePGjRs6dOjAgQP79+8/ZMiQxsbG4cOHe3jffffhBIAZM2bA/Oijj4IEG4Rw
QgvSokWLoLJA5Lz55puQIMfNmjVr3njjDVdPoEJRxRN+Pv/881AEjxGs8f77
7584ceKgQYOuuuqqiy+++E/Fzj333EsuucSTyZMnjxo1asyYMeiaVgx4vKGI
Z4OHQ0GyuhUrVsBjdrQA437lypXxIFTBiaLNmzdv2bIFmC+++OKrr77aunXr
t99++9NPP1n1nXfeiQdTd+vWrX379p06dWrTps3xxx9/yimndOzY8eyzz778
8ssnTZp0/fXXjxgx4pZbbpkyZcrUqVMfeeSR4OEvi1pS7KWXXjLva6+9FjwA
+BPCl4txZbDxJg9+9NFH+OGsfxb77rvvfvjhByo18u233275HHTppZfiB4zO
nTujqG3btoMHD77uuuvOOussPxhR7KabbvJ7LPEdf4WWZcuWmS6ygWRtsTXF
yMmrZcWiMbCB9ApR0fP27duBwU8k51uL8hXmCYODhg0bdt555zU0NHTp0oW6
evToEUjk5ErqXIwfy0FO1g5MRMvcrF+/nn7CEk5gSKiSWYLRV1598MEH9IOc
H3/88ZdffvEJMIZaVQyfkNOkD8G44447KMcVRX369OnZsyev4YfLHnroIfKG
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
                  
                  "], {{0, 48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
M03KoqmIVP4HFy3xEw==
                  "], {{0, 48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
LAMSREH4H3ax9Qg=
                  "], {{0, 48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
1av/BeGc6Ws=
                  "], {{0, 48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
/zSW9g8QWYws
                  "], {{0, 48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
                  
                  "], {{0, 48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
                  "], {{0, 48}, {
                  48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxN2Qvoz+ceB3COSEIumVziHOTSyCU0MjKxHRNyaTSE/M0lhIUzcmmEDmuE
hZBLyCa0aQgxoUMuISM0comyCaFGc17n+z77t6d8+/6/v+f7fN7P+/3+fJ7n
+frH6CkDxv6tTJky0yu6DBg1s/u0aaP+NbCaPwZPnj7+s8klY/45+fOSz0qm
vTe6nIdt/v/vf/fnzp0bN25c8+bN3yta+/btW7du3blz508//XTo0KGjizZl
ypRZs2Z9XrSSkpI+ffp88sknnrvfunXr5cuXb9y48eDBg2fPnr18+fLKlSsr
Vqz4+OOPmzVr1qRJk549e3755Zd79+49fPjw8ePHfyrasWPH7t69+8svv/z4
449btmzx55EjRw4cOPCfok2YMKFjx47AQNKqVSvYOnXqNHz4cOFGFW369Olz
585dtGiRQKtXr16+fPm/i/b1118b5MKFCyZ1/vx548O2cePGqVOn9uvXzyDt
2rUbPHjwvHnzvv3226NHj4IkLjwXL150/eKLL5YuXbpy5coNGzbo8P333+/f
vx9CM+3QoUPbtm3btGnz7rvv1q9f/6OPPpo8efKYMWNGjhwJzPz5881x2bJl
33zzzc6dO3/44QfXPXv2eNd0Tp8+LcqJEydOnjxpfAAQ64qiDz74oH///oYy
EeEOHjwoohuzQLXBV61aBY85Gvm7774zsii9e/cGBi0tWrT4e9FGjBhBRBS5
zp49GzOLFy/+6quvTATzYBjWfPF/9uxZeA4dOoRzgWbMmNGjR49u3bqRe3DR
DO4eFeEhzYBGXr9+vYf43L59O93N0QheIRZawGjUqFHt2rWxBI9BvGL8JUuW
eCtK7dixwxzhwTxmotSZM2eQ4/m+ffuYYeLEid27d0fR9KINGzYMJJbDdp6w
AfuJO3PmTKKH89CuoYVnGI9M9erVq1OnDpKHDBkyYMAAIy9cuBCl69at89aa
NWtQihahsYEZbuEENyCRAEu4ghbn4uq/adMmEcePH480Ubp27Qqq6csasRo2
bGiy6AJGT5xTvEGDBk2bNgWjbt26IKHIdPr27Tto0CASGxkexGLV3HkGHmAo
BcOlS5euXr0KFZY89MSf169fP3XqFD5NgbjeEnTs2LEsmowTApJq1aoJygZ6
wmMW3pJ0jRs3BqlmzZrAuDGLXr16wYMcAiEEbNfo615enCgaWi4WTWZB4k/w
gLl58yaElMUM/omIKP5hbLSwqIkLVKNGDfCMuWvXLtfDRXv+/Dk8kMADMwvJ
UKzyD+QhkEkEMn2DEwU/IHmeHNcYyRWwgLl27RqWDK4s4NOLIjKwusHnEgcY
kMSCR46YmvnSgofdg/FO0RoXTX9ac9q2bdvENWv1LVFoBBKTQBW9Ur5gCzk3
i/bzzz/D4yFa4OEoU2ASjuLqUEQytY5PyAEnh1SvXr1s2bKmQETkSKtkevRS
RqSecZBg8BtFM/LeopHATyKm5mh+ilja1aLBmeJgBMYwCz6RYvwMUpui0YKd
hAOMfFWrVmUzwOCJmTV4unTpohrv3r1blQs/ouAHIfhJ/ZFifo2x0SgiyTCj
m/78Aw8n6xxNdTCgQp3yQgWBODwk4AppsH344YeVKlWCB0tJ9iBXPTZv3pyU
Mb5AQhiTUgGjmTJIWQIQhYf0RJTOGDMCJpOGTOhdCWIpadmypeiuVIMq2S26
RRN7FStWzJ/IcZMlTAnyopwSKyZBQpyTRHCfm1Rp0fkZnqS/e+DpRfQzfzZT
gNC6gx94RCEKVGJhply5ckJLpfLly3vesGggeZgUQ5HirIbIDsNSyjVrdJbj
v+oFD1GSia6ie65qeQUwPVO6VTNLIfcCQDKeEVRtIaKdRq1ataRShQoV3BAx
kCQdWVGnRE+aNInhDSvXrL8MgB8YcIKfJH5uYuxAdfWEc8wFw27MSPm16CAH
HsUEHlMmCkhiWVjRxcnYoJcbUma90NPGw1Zh4MCB9iFqGpJNzchWPSOHKDem
DF5pumUDA7NK6BVgVDCGgcSMaKfCewiSxBddlhGrcuXK/GMnwDloYRhZVqVK
FXgUH/z4FT9SDKuyb86cOealkqxdu3ZN0YxsBcnchQZAkcniBaeVbsGCBfLI
1ay9bi7wZPkDj2SS1/gsJJa6pzwC5h4hyg5UIEUpBbNl0XBISquwiqE2IlkI
dKldRJw2bVq2Z6AiLcu9K3jC2RV40fJHEcZQeG0vvW4WsJkOqDwslqU8q2rU
4Rl/wiPfAxIkCsp3V3hsNblaoonO27ZVsBnN+gihP63+KVP8gx8iKnr6cIht
hrlg2J8kQx0aKesGVwRqXjRxs8+BxA2N4EEaePCAwfbIBN5aQzJbMgOKq2Jj
mwdEhMQWghZWH/zAI784GT+6zSuaeyL6SUVS27OoyT5pyGxGECgO0aCKdcVN
fU5llulsxlrUVCX6FQ3bVmcs0cvEScAYtvf4ZwkIzTo5BZu5ExEY6aYKAfD0
6VP7/N9+++3Ro0f37t27ffu2MmVqtsSiYAYtYQk8eOxDJB2W8JNMt+qRzE88
EAvRi0xQSY1sXzGmFIBEI845XjSpRxSK4AobtvcWGieO33//3fXJkycg2eFg
DHL7T3MHCS2QZOHwJzNXLxo1k1kwMA/k8ORQIzoepAmxVAAyYSYpVgqGhcBg
bFf1nEAPHz68desWcuB58eIFipyJ8AMq1zGYWFk7zD1bQRisX5HMQxqxDTkU
w1ROhsQJV+RAoSoixHaFRtgARnTSZE3JQcNz2qnSd+7c4Rx6AfPrr78i5/79
+xD6CYekpwUXIQEtMt0VNvUwevlTGZSJ4QR7soDxiIUKSLIZCxVhAx4ArKTW
rOztVWwVUj2HXx+dEQUDYFn99dQn54hSu7IuPFles75LMTrCI8cVGUUDVDsT
aS61JWxOFkjINkwsdAltfLPmDVdC+BVIcniFpoTGZ6bw059NBw/BEIIi9hju
AcjuFB4WUqizUrA9PGD4iYuSvOwnhApzqmjGpBfSKPX48WOK/PHHH69fv6aI
3BEuB0ZJpCxYIHTOFiXbaRNR7ckRh3ARlrKmu4HHepENrV9Tc/ADG664l3lK
D7M0AoZw64uGKGBevXr19u3bN2/eMAk8IgKTBUKJyMHHCEGCUuOoqETBD/MQ
hY2DBwlVipby6E8aZacBj3sJhXNFHj9mlw2PXDN3i6bBAUCRcwEwDEwvykpA
1QAkhxT1QUVy0peMwYNnaWIlVX7ff/99rkZU9GLvakWTbgi0Xlh0nATxDBt+
DKXyiA5Pzt3CiWXKWfc1883+B11ZDkSniJ5qu8UOwxDqiaKctU1W0GzAUKT+
wIMf2CRX8GAvXzbsNKQYqwNmcP6BKpIRwsjKIDBZ2aUSurIbETHbAPjdWFtV
MMcuFspeMdsnYolOEVWXQ3LQYGD5JbpMBwmeLHD6wMNCOGRswyrL5guPiIAB
Y/Ds0OCBMLsdfZYVDRsAqOG0MCn8QAgwP5PbVTYxD3UwQwUlUdwcuMCDBCQr
SOokyaSVJcM9FwnNAFxkQFe6S081ilEFJaVNlw50sbzC4Il6JQsULhY1FHgI
VEKRIxd0yNnK+O2LFjweZhGnWvaH0SsUdSyaydpfCYQTeNjGZP2KT+OICIxw
mMGPgqMb0kQHTDfkKPWlu1aVEyrZbe5mrQP3EiifeoDHFUX8yj8Aqz909FPW
OKrlMws8UJGGKzxBWli1IFr6kQNVcspo5AMPjRxrb4A3KudzAefkw2A2EhpI
+UIIHv/AZsxsEbFUioeO7v2U73K2FiYoKTCQLZCSQgjCUY3BdGOh+UVDqbVG
EbMCMiH8SjHnqxKUQo655GSayuMmZ0P8sIEObrI/DBhuhwdgY0KS7XcIN82c
NZjKT4lo+8owapSe9kgYsD/BmwzFJHKyMaOaMRU0hLiJHxg+3wk5h0A5B+FH
PfSnbtkipi5Z3I2ZAouTZBMwkloUkAJAaH1GFg0ShZ2CUpK7YADGi2wjp/Jl
KYdBzKg8IUQsMJCmD9WYM9mHNJCyp9Wf+sbHgIj5pAYP8kHKrAEjH2YUKFSA
ncWXw12Zyit6EpqdnPJMHAYATFlomwf1FkXw+Cmq5bOY0hTP58NdDmvqWOn3
Va7gE4ObKUjAuHGlI+dw++qiURNITyD0MM7RiCKKYZVfevkTGONzIHgsxMD5
GpZTj1okxeJ8T3TQU3GWL/AgHx7pI6JwgaSlGJbSFV1ckSklPdcHOeRDSKOi
pfqRDB5+kBRoyedlbMCs/uTjhi1HtvdQIYdYdq1SDCQDArOyaNI/xS1ztx7x
uRtPslZ6opv6E7/BacxsHjJ+Pg4AIwSuPIHK3lUHvqJsNq5QZQrwA59DhIXe
rlINwU++92pZSWHItylBc4Iu/VSlROivg9VBulnH8Z/POCabjyphBicsLZZq
gxP2oLIOetIueACGBxJQRxRNyjCnEPmK7hVeymZD9KyqOVbkCo9CbVNBNYML
quJJkHyjS/3hChjEwgm0SFAKuI4DvWUV5pyUQbzla7apESspLIny4XfdXxrh
4qJwlbMnwxAXWq4TlzR1i0aFhn+2ZkWDgXbyi1Elpoii5BNNKmfToumPSQht
gZBjQ6X08YMoyFF2NhUtnwi0VEjGztFDxkFiIpJIOmNGuCQOfrJshX+MsQRO
1AevuGcJI1tzCQEnJPTNocy8FEN9lN/8L4xViXPy5UTLF/v8b0hENIhu+awB
RtYdV9jwk/XarGUQJ0gWtRGYnCtVVFUuNvgvJkRqZA==
                  "], {{0, 48}, {
                  48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
zG6lRc99Sqs5keO43OX/C3uBHn0=
                  "], {{0, 48}, {48, 0}}, {0, 
                  255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJw92Wmol9UWBnC594P3g5ADZpIDpuKAE2qiKZlSiqVYRxyi8uKQE3aUo3Ud
IhPLyAEntMIBS3EiLXLAASeccMLhYoqmOIRZWF3I797f3c/1bDgv+33/+93r
2c961tprv6fZ6CkV4/5Wo0aNaf9wqRj1rz5VVaNmDqntZmjltInjK98dO6By
+rvj363qPvrvHnb6/9//+sOHD+/bt+8bb7wxZMiQioqKiRMnzp49e/r06VOm
TPnkk0++/PLLVatWffDBB2PGjDFy0KBBAwcOHDZs2DvvvDNq1KiRI0e+9dZb
b775ps7UqVNnzJixePHidevWfffddzt37ty/f7+r/tdffz1//vy1a9d+//33
Om43bdq0YsWKNWvWGLBnz57Nmzcz9NVXXxnz/vvvM8QEQ6+99hpg77333scf
f/z5559/9tlnc+fOraysZG706NFMDx48+PXXXwcAeB3whpU2adIkS/joo4+A
Z/TgwYOHDx8+c+bM0aNHfyht27Ztq1ev3r59uyskAED1xRdfgAEDYF5cvny5
67Rp0yzt7bffNj8rwEyYMIHpoUOH9uvXD4CXX35Zp0ePHh06dHjppZcCA3Kd
ESNGWAuo3jJJ1o6WEydOnD59+sqVK5cvXz516tSxY8eOHz+OE6ZhAGnr1q3r
168HwO3SpUutfcGCBUuWLEERPNzhigTLNMxgtKOFRUjggap///7Qsg4JJlE0
+kmbPHmyJcyaNWvZsmXePXTo0MmTJy9evAjM9evXf/zxR5DAQw4ezLxw4UJW
tmzZojNv3jxXD/kCOQbQyZw5c8w2btw4kD799FMCWLRoEcxLS+M7aA2DkLrG
jh07fvx4coJE33PkVFVVmZAjdu/ejYqzZ8+eP38ejEuXLoF0vrQDBw5YPk5o
AAzMQMI0ViMMFDHHinXpc9DA0linTM9JCxiwGTJ+5syZTAMTWnQMMyH9oxp+
5hilnOOlcdPF0hAVSDj55ptvWJ9dms640kxlpa7mFybIYZSEiKRTp06vvPIK
MPTACxOftJjWPvzwQzjRAjaEVupdYKwXGOI5cuQIDFevXuUpErpw4QIkGMPV
3r17CYyzKB+lFiuEzcbWP0tDuJ+EBqjgPf/88127dm3bti1UxMN9QU7e+sBH
/PEdhJyLW+QQqrCNcs6dO8dH165du1LajRs3AAMGKtjwQ0gbNmzwOiRcZobI
g3oZQo7JkUaWnPXCCy906dIFsF69ehEzvyAB4IgkSBLamOFuM8shiSC0QPLv
0mCAxO2dO3fu3r0LmPD3kDfF1759+0S62czvakLMQxUZayJI+Lz66qu9e/d+
8cUXZcgEUWDwNTfNKA0SJFuXaeU68yPkcmkA/PTTT5hhF5Ibpd26devevXvc
lyjDksDH0rfffmsSeOhW3rB2Odbkwplg+vTpgxDpBTOdO3cGhisRWFUaNxkp
KleuXEktZhPXwKCFC9jijnSulRblaFDdvHkTP64AHy0NMORARf/Wm7juXRoN
S8ikok85nUrTF85ohEEwzisNmI0bNwpnmty1a5cO6Vovci6UJge6chlnJaBc
YcMYl/3yyy+ufsWnK+WTHG1zE1vW3rNnT9HENABt2rRp2rRp48aNGzVqRD94
A5tryAOlIEkaVqRDS57roIiALZaA4wX6AQk8XIEkoASanQIJKJXTbBkWYjfR
h8eWgSIzA4MirgEGqmbNmkHy7LPPAtO8efMBAwYEjISDH9Eke+MKk1j1Ij1T
nVCFEEVcBsaZ0jgimRADaCR1EqU9M0gd3s2egm1X+QFFYt9sniNB5kcRDE1L
a9KkSbt27agaDGAS3fBbl7e8bl06mHHVT2QhIcxAklSDLk7xljHeWvWkZUMn
YxS5hcrkHgKcDRQ5tsjnnnuuRYsWWNIhZglHKsCP5aD0dGlscURs4cTa6QeY
HTt2cEEgJQe6ykIyTGAbkI0e1MhJxBlmHr/SA5dJYjSMCmAiHniwpCPWxDXp
hplkFQqJLyARUxbIHDz048qi6sL8zJGugAJeesEPdYEXV1oLUd0pTQc8E+Z1
NEovrVq1EtdSH2CtW7cGCTbpUbKFnA6rHWFm3CpyhGEKJOwRhnmSRtAFAzx3
S9PxutiRE+Rey6cfSYMARAcMSQvyEq4s1gwKGDDsCyCFIvCkQQncPPyLc2zQ
m3zlVyPbt28PvBCAKgUb5OY3Hh4MyDY///wzPDwbGNImrRKAZIsBqzaDDitQ
ZUfDlVgTKQDghBW2jOQ7b1k1j3AESLRHSJWlyecmSW5kgtqZgxYDfEdIXGNm
ediS4WHOT2ZLFSHPC1t5WLAk79kucZgdBDCTo4WGW7ZsmbVLhrZXiwUmnuLf
FJw6WNVBGtPCChKVgwkx4yFJkxB+4MnWyRfeithsKzxrvFucmzlkQn779m2O
M17a5x0BRcbwoNF+QcMycKrN7MWQex1XVLevtEOlWb6HGVmNBy20Ss80DA9t
Ezlf5EVRlkylAQD577///uuvv9pH2GIXh4QBUlRBqEgLHmwkrSXne90TEzKa
OY+VFtI8xBK7wZO9zNrv379v+fohOVkCeGhhgOThw4fGg+1FIaMMk22oWqK2
t9rZRbrIspZTpeHHbOZPIHAEhaRENwPeTA4kJOhyBR4G47OxAsMoHiJyTede
aQ8ePPjzzz9/++23+Mt4eAQOH6GI4LN3EC39mBkD8GSjTCVjfpC8m9RhyfBY
dfyVSszCWQweXmMXPAzcKi3AAuY/pfnVc5NbIB6oneZJGp5u3bqBpB4jPGIO
Ht5nHUU4yR7tde8yBypnGYkffFoCbEZGD6mZAUslhoSbpenD8Ndffz1+/PjR
o0fghR/z2zWAkUnombDFmoqIfgQOK8mo2Y+SIoLHVR/UpF8tp0sSsgTT3i8N
ZngQSOcGp+RAb+AZ8Mcff7hCaIEpliQWggHJHspTJE1OcoLaAB5ITJjdKttW
dh99PIBhGM+Kd0gIlbPgZ5Q72IqemfNcgOAwHrxdWpJzSlkdt9Zoh5Ka7Fa2
dWWhit3uKXHhh8VzpYUit0dKS3zZYb1ra5Pu4lkDEmvAsxuNsWXtgMFjZGIk
zzMgsrTG6M0CZU6awY9rzs4MyXUpsbTkw8QpJNgARsr17o7SgoS/JL3kRoPF
msEJanhMaAeXDA0DProCJoeyXK092RUSlZjMgxbJ0wZhOVbNUPKzDoVkK/eT
3QqYaIbXUsPk/GVCdoWJAfY1hQSQKQIhd8USwPBnr48GIAGJoXicnuvXr28v
E1ZMmNCL+TSRM6YZwCZLYHLYT/2Mfx34SY4U/aSv9LKNIll9ZcM1FUKk8dQn
bnW8FS9XuwAwIC2cu5UBDRo0cIjAKisWYpkHSvOWK9K2loaBLDkfdiBMWOUL
D1vcHWDw5BSfzGxA/GUSizKD8dl3Ulkl8xupox7gr+HDh4cfVlJyx1aKJVP5
ldQt32yeWLIB5txfmtlMHkg5xVgIVSR3MeonM4hHGyuHujVnSpowE1+YSmUi
vmzuMg8kUSYGcpzJuQbVNGzhOOS7PaVlw8pGWV22hX+qEDjEnND23CRgrH7S
UoQzZxLvWripkt4V801KA95aOMXq4uWIBGY853MNflQFvJZPGQ4I+YKEE44A
NXurlghNtewaFQUSQ5Tmmqo7aSTqwpXNNMcuk9OqW9rm3/AQIcGmKPWQdSlU
CSdfIZavgwp780uTQFwhNNJPnlO76HNkU9E5MXGTeSw59VvKA3gcZzBj24JE
ZejYVa9ePYFWo0YN8DI+FQs8fFFNF5c5RikjFYd+TYnORzghSOxBbgxIZEbY
UCmMn376aVVN//79/RoXR8YpXdw6gcIAAE+pD10Bc1u7du1atWpZEQCGJTML
Q9dsCl73U75lWSw3eZINyHEYPFuYTYqE3EJIKpjMRxV0UUKkC4wXUyhaRT7v
NCsN/ymkBX7dunVr1qxpRSQdPPjJKlIKJjb9Sktco6KTcNxij/zAlt/QhWHj
UUR7ydWmAj750CSQGJy+wzswNPDMM8+gkb/Ac1jGD6899dRTQDKXPSKFhLcC
L/s+oggsrllbGolaJgb0KZM+mcsWDGdO9zmwhJNUTfowUw5XEg88OEFOw4YN
G5QGD1/XqVOH/LLqSCibZoBlNjPny4BrTOSknKopn1U9xEA+afKjYabyqycR
gL7TCjacI5yUcQISIeVKQsBARUVOfMKTVLKnR0UpxVPKep78mVOzTvW1+tCR
Ooqz4MlnFk9SxWWAwR07dsQMl6mcybhRac1L4yZg3MKjDhEd2ctyzAmSZLzE
aVJBttqc17gJ/6zEy8mN+dYRVrVsQxGS4wxOOKuiooLXiIdmIJF24IREsEPF
X927dxeq0iNzSRFaPizEI0l92VVzitffVRpzfkoQVX8L4i99eMwTGQg9J1Dq
dZRQEDom68PmTMG6+ILKxgGkKFMuJtGJlKRQFAVMJM2WJ4GU1JSWLJqNKTK2
Zagbc8jysHq8AgAVIKmWc/pT9qhX3TqZgkczOklHBjiewyOcOSKJKOJMUzcm
oSXn578VAXy2tBQ2OQgoFMm7+kMNnwoWWQUhIj3f6KgIBtrmKczApvaQeEOU
YZIYCYFk0+EFS06gJQuxGIWHMR7JZ8x8wLST5numPjw5IeYfPUlK9i/WuUNY
AcNBLDrjULVc/V/9LTZJ
                  "], {{0, 48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              TemplateBox[{"1297"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxN2HHoj+caBnCdk2g0QoRMdiJ0CBEajWhzRiNCaPQThnAYQqYjxEKEECKE
ECE0IoQQjdDIGtnaNI1YUuIP53Oe6/jmqd/b+31/z/vc133d133fz/O2GPvv
wRP+Vq1atZk1XQZXzen9zTdV84bU9WPotJmTvp42fty/ps0a//X4b7qN/buH
Hf7/97/727dv37lz5+7du9euXXN98ODB7t27Z8yYMXbs2BEjRowZM2bq1Knj
x4//6quvhgwZ0rFjx86dO/+zjFatWrVu3fofZbRv375Hjx79+/evqqqaPHny
lClTzP/yyy89cf3iiy969erVu3dvc7zerVs394MHD54zZ87WrVuPHDly/fr1
H3/88datWzdu3IDh559/BsmT+/fvHzp0aNq0acAMGjTIUqNGjfKiBYGxSNu2
bVu2bAlAwLi2adMGti5dunz22WcjR44E/j9lWGHYsGFWGDBggNc//fRTc8D2
ikW6du1qPjdXrVq1Y8eO8+fPMw3ATz/9BBswbqCCloPjxo0bPnz4559/bkFL
xZc+ffqw+/HHH1vNyt27d+/ZsyevLQu5tyZOnDh79uylS5du3Lhx+fLlM2fO
hM1S4dY6mAGmRYsWzZs358Unn3wydOjQuXPnrlmz5sSJE7/88stvv/3266+/
QiJG9+7d27lzp+hYgZvM9evXjy1GQzvXEOI5bBMmTGCLdavNmzdv0aJFq1ev
5unatWs3b94s3Nu3b9+yZcu2bdv4vn//fteFCxdahy8fffRR06ZNoUIR6kR2
5cqVp0+fBgAhUIGEq8OHD8+aNYshkHgd9/HAL+t06NCBR54IHyTBsGLFCgCw
wTSLu3bt2rNnz759+w6VcfToUV6fOXPmhzL8pBYkW6dZs2YibnF4WFy2bNn3
339vDgFD9fvvv7v/7rvvMMycV3qVIUwJlhdFCtsDBw6cNGnS/PnzTQ4bmzZt
QsXOMvBw8ODBAwcOcA2eY8eOnTp1ijCoghUmwCYqTrUqo1OnTvgfPXr0ggUL
oBUjzDx69Ojhw4d8TBLRTMLUpwwilAttyujbt693+bhkyRLR2bBhA7GJyPu0
QCJZjpUBzLlz5y5fvixrQJI4HtI5E5KUgzgnISksLnyhYZkuXlaAkGxQwSgw
yHGDkI5lSCi+yC+xJgNaXb9+PWdxAgwkOEmAMtg9efLkqTIuXLggCjfKuHjx
Ihc4xUfiQXskhHN+Xb169cqVK+ZwFjnRDN3Cn/TESWRjeAgw9Yq1SCVMwOzd
u7cC5vjx42QAjBuyAQYqeBi6efOmeF26dMlMquB48HCWXUGE0xyZRTyUiTSE
iBQkTJufECfBvWiCooRGubBu3boIWJgOlBEw1AtArvCEouARsmtlkJOCQIfM
QSJeKqSqwkGRevz48V9//aWcihEYEjkzpbYSkQQHyUNZILtFX62Q0cBIapES
a5pBS8gJJ4kUYLL47NmzIAlW8AgHj5SdSFQUEMUi1xSfp0+fPnv2DC2eiyOF
uJoADHIES1ZyQQUgOTm+ePHiKCd4ZFPwiNGJMoCB4UwZuUEIDPCouiIiZMKt
2AIT/fBaxnHtjz/+ePHixfPnz/0LAzDjh3UBggctZKNqUVQiBYylkJOEMuAB
5mAZlZAFxtkyMCO/KAcSKeZKscIdfuBp164dl8mbfuB59erVmzdvcELzwOBN
/VSsIDFTWrmK1LfffivHgUGOQCNHZuEnysk4XkZCFjy5IidCVVWks5CpWmzB
gxx6UK4lssVNwM/bt29pNS0Y4PRHqNIrUafRqzkgiTtyUv1c4VE0Um3gQYtg
BdXJMlIM4RGjSFrjxhJ+gKlUtuSLzIX5zz//fPLkCdloiHIqnKSDA+MnnFph
upV2qVBQtTaxuQxFI8UnwAzpnIzzRCkwAaVSACd+Ju+4E3LgYYIh/OiYgosf
+RV+wh4wlCOm7j1Rc5AjQ/GpLBA25NQIm8LICm2nJKZZuNIVi/6FWK8roUqW
OWgERsXGWxoirXIcP4otAXOQhOhZNFXC7K8UqPCTBmFN1ZjYWBEgzhLS9OnT
VTDNhcLZ9V++p4ea5qcCu6AMXkBC5FQtasQsZHLNsmypP4oMPGy55y+lSXki
kXQwuMJjgnsxTacDQNlx7121S9zhzL4LdRqrRgYP2YgXfsSI0ugNh6ZlPyDE
JtASYPYSpvUtg1RalyEWQNKbkoiuaBgGNMrxkMMcBmiGtLDHBYEWcf+SsDi3
BxM1IWNL9GWT9AfPi2AAzztBEWJemCwLBEsfVwEUYXGR2tzHFSrIQMTtBNhi
xYvwJK3YNTlbLHjMBMAKYoQo8VKR+E5O7lUAySWRJRGKUCGanKUc5gBDl0Xg
ISQTpJjWIDoW9NzeTLnDBpHThpqQrTj3EyzwuGNy6h5zZGPm4jKEj7xdRQo5
4kIw8KQ744csiYppFk3zCoRyPKUbjdkY48o6QikcwCABG1xAoHBoGckvmSVk
arKlRLmyi5DCO8rIvotgbJmwByedWwQYHUEGJd9N4wio6SxWIGO9m1xfvnzp
JpEFABsEgxBdQ23xEBg/Uwmzx1ABFA1GmbZUymwagWShFhY5uL4MyS6XOa7i
YSlVUaFOqTTf62Qss/RK7UCFsQnkAuWLF50wmnYJCSUAk27lieotagQAD9dA
4kgS9nwZ1mGL8FKliTnup2kSqpmpyUYSCm9UIUbIef36tat9qUJEDNRFJyLF
Lkg5cWSrE/E0atQIb2DDk9MBKmCwLAZiAiqQ/HdLGfD4iZmcm5hmy8z0dAjd
eC6tEi/kkJB14CEMpU+hTkdwL23TGho3bkzqKFKOkJZCBw8q8A9D2lACJ0YU
qy6ZZkIC6r9IkD4540BFVPCEnByvHpchqc3nEVvAgJGjGQ0r1AHzwQcfkDrG
JKktZc4OUW/aZbZ8rpFiOqya4L+VfXvOUNB6jlhv8QJC5NAPlnKCUBKxLenw
I5eByd5MaOABpm7durVq1QLMc3g0zcpZBqvZdLmiIl1yfhl4MI11Ac0hAhXs
Kvt0nmYB0pUysKdGJXDiBQ9VwKNEkxAN22Ck0DVo0KBevXo1atSQetnPq2YW
lNFChqK0S/6SCiuaiO0iPCagCOwKgUZOOhzJ5t8NRwQ0Ec8nC4DBUyExoHrn
W4GybyOt5NavX//DDz+sWbOmnZiHkh2exCK70xyyrIxhYRJNVc5Vh7KUymky
rsBTJLONNN9kkFRFL6JXrLNjJHJgwMOMvOY+YAqRXU1ugBEsLAkcbNmDpboq
dxLNyoBxVmMCQ1lm0U/NQvuA31J21xhDncnZWqPUHEwCiefsaaGiNAWEsxqE
pBYRMcrJji9eJ57atWvTNjzVqlWjc/+FJw3CalD5CQk8ObPTc5Ldsmkiru4j
NuZUANYRKwdlq0VMzs6f+IVYWqXniggNC5P2gUnv4kTZ8RxLssxP+yjrLysj
FAHP99Vl+Glxa2pVm8pw40nEn/M7POwqFOTHC9JNJWdOpluNNoSbgPFAPFqz
JEprBkCHJS0s4apOnToA0wmnwkZlzyxMJIG9qjI47qfF872FxdXvBsZyeAR+
eRkSU8iyqRZlFnOicSO/ALMsingEg4eKT1SEK1Ux+2QrCygwosBZKgUPdd7F
cL7/uBIJEiIAa7r6CQwXhAxj+cKQzy9YUuW4L2SQsKuJK4mSy1IsihEMnkt5
2HRb94Jr5TVlWFajFwJXlK4tg1G0uMnBJ1tWmN2YQ2CVo6LAySyByOlMJmb7
17MMN9gAQOCkBkfAwEyTJk2AkfUc18jUIr5HPNm0s4tM/nrCd+zlkChM+baw
rQyT84ksn19ylIYEMAhRjXA5DkPaRD6QuuYboH/hB4yGDRsm5SVghCS+0QAO
08vy3Yn7HmIPP3Kc0txEJDnAgp3vUbLbNWdYvMk4uhUmK5OEGzCy+QGGwluU
wTp+AND0MQlVEg1F9m8YSBHOBw3R5zt4nvA0wECCnP49ZDdiExrqrezlvCtb
MS99WIcBEjtATRwJbpgGQJjgkVNaRuMy/FQhXUGViSCxSCdikXQGKcefHAO5
D0O+deSbmCJ8sQw/PUyUZRw2gKHefK+AJN+uMZCcUq7Dj59N3g3Sgs2LpvEi
3wyxRDZoAYN1JsK/fMm+SAv44b3hCWDEA61XgMEJrxuV0bwMAcpOHgkYqFMG
oiqEmND03WhYhhCrkzovlqRztE1CwcP3fAED4GoZFTyaAjxUhBm+SHAaYBcY
LrvJMRCeRIppnLCIouCBzRMzgwo/WBJi248cJBWxtOwckxkKpHwEyx7VviLf
WFwxYyZd2RUzYcGsH0jwKEGs57zjXpblI0P0k67qFfOTa/CQNAlZkINQ6cga
uuqXk3I+lEVUyaZ8koLQE1KXfVqzRWRH3TJSb6Nh6kVOkGQLlG+nFX5kPUhh
xltep66BZeAnX/xyyIVKc09Pyc6tcrQhbBsPbTTf90xj1/rWTDMCKd/nUZTi
TELu09ZRUcFTSfy8aHjRBlslV5Sw1Oe9IY7KqeLJojimConOvDKy90CjNmeR
ZFCCxWI6uKhl68VoAPj5Ph4uBEYFjwl2KXoHTgLJQBE8bkAVTWhNYFetszcT
oIVl5BOH50QiCql1kbGfEApH9erVWRHNYGAXhv8CQguPhA==
                  "], {{0, 
                  48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxN2WnoV1UeBnCZeRMxL6Y3YouUaGiWoJXxT1twKTFNwzXMTFP/JqamuaDU
uJFpYbaIS0baIu1UmpGW4lpYWYw7phaZG+641bxxPnOe8eIBL/d/fud+z3Oe
7/Nd7rXB4yO71f6tTp06T1/h0m3A+DajRw+Y0P2f/ug54umhQ0YMHtRxxJjB
QwaPrnn87yab///f/+5nzJgxZcqUMWPGuE6bNu21115755131qxZs2rVqpUr
Vy5fvnzJkiVff/31tm3b/vjjj0OHDh0/fvzUqVNnz549f/78uXPnzpw5c6qM
06dPnzx50o0Fhw8f/v3337/88ss333zz/fff/+GHH9avX8/aV1999dZbbz3/
/PPPPffc+PHjBwwYMGjQoNra2m7dujVq1Kh+/frXXnvt1KlTx44dO336dGtm
zZrFwkcffbRs2TKPM7Ju3boVK1YwuHfv3gMHDtjIpsBcuHDhfBm5CSqQXE+W
YbFnHcT1559//vbbb9lcunTpokWLgmfUqFHdu3fvVsZ99913yy23XHPNNVdf
ffUTTzyBlpkzZ4L0xhtvLFiwwPWDDz5wurVr127atInBHTt2/Pbbb/g5duyY
vdByoYy//vrrP5eGST8hJ3gs/ncZO8pYvXr1xx9//MknnyxcuBCeZ5999pln
nunXr99DDz10//33t2zZsnnz5vi57rrrnnzySXheeOEFMObOnQvVyy+//Pbb
b7/77rsffvghx3333Xe7du2C5+DBg/BgABsVM7n++eefSDtx4gQ8YQmeX8r4
6aeffvzxR1TzOyUw++KLL04rY9iwYUOHDsVSizKQAw9nTZ48GS0Wz549G55X
XnkFMKhef/11ztq8efOePXuAOXr0aPiJd1zDEjDIOV1GFhj0w8WYQS8pbtmy
xZUY4GEcRZMmTRo9evTw4cMffvjhO+644+abb65Xr94NN9xAyTB89tlnfDR/
/vw5c+bAQ+SvvvoqlvCDnH379gWP4yOhEnAkjZnI2IIjR47kBjPwfP/992Ak
HLZu3bphwwaSps958+axj6KIuVWrVk2aNEEOCY0cOfKll1764osvgIcEmVQN
mBkI6XD37t2cJbKOlnHi0oAHkoTV8TKyACRi/rUMvqYch8LP7jIA4zth++mn
n1KIKOvQocPdd9/doEGD66+/XnwNGTIEVGCg+lcZ3CcKaI+kud5J9+/fjx8b
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
                  "], {{0, 
                  48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
PrcYJrClzlARD/4XUbURqw==
                  "], {{0, 48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
/ElU7Xj1b4HX6/8=
                  "], {{0, 48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
Uslpgqn/HIv9G8F55+4=
                  "], {{0, 48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxV2XfMVkUWBnDKGgE/FSIdzAIKCqGjhiLNIF2yUlw1KMICgigggggKBGwI
odgwKKBoRJoYLGCJIqgQGygQFEtiFA1qohLj3+5v51nf7E7y3cx779w5z3nO
c87M3K/lhBkjJ9eoVq3abbVcRo6f23/WrPHzRtX1Y8z026beOH3SxCHTZ0+6
cdKs7hNqutn5v3//6V9zzTVXXnll3759Bw8efN11102YMGH06NEDBw7s0aNH
//793RwyZMiIESP+UdoNN9wwe/bse++995FHHtm4ceP27dt379796quvvvPO
Ox9++OHhw4ePHz9+9OjRjz/++N133927d+++fft27dr1xBNPzJkz54orrmjf
vn3nzp179ux52WWX3XnnnT/88MN3333nLWPWrl27bt06U40ZM2bAgAGMjhs3
btq0aSCxPnLkSGCg8ujyyy8fOnTo8OHDQZ03b97999+/evXqxx9//Nlnn33h
hRdef/31t99+m13W33vvvUOHDh07duzLL7/89ttvv/nmmy+++IK5N99887HH
HpsxY0avXr3atm178cUXmxk8bxn5yy+/QGWeFStWbNq0adCgQczdfPPNkyZN
uvbaa0PIsGHDILnooovyrjtjx46dP3/+0qVLMcPfp556yrsvvvgij4LEFUsH
DhxA1GefffbVV1+dPHmSIRYPHjy4Y8eO5cuXcxOeTp06cdb8K1euPHHixKef
fvr777///PPPCDd5v379/lWaqBnTvXv33r17Q4VSeFwNwNjMmTPvuecezGAV
M1u2bGHipZdegoebB0qDChjWcYKlr7/+GkWACZ+wopTL4iVql1xyiWkFEY0i
Czkmjxw5YmamJ06cOKQ0kQW+T58+SBtQWu/SBPGOO+647777HnroIV48//zz
wAg6kt966y0T8pFsPvnkE/Ey7eeff04bJ0v7/vvvwRPTzZs3A0CWHTt2RDuK
kOBFj3jhrf3795uQnkVHyPBjDEiQixHZeLdr166e0lWU8+ijjz7zzDPAiBQ8
wIQc08IgNGgBCSHmj4TgIXIWvbJ48WI+dujQoVu3brQkfMB88MEHQv/++++/
/PLLZIAfpkUk8Yr4tUsvvRS3yKGcW2+99a677lq2bJkseO6557aXlni99tpr
UH300UfRjBjpQAUDJCdKoyI/mSYhjpMQihji9ZIlSyIt3hmwfv160QEVADEy
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

                  "], {{0, 48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxd2QvQV2MeB3B2BzFmLOuWcsklomFFJMNoXF+SUV40kkoXudSoFHLtsmxk
truSa0UlpkWk0oXkbhRJtZtIpWwml9xmsJ99vvueafaZ6cx5z/+c5/k+38vv
ec6pUZfebbv/YYcdduhbz6Ft5wGt+vTpfEu7P/mjtlffnj16deta06tftx7d
+rTo8kcX//K/f/89b9iw4THHHHPGGWd07NixX79+t9566x133HHnnXcOHDjw
rrvuGjp06D333DN8+PCRI0eOHTt24sSJjz766BNPPPHkk08+88wzM2fO/Edp
s2bNmjdv3uuvv/7OO+98+OGHK1euXL169T/r2urS1qxZs3bt2s8//3zdunUb
NmzYuHHjl6Vt2rRp/fr1flqxYsWLL7548MEHt2zZ8tJLL+3Tpw8YQ4YMGTx4
sOOgQYOA+VtpDzzwADAPPfQQMI8//vikSZOmTp0Kz7PPPgvM888/r5+5c+cu
WrTozTffXLp0qZ5XrVoFw79KA8mfjp9++ulnn30Gz/rSKkjgwfnJJ5/MmTOn
WbNmNTU1PXv2BCZIhtY1SIYNG3bfffchZ8KECY888sikuvbUU089/fTT+Hnu
uedeeOGF2bNnv/LKK6+++upbb731wQcffPzxxygKBnhWlRY8gVSxVDV/egTJ
zZs3v+SSS2666SZI/rpdC577778fOaNHj6YUZsiEmSlTpjiZNm1a8BAreF57
7bW33377/fffX758+crSopqTCAcb1bZnKcJVeBYsWHD66ad36NCBbVARdRgm
eO69917OGTFiBLEoBca00pADz/Tp0yMZvYBZuHDhkiVL3n333WXLltEL+ZVk
q+taIGncEkghB6QvvvjCDfDU1tYSCzl4GF4aYJBAFeeMGjUKnsceewwAo8+Y
MQMkLDk6R9FLL72kH2Ixz3vvvRc/Vxr9XwseFAUSGBtLgw2e+fPn9+7d++67
7zYuk6DCCcNAgiLAxowZwznAIAcbSRPnTC8t5BBLPwlXzANJxKIODGtKgyEn
a0tjoeDBD+H86U7SGzcMjBs3zkkoAglFHH777bdDyz9QsRAnAwMSZsBjHskS
ikos4aJU+IlbggSAmLkCs660pCz5cufkyZON9eCDD44fPz54RpT299IwhqKb
b76Z228pjc3oKGjAkAkzYi4UESvmwQ9IoWX7QK2ta65Agpn4Wd4rvRQZYEzc
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
0h5PQcinIbPLm9G80rIH+A8mC4kf
                  "], {{0, 48}, {48, 0}}, {0, 
                  255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxt2Hmol1UaB/CbRo1WpJYGZcvoNFaYaaHZgmWmaKmh5hIuecWrqXHdMSsT
22nRItsxrUStLOxaiVk2Uq5YWoZLC5ljMUOlUQwUFM1nznd8mT/mgfty3vM7
7/N8z/dZznPun8dMHjiuUU1NzfQ/eQysndV92rTa2YOaeRlcP33C+Pq6sX3q
Z9SNr5vWdUxjkx3/+/ef8cSJE6cVmTx58s033zxlypSZM2d6vfXWW+fMmXPb
bbfNmzfPc/r06bfffvstt9wyY8YMAz/dddddc+fOvffee5999tlnnnnmqaee
WrhwocGLL7741ltvvfnmmy+99NKqVavWrl377rvvvvPOOybfe++9zZs3f/bZ
ZwcPHvzxxx//+OOPX3755bfffvv9999/+uknP61cuXLs2LH19fVTp06tLwKJ
MesGM4sYm4EWwqlF4AlaUKF65JFHFixYAMxjjz0Gz5IlS15++WVgVqxYQf+a
NWsCyeDtt98GbNu2bV9//fU333wDw7+K/Prrrz///LN5v44aNQonrAfPlCKM
hjRjk3jznDVrFlR+Mpg9ezZU+Ln77rtRdP/99wfS448//txzz8GzfPnyF154
wWD16tUNDQ15AvbGG29AtWPHji+++AKkw4cPf//997jy/PDDD+EZPXo0Bnih
shvHVTJp0qSbbrrJwDLwPJEWPHfccUcouu+++x566KFHH30URRwHzPPPPx88
r7/++uoiBpyIMcA47qOPPgLp70W4D2O7du3atGkTfwGQvU+YMIHpiUWCpBqQ
OCvgBRIwkFR4Hnjggfnz58MjnODhNXhYhyHhtKbIa6+99sorr6Bo69atn3zy
yVdffbV37959+/YFD4rgAcOWMQPMuHHjxo8fD4bX4AljZNoRCUX4AYbLPHkN
JHi4bPHixfAsW7bMEycih5sA2LBhgzFsuDIDDwC7d+/+9NNPRQ5g6IJtxIgR
tbW1CR5IxowZAyFUsMEJUqIdDLQktg3wmZCeWwRFoujBBx+ER/xgRjyDxPTf
inDQBx984ClCYFu/fj3XiCJew4lX2L788kupN3To0JEjR4YHGGqLQFVXV+c1
eAIGhqRbUi/VwDNRBA+XxV+cxVMg4YEtMIJqQxHANm7cKLu3bNni+f777wNp
jCKOGzx48PDhw1ERB4ExpkhYSvzAIIBZxwlUwRYYc4rwF3L4S349/fTTXPbq
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
                  "], {{0, 
                  48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
mT8nQXgELsmelEltSXlBDjyQBOeCwnjPTgqMePlpEyFgZUSyi74mp9xAb4+n
rI0ff/xxTnCyHsOikJnTm3EHAzCrC8tpy5MEzshsWyzlXVJIK7IhMOdxTkNO
InK1wri+FY/r6dOntU8WRUL2DvkrEFk+d/zyLiI5JtthQUIInLxnW8n+Ilhy
TbBq1aql2di9e3ckUVkGb4/HAIPdKFYazjSWsluOgJS/Y+SImt4jx+TUgbRe
KebAGJ+zhhMcEaLah3aBnG7SKv9fPKEoKkK7DsFU5pSwyh08rjxyDRKWVhWW
vjF6zhjjlQJFQNMouWyjEsT+rlFXduK9TPb8/K/6KSliDh0cpY1nOTWnx0hF
Spaxss+BJNUGEuSAJFVtE9qeND/0//XXX3/55Zc1NTVpBUsw/6tQVwrbpiYW
YHDB0fzCcmRO1Q2w7JueAwCGkmiAn8BMLoyuiJkmSdGHfiLq5MmTwpfuiwVb
JS0lgao0/ApFDp7ZEFlqdbaknKBzqE8nBkbIyck0HZE2HgxKc8D31lTAC3FN
YWqdVvnYsWMOyJFWJR5XT5w+du7cKRYmRC9IUon30hGtpkJG2GnXk1CgIm1u
Ycq1RIh+jLf5pk1ylSz0mb85Q6UL2rVrlzPF/v37K/EYcOrUKcX8yJEj6bss
ZOvWrRRS/lnDTbZ70+b4INHSw2fXmFOYkYIlRq5Qmc081mVOa4RBxw5M/s+C
Ux6h0qP+C8k0ol4=
                  "], {{0, 48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1: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
AACr6l44gSdfI4ExITBlp6am5r/K5t/X
                  "], {{0, 48}, {48, 0}}, {0,
                   255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], 
              ",", 
              RowBox[{
               GraphicsBox[
                TagBox[RasterBox[CompressedData["
1:eJxN2QfYj2UbBnB6iUS0ExUVkozsUdmVIlmVlr33yN7KThkNm4wGTauSTago
h01J2SOf+YlDfD/P9X2O7z6O9zme//N/nvs+r/M8r+u6n/+bs2G7mk2vSZUq
Vaf0DjUbdC3fsWOD7rWy+FCnbacWzdo2aVylbecmzZp0LNkwxcVC//27cm7k
yZOnRo0azz77bPPmzRs0aFCkSJFy5cpVqlSpQIECefPmrVixYrFixXx8/PHH
ixcvXqVKlRIlSjz88MNVq1YtWrTorbfeaobrr78+Q4YM6dKly5w5s5OUlJRr
r732mmuuQHJMmzbtdddd59vUqVMXLFgwd+7cpUuXbty4safM8/TTT9erV8/S
+fPnz5gxo8ct8corr7ihXbt25cuXL1u2bOXKlV2Es1SpUjVr1vTUc889V6dO
nQoVKrz88stgPP/8867cf//9adKkMe0999zjeOedd2bKlMnSjq4HJBicWMXR
+R133OGpW265xWxPPvnkM888Y9H33nvv/fffb9iwoTnz5ctXv379Ll26vP76
67Vr14bEbTCgQhQ4cY6iZs2aIeSll17yyIsvvtioUSNQs2XLlj59erAtcffd
d+fMmRMSE8Lm5KabboINOe5xBUIUxf1oFELTpk379ev39ttvT5kypX///m3a
tJk3b56QXR88eHCrVq2sC7bYkQAYJAAEex07dqxevXqPHj1wO2LEiA4dOlAN
ITly5HjiiScI+uijj2bJkuXBBx+87777LArhAw88ANUNN9yAEwDgAQ9FbqAy
hJYeMmSIpV999VV+INDnn39u9bZt24IHTK1atYSPCqiqVavmHAxHN7gIw8iR
I994441hw4YNHToUPAZzG8C8B89tt93maC1OQCwGEAjJvffe6wgY1TgKVHfy
GJzEmjBhwvDhw03bvn37zp07Ix8YAPiKcLiinfkpAnCnTp1atmyJVWTOmDED
M3PmzBk1apRnw/b8LzTTYsa6jz32GAzifeSRR1wB+Pbbb0fUzTffjBao4HH9
rrvuClMJZ/LkyebEDEhgANC7d2/htGjRgjqtW7fu2bOn23DiBBInUHXv3n36
9OkDBw6ckAy2L1y4sCNyRETfrFmzlixZEkhC09SJAGUTrgoVKsTATjiKw3Pl
ysVsNKWgG+j18ccfz549e+bMmYjCBkjAmBMnvXr1Au+pp54CYNCgQQwjWETB
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
                  "], {{
                  0, 48}, {48, 0}}, {0, 255},
                  ColorFunction->RGBColor],
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "RGB", Interleaving -> True],
                 Selectable->False],
                DefaultBaseStyle->"ImageGraphics",
                ImageSizeRaw->{48, 48},
                PlotRange->{{0, 48}, {0, 48}}], 
               "\[Rule]", "\<\"happy\"\>"}]}], "}"}]}], ",", 
           TemplateBox[{"3"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"surprise\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{85., {3., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{74., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 64, 17667317903614393046, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{83., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 64, 17667317903614393046, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{62., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 64, 17667317903614393046, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{111., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[17667317903614393046 === $SessionID, 
   Out[64], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.707520802915708*^9, 3.707521071573432*^9, 
  3.70758253901705*^9},ExpressionUUID->"e4b2a4f8-920e-43bb-88f0-171d22900f72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cnMeasurments", "[", "\"\<WorstClassifiedExamples\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.707520839614401*^9, 3.707520842577031*^9}, {
  3.707521100246441*^9, 
  3.707521102590934*^9}},ExpressionUUID->"61c3cd85-df9f-4e80-b5e4-\
c6aff12169b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztl1sorWkYx7/lkFNOyXE550wOkUZKJiGFWIxzys6y2i7WxBpNyvFCEiXH
C8qFQi64UcoNF0RuJS40k0NIyVnOY//2eqfV3pm52dZaZmr9y9O73vf9vuf/
/d/n8Ar49KuixkySJI01RlH1+8/19VWNBU78+EWt+axSK6uz1L8pVcr6nz6Z
Mxn799/XsQkmmGCCCSaYYMJbyGSyj6bwHf4LfAQHrLm5uY2NjewbfBQlM7Ov
N8DU1NTFxcX4+HjGFhYWH8VHkLGzs1tfX399fYWSlZWVbt74QAqsRqM5Ozsr
KSm5u7urqanRzRsZ4lCcnZ2Pjo4GBgYIofHx8YODAycnJ8m44S18QQDb1tZ2
enoaExPj5+eXkJBwdXXV2toqVo1JSUSIr6/v+fl5c3Ozm5tbVFQUtrOz8/Ly
knkdYSNAJDiDoaGhvb29kJCQsLCwiIiI0NBQ7PHx8fDwMKuWlpbGkUiQCQ8P
v7m5qaurc3Fx8fHxkcvlyELwNDQ0PD4+RkdHS8ZKNMFncnJyc3PT09MzLS2N
5CooKCguLs7KyoLb9vb2zMyMcfgIF8nJyU9PT9XV1RSfiYkJis/DwwN2eXnZ
wcFBqVQyhqdkyCgSwSD4zM/Pr62tcUDo09PTg/f7+3vs1NSUt7c3EkFsZWVF
PGU4lcTHZmRkIE5+fj45juvGxkaYEDPYwcFBLy8vf3//7OxsfpaVlUkGK4+i
UUJpdXV1YWEBv5GRkVhOTXde7e3tHh4e5D52bm5uY2PD2tpaMkx5FOKUl5c/
Pz+np6dzWPAhrRQKhU4ftVot+AQEBKSkpHCIKpVKMkBgC3G4VJBT09PTlD5R
cGCVmZl5e3vLCcKnsrIShsxTDdgzNjZGgaIgSPqTSHdMjGtra2maJBcRgkf8
BgYGJiUl0U8hg245OTkw1C1xA6GDtLS0SFp59aWS+DRXV9f9/f2RkRF3d3c8
hmgRHBzM6XR0dPT395NoiYmJQUFBkGFJSMQSPQX+kp5yX5ewTU1NFxcXsbGx
fDgeYYJTBvgqKiqiR1RVVRE2gqRYYoA9PDwUHUQvVzVBhqpycnLS3d3NJ+vE
oW2R76T2X1pwZFRCMo553QYKFBcksi8uLk7SR2CLN/T29nLPETEMnzAt+EkJ
ys3NhczLywt8uI/BkLwTG9jJHgTc2tqanZ2V3h3V4nHeeX19TTDb29sTrvJv
gG7EFf1rdHQUcQgt+feAnqOjY2FhIQVBdJD3SCT4EMO0coptaWlp+RtUVFTk
5eXRSbGM/3EDNYrEX1pa4hICnx9TSTzFFaKrq2t3d3dnZ+ePfwGruMP+qcXb
DTzLal9fH+H3zn+IbG1tOSY0d3gfeAOXAd72w0wMhPeHtChBMn1AXx9lggn/
I3wB2kDW2A==
       "], {{0, 48}, {48, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{48, 48},
     PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxN2Qm0T+UaBnDRKV2rFU2r0kBz9zQoJYVaokGlcqRJExkS99Ch0DyheS4a
DJXm6YQ0tzRRaVZIhmu4lCGukOb7az/3/JdvLXvt/z7f/r7nfd7nHb6tcde+
FT1q16pVq39dl4ouA1tXVXUZ3LG+H50q+/fqWdm9W7vKAd17dq9q3rWOh03+
/+/v+6+//vqbb775/PPPP/744wcffPDFF1988sknH3nkkWOPPXazzTYrLy+/
7rrrzj777Pvvv3/y5MmmTZ8+3fzPPvvsgw8+ePXVVx977LHHH3/8ueeeGz58
+EMPPdS/f3/vvvbaa+PGjXv77benTZtm5sKFCxcvXrxo0aL/1AxP/Px3Mfxc
smTJ999//0Mxvv32W+tPmjRp/Pjxl1xyyZgxY55++mlbjB07tmfPnkceeaSf
U6ZMMW3evHkzZ86cO3eud9188cUX77333ptvvnn33XcDMHr0aHiuv/763r17
X3HFFQ8//PAzzzzz0ksvTZ069ZNPPvnuu+9AAmPBggXWsUjp3jWQgLHyrFmz
GP7hhx9Ccumllz7wwANuHn300bvuuuuVV1556623EGKp2GU+ez/66COLzJ49
e1YxJkyYMHHixBkzZjzxxBPXXHMNMp999tkxxXj99dct/tVXX73xxhuLiuEt
P8GbP3++RVxRNL8Y/mr9999/n4Nc77333osvvvjaa69FODwjRozgO7swxGT4
g8pbGGNgnjDQFljC1csvv3zZZZdZB0Xnn3/+VVdddd99973zzjss4lzTbDdn
zhxs86MXAwkeD9llgp+MwgnCr7766o4dO1pn8ODByL/55psZZal4eUkxAFi2
bJnV3n333RUrVkQJfMfjdnzhhRd4ecCAAcccc4xFuIxRrPMnc+iTR8z3Ol+j
aGExYAgeT5hJkASAW+a0a9fu5JNPPvXUU2+44QbLAomNucUoqS5e40dLuTHB
4vCA9+WXX6J00KBB7CJFNPIjuljHRzRpvt1tjfbgsRqiiNO7bHcjLu64447b
brvtyiuvbNu27QknnHDiiSdeeOGFliUMbGCVddGbqwWjIg+XLl3qrzzlamWT
SY6M/1UMIYYc61t8fDHCZ1wcCXniXoyTGc1Qpq2ff/55cRGeDz744M6dO3ft
2vXGG28UdLEI7IDJ1SLx0fLly4nBOokdkwU+MVuchNA+atSom266ycNofnEx
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
       "], {{0, 48}, {48,
        0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{48, 48},
     PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"neutral\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
fwMe55IK
       "], {{0, 48}, {48, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{48, 48},
     PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
UPFk3WIo6fCUlZVRiltgUAf+Cz66chk=
       "], {{0, 48}, {48, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{48, 48},
     PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"angry\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzdmG9Ermccx9NmNklLTPKYM5kkkTnSmyRJRiZnLdKLdKzO2XE0TkvSi8jR
iyN6kaQ3SXI4rzLjmEmOMTPHjJlJIkmOkSQ5JGmf3d9zf1277+fZnj3P2ot9
eW7Xc92/63d9r9+/67qv925/fmuktKSkZOxNHreGJtofPBia/Pht/nwyOvbZ
ndHhTz8c/WL4zvCDltuv0dn06vdH+6v/Eb4sFEXO+zTCv7KE4qd4mhtFzl6A
zr8YeE3Ih8nXOfBNocilMB8+xc/+jxjmyccDNzc33SgGCW2mFHottEbIJNSz
tbX1LMK3ReBZDLRZrbiZTzpUzGQrRsjkuyKQICbNmiIdt6E7JJMg8H2EH4qD
lIQMxS1r0MIkbQqUPI/wY4yfCoU1oE30bDTzSZhFNLQELccEfo7xS6GwBnMT
JWYRnzB9ZBy7RktI0/g1b4Ty29vb7hExPWV8pnMq2U2ymyxDY3d3F0npATs7
O/Ts7e3t7+/vBdjPDd4ynFEHBwc8aWsI7Z0I9DCFbBVGjkNX1uMJef6ihyWY
xkGMw8PDFwF+S+Ho6IinJA8CiKT4aKW0Zbcwtc0HtryCLaNQxfPk5OQoAo2z
s7OXL19eXFycnp4eHx9r0hfZwFheMQR5hGnwZODl5eX5+Tl6GI7AYQStWnzC
sMFT8peMDO2NjY2VlZXZ2dnp6emJiYl79+4NDQ0NDAx0d3d3dXV1dna2tra2
tLQ0Nzd/kEJTU9PNmzfb29sRQ76vr4+xd+/eHR0dnZycROfc3Nzi4iIxgxGw
W2gc88FTGAfCnJ0aGho4Rr7xZ7wVoby8vKKiorKysqqq6p0IVSnQWV1dzRNJ
hrweIKGwrq7u0aNHjhw5S2R4YkBsUlpayqSZTKampub9CDcCvBsja6fBWCih
pLa2FgEadNbGkFoEKiI4rVyRIIObYMVA1o4wCjN5IJdYTYxcYnrLRJhRZQfj
uG7DBD/iVkyqRSGsdV0fRBK7JfioDsNncHAQnyIDE8XGf8kHlzmSyXT8RS6U
lZXZ3Xm6rGBovVn5kOaUKdKTSCbmRR7J6+ajvEjwoQhQ/ahLjY2NBLMSRAlb
zHR/uxzZv76+3vkl44gP3HhL9slTDmaIKaMzcVLorwzoJCIFxF+rppOlZeJ8
t1h1BGlQQZC/4OPKIz7QEx+ENUSjVNzUo7yzHtlQNmcgb+HgIkO/6gavKJJS
aMLhirLyId14pYGSVAWTZdSJZrXFRA3ZQUNUnGVDnhRhOglIOhHDNU4WGV9L
DvNdlOBDj1SFfkfetZS3vb29jIL/zMyMtgMtkERgOBFIBUNS3oEAOx27D4eK
hYUFF2obSut1PCf4sLs5mB0qUs4QFk60I6mdnZ2lv79fPuItpmY317Y+MjJC
UdVwNmX2dG3xY2NjJK/8ruLmEE3wAfDhcwN5TOEwVgTKYvxlK6dGMSn2ubq6
un//vrY5eOqIxamAednB6ZcRsBiaWQWHDfZNuc+LlVpWGvLR0ZqJ2GR560iz
feRixdXjx48vIzARJwrxZ6W4gxMOZxv0cMxAWJHMoYLTDvLUN3ynYmsyShba
OvzomCp/sTp6MnHNFDHz0V+8ycGG5RM8TIpyxzARizvo96SKNwJ4fHz84cOH
HR0d7ET0IykT6YkYHvd5wyUIPsSP2DqjHc/0K9HKI3A0UllwJiIADZ7yoNai
ikQ/nTzlWYUBr1wSZZ+Qj46F8BENR478q3hW3CoCpdClAMLS77m0IqWPejAL
ZzwZWRq8ZBr+8vI3F/spbRUKh3EYeA4q1UbNJQPSoAfXWL+Hy3Fhv4qkQ8J8
fGQVH0oEXmtra1PFc1p5a/BOIcg+9q+i3YZ1I6xjbpuwNaf56IORaPT5x75T
hCtUfELwdPJpWP/VYw/a6a7zIW0R8/dyuKvCh/JL7KnCqzLYREamUKTP2NLG
LAk+OrJSzfgkwV+QcSIXPHs+8BE6vE9QSPMkpOfn5ymhSPpIlkaRs4dllvWy
fOpqyMf3VPp4p3Cx+8BH6XwjhYL5hEpcKxQYifsWseIvUbS+vg5haDt3si4z
7MkVGOGQrOZS6WCurPdRNDgbsDE9efKkp6dHUaT8wrDUMX27+SO0MkLYE6Iy
hns8XAc8WYx9J7zJTFzZaYdl++YJN2y1urq6vLxMXPHRPTU1xYc82zphr295
8hHmH6VAJ684kPABpc92djc2vunpaQ5IS0tLa2trbM2cRqh75FHigtfXC+Sa
LjyVdM9j+GIq631XGqGYr6R0C0SPaq/uu5gOVok758RteeJGUZ/5ievfxOVe
1qtU3UZqgenhwH75HXhYj70=
       "], {{0, 48}, {48, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{48, 48},
     PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"neutral\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJx92GesVlUaBWCKBaKDMLZRCG0AZRAkokgoKkJGRUQBwUhTkEtxQr0IoqhR
OggiESmCBdBYKEodQgcREckI+Ivwm/iDhJYYTUycx7PGLzdM7n2Te7Lv+c7Z
e+31rrfs02TYuD4jalSrVq28lkufoVO6Tpw4dGrfuv7pN7Z89MixZcMfGTup
bGTZxA7DarrZ9n9/f4xvvfXWxo0b33XXXe3bt2/VqlWLFi3826xZsxtuuOG6
667za/Pmzf163333PVJYnz59hgwZ8uyzzz722GMdOnTwyj8Ku/3229u0adOy
ZctGjRrdcsstN954Y7169f5W2PXXX/+Xwq666qorrriiZs0/1q3MALjtttsA
6NSpk/n/XphJTOu+5Z544okXXnhhypQpr7/++rRp02bPnv3uu+++//77ri++
+OKwYcP69u3bpUsX27n77rtbFNa0adOgMg9U11xzzZVXXlmrVq26deu6Vo3H
infccYfrQw89ZHeANWzYEC32265du/79+7/66qtLly5dtWrVxo0bv/rqqy1b
tvy7MOP169cvX7581qxZgD333HNm6Ny5Mw67du364IMPuprQbCDBg5lAqlGj
RvXq1SvDA0x8MWjQINvkGrS0bt26W7duzz///Pz58z/55JPA2L179549e3YX
tn//ftft27eDtHbtWnStXLly7ty5EydO9NaECRMmT54MpDH2evXqxaFY+mth
gFWBB8821b17d8yD9OSTTxrb7KJFi3Cybt06SHbu3AnJgQMH9u3bB4brwYMH
Qdq2bZtfN23a9PHHH3/xxRfGn3/++ZuFvf3224sXL164cCEXT5o0aeDAgTwI
DFT8VQWedoVhY+jQoeXl5f8qbPr06ZBYDgMA7N27F4avv/56X2GQuLq5Y8eO
rVu3unLl5s2bAfvyyy83bNgAFbqWLVu2ZMmSGTNmIGrMmDHEyXHXXnttzcIq
g+QxbiJab7333nu2Zoa33nrL5FZEy65duwz2F7a3MHTB4CdXQjLwMBjcChgP
QrV69WqzgTRnzpw33nhDOPTo0UPQ0U/wVMbP/fffTz+8jBObwrypPv3005Jg
rA5SBu4gxHKQhCWP4RCT8EACEqL4DphQJB4JntfiMngEPnlXhgc/BNOvXz9e
FkfctLGw4IEk/gq2EifuHDp06JtvvsEM73geBgNo/WoSU61YsSLRN2/ePEFa
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
       "], {{0, 48}, {48, 
       0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{48, 48},
     PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxN2QnIl1UWBvCYKZ3I8kOtKDNckhbFFbewdHJDUykXbBHXUVPqc08nHcVK
LEccK9RRSovRFEsHNENRMRGMRBFpsKASEpNSQVxwJZ3f3Gf844Xv5f7f9773
Puc5zznn3vdrNGrigLF/uO2226b+yWXAyBl/njJl5F8HVvkxuHrq+HHVY/7S
u3ramHFjpnQc9Uc3W/3/73/9NWvWrF+/fsOGDevWrdu8ebOfDRs2vPPOO+++
++5atWrdd999Dz30UMuWLbt169a7d+9evXr179//hRdeGD58+IgRI1555ZW5
c+fOnz//76W9++6777zzzltvvbVgwYI333xzzpw5r7/++qRJk1599dWxY8eO
GTPGi23btn3ggQcaN25cu3bt5s2bf/rpp9u2bdu6devOnTt37Njx1VdfXbly
5fLlyxcvXrx06ZLr1KlTjbz33nsffPDBZs2aeb19+/bA9OnTZ8CAAUEyfvz4
6urq6dOnz5o1a/Hixf8o7YMPPli0aBEkUIH0t9Jmzpw5vTSoXCdOnDhhwoSn
nnqqQYMGTZs2rVu37qhRo86cOXOptKtXr167dg2GCxcunD9//saNG3v27MFJ
nTp1IHn66ae7d+/es2dPtEDy3HPPAeN1E7722muTJ0/GzBtvvIGWhQsXQvX+
++9DAtJ7773nJnI8xc+MGTPY6JWppbkzbtw4NqKdI2rUqOF1MM6VBgk8wGDp
xIkTVuepNm3a8Euf0p4t7fnnnx88ePCLL76IHD5irFW4yaKuK1asWLlypetH
H32kgyt4+As/BkybNg0MzLiiyE/XQYMGPfHEE7xWv379+++/f+PGjdevXwcm
RIGEHDOQkzE9evSAxBU/rrD169cPJJOMHDly9OjRJmdmlIMWSD788ENIXP9Z
WhxnQhRBPrm0sOpFwFiE8EcffbRRo0YYGDhw4G+//YaWs2fPfvzxx5Q8e/Zs
7FFOhw4dKBZR3UqDRx9F+AGGs8jSlZle4SCyWb16tUmWLl26ZMkSzlq2bBmK
eGHevHkEBlIAVJcWYCxinbWoiJbq1atnws8//1w0HTt27Jdffhk6dOhdd90F
bZcuXfr27duzNMygyE/8eD3OEimmZTXRIsfq/7rZ4jU3AeMyBEZFkLtaMUSB
p49nNnbq1InjhI9Vvv322x9//JHjTp48iYp77rnnscceCyeRDTwJ84qETFIh
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
UXz99df79u07ePDgfwHDQ3Sh
       "], {{0, 48}, {48, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{48, 48},
     PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"sad\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 48}, {48, 
       0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{48, 48},
     PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
EZ+6z63ap/8Aid4GIw==
       "], {{0, 48}, {48, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{48, 48},
     PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"surprise\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxt2Vesl0UaBnCye7OXG7mTq73BcLckXhCDJmhASSRGEQgCMSA1CiQ0payF
agEpmoOVIooKgoWuSCiKFEVpS+9ICR2pUtzfzrPnyz9m3+R8mf98M+8887xl
3vnOP7r1f6znXxo0aDDwbx6PdX22xYABXYe2/bsf7foN7NOrX4/urfsN6tGr
x4Bm3f6q85//+/tv++rVq6dOndqxY8exY8dWr1594sSJM2fO6Lxx48a1a9d0
Xrp06fr16zeL6NS+cuXK5cuX/Tx69OgPP/xg7s6dO3fv3r2jyPbt27ds2eKn
ucZfKWI8Pb/99pu2xrlz586ePWvd06dPf/nllwsXLly6dOmqVasOHz5M/969
e3ft2mXYhQsXqJo3b96tW7f0//777xWMCgyodN6+fXv//v3AmBgwe/bs+XeR
bdu2/fLLL0uWLNGmB5JguFrk5MmTwOg8V8Ssb7755usiX3zxhblenT9//nIR
yx04cAA/WRc/GmAApnGtiLaeP/74Y9++faYjJDB+/vlnymHTDtsVeJqD5Kef
frL6d999h1h7BxIVtg/8smXLEPX9998HiVee+LxexKLBE04qVAGDK/wYgBaE
Hz9+HFeWMCw8eIuZgEnPr7/+atE1a9asX78eq9iAjb28jZ9ANXXq1G+//bZi
MsBouHjxIpbSaUqshlsjraLtGXhBm4bBsB05cgRIi/74448aBw8etBy1mzdv
njt37qZNm9auXbtu3TrEYgml3kJimH44cW4VTMIACX6spf/TTz+1BErp4WMM
YTtWjBdF/GRZr6iis66ubsyYMUOHDu3fv3+3Ir17937uuefGjRv3xhtvfPzx
x7b/0UcfxXXXF2Ej+KdNmwaYveAQz6jYsGGDsKI/XIEHmF178oTNRWALJzZr
Uxs3bvzkk0/Gjh3br1+/Hj169OrVa8CAAc8WgWHEiBH/KjKiiB79fmp4vv76
64sXL16+fLmNg2GPYg0wLHEn2ETo5XoJpMoJ/eTtsR0YQvLdd98dNWrUwIED
+/btC8PgwYP9nDx58nvvvffhhx9iwHNWkQ8++MBPT6/efvvtiRMnjh8/Hl0j
R470nD17NoNCwrJIFqcsCJKdWqjynz9JhQS3lABgjwBMmDCBgSw0ffp0xl2w
YAEriB3DlhRZtGiRzs8//3zOnDlBhc/PPvtMD+P6GXimGGmAfvF16NAh2LAh
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
V3I+oy2NQ2I8DKk0aMtVwq4t8R/omkKb
       "], {{0, 48}, {48, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{48, 48},
     PlotRange->{{0, 48}, {0, 48}}], "\[Rule]", "\<\"happy\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.707521103538087*^9, 
  3.707582546438488*^9},ExpressionUUID->"ba84de5d-0a38-49f7-8034-\
86ad9939f7ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Camera tests", "Subtitle",
 InitializationCell->True,
 CellChangeTimes->{{3.7075211607211037`*^9, 
  3.707521184758732*^9}},ExpressionUUID->"aac70f8e-d604-4a32-976d-\
0a30a4d9b8c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"trainedConvNet", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
0f8Pxg7Xzw==
       "], {{0, 121}, {121, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{121, 121},
     PlotRange->{{0, 121}, {0, 121}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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

       "], {{0, 92}, {92, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{92, 92},
     PlotRange->{{0, 92}, {0, 92}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJwteod7XPl1nb/EiWwp+iQ29EZ0EOwVLACI3sv03tub3subeW96RyW5q5Xs
lSXZchwlkRTbsuXPkWUrK2mXRG8EQBCF5Fp/R85v1gMCHIDg3HfPPffcc39v
LmudXON/+qM/+iPvn+ALVxPs83g0NO/b+Ebg8JpNDoN+zOEzmAyeLi35Nc9/
fEY4vTdut7VXn7tUee5CZV37vTGZPRDN5RIME4tnikmGSdD+QICmWSbk97o8
Xrc7EPA5KZvL4/H5/L4gTdOhoNfpcHr9fn/IYzHoFAr59NWOuoqKqrqayw0t
N3W/f/f+yw9n796fnb0//OI0P9nTdbu9rryqofZiWU19x6MZdSCcmsskWSZe
nJ+fTzNshA4Hw5EwEwmHg/5AKBAKedx4/VAwRONHMZZhwyH8FM/CQZ/NaTao
5ML+m/VVly5UNDXX1V8Z/vnh2529tYOjs9N3xyvHirHuG81VVXUNDRUVNXUt
D4aUjmA8VcgXsolMYW5hIR1jE9FQmAnTMbw24oZDNB0JIXSEjiSi0VgyFU3E
Esl4PJtLpVPRSMjnNKoUU48722ovXKpsqK1ouGH9i3/41T//229/eXp2dnr0
jtN9u625rrG9saaivKbtZo/UToeYOBvLLS/MFdIpJpqIs0w0Gg5H8KADNBtG
OCSNqKEIwyTTyWw2nc7n88XFuWwW/yMZDft0Ktl4d1dHZXllXUN1Xfv0j3/8
05U3m6fv3wHX98M3murrmm9frq68VFl/7fG0PhSJJDML+fnlYjqVSWWSSTYa
TUQj4WgsyoZpZAvsQihdJJpIJlOZdCafz2ZzuXxxbn6OPLJxJogsxbzRRy01
ZTWNtdWNdyNbiPT+Dx8+/Pv7D38YulJTXX+tsbr64vn65ut9MksIQC19tIAM
88loLBaNsj4AyrAsG4sB0SApKdKNsnGACExTiJfP5RFrYXlpeXFpqZCO0lad
ViUdf1hfdqm27nLdFe1vScSzL//w/v2HD12tNU2tLZcrz5dVVHd0Taq8TCKZ
yiYLzxeLaaQXBmEiLBulAWs4HAowdATBwaYIE00lk4lUNpPKFgqZTHYun196
try0tFiIR1k2YNZrJEMd1RcqKqprmp78970PH969Q44fvvzDg8a6xoa6irLK
iurG670cyuNnImx2rpBLp6MRmgaOgQgTDgZCYCzCAlSwhWXwS4lYPJ4B7pks
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
       "], {{0, 114}, {114, 
       0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{114, 114},
     PlotRange->{{0, 114}, {0, 114}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw9egl3HGmVJWfOmYFy2dr3zbZsybJs2dau1K5M5b5GbpFbRGRkZGRG5L4p
JdkFRdEMBQ2cZumhYWgaaIppCqpgWAqKKlu75E1eyvCD5r6QmbAla0nnjfe+
++677/vicqLoTf23z33uc9Uv4JNX3FyrVMRtXxO+CRSqarogJ62FmpyWK3MJ
elnt9cfFrq6uq10t7c1NHQOjMw5eVrPFQqFcr1fL+ZwiSUk5KUjJZCIhJkQx
LiYS8Xicj3EcF41yMQ6/wi+TKVlOprL5fL5UKlc3yrlCIZPkwj6v02paut3T
0HThQkNje//Vu8+ev/rb31696uroHLzU0drU2NJ5+faqN5nNVepbWxv1jUoh
l1FSqbScBLAoAJQwxUQyzgl8NMYLiSRdsozXpFIpJVcsF0rVWn2zXi0Vs7ms
khajAY91fW6w5VzD+QsNbV19jr2//50w23v7BnpaGxqbWwZGdfaYWqpsbL+1
Va+V8rlsJq0qKUSaTsdFen9R5IW4GOMSkhhPUAbkM1BVUVSg5Ivlam1jY7O+
WSmWCoWCmuRYxqG/2dtw7ty5C239Fyc+eAXMv73qGujr7WwGZOfgnWWfnC1U
NqqlWr1WqeTTaUVNp6S4lEwjd5KckhCqEBdERC4lkoqCH6eQ2ExWkdOqKqu5
UqW6Ud/a3q6WKpVyqZhJANQ6d7m14dybb7Z09Q1989Xf/3762cngcFd7a3NL
S0v38LQlqmRK5XJl695WuVDIq6kUhZFMp/HmciKZEJDhRDIFRDGOO0nKqbSi
JGUlKwMzo2RyhXy+XNva3tqsIcHVclGVhJBbP9rd1PDm+cbO3ovyo892fvj+
h+ODrcBsbu64PLro4pR8rVaubBKBsiohIYNAFXnKbSKJb1NyStHWmH6FRCBa
LCY+ZEnN5UvFYnVza3uzWi9XqwSajodtM5famhvOnW/r7ef2Pzv81b//dKiz
vbOtoaW1d/D2ikfIFPG/avUNLGcGb41lA2sSCSmBLGLxkNEURZxElvGJ2IOc
y8QjJaNmsrliMQcibdQ3t2rArFWL2STn0Q12I6iG1t6LzNFnp78/edXf0dPZ
0tjY0jM0ucLE1SJSSy8u5NQ0kikmeD4uJBBnAtzFatId4B5EUSJYihgZTgIR
Vzaby+cLpRJAN2obm5sbhFuQgusjPW1NLc3N3b2zv/vsFaqlp7Oro7Gpua3v
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
y++JQff/H3KYEAo=
       "], {{0, 116}, {116, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{116, 116},
     PlotRange->{{0, 116}, {0, 116}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJwtewd81Nex7v3F3S+5Lzf3vndfYpBQ7xJFCBASEkIC1Lu00vbe97+9976r
suq9F9QxYGPHieMkDnGcXJfEdmyDEKpIgCpICLBT3pwlx9oisbvfmZlvvpk5
+3cQDSth/eDf/u3fZK/CXQlVdVYqpWpKfwy/lItkXLaIycgWyZlspvQkDb1M
/a/b1ubm+sbWxvrG+v0H91aXZ6oLMjOz8/Iz086npSafyjxfUFhQUFyYV5Bf
TqDS2BjGZ9HpbA6Tjq8oLykpKa2mMPkcCplOqSq8kJFyIjYiNCI6KjI2Pacw
P5945Z/P1z++/+7psydPnzx5/OTx/uO9vT24ra9vINitjY1799dX3yo5dybl
dGrO+aQjRw4fS8rMKyEQSSQivorAZtM5QqnaoBHwRJhELhXw2EwalU6lEJl8
TCCQcKjEqsLMzOOR0UfjIsKOpOUUXThf/cFz3L//7emzZ8/2vwPgxwD8CGAf
r29uba1vrq8/eLB67/6fWWdPJETHnMw9GR0Xd/hweiGBzeOwWBw2X6gUi2Q6
g8Hs0MnlKpVOp5JLJAqllM9isTk8oUKjkYk41KqivKyTJxLDQ2ITUzIyM7Mq
b/jN/dvf//79s6dg8GOEDKCP93YAcnML3W0sL690lZ1NiAgJPpISFx4VfTKt
is0UCAUCsQgzmK16pcHusnvr7HqpTK0ymUxmk9lsMJktBr1aLdcaNBqlREDF
4UozTiYERyccO5mamVXCWvED//1v33337NmTfeRotHb3PtjY3N7a2d7cfLB+
d+0zVtbJuKiQQwkJUdFxpy6UiMQisUyu1DutNXVuq9Vp97V29TV5HC53bWOt
p7a2rsbb0FjfVF/f6PO1tTQ5jGoRm06nXjgaHhkbd+Rk8on0HO13APuPv38P
uPsAC15+srf7l7X9ra2t7e3trY0HD1b+ekWffjLsZwcDwuLCohKySil0lUyi
0pqdnvrmrq4WX2Nn39D41MxYd0tLZ1dXa2Nne2tHd3t7T0drZ2t7x9Cl/r52
t0EloNM4F+KioqPjjxw7nnQu561//vP79YX978FcWPv7yzfXb/5udW91Z3vn
4daD9XtLH/XLLxyLeONnhw5FRYcfK6DzdUqVTGGvrfU1tg+PTV+buXx1+vKV
q1fGRob7uvsGh4aG+vt6e7p7B0cvXRoZHh2bmBqfGGiwObWQO5kx0WGhkXHx
h0+msff/ubS6d/vp02dPd774aOPm3OOdD76AGD/cefhwa2vz9rVGcfHh6EOH
QgPfCAuJusCQG61Gg8Xb2tbR0TkxdeWtq29fm7rUNzI5NTba197c1tzV3dHR
0zcwMNA3dXlienpqeqh3aGxmps9rt4gE3NSjUcHBkbHxCYlnR//x/fp3C4/u
P9m98Zdvbv56cf/J/mNErIewthfbBATSydCQiOiAH/80Ou4iS2O2O10tl4ba
u0ZGLk2NjI9OXhruHp2anJqZmRzt6wH7xkf7h4aG+3v7hzq7BkfGZqbHJ7ub
B8YHG6wGjFd9Lib0UGhEbExsfNk3++v/WFi7tf907/Y3e4+fPvXj7oKbH26v
TPBx1UVvBEbHhvz3fx+KTWdbPXZPU+/lkcbB0fHJSwPNXSPTv/jVu2MjE5Mz
M+Pjl4YGhwdGevuHR0a6e8cnpsdHBzt7x9689u50T2tPV7PVJOVQMyIPBQbF
xEVHJck373239PjWzpOVR0/395893X8MDNvf2Xm4ff9dQV5lafpPY2MjDv7f
nwYfrzbUuD3NQ5MTY1evTw90eptGpqYGW3xt3YOjY6NjQ/2D/QP9/YMD3d09
XR1dQ/1Dg0NTM1MjHd2DYzODzb4Wn82iknKy4sJDwmOjoxKSJwEBCA2WPnny
9Blg7u2DeOw+3J5zFBHKkmMORoWHHToQcLhM5WtuaO2bHJt46/Jwi7dueLgf
+Ns7Pjk9PT42PVzfPDQ+MnhpoLejpaGpraOnf6Cro3t4cvLqlYle2JLPU+d1
W80SRkp0UEhETHz8UcHNtb///TvQDVj7AImUcm9nZ3v7TzxOZebxoNDQwMAD
b4RkSWta2jsHpkbH3hxrtTguXx3t6+sbnHhzrL+/p6e7u7u/o9XraahxmV1e
l9PjdjqdnrqGhobm3uHJ6amRga4Gl6fOZTMqy45FBAeFxxyOSfkQUhhpNKTR
4/29xxDgvf1Huzv3ushFpakJbwQHvBEQEHyCbW/p7Bi7CmHrsBl7r033trf3
D7e3Nbc2NdY3dzQ3er01NrNZr1SptTqtXoHJZHKZSKq1uLx1Ld0D/T1d9U63
y2E3yvLigwIPhcdEJ2i++8c//vbMby6qC36Dd3Y2JpnlBdmp0QEBBw8cCE7A
GZs6e0cgN6b6mzreuzbe19HV1d3sdZrtJq1OozdpjA6r0WjQe1q6IHkHe0em
RybGxmcmhzxGrcrma+/oaLRbvPU1DoM0KzooKCI6OuHCR8jepwjZL5N7yw8f
P9r8qwFfnpV8NCL4YEBAUEia2NMyNDwzcWWyp/fqtZlL/R3IpTqZRKL29ozM
XB4aAo3qbOsbAsO6OhsbG2rq2jq6O4dGJmeuvTfhVpg8jfDPXnddrcvIOhke
cCAoKvKo7R6SaD+v9vYW7u19sv14e/1NU1n+2cSouMhDISGRyWRbS9/w6Phb
E0NX34dwDba7jEqpomHq+tvvTl+eGe/v7+zpAzp3tdbVNzbU1Xo9DpvTarLa
3SCaPeMT4+1KdV1bZ1ezt9brklcmBR88EBp1mHFnF0oSCjCQ+dbtnQ/Xnmzf
aqFezEsJjUqKjggOOVKgh+32ge8uvXttYmSwyanR+IbGJi9PDvb3NNb53G5v
XZOvrq6mxuvxNLS093c2eix6pdZgMjo8Lq+npql3dMhlru/o667xuCzC/ISQ
N0Dv02ae7P7tu/2vbu7u7+3du/6nLx8+3v7aS8w/fyT6+JGo4KCoVKq5oam1
u7936vrM2FC3R+sZnxodbG9tbrTbLRadVmU0W7w1Nb7GBq/H1wMSNdjucxv0
KrlGrTEZzWaro6G1vXPQ7Whpa6xx2tTkzITw4JCoE5TZ/SfPHn/+2YO95Y/n
313ffbJ364a7PP/k0dOJUSHBkUlZIlddQ+tA59Bb05e6XcbmmbGOjiav0+XQ
q9RKjI/JzIDqravz1nhq6+rqvbChNihFI6Mj/c0+r9VsNmoNjlpfZ1d9Q73H
abHyC07GxcfFHM7y7D179t2XH238z53P/7IJpN69c5VReOb4xYSosNCQmJRy
vbfe19rWMjk50uTpvX51CEII9LX5+ienLo1NXLl6dbQL0snlcDidNrPJanW0
9I5NjE1NX7367tvvXJ8ZHhntAdfXNHc31TqdLrMMl3sqJjoy/kTpDWixFj/b
eLz0wew+OHv/Ywnu/NHTJ6EfCwhMOM/We2trWtsHB9vqe967NtLssFnhQ/rH
x6Ymhvt7kE51d7RAgJ12wLXodXpbc/fApdGx4UtT09NX3oJ9zUxOTY4MdLS2
N3tsbquaceHc4fDwiGN5to3vnz3+cgOqPursHu93cohJJ04eCQ45FBiRUiwz
u73NrT09HY3T16d6a2yepp6B/uHhkaGxqanJ6dGBvt7Ojmafx+N2u512u8ns
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
jQwNCY29cP7EiXMQaioTMl1lsNqUWUmH4+PjDzO/QAPKw4fbW5sbm9vipKiI
0LBDYSHRcacZVo8HzT1GPZJA0ARc8gmKKjc2OigwLDKLlpOccORsUXEJQaS2
dc9cfu/az8cbLEJK1ZlTp3OKSbzsuJignwWFn2NkHU/KLsajxkSiMpjMqrzE
pPjYhETu7GNw8y46pVvf2rIejw4LCT0UGhIde4bvqvNYnHaryaCSyUVscn5i
Kk2pzE47eTg2OjIDl5wQl5JTUFTBkuvtTSPX3rv2zpjXKCMTSk8fzcgmsdJi
Y8CE8AxufkZqZjGewhJJ1XrA1ZckJh5NiDvtWXvyeA9RGdbW1tjFo6EhkEWh
sYl5ElddLRRCm0mvlgk5tPy08wUCjbnqfHry0ejI5IzEE8nn8rLLmZjK5G4Y
uvyLt9685DXqBNXlRTkZ6YWUCzGJ8UERsaWk7MKSisoqOl+uNphMFoO+5Pix
Y0eO5/1i7yk4+vHuw22I8NYHusTAsKDIiMjI09kiT10dOooxaZUSLotSVoYr
uYDjkRPjokJCopNTTp9JTc/MpfCUBou7cXDivWvXRmv1GgW5OOc85FBu5pEY
mPxOFpaVV+EIRBpXqoNBHLTASEg7dTzxGH3+b88A159FEOE7w6XBwUEhoREJ
KdlSwPW6XXaoNGIeh0alMyh4XFle5pmsnAu50N0lJ6dmEjhSmAS8jYNXfvnz
a5OtLqNJgYf8PZ9dmH3hYk5uThGRRqfQGBypUmuyWqwms9VAP3vm2LEk7f73
z6CDfYiSd3Nj48EN0wnQqrCohMSLEsCtAYPNBpVcJOCw2FBdmVRiNQhwaWne
2dSTyZl4vkSrR7hDb/76g2sz/V6z3iirLsrKuJhTUFJcUoknASiNwZeCUlls
MCYBS1kppxKPn7/0Pdj7GMK7tYkI/c2oMSc0NDIsIjYhS+qpranxeCDABq1Y
CBWdyxeiykAlEIlF55JTUs9XcsQKncVm9zYPv/Wb99+5Mtnt0hl1GDn/Ishk
cRlUQjJ0dABrsDqcDqfLabNa9MzTp06mlPzp+6f7UH63tzfB4K3NwXY360hs
fGRUXHyG1FtX1wDTh9npMMjEGAIGo6EEUogF506nns2vZokVapPNbqnpHrv8
9tuT01fH2uxGvVpALCnIzyusxFcTCAQinac2Oz217jpfvddhhWEy60xKmuj+
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
/wFkdUcF
       "], {{0, 120}, {120, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{120, 120},
     PlotRange->{{0, 120}, {0, 120}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxFefd7nOd1ZZ79xbuxRBJ1BpUkegfRe5nee++9994wM+gASZGURWVtZ+M4
XttxHMf22orttRzbskiAAAg2kJREUn6yf8qe9wOlfCgCB9B3vnvvuefe885V
Z0zp/W9/8zd/k/rv+KZ05BjJpKOguoR/aKKpgC/qcQuiaY/Pk5x1kj8Lvf06
Ptu0syamR7pqG2i0upq6pp45qcUXTsRjAY/b5/cFwvFkKhMLhyPhSDSaCLqd
Tncg6Pd7fT6/x+2wmw0Gq9Pn9djNGrlcpZeMNTXS6E3Nbe3tPWOZh//5//7z
r1++efPmyy/x+fQjv3R8eqa7sY5Gq6+tb2wfF9nC2UwylYgnM9lCOpXMForF
XCqRSiZSmUwqEgqFE7FILI4rlUrFo5F4tlgqpSJus0Yh12p4Q231tbUN9Jb2
q73Mu5//9a9vvnz9GlhvXr86uelbnJoZvdpYW1eDP2mfENmjhXy+uFaubG9v
720X8sViea28ViqWioVcPhOPJ5LpLPnIZXO5wtpapVLd2t/bWstGPWa9Siuf
7mmur6lpbKI3Xx3zf0pA3rx+/frLN69e/8ghXFm81tdeV1tbc7GW3rtijBTW
SqW19b3b3/rg5vZGpVis4KpWqgQsl8umUrl8Pp3N5wulcqWyVtnY2r15c29r
s1xIx71GlUo83dVcU1NLa6I1dS7806vXr1+9oa7Xr79tXF2a6bzSWFt78VJt
U8esKpgvr1fL5e1bd+5e39newI/VSrlSXSsUkMh8OpVKpvOlUiFfKJar69X1
9fXNvVvv37l1c2+znI35dEqFYGG4FVj0JtrlPv/pK2B89ub1m1ef/PuPLUuj
fR20mrraC/X0K0MCT7q8vrN9ff/6e3s7W7vb64inskYev5jPZbJ5hJVFSisU
8to6uTa3N3evv3fr9s2dUiYRsEhlEta1losX65rprVen/+XNwdnZL1+9+fKz
n/1oWzg50dNcQ2+tb2xq7pw3R4vVannn/VvXd/f2dtYr5WKlXCoWC4VslpSm
UMilk8lMLp/LFwp4gvWN9cr69s729s7+/v7OeiETD3vNWhlzuOHipYamltbe
yOPfnD75BSr2+lc/ta+uDLXR2rta6bTGjilZKFMs775/8733dncQTrkIcqEw
JJ4SaoW8ET7k19aKa0WCRV5DydZ39zeRy0q5kEolwg6dYLajFnHRmtoW//HX
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
9uvHqBREUCOc6Lp6+eqVXpYHa0g6Hgn4fU6rRsji8EQSqUwmFXCWpwZ6etA9
U7OrfKXRFUxvXL91+3ol6LYBawJPcQ3EZLKhSXyhSGbwUwtyJhEN2haHByat
v3j0lGqrF1rDcs+Vnv7uYbYbXoyYvmwy5rPrpayFmamZ+ZnJsYGBgcGhUcjF
/CpXora4w5nN2+/ffq8a9zrNKu7S1PhIf9/AyNT88ir2jFW+JozlHm4ct3Ey
RkeWtj55fHZeK41LMdoxNNI/wPUk82twcfCDhUzMZVDKRSvTUKTh4dHx8Wtj
kzNzDAEGo9MXyW7d+fDund1c0OMwqYTsxRkIIIiDGTzF0UfLG+tl+KwspMcr
nJ5kffD09OmzZ2dnz56ZI1724Mhofx/PlylWiL2Fk8rHI36XXilAZJNEUUcn
Z+eWudhhjA63P17cvfPB3W8BK+x36BQiPmNxcnJ89Nr4HEftjq3BlpHDtlI2
EffwGKu8b589P3tKQdniAe3c8OjomDSYo84sdnc24AkrqYDTLOdzV5ZmZxYW
l5hcLk8oV+vNLncwu3H9Wx9+ePeD9zZzYY/NqFXLsWSsrDIFcmswv761VV0r
ra1Rm2dQJNZJbz17ChhcZ454wMqeGBqaVgYzhXJ1a2cbzhdOtJyLBDw2vVYh
FYlFQpFYLJFpjFa7J5Su7u7f2IcJfn+/kvQ4IZlmbHIKtc7iieRhttYr8F+l
NeIxInK1y/D9Z0+RQHydOWN+p35l9NqCMporVKrbmxuUK9vEUyWiAZ/HZrFg
7dNqtRqt0eJ0BRPlves39mD/9+7cvb4WcTudTqwAbq8vEM+u7+7ubsHLlbC7
52E+oyq1J/IxQcL19Jk54HGaWANjTB2gkEDYlgp1ppmHfYMJCfixoTusZpPF
bHW43KEUoPa3KqWN/ff/7v1q0u10OB1WuzsQiWfzFSr9a+TUpkig4nqVt3T/
6dMnT6nL5Hc5zaLpCa4jCQMI97YGs1uGP0UGUsQoRQI+l8NuMprMVovdE8lV
d2/duX1ja//23b/7cLfgwzNYTE6vP5LK5CvQxq2Napk8aA6re9So891+hOSd
AejJE33QYTbIl+ZU/mQ2R86i4QGLxCpVKwVyHhaPBhCYnZgBtcbkiuF++zdu
3r77nb//++9++3opolUZjQaT1e0LxFLZ4voWsd6VMjkNhUswaLzfA8qzJ2eI
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
iNz/4MH/B9IFXVk=
       "], {{0, 107}, {107, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{107, 107},
     PlotRange->{{0, 107}, {0, 107}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxFeud/XNeRpX/7aT+sZZMEkXMiASIQRM45NYDO6JzD65xz7kY3GjkRAINI
UbI8M5rZHftnj8PM2F7v2p61LIkBAEEwk6JE6u/Ycx+omYvQr0HgnVtVp6pO
3ccKjYNL/bcf/OAHnv+Ob1x1YNjtVod4P8abebvHZLDrddN2r96gd3dpyK/Z
3n89/PL/+mcHRjsu1ubn5ufm5hWUNo7J/Ytr69nl1bW1ratr2eV0IplaSKdT
Ia/PH4mHvQ6LUa+nTGYDpdepFSKBTC6Xq7VatUzEm52aHB9sqy0uKikrLysu
re8K/un1sz98892717/7+e/+95dfP7yhHO4ZaKkrOF9UcCa/pPLSsMy7uLG/
t722uvPhR7dubmQX06lUaiGVSkYjoWgyFvS6HA670+nAp9Vi0KuVSqlUqdVq
NCoZj82cY4w2lxUXF5cWFxZX1E2uPz35t7fvvnv3+19/fvLd/Y8Dc8NjPfUl
+ZU1RcVl5bUdXFdyZe/2rZs7Ozdv37m1nc1kALaYSacXkqnkQmYhFvS5PB6v
3+vx+/1uj8NhMwBPa7RZLGaViMtkscYuFhbAR/kFRYV15n++97e37969++bd
23dvf3lNJZ7pbCwvra2vLCspremYMceyG1d3tu988sknt67trK2tZNILi4up
VDqdjMeSmXQiFAwEguGQzx8Oh6ORcCgc9HuceON32yiVmMvi8rsL887l5ufn
5eZXMv/l5Nu337579x1Z/2ySz3ReqqpovlRVkl9Qe2VMHV9aWdu7cevTTz+6
tre7s7kEizKLC6mFDAFLJDMACwWDwXA8nkgkk/BwLBqJxlLJWCTgsRl0Ei6b
N3Op4NyZnLyCnDOFTatfv3377Vsa67tN6Ux3bUVNX0NpSUFBZeOAxJPd2L5x
5x8+/eTTTz7a21hZWkzFk5lMCveNx8LRRDwaDoXC0Wg8Aecmk+l0NruQSCRS
i9lUOOhxOc16GZfLG6rJO3smpyD/TG7l/F++fUvg4MV3TjGvoby66VJpSW5x
SU3njCG+cXX/2q0bH3165/b+enYxEwvFkvFoNAqsKAxLZ/AuBLwYIpiIw9YF
cCe9kAaNEjDO7bAohLy5/pqcD87k5eecLe649Q3A3n7z6tkvfu+RjFRUXai7
UFxQWlTWOKoIZlY2d699+PHHH13f3VhJx8H3cAI3jSeAhZdUijYuHI3R2Kl0
amExBX/Go0nyJonIWTUCAauz5Mc/OpNzPie3knr09vkff3P0s1/d/FzBaykv
r66pLCktKqlpmzNGsps729s373x6+/ru1vIiuBdNpePBEMLk9weDoXAIVsbj
AE6QeyficG8iCVQSvXQmhcB53CalaKLx3Ac/PHP+/Jm8vl//7Nb64YPP37z9
TtRbWV1TXlJWVFBY09grdsQW1zd3967fvHXz2s762lo2vbK6mIzFEvFwCPfH
neO4AjT4gViCPLAzghWOZRaTEbg1FvAGPBYNv7/i7Acf/Djn7Nnq5B/vvaaj
9t1Mfe2FmtKiwtyi6tqOWYUrnl5Z39i9fvujG9f3ru5uZuGjJPFSnKYJKEFu
TEIWi8K6WCAYAz0StJnpVDyC6Ab9AQ9cyWo7D9PO5Z4psn7x5ttvCUPeTdTV
15UWFeXlF5Re6pnWuqPJpeW1q7v7+9eu7W5vrmQS8XRmIQVXZbLLWST1wkIi
4PCGARUF5QMudygBD8LAGCIai4TCkWDA7/e6bMqJ6nM/+uG54vO5vN+/+eYd
yem3fU2N5QVFRbm5+RX1/QJzKJFeXNnY2t3ev7W7sbW5sriYzWaQY9ml7PLy
Ej6XsqlIKBQJ01gRJBiSIJHKwKgQ+TH8i5z3eD0uq7Sz6Ec//lFecWH/P3zz
LdIaa7izoRTFJTe/vLp1TGj0RjNLa1sb23swbGdnfWlpdXlleRXGrq2vZlc2
VlGcVxaT0UAgDLLEomFQH65FRscICOERKOTzeT1up2mmquj8GZTblsiTb968
ef31m2+7O2pLi3Jy8wqrGlpGhUZ/IpNZ2djZ3bu2v7u9tbq+sbG+spRZAWIm
ktrY3tlaXUKxhFtDfn8USZdO0VUEPoyFSeEKhsOklAWB59T2VheeO5dT2qD4
4sXjx8ePnj5r76gpLciBE2svtE6Krb5oYnFlfevq3s721sYaQJaW8HZva+Pq
9Zs39/dv7F3fWcsugAZhfziRzi6vABrFDHhgJU1Tr9OLi6A/5LUya6uLz+fk
1c7/9cnxw0ePTp62ttWUnD+XV1pSerFrRm3xBFEIV1YBsba+ks0iSuubm5sb
6xvb6+s7u7vXbuxd3cI/pOLxhSXEcG1jc3tr7erVNbg7STAAl0gQE31+v1PY
Vl1ecC6nYvoPxwd3b/3q16uNzVXFeblgY3l9P09m8RGGLC4SsNXl1c2tjY3N
jTUwZXtrC5Bra6t4s7G5vkTsWUZ73drev3n92o0Pb25mkwgk+BHDIhwBmKqv
rKDwfE5J58d//clvfn/9k88vNVQX5hfk5xaX1Q9PqhzuYDwJPi4vLq+srq4T
k9bX1re3sfPNzZWVxQwSYAVGr6+vEbvwr+tb127euHltf2tjJRkgSChsyXjQ
7fb6nDqwPy/vXH5d6qtPf/vnn/3hqKmhsqgAjaeorKGPrXZ4SQFMLa/ijvgC
Ii42N7OIzhLpaQuZzNLq2nI2m02nMivbV7e3t6/uYV3d2r66tbaaDsZQlVE9
Q36v12tTTdXnnc1F0PR/+eTPR0cnrxobKgBWeL6ovLl/TuPC5lKJhSzcuELM
A/dWULNockdjpPxlFtEJ8AmwrRs39na3tze3tnY2Vtaxr1UYTIpyIobE9voc
OkZTUc753Nwq9m+Ojo+fvPq6vqG6uKAw/1xhTXM/10C8uLCAja+Q/EJMsukl
VOOFhXgkSniNOh8LJ2AfVMLS9rUb15CCy8vYD/oeIr2ytpTBjpLhgD8Q8Dn1
001lqMTnC3v/6eTk6as3XzfWXUDXPJ9fUts4yKbsAZTchWxmeQ0Rg7syC+mF
GOG5F63f4/L4UfiCURKWZAKMTECYLGQWFzOLpOgnUT1hNBp6xE80ilPLbCzL
OYsY9a3/6fnL129e1V2qK8nPzSksr2kc4usc/mg8mcosLa+uw4P4w0wqFgr5
EACX0+10ulwutx/sRjOLh4HuC2AjKIlxhIn4eGEhnSSFMhb2omDZdYyG4jMf
nMvNaXBd+9XTN1+/rrtUX5ybl19UUl4/yFY5gtEEJGJ2EeHKZuDMLNFv/oDf
YbU7HC6ny+HyQD0GUAYDbhd+6AuHUaXipLsmSXODhkiRi1jQ7QBBLhXnfHCu
sqLO8se/vXrz5pv6mrLiQpTGkvKGHpbeFUKbh18Wl9dWkNFLC7hNFNRy2qDY
7Faz2WC2Qi863d6Az2W30tAejz8EnUVYn8QfL6FRkKbm9VhUY02lZ394rqK2
2fmvwHrzprq0pKQw91x+cXldH4/yRhCyxcX04lI6hSYScKOkOh1ut91mNhkM
lE6n1emNFgdtpcPhcGIHLnjX7ff5Q5EIUQ2LaBLJBIqJ12lRTVwqzfkgt7rx
CvW/nrz5+s2bmrKSgvzzOfllZXW984YgSAvNlknHvHabzaSndGosSquWS8Ui
iUwqlStUOpPFarXZLSaLzWY1m8x2u9XiIPELBINELWCh3YT9TrNior4092z+
xYZh5++fv/n6669ry8vyz+eCjSUX+4SWSCy7BDfG/V6rSSsRcaYZLB5ndnJ8
GGtkYprFFYrkGgPQzGajAYuC3NfqKaPdbnfQsQxH0EHjkaDf53FZ5KN1RXnn
88saJPt/fg2w13UAy8nLKyoquDggtEWS2SwEmdeiVaoVgsn+/qGh7o4rzY2N
TU1XOroHRiaYbKFKpTGazWYTjNaolHK5QqbU4Qd2eNMHb4KpsAwhdduVIxdL
cnIKSlqVPz1GO/v6dVVxaT7RBEXFdSNiRxQBS0Z8VoNWLuZPDfT2d11prKu/
WFNRXX2xqb2tvW+SyRUr5IgcHCxTaNRKCW+OMcWRy5WU0WSyOjy+IDRKJBxA
+7QqhurKc84VlA/rPzp5DS++qSorQtaVlBWXN0ypffFUOuk1GfUy3uzk6EBf
f3dL/cWK4oKC0vKyiuoLdY09YwyuUK6iDLBcJZeoNHL+7ORQT3dv78AUX0RM
tNjtLm/A70NKWmSDVcXnzhbW8KK/evSaoFVUFOXmFxaVlFQ1TxvAp2TMqZMJ
5hhjw8OjwwM9bVdqK8rLSjD+lFU3tLT2TzKY8zK9yaDXahTCebGYPzk+0NbS
WF9VjnI3OsuXKCmz2eZw+zxul0U8WFWYk1N+Qfvru89psPKSgtyiwpKykqp2
ngeSLB506RRSoYDPZc5x+DzO5NTE0MBAe0Nzc2tb7/DYFJMjURssFiOll3PZ
XPb0UN+Vugs15Rj/yi80tfdOMGbY82o95XA7bWZxV1n+udzyRs/nj1+CHq9f
1ZaXFBUXlpWW1Q6ofNDY8ZCLUillMo1cJJHKlUoZYbyQNTs3y5pjspj8eanG
QBktZiPAZmemx3pbLlVVVZYg7nn5pVV1je1DM9x5oUzvcNqt4rZSjLOVbev3
noOMr1+/vlxYgrQuK6+sn6RCmB2QyEa1GmOkUoURT6GUywjW3BxzdpbN5YuQ
aBotRQFLI+fOTE0M9nRcuVRZRAbk/LyCssrqusv9k7NzPIHC7HRKm/LO5xbU
DP7j0ctXrwnYeFlJeVlReUVNy5wNEimKIdZspLQaDMlavVommJ/nz01NDA/0
D48z5jhcgVAolinkEhlMBhgysL+7u6uj+WJdc+OFqoqKC5daunoHhqdm+ZTN
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
FAx2nJoGnP8PyAUFsg==
       "], {{0, 109}, {109, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{109, 109},
     PlotRange->{{0, 109}, {0, 109}}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.707521295400999*^9, 3.707521301199799*^9}, {
  3.7075213575921392`*^9, 3.707521402600909*^9}, {3.7075214510111933`*^9, 
  3.707521535495764*^9}, {3.707521610649228*^9, 3.707521633825077*^9}, {
  3.707521665229425*^9, 
  3.707521669059395*^9}},ExpressionUUID->"8e998079-a1d3-46f0-8f0f-\
d9347a811b5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"happy\"\>", ",", "\<\"neutral\"\>", ",", "\<\"happy\"\>", 
   ",", "\<\"neutral\"\>", ",", "\<\"surprise\"\>", ",", "\<\"happy\"\>", 
   ",", "\<\"neutral\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.707521391052096*^9, 3.707521403478565*^9}, {
   3.707521452058814*^9, 3.707521536095759*^9}, {3.70752158446313*^9, 
   3.7075216346890383`*^9}, 3.707521666251061*^9, 
   3.707582556305966*^9},ExpressionUUID->"09a15fb0-ce23-4817-a810-\
0453b431a552"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dynamic", "[", 
   RowBox[{
    RowBox[{"image", "=", 
     RowBox[{"CurrentImage", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"box", " ", "=", "  ", 
     RowBox[{"FindFaces", "[", "image", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"face", " ", "=", "   ", 
     RowBox[{
      RowBox[{
       RowBox[{"ImageTrim", "[", 
        RowBox[{"image", ",", "#"}], "]"}], "&"}], "/@", " ", "box"}]}], " ", 
    ";", "\[IndentingNewLine]", 
    RowBox[{"face", " ", "=", " ", 
     RowBox[{"face", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"greyFace", " ", "=", " ", 
     RowBox[{"ColorConvert", "[", 
      RowBox[{"face", ",", "\"\<Grayscale\>\""}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{"image", ",", "greyFace", ",", 
       RowBox[{"Column", "[", 
        RowBox[{
         RowBox[{"trainedConvNet", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"greyFace", ",", "\"\<TopProbabilities\>\""}], "]"}], 
        "]"}]}], "}"}], "]"}]}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7072563936524754`*^9, 3.707256409838191*^9}, {
   3.707256441802643*^9, 3.707256489283073*^9}, {3.707257114666801*^9, 
   3.707257124515836*^9}, {3.7072572062401752`*^9, 3.707257249578582*^9}, {
   3.707257567748266*^9, 3.707257577265594*^9}, 3.707259154061228*^9, {
   3.707259199034816*^9, 3.707259309295079*^9}, {3.7072595088720913`*^9, 
   3.707259529021721*^9}, {3.7075222635370607`*^9, 3.707522264571309*^9}, {
   3.707522369289407*^9, 
   3.707522472276947*^9}},ExpressionUUID->"647415d0-c5ac-4cd1-98e7-\
f95e5f62c31f"],

Cell[BoxData[
 RowBox[{"\[AliasDelimiter]", "\[AliasDelimiter]"}]], "Input",
 CellChangeTimes->{{3.70753735030868*^9, 
  3.707537351337987*^9}},ExpressionUUID->"e4196a47-233f-46a4-a023-\
f5cff186801c"],

Cell[BoxData[
 RowBox[{"greyFace", " ", "=", " ", 
  RowBox[{"ColorConvert", "[", 
   RowBox[{"face", ",", "\"\<Grayscale\>\""}], "]"}]}]], "Input",ExpressionUUI\
D->"a52e61e6-4b2b-41c8-9861-9765025320fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"trainedNet", " ", "=", " ", 
   RowBox[{
   "Import", "[", 
    "\"\</Users/adendek/Documents/Wolfram \
Mathematica/Intern/project/DeepLaetitia/scripts/smileDetector/models/shallow/\
2017-06-27T14:50:04_1_04_1135_1.02e+0_1.05e+0.wlnet\>\"", "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.7075831555925827`*^9, 3.707583163952959*^9}, {
   3.707583309045635*^9, 3.707583325268495*^9}, 
   3.707583434195931*^9},ExpressionUUID->"964d6af2-5850-472b-bb25-\
e9dcaaa47d20"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{20, 1, 5, 5}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {48, 48}, 
               "$OutputSize" -> {44, 44}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 48, 48}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 44, 44}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {20, 44, 44}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 44, 44}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 44, 44}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 20, "$InputSize" -> {44, 44}, 
               "$OutputSize" -> {22, 22}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 44, 44}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 22, 22}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{50, 20, 5, 5}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               20, "$GroupNumber" -> 1, "$InputSize" -> {22, 22}, 
               "$OutputSize" -> {18, 18}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 22, 22}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 18, 18}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {50, 18, 18}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 18, 18}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 18, 18}, NeuralNetworks`RealT]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 50, "$InputSize" -> {18, 18}, 
               "$OutputSize" -> {9, 9}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 18, 18}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 9, 9}, NeuralNetworks`RealT]]], 
           "7" -> Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {4050}, 
               "$InputSize" -> {50, 9, 9}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 9, 9}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{4050}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{500, 4050}, NeuralNetworks`RealT], 
               "Biases" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {500}, "$OutputSize" -> 500, "$InputSize" -> 
               4050, "$InputDimensions" -> {4050}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{4050}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{5, 500}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]],
              "Parameters" -> 
             Association[
              "OutputDimensions" -> {5}, "$OutputSize" -> 5, "$InputSize" -> 
               500, "$InputDimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]],
            "11" -> Association[
            "Type" -> "Dropout", "Arrays" -> Association[], "Parameters" -> 
             Association["DropoutProbability" -> 0.2], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]],
            "12" -> Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "12", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {48, 48}, "ColorSpace" -> "Grayscale", 
              "ColorChannels" -> 1, "MeanImage" -> None], 
             NeuralNetworks`TensorT[{1, 48, 48}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association[
             "Labels" -> {"happy", "neutral", "sad", "angry", "surprise"}, 
              "Dimensions" -> 5], 
             NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part = Null, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"48\"", "\"48\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"44\"", "\"44\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"44\"", "\"44\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"22\"", "\"22\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"18\"", "\"18\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"18\"", "\"18\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"9\"", "\"9\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4050\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{372., {157.62548828125, 165.37451171875}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.7075831653560457`*^9, {3.7075833119479637`*^9, 3.707583326568142*^9}, 
   3.707583437078829*^9},ExpressionUUID->"a0d3f5b6-4a26-4c75-abc5-\
e6726f59d7fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"performanceBest", " ", "=", " ", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"trainedNet", ",", "testData"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707583442406796*^9, 
  3.7075834702590427`*^9}},ExpressionUUID->"33d862e5-9e49-4c50-ac0a-\
669f52b0fd8c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Net\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["6022", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[
               
               RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
                0.8158644505878024}, {0.47333333333333333`, 
                0.7727052229508918, 
                0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
               ImagePadding -> 0.2, 
               PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
               PlotRangePadding -> Automatic, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Net\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["6022", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of classes: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    RowBox[{
                    "0.5823646629026901778`5.517748402535373", "\[PlusMinus]",
                     "0.006355676925553954`2."}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7075835442219877`*^9},ExpressionUUID->"9d5afa11-9c38-4042-b8b2-\
1aa3b1e1fec1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"performanceBest", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Accuracy\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Accuracy\>\"", "\[Rule]", "2"}], "}"}], ",", " ", 
    "\"\<AreaUnderROCCurve\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.707583572019796*^9, 
  3.707583588524138*^9}},ExpressionUUID->"0e42ee42-2789-49a3-8c87-\
719c6362421c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5823646629026902`", ",", 
   RowBox[{"{", "0.7808037196944537`", "}"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"happy\"\>", "\[Rule]", "0.9025436998537146`"}], ",", 
     RowBox[{"\<\"neutral\"\>", "\[Rule]", "0.8215210682360918`"}], ",", 
     RowBox[{"\<\"sad\"\>", "\[Rule]", "0.7921507114456896`"}], ",", 
     RowBox[{"\<\"angry\"\>", "\[Rule]", "0.7959000093396256`"}], ",", 
     RowBox[{"\<\"surprise\"\>", "\[Rule]", "0.9281613252224703`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.707583590526392*^9},ExpressionUUID->"4cd8b9d5-5683-4300-ba3e-\
2453f9c16975"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 708},
WindowMargins->{{297, Automatic}, {1, Automatic}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 16, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 188, 3, 137, "Title", "ExpressionUUID" -> \
"99106860-62ed-4b89-9114-8c7d6b83eeb6"],
Cell[CellGroupData[{
Cell[793, 29, 192, 4, 49, "Input", "ExpressionUUID" -> \
"a3526a00-63c6-45f3-b003-c38378e99a3e"],
Cell[988, 35, 984, 22, 81, "Output", "ExpressionUUID" -> \
"9ec5e3c9-4a3a-4c89-b637-7d57ebb70bf8"]
}, Open  ]],
Cell[1987, 60, 938, 19, 112, "Input", "ExpressionUUID" -> \
"2ac3ceca-b4c2-4cfb-a240-4bb9b129ed50"],
Cell[2928, 81, 814, 16, 81, "Input", "ExpressionUUID" -> \
"b844a3ea-d5de-484a-a23d-1b7b6e1e11a7"],
Cell[3745, 99, 863, 17, 112, "Input", "ExpressionUUID" -> \
"681b7eb9-0020-4471-bf13-1f52670e5f7a"],
Cell[CellGroupData[{
Cell[4633, 120, 901, 17, 112, "Input", "ExpressionUUID" -> \
"e3f2bc49-d28a-40d9-9de7-c78b0208a308"],
Cell[5537, 139, 134, 2, 49, "Output", "ExpressionUUID" -> \
"cc254adf-312b-4ee7-9c40-db303ba03878"]
}, Open  ]],
Cell[5686, 144, 874, 16, 112, "Input", "ExpressionUUID" -> \
"5257aeaf-4da4-4ea2-bd2f-6f691c0dd8fd"],
Cell[CellGroupData[{
Cell[6585, 164, 1061, 24, 267, "Input", "ExpressionUUID" -> \
"f78b0f6d-74f3-42cd-bf8a-4a6751174ada"],
Cell[7649, 190, 7624, 202, 140, "Output", "ExpressionUUID" -> \
"d438a3cb-3f18-4f29-a4b7-7cdc815a6042"]
}, Open  ]],
Cell[15288, 395, 450, 11, 49, "Input", "ExpressionUUID" -> \
"09e919a8-5e36-4853-8f72-ecb02c3ff626"],
Cell[CellGroupData[{
Cell[15763, 410, 439, 10, 143, "Input", "ExpressionUUID" -> \
"6acab0c5-ce3b-4877-8cea-aee5bb736e46"],
Cell[16205, 422, 297, 5, 81, "Output", "ExpressionUUID" -> \
"cea3850d-5fa2-49bd-9f8e-4abc92ffeaec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16539, 432, 154, 3, 49, "Input", "ExpressionUUID" -> \
"6ca84c0b-2ba6-4a92-b96e-5d2986270d0b"],
Cell[16696, 437, 253, 5, 81, "Output", "ExpressionUUID" -> \
"59229a18-11be-4fe1-a99e-995f4b6792a0"]
}, Open  ]],
Cell[16964, 445, 447, 10, 49, "Input", "ExpressionUUID" -> \
"3e29c916-470c-4416-8f33-ef8d243e90b7"],
Cell[CellGroupData[{
Cell[17436, 459, 169, 3, 76, "Subtitle", "ExpressionUUID" -> \
"d2c029b9-7801-410a-924e-08c2e01e9295"],
Cell[17608, 464, 597, 13, 81, "Input", "ExpressionUUID" -> \
"a26fbbb5-caef-4309-aa5f-eeceb641a211"],
Cell[18208, 479, 773, 18, 174, "Input", "ExpressionUUID" -> \
"0ca318ad-ccf4-473d-8219-9265a583e8e6"],
Cell[18984, 499, 715, 16, 112, "Input", "ExpressionUUID" -> \
"af17c70b-3489-4991-8d2c-cf9005d0770a"],
Cell[19702, 517, 810, 19, 174, "Input", "ExpressionUUID" -> \
"57e07ed0-02bc-4f3b-8789-204b65dd79a3"],
Cell[20515, 538, 753, 16, 112, "Input", "ExpressionUUID" -> \
"21fdf2df-597d-45fc-b986-1ec78790ab8b"],
Cell[21271, 556, 1315, 28, 236, "Input", "ExpressionUUID" -> \
"a7dd5d6b-ae75-4c08-b4ca-8e65398c6610"],
Cell[22589, 586, 371, 10, 81, "Input", "ExpressionUUID" -> \
"c74ef737-2f55-47c8-a44f-255849b80d6c"],
Cell[CellGroupData[{
Cell[22985, 600, 405, 10, 205, "Input", "ExpressionUUID" -> \
"f80d9058-5357-4bbb-ac99-1c9d92c0be0a"],
Cell[23393, 612, 252, 5, 81, "Output", "ExpressionUUID" -> \
"96923d82-d9eb-4343-a4f2-31b8cfbef905"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23682, 622, 298, 7, 49, "Input", "ExpressionUUID" -> \
"511bbf8c-1ea7-49e2-bc43-fee51f80c423"],
Cell[23983, 631, 277, 7, 49, "Output", "ExpressionUUID" -> \
"08876ddc-1fb9-4487-bfd3-8ed9fb4c0f39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24297, 643, 1886, 40, 236, "Input", "ExpressionUUID" -> \
"e03cb1de-351d-45b8-8be4-0e2dc4422839"],
Cell[26186, 685, 29454, 617, 73, "Output", "ExpressionUUID" -> \
"f54f42ed-aa8b-4131-9562-133551fdab30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55677, 1307, 231, 6, 81, "Input", "ExpressionUUID" -> \
"f47abe58-961b-4a36-b5d6-29e5f4050e25"],
Cell[55911, 1315, 13416, 272, 246, "Output", "ExpressionUUID" -> \
"2ee4a93d-cddf-40c6-a7f3-d014c7e0e90b"]
}, Open  ]],
Cell[69342, 1590, 1045, 19, 298, "Input", "ExpressionUUID" -> \
"04e7bbf3-be61-47f0-8916-4120eb288419"],
Cell[CellGroupData[{
Cell[70412, 1613, 258, 5, 49, "Input", "ExpressionUUID" -> \
"80951f7d-d232-46c0-a95f-ffa946bf765e"],
Cell[70673, 1620, 5883, 128, 87, "Output", "ExpressionUUID" -> \
"a70b10ef-903b-42c8-97cd-36d55a4be927"]
}, Open  ]],
Cell[76571, 1751, 407, 10, 112, "Input", "ExpressionUUID" -> \
"fce9bd6a-da4f-48c0-8265-8d13c63614d6"],
Cell[76981, 1763, 2670, 45, 236, "Input", "ExpressionUUID" -> \
"1b0b5bc5-954e-495c-9b47-3ea4a1be0cca"],
Cell[CellGroupData[{
Cell[79676, 1812, 253, 6, 81, "Input", "ExpressionUUID" -> \
"9357191f-5bcb-4cbc-81df-c280ca480951"],
Cell[79932, 1820, 15016, 305, 325, "Output", "ExpressionUUID" -> \
"772d4a7c-0634-4d5f-b069-64c33a834b94"]
}, Open  ]],
Cell[94963, 2128, 128, 3, 109, "Input", "ExpressionUUID" -> \
"b1e4080a-5c82-43fa-8a28-d5ecffe00db5"],
Cell[CellGroupData[{
Cell[95116, 2135, 667, 14, 109, "Input", "ExpressionUUID" -> \
"1f346f42-bcad-432c-be9a-30b6b98b08cc"],
Cell[95786, 2151, 8244, 175, 820, "Output", "ExpressionUUID" -> \
"71fa4c66-06c8-4399-b852-c8f2952b9ac0"]
}, Open  ]],
Cell[104045, 2329, 223, 5, 109, "Input", "ExpressionUUID" -> \
"9aaa920e-43cb-4a56-a65d-08ecae1372c3"],
Cell[CellGroupData[{
Cell[104293, 2338, 253, 6, 181, "Input", "ExpressionUUID" -> \
"e4cbb9ba-6d46-4a93-b2db-d9467095a092"],
Cell[104549, 2346, 88947, 1790, 780, "Output", "ExpressionUUID" -> \
"36aa61df-bc98-4e3b-a91d-8a6ca3dda528"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193533, 4141, 219, 5, 109, "Input", "ExpressionUUID" -> \
"9cf82dab-cd98-4584-a508-24202a4730db"],
Cell[193755, 4148, 82552, 1626, 778, "Output", "ExpressionUUID" -> \
"cae93d57-5df0-41e5-8e79-293c33b36f72"]
}, Open  ]],
Cell[276322, 5777, 153, 3, 109, "Input", "ExpressionUUID" -> \
"4df53ae5-56a2-4080-9a87-6a83d5c8c327"],
Cell[CellGroupData[{
Cell[276500, 5784, 353, 9, 181, "Input", "ExpressionUUID" -> \
"bd8f16e2-eb90-41a2-9c2d-52919c2e4ba9"],
Cell[276856, 5795, 6951, 142, 306, "Output", "ExpressionUUID" -> \
"23aeecf3-8dea-448f-8f9e-d7cf2f1c73cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283844, 5942, 464, 10, 181, "Input", "ExpressionUUID" -> \
"ea1ae656-80a1-44f0-bd77-6d7269c65004"],
Cell[284311, 5954, 781, 16, 252, "Output", "ExpressionUUID" -> \
"b2154a92-4c14-40a9-af79-e79a6997ded3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285129, 5975, 220, 5, 109, "Input", "ExpressionUUID" -> \
"91699998-95d2-4170-abd2-6eb0734e306f"],
Cell[285352, 5982, 40933, 1062, 1072, "Output", "ExpressionUUID" -> \
"fefca50d-1ebe-4d80-929f-d57f736fe285"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326322, 7049, 211, 4, 109, "Input", "ExpressionUUID" -> \
"26d5a71e-4dab-4a1c-9331-e3116d2b52d7"],
Cell[326536, 7055, 369654, 6324, 3831, "Output", "ExpressionUUID" -> \
"f43d3bed-80f4-4e09-9b25-e18ab51def27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696227, 13384, 241, 5, 109, "Input", "ExpressionUUID" -> \
"d0ec6224-8adf-4d91-897f-104ae4bca717"],
Cell[696471, 13391, 396, 9, 109, "Output", "ExpressionUUID" -> \
"f0790dc8-2a5c-47e5-b8d5-265f7138c6c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696904, 13405, 246, 5, 109, "Input", "ExpressionUUID" -> \
"aed3f47c-06df-4576-a9fe-2e5b525f0a60"],
Cell[697153, 13412, 128969, 2289, 2070, "Output", "ExpressionUUID" -> \
"e4b2a4f8-920e-43bb-88f0-171d22900f72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[826159, 15706, 274, 6, 109, "Input", "ExpressionUUID" -> \
"61c3cd85-df9f-4e80-b5e4-c6aff12169b9"],
Cell[826436, 15714, 45509, 793, 825, "Output", "ExpressionUUID" -> \
"ba84de5d-0a38-49f7-8034-86ad9939f7ff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[871994, 16513, 187, 4, 171, "Subtitle", "ExpressionUUID" -> \
"aac70f8e-d604-4a32-976d-0a30a4d9b8c5",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[872206, 16521, 99106, 1662, 607, "Input", "ExpressionUUID" -> \
"8e998079-a1d3-46f0-8f0f-d9347a811b5d"],
Cell[971315, 18185, 496, 9, 181, "Output", "ExpressionUUID" -> \
"09a15fb0-ce23-4817-a810-0453b431a552"]
}, Open  ]],
Cell[971826, 18197, 1714, 38, 670, "Input", "ExpressionUUID" -> \
"647415d0-c5ac-4cd1-98e7-f95e5f62c31f"],
Cell[973543, 18237, 201, 4, 109, "Input", "ExpressionUUID" -> \
"e4196a47-233f-46a4-a023-f5cff186801c"],
Cell[973747, 18243, 205, 4, 109, "Input", "ExpressionUUID" -> \
"a52e61e6-4b2b-41c8-9861-9765025320fd"],
Cell[CellGroupData[{
Cell[973977, 18251, 522, 12, 391, "Input", "ExpressionUUID" -> \
"964d6af2-5850-472b-bb25-e9dcaaa47d20"],
Cell[974502, 18265, 29538, 618, 843, "Output", "ExpressionUUID" -> \
"a0d3f5b6-4a26-4c75-abc5-e6726f59d7fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1004077, 18888, 290, 6, 109, "Input", "ExpressionUUID" -> \
"33d862e5-9e49-4c50-ac0a-669f52b0fd8c"],
Cell[1004370, 18896, 6929, 142, 199, "Output", "ExpressionUUID" -> \
"9d5afa11-9c38-4042-b8b2-1aa3b1e1fec1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1011336, 19043, 372, 9, 109, "Input", "ExpressionUUID" -> \
"0e42ee42-2789-49a3-8c87-719c6362421c"],
Cell[1011711, 19054, 677, 14, 181, "Output", "ExpressionUUID" -> \
"4cd8b9d5-5683-4300-ba3e-2453f9c16975"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

